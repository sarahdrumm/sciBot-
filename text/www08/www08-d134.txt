RACE : Finding and Ranking Compact Connected Trees for
Keyword Proximity Search over XML Documents
1Department of Computer Science and Technology
Tsinghua University , Beijing , China
2School of Computing
National University of Singapore , Singapore
Guoliang Li1 , Jianhua Feng1 , Jianyong Wang1 , Bei Yu2 , and Yukai He1
{liguoliang,fengjh,jianyong}@tsinghuaeducn ; yubei@compnusedusg ; heyk05@mailstsinghuaeducn
ABSTRACT In this paper , we study the problem of keyword proximity search over XML documents and leverage the efficiency and effectiveness . We take the disjunctive semantics among input keywords into consideration and identify meaningful compact connected trees as the answers of keyword proximity queries . We introduce the notions of Compact Lowest Common Ancestor ( CLCA ) and Maximal CLCA ( MCLCA ) and propose Compact Connected Trees ( CCTrees ) and Maximal CCTrees ( MCCTrees ) to efficiently and effectively answer keyword queries . We propose a novel ranking mechanism , RACE , to Rank compAct Connected trEes , by taking into consideration both the structural similarity and the textual similarity . Our extensive experimental study shows that our method achieves both high search efficiency and effectiveness , and outperforms existing approaches significantly .
Categories and Subject Descriptors H28 [ Database Applications ] : Miscellaneous General Terms Algorithms , Performance , Languages Keywords Lowest Common Ancestor ( LCA ) , Compact LCA ( CLCA ) , Maximal CLCA(MCLCA ) 1 .
INTRODUCTION
Keyword search is a proven and widely accepted mechanism for querying in textual document systems and World Wide Web . The research community has recently recognized the benefits of keyword search and has been introducing keyword search capability into XML documents [ 2 , 4 , 5 , 6 , 7 ] . In this paper , we study the problem of keyword proximity search over XML documents by considering the disjunctive semantics ( ie , the OR predicate ) among the input keywords , and provide a novel ranking mechanism for effective keyword search , by taking into account both the structural n
0 n
0 n
1 n
19 n
22 n
1 n
19 n
22 n
2 n
18 n
20 n
21 n
23 n
24 n
2 n
18 n
20 n
21 n
23 n
24 k
4 k
1 n
13 n
6 k
3 k
2 k
4 n
7 n
10 n
14 n
15 n
4 n
3 n
5 n
3 n
5 n
4 k
4 k
1 n
13 n
6 k
3 k
2 k
4 n
7 n
10 n
14 n
15 k
1 k
2 n
8 n
9 n k
12
4 n
16 n
17 k
1 k
2 n
8 n
9 n
11 n k
4
12 n
16 n
17 k
1 k
3 k
2 k
4 k
1 k
2 k
1 k k
3
2 k
4 k
1 k
2
Figure 1 : Maximal Compact Connected Trees similarity from the DB point of view and the textual similarity from the IR viewpoint . We introduce the notions of Compact LCA ( CLCA ) and Maximal CLCA ( MCLCA ) to capture the focuses of keyword queries , and propose Compact Connected Trees ( CCTrees ) and Maximal CCTrees ( MCCTrees ) to efficiently and effectively answer keyword proximity queries . Moreover , we devise a novel ranking mechanism , RACE , to Rank compAct Connected trEes . RACE not only considers the textual similarity like document relevancy in IR literature , but also incorporates the structural similarity into the ranking function from the DB point of view .
2 . COMPACT CONNECTED TREES
Traditional methods usually compute the LCAs of content nodes to answer keyword queries . However , it is inefficient to compute all the LCAs as given a keyword query .m {k1 , k2,··· , km} , there are i=1|Ii| combinations of LCA candidates , where Ii denotes the set of content nodes that directly contain keyword ki . To address this problem , we introduce the concepts of Compact LCA ( CLCA ) and Compact Connected Trees ( CCTrees ) . i+1,··· ,v . q ) , ∀v .
1∈I1,v .
Definition 21 ( CLCA and CCTree ) Given q content nodes , v1∈I1 , v2∈I2,··· ,vq∈Iq , and w=LCA(v1,v2,·· · ,vq ) . w is said to dominate vi wrt {k1,k2,··· ,kq} , if wfiLCA(v . v . i−1,vi,v . q∈Iq . w is a CLCA wrt {k1,k2,··· ,kq} , if w dominates v . each vi for 1≤i≤q . The tree rooted at a CLCA and containing the paths from the root to the nodes dominated by the root , is called a CCTree . i−1∈Ii−1 , v .
2∈I2,··· ,v .
1,··· , i+1∈Ii+1,··· ,
Copyright is held by the author/owner(s ) . WWW 2008 , April 21–25 , 2008 , Beijing , China . ACM 978 1 60558 085 2/08/04 .
A CLCA is the LCA of some relevant nodes and the irrelevant nodes cannot share a CLCA . For example , in Figure 1 , n3 is the CLCA of n4 and n5 wrt {k1,k2} , however , n2 is not the CLCA of n4 and n17 , although n2 is their LCA . Because n3 dominates n4 , and n15 dominates n17 , but there is no node which dominates both n4 and n17 . We observe that n3 and n15 are more relevant to {k1,k2} than n2 .
1045WWW 2008 / Poster PaperApril 21 25 , 2008 · Beijing , China 100000 i
) s m ( e m T d e s p a l E
The subtree rooted at n3 is a CCTree . CLCA is orthogonal to SLCA [ 7 ] and avoids false negatives introduced by SLCA . For example , in Figure 1 , n0 and n6 are both CLCAs wrt {k1,k2,k3,k4} , and they dominate {n20,n21,n23,n24} and {n8,n9,n11,n12} , respectively . n0 is a false negative for SLCA as n0 has a LCA descendant n6 . CLCA can avoid those false negatives and thus is a more meaningful methodology to answer keyword queries . We give the least upper bound of the number of CLCAs as stated in Lemma 2.1 , which is much smaller than the number of LCAs . i=1|Ii| 1 CLCAs wrt a query K=(k1,k2,·· · ,km ) and an XML document D in terms of the disjunctive semantics ( ie , the OR predicate ) . Definition 22 ( MCLCA and MCCTree ) Given a keyword query K={k1,k2,··· ,km} and Ki={ki1 ,ki2 ,··· ,kiq}⊆K . Suppose w= CLCA(vi1 ,vi2 ,··· ,viq ) , where vi1∈Ii1 ,··· ,viq∈Iiq . w is a Maximal CLCA ( MCLCA ) , if ∀k.∈(K Ki ) , v . k∈Ik . , ∃w . k and every vij for 1≤j≤q . The CCTree rooted at an MCLCA is called an MCCTree .
, which dominates both v .
Lemma 21 There are at most 2 fim
To effectively answer keyword search , we propose the concepts of Maximal CLCA and Maximal CCTree . An MCLCA is also a CLCA , which has no ancestors that still dominate some other content nodes besides the content nodes dominated by the MCLCA . Therefore , an MCLCA dominates a maximal set of content nodes and is more meaningful than a CLCA . An MCCTree is the CCTree rooted at an MCLCA and contains more keywords than CCTrees . For example , in Figure 1 , the four circled trees are MCCTrees . 3 . RACE
T F·IDF based methods for ranking relevant documents have been proved to be effective for keyword proximity search in text documents . However , traditional ranking techniques in IR literature may not be effective to rank MCCTrees , as besides the term frequency ( tf ) and inverse document frequency ( idf ) , MCCTrees also contain rather rich structural information . We take into account both the structural similarity and traditional IR metrics to rank MCCTrees . There are three parameters the number of content nodes in T , nc , the number of distinct input keywords contained in T , nk , and the number of all nodes in T , ns , which will affect the score assigned to an MCCTree , and we will employ these three parameters to rank MCCTrees . Intuitively , the larger nc , the higher the score of the MCCTree should be ; on the other hand , the larger nk , the more likely the MCCTree is relevant to K . On the contrary , ns should be inverse with the score of the MCCTree . In addition , the succinctness of the MCCTree should be reflected in the structural similarity function , and the more succinct of the MCCTree , the higher score of the structural similarity should be . Based on above observations , we can compute the structural similarity .
Accordingly , we combine the textual similarity and struc tural similarity to effectively rank the MCCTrees . 4 . EXPERIMENTAL STUDY
We have conducted a set of experiments to evaluate the performance of our approach . We used real dataset DBLP in our experiments . The raw file was about 420MB . The experiments were conducted on an Intel(R ) Pentium(R ) 2.4GHz computer with 1GB of RAM . The algorithms were implemented in Java . We compared RACE with state of the art methods , XSEarch[1 ] , XRank[2 ] , GDMCT[3 ] and MSLCA
10000
1000
100
10
1
XSEarch XRank MSLCA GDMCT MCCTree
G1
G2
G3
G4
G5
G6
( a ) Conjunctive Semantics i
) s m ( e m T d e s p a l E
1e+007
1e+006
100000
10000
1000
100
10
1
XSEarch XRank MSLCA GDMCT CCTree
G1
G2
G3
G4
G5
G6
( b ) Disjunctive Semantics i
) s m ( e m T d e s p a l E
1e+007
1e+006
100000
10000
1000
100
10
1
XSEarch XRank MSLCA GDMCT RACE
G2
G6 G1 ( c ) Disjunctive Semantics+Rank
G5
G4
G3
Figure 2 : Efficiency of various algorithms n o i s i c e r P
100
90
80
70
60
50
40
G1
G2
G4 G3 Precision
G5
G6
)
%
( y c n a v e l e R k p o T
100
90
80
70
60
50
40
XSEarch XRank MSLCA GDMCT RACE
1
5
10
Top k
50
100
Figure 3 : Top k answer relevancy
[ 7 ] . We selected six groups of queries , G1,··· ,G6 . Each group has ten queries and the queries in the same group have the same number of keywords . For example , each query in G3 has 3 keywords . Figure 2 illustrates the experimental results on search efficiency and Figure 3 gives the experimental results on search quality .
5 . CONCLUSION
In this paper , we have investigated the problem of keyword proximity search over XML documents . We proposed the notions of CLCA and MCLCA to capture the focuses of keyword queries and adopted CCTrees and MCCTrees to effectively and efficiently answer keyword proximity queries . We demonstrated a novel ranking mechanism , RACE , to Rank the compAct Connected trEes , by taking into account both structural similarity from the DB viewpoint and textual similarity from the IR point of view . The experimental results show that our approach achieves high search efficiency and quality , and outperforms existing methods significantly .
6 . ACKNOWLEDGEMENT
This work is partly supported by the National Natural Science Foundation of China under Grant No.60573094 , the National High Technology Development 863 Program of China under Grant No.2007AA01Z152 and 2006AA01A101 , the National Grand Fundamental Research 973 Program of China under Grant No2006CB303103
7 . REFERENCES [ 1 ] S . Cohen , J . Mamou , Y . Kanza , and Y . Sagiv . Xsearch : A semantic search engine for xml . In VLDB , 2003 .
[ 2 ] L . Guo , F . Shao , C . Botev , and J . Shanmugasundaram . Xrank : Ranked keyword search over xml documents . In SIGMOD , 2003 .
[ 3 ] V . Hristidis , N . Koudas , Y . Papakonstantinou , and
D . Srivastava . Keyword proximity search in xml trees . In IEEE TKDE 18(4 ) , 2006 .
[ 4 ] G . Li , J . Feng , J . Wang , and L . Zhou . Efficient keyword search for valuable lcas over xml documents . In CIKM , 2007 .
[ 5 ] G . Li , J . Feng , J . Wang , and L . Zhou . SAILER : An
Effective Search Engine for Unified Retrieval of Heterogeneous XML and Web Documents . In WWW , 2008 .
[ 6 ] G . Li , BC Ooi , J . Feng , J . Wang , and L . Zhou . EASE : Efficient and Adaptive Keyword Search on Unstructured , Semi structured and Structured Data . In SIGMOD , 2008 .
[ 7 ] C . Sun , C . Y . Chan , and A . K . Goenka . Multiway slca based keyword search in xml data . In WWW , 2007 .
1046WWW 2008 / Poster PaperApril 21 25 , 2008 · Beijing , China
