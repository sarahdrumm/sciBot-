2013 IEEE 13th International Conference on Data Mining
Noise Resistant Bicluster Recognition
Huan Sun
CS Department
University of California
Santa Barbara , USA huansun@csucsbedu
Gengxin Miao ECE Department
University of California
Santa Barbara , USA miao@umailucsbedu
Xifeng Yan
CS Department
University of California
Santa Barbara , USA xyan@csucsbedu
Abstract‚ÄîBiclustering is crucial in finding co expressed genes and their associated conditions in gene expression data . While various biclustering algorithms ( eg , combinatorial , probabilistic modelling , and matrix factorization ) have been proposed and constantly improved in the past decade , data noise and bicluster overlaps make biclustering a still challenging task . It becomes difficult to further improve biclustering performance , without resorting to a new approach . Inspired by the recent progress in unsupervised feature learning using deep neural networks [ 1 ] , in this work , we propose a novel model for biclustering , named AutoDecoder ( AD ) , by relating biclusters to features and leveraging a neural network that is able to automatically learn features from the input data . To suppress severe noise present in gene expression data , we introduce a non uniform signal recovery mechanism : Instead of reconstructing the whole input data to capture the bicluster patterns , AD weighs the zero and non zero parts of the input data differently and is more flexible in dealing with different types of noise . AD is also properly regularized to deal with bicluster overlaps . To the best of our knowledge , this is the first biclustering algorithm that leverages neural network techniques to recover overlapped biclusters hidden in noisy gene expression data . We compared our approach with four state of the art biclustering algorithms on both synthetic and real datasets . On three out of the four real datasets , AD significantly outperforms the other approaches . On controlled synthetic datasets , AD performs the best when noise level is beyond 15 % .
Source Code : http://grafiacsucsbedu/autodecoder/ Keywords Gene Expression , Biclustering , Neural Network
I . INTRODUCTION
High throughput gene expression profiling is readily accessible as the development of new technologies such as the Affymetrix array plates and next generation sequencing , which necessiates advanced analysis tools to deal with massive amounts of data . To analyze expression data , numerous computational tools have been developed and steadily improved , among which , biclustering becomes a dominant unsupervised technique for gene expression analysis .
Biclustering refers to a process of grouping genes and conditions simultaneously , producing a set of biclusters each including a gene set and a condition set . Fig 1 shows two overlapped biclusters in a sample dataset . The gene expression values ‚Äú 1 ‚Äù , ‚Äú 1 ‚Äù and ‚Äú 0 ‚Äù indicate upregulating , downregulating , and unchanged , respectively . As shown in the figure , several important characteristics exist in bicluster recognition : ( 1 ) There are various kinds of biclusters : Genes ( conditions ) can be positively and negatively correlated ;
1550 4786/13 $31.00 ¬© 2013 IEEE DOI 101109/ICDM201334
707
0 1
0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 0 1 0 0 1 1 1 1 1 1 0 1 1 0 0 1 1 0 1 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 0 0 0 0
0 0 0
0
0
Fig 1 . Biclusters in a Sample Dataset .
( 2 ) Biclusters can overlap with each other in both gene dimension and condition dimension since multiple pathways containing the same gene could be active under different conditions ;
( 3 ) It is not necessary that each gene ( or condition ) has to participate in at least one bicluster ( not necessarily full coverage ) ;
( 4 ) Bicluster detection shall be robust against heavy noise in the input data .
Due to these unique characteristics , many non overlap , fullcoverage clustering methods are ineffective to recognize embedded biclusters .
To tackle the aforementioned challenges , many biclustering algorithms have been developed . We can roughly classify them into three categories : combinatorial methods , eg , CTWC [ 2 ] , OPSM [ 3 ] , ISA [ 4 ] , BIMAX [ 5 ] , association analysis based RAP [ 6 ] , COALESCE [ 7 ] , and QUBIC [ 8 ] ; probabilistic and generative approaches such as SAMBA [ 9 ] , FABIA [ 10 ] and many others [ 11 ] , [ 12 ] , [ 13 ] ; matrix factorization methods like spectral clustering [ 14 ] , SSVD [ 15 ] , and S4VD [ 16 ] . While biclustering performance has been significantly improved in the past decade , data noise and bicluster overlaps make the problem still quite challenging . Our controlled experiments will show that when noise level or bicluster overlap degree is high , most of existing algorithms can only discover a small percentage of biclusters . In this work , we are going to reexamine the biclustering problem from a new perspective and demonstrate the superior performance of our proposed model . Inspired by the recent progress in unsupervised feature learning through deep neural networks ( ie , deep learning ) [ 1 ] , we relate the biclustering problem to feature learning where the expression pattern of the gene set under the condition set in a bicluster can be regarded as a feature . Different variants of deep neural networks , such as [ 17 ] , [ 18 ] , have recently been tested to have tremendous power in extracting high level features in images . A deep neural network is composed of multiple hidden layers , where a higher ( lower ) hidden layer extracts features at a higher ( lower ) level . In our biclustering setting , we relate the expression of one gene under all conditions to the pixel values of one image . Our interested expression pattern corresponds to the correlations among pixels , which are essentially low level features . Therefore , we save ourselves the trouble of building a deep neural network ; instead , we resort to one neural network with a single hidden layer . Nevertheless , we expect the unsupervised feature learning power of neural networks will still boost the biclustering performance .
Particularly , we generalize sparse autoencoder ( SAE ) , a recently proposed neural network for unsupervised feature learning [ 19 ] , to mine biclusters . While SAE focuses on reconstructing the whole data , we are less interested in data reconstruction , than in extracting bicluster patterns . This motivates us to develop a model that can selectively reconstruct the data by putting different penalties on reconstruction errors in bicluster and non bicluster areas in the input . This design significantly improves the performance over SAE and makes it possible to outperform the existing highly optimized biclustering algorithms . We name this model AutoDecoder ( AD ) .
Our method is also related to matrix factorization , but significantly differs in the following aspects . First , matrix factorization is a linear method while the neural network in our model incorporates a non linear activation layer . PCA or SVD can be considered as a special case when the hidden layer picks a linear activation function . Second , we do not search for a low dimensional approximation to the whole expression data ; instead , we allow partial false reconstructions based on the location of noise , inside or outside biclusters . Third , a sparse activation constraint is imposed on the hidden neurons , which allows us to artificially control the number of genes to be discovered in each bicluster . With these advantages , AD is demonstrated to be more accuate than the leading matrix factorization approaches such as SSVD [ 15 ] and S4VD [ 16 ] . To the best of our knowledge , this is the first work to relate the biclustering problem to feature learning and apply neural network approaches to biclustering gene expression data . Our motivation is based on the conjecture that since biclustering has been a long standing topic , we might need to tackle the problem from a new perspective that has never been explored by previous studies in detail . Our model parameters are learnt using back propagation and a second order optimization algorithm L BFGS [ 21 ] , which have been popularly exploited in the deep learning literature . According to the optimized model parameters , we then design a bicluster embedding strategy to determine the genes and conditions in a bicluster . Empirically , our biclustering method runs very fast and outperforms the most up to date leading methods such as QUBIC , COALESCE , FABIA , and S4VD .
The rest of the paper is organized as follows . We first
708
( )ix
W 1
W
T
W
2
W ia ( ) 1 ia ( ) 2 x x x
( )i
Ka
2b ix ( ) 1 ix ( ) 2 ix ( ) 3 x x x
( )i
Mx
1b
( )ÀÜ ix
( )
( )
1ÀÜ ix 2ÀÜ ix 3ÀÜ ix
( ) x x x
( )ÀÜ i Mx
Fig 2 . Graphical Representation of an Autoencoder . briefly introduce sparse autoencoder , the predecessor of our to be proposed model , and make a connection between neural networks and biclustering in Section II . Our method , AutoDecoder , is presented in Section III , with discussions on noise resistance analysis and bicluster patterns . Experimental results on both real and synthetic datasets are given in Section V . Related works are reviewed in Section VI . Finally , we discuss future work and conclude in Section VII .
II . PRELIMINARIES
In this section , we build a connection between biclustering and the sparse autoencoder ( SAE ) [ 19 ] . Then we discuss the necessity to develop a generalized model AutoDecoder .
The graphical representation of an autoencoder with a single hidden layer is shown in Fig 2 . We begin with clarifying the notations in the context of biclusering . ( 1 ) ùëã : an ùëÄ √ó ùëÅ gene expression matrix , where ùëÄ is the number of conditions and ùëÅ is the number of genes . ùë•(ùëñ ) ùëö denotes the expression value of the ùëñùë°‚Ñé gene under the ùëöùë°‚Ñé condition . ( 2 ) ùëä : a ùêæ √ó ùëÄ matrix , the combination weights between layer and the hidden layer . Each element ùë§ùëò,ùëö the input represents the contribution of the expression under the ùëöùë°‚Ñé condition to bicluster ùëò , and determines whether the ùëöùë°‚Ñé condition is a member in bicluster ùëò or not . The weights in the first layer and those in the second layer are optionally tied 2 =ùëä [ 1 ] . ùëè1 : a ùêæ√ó1 vector ; ùëè2 : an ùëÄ √ó1 together by ùëä1=ùëä ùëá vector . ùëè1 and ùëè2 work as the bias terms at the input layer and the hidden layer respectively . ( 3 ) ùëé(ùëñ ) : a ùêæ √ó 1 vector representing activation values of the ùëñùë°‚Ñé gene in ùêæ hidden neurons , where each of the ùêæ hidden neurons denotes a potential bicluster . Unless otherwise stated , we employ the popular element wise sigmoid activation function , ie , ùëé(ùëñ ) = sigmoid(ùëä ùë•(ùëñ ) + ùëè1 ) . Each component ùëò ‚àà ( 0 , 1 ) encodes how likely a gene belongs to bicluster ùëé(ùëñ ) ùëò . Let ùê¥ = [ ùëé(1 ) , ùëé(2 ) , . . . , ùëé(ùëñ ) , . . . , ùëé(ùëÅ ) ] be the activation matrix of all the genes .
ÀÜùëã = [ ÀÜùë•(1 ) , ÀÜùë•(2 ) , . . . , ÀÜùë•(ùëñ ) , . . . , ÀÜùë•(ùëÅ ) ] , where ÀÜùë•(ùëñ ) = ùëä ùëá ùëé(ùëñ ) + ùëè2 . reconstructed gene expression data .
ÀÜùëã :
( 4 )
Parameters in an autoencoder are learnt by minimizing the reconstruction error between ùëã and ÀÜùëã . For each hidden neuron , its activation rate is defined as ÀÜùúåùëò = ‚àëùëÅ ùëò /ùëÅ . Let a ùêæ √ó 1 vector ùúå be our expected activation ùëñ=1 ùëé(ùëñ ) rates of the ùêæ hidden neurons . The Kullback Leibler ( KL ) divergence between a Bernoulli random variable with mean ùúåùëò and a Bernoulli random variable with mean ÀÜùúåùëò is added to the objective function as an additional penalty term . Autoencoder with this sparsity penalty term is called sparse autoencoder ( SAE ) [ 19 ] . This term can be entitled with more meanings in our setting . In the biclustering context , ÀÜùúåùëÅ can be regarded as the number of genes each bicluster actually contains after learning , which is regularized to be close to ùúåùëÅ we expect each bicluster to contain . Usually , it is a desideratum to obtain a bicluster which is neither too small nor too large . By using this term , the number of genes in one bicluster can be controlled artificially , which cannot be achieved by most of the existing biclustering algorithms . 2ùëÅ ‚à•ùëã ‚àí ÀÜùëã‚à•2
SAE learns the optimal model parameters by minimizing 2‚à•ùëä‚à•2 ùêπ , the cost where ‚à• ‚ãÖ ‚à•ùêπ is the Frobenius norm . SAE can work well when the expression data are uniformly corrupted by the same Gaussian noise ( the same mean and variance ) . However , in practice , Gaussian random noise inside and outside biclusters could be different . In such situation , putting equal weights on reconstructing the bicluster part and non bicluster part of the expression data will hurt bicluster finding . Therefore , we develop a non uniform weighting strategy to discriminatively treat the background and the patterns . We call the new model , AutoDecoder ( AD ) , to emphasize that it decodes the biclusters rather than encodes the entire expression data .
ùëò=1 KL(ùúåùëò‚à•ÀÜùúåùëò ) + ùúÜ
ùêπ + ùõΩ
‚àëùêæ
1
III . FRAMEWORK
In this section , we introduce our model AutoDecoder ( AD ) , followed by discussions on model solution and bicluster recognition processes .
A . Optimization Formulation
AutoDecoder shares the same neural network structure as shown in Fig 2 . However , it enhances sparse autoencoder ( SAE ) to be more robust against noise and bicluster overlaps .
‚Ñã = arg min ùëä,ùëè1,ùëè2
1 2ùëÅ fi
ùëÅ‚àë
ùëÄ‚àë
ùëñ=1
ùëö=1
[ ùêºùëö,ùëñ + ùõº(1 ‚àí ùêºùëö,ùëñ)](ÀÜùë•(ùëñ )
ùëö ‚àí ùë•(ùëñ ) ùëö )2
'ff
( I )
ùêæ‚àë
ùëò=1
ùêæ‚àë
KL(ùúåùëò‚à•ÀÜùúåùëò ) 'ff
‚àë
( II )
+ ùõΩ fi
+
ùõæ 2 fi
ùëò=1
ùëñ‚àï=ùëó
ùëÜùëñ,ùëó(‚à£ùëäùëò,ùëñ‚à£ ‚àí ‚à£ùëäùëò,ùëó‚à£)2
'ff
( III )
+ ùúÜ‚à•ùëä‚à•1 fi 'ff
( IV )
The above objective function is a sum of four terms , where ùõΩ , ùõæ , and ùúÜ take non negative values and control the trade off
709 among different regularization terms . We now explain each of the terms in details :
ùëö = 0 and ùêºùëö,ùëñ = 1 denoting ùë•(ùëñ )
‚àô Term ( I ) quantifies the average reconstruction error with non uniform weights . ùêº is an indicator matrix with ùêºùëö,ùëñ = ùëö ‚àï= 0 . 0 denoting ùë•(ùëñ ) ùõº controls the relative weight of reconstructing the zero values and non zero values in the input data . One can check that when ùõº = 1 , AD will put the same emphasis on reconstructing the zero values and non zero values ( uniform weighting ) . In this case , this term degenerates to the reconstruction function in SAE . Conceptually , our model is suitable for any data with background as zeros and patterns as non zeros . In this work , we focus on the discretized matrix with elements { 1 , 0 , 1} , representing down regulating , unchanged , and up regulating . ‚àô Term ( II ) is the sparsity penalty term as in SAE . To make the activation of each hidden neuron as sparse as we desire , we constrain the KL divergence between the sparsity parameter ùúåùëò and the activation rate ÀÜùúåùëò : + ( 1 ‚àí ùúåùëò ) log 1‚àíùúåùëò KL(ùúåùëò‚à•ÀÜùúåùëò ) = 1‚àí ÀÜùúåùëò .
‚àô In Term ( III ) , ùëÜ is an ùëÄ √ó ùëÄ symmetric matrix , where ùëÜùëñ,ùëó is the absolute value of cosine similarity between the ùëñùë°‚Ñé condition ( row ) and ùëóùë°‚Ñé condition in matrix ùëã . If ùëÜùëñ,ùëó is large enough , two conditions ùëñ and ùëó should have similar membership after optimization ( ‚à£ùëäùëò,ùëñ‚à£ ‚àº ‚à£ùëäùëò,ùëó‚à£ , for any ùëò ) . This term prevents dramatic membership change of two similar conditions , which will enhance the robustness against bicluster overlaps . ‚àô Term ( IV ) is a regularizer named as weight decay ( Chapter 5 in [ 20] ) , where ‚à•ùëä‚à•1 is the ùêø1 norm of ùëä , ie , ‚à•ùëä‚à•1 = ùëö=1 ‚à£ùëäùëò,ùëö‚à£ . ùêø1 norm regularization tends to recover ùëä with more sparsity by forcing the insignificant values to zeros , which will make easier the bicluster membership interpretation . We neglect the bias terms ùëè1 and ùëè2 because their inclusion will make the results of ùëä depend on the choice of origin ( Section 1.1 and 551 in [ 20] ) .
ùëò=1 ùúåùëò log ùúåùëò ÀÜùúåùëò
‚àëùëÄ
‚àëùêæ
‚àëùêæ
ùëò=1
B . Model Solution The classic L BFGS algorithm [ 21 ] , [ 22 ] is applied to minimize the objective function ‚Ñã . L BFGS needs the derivatives of parameters . They are calculated by the classic backpropagation algorithm [ 23 ] , where error messages are split at each neuron and then propagated to the neurons at previous layers . Given the current parameters ( ùëä ùêæ√óùëÄ , ùëèùêæ√ó1 , ùëèùëÄ√ó1 ) , 2 the backpropagation procedure is performed as follows :
1
1 . Perform a forward pass , i.e , compute the activation matrix ùê¥ of the hidden layer and the reconstructed matrix ÀÜùëã of the output layer . 2 . Let ùõø(1 ) ‚àà ùëÖùêæ√óùëÅ and ùõø(2 ) ‚àà ùëÖùëÄ√óùëÅ denote the error terms of the hidden layer and the output layer , respectively . Compute the error terms ùõø(2 ) and ùõø(1 ) as follows :
ùëö,ùëõ = [ ùêºùëö,ùëõ + ùõº(1 ‚àí ùêºùëö,ùëõ)](ÀÜùë•(ùëõ ) ùõø(2 ) ùëö,ùëõ + ùõΩ(‚àí ùúåùëò ÀÜùúåùëò
ùëö ‚àí ùë•(ùëõ ) ùëö ) 1 ‚àí ùúåùëò 1 ‚àí ÀÜùúåùëò
ùëäùëò,ùëöùõø(2 )
ùõø(1 ) ùëò,ùëõ = [
ùëÄ‚àë
+
ùëö=1
) ] ùëé(ùëõ )
ùëò ( 1 ‚àí ùëé(ùëõ ) ùëò )
3 . Compute the derivatives of ùëä ùêæ√óùëÄ , ùëèùêæ√ó1
1
, ùëèùëÄ√ó1
2
:
ùëÅ‚àë
ùëõ=1
ùëÅ‚àë
ùëõ=1
ùëÅ‚àë
ùëõ=1
‚àÇ‚Ñã ‚àÇùëè1ùëò ‚àÇ‚Ñã ‚àÇùëè2ùëö ‚àÇ‚Ñã ‚àÇùëäùëò,ùëö
=
=
=
1 ùëÅ
1 ùëÅ
1 ùëÅ
ùõø(1 ) ùëò,ùëõ
ùõø(2 ) ùëö,ùëõ
( ùõø(1 )
ùëò,ùëõùë•(ùëõ )
ùëö + ùõø(2 )
ùëö,ùëõùëé(ùëõ ) ùëò )
+ ( ùõæ ùêøùëö,(:)ùëä ùëá
ùëò,( : ) + ùúÜ ) sgn(ùëäùëò,ùëö )
‚àë where ùêø is an ùëÄ √ó ùëÄ symmetric matrix with ùêøùëñ,ùëó = ‚àíùëÜùëñ,ùëó when ùëñ ‚àï= ùëó , and ùêøùëñ,ùëñ = 1‚â§ùëó‚â§ùëÄ,ùëó‚àï=ùëñ ùëÜùëñ,ùëó . ùêøùëö,(: ) , ùëäùëò,( : ) are the ùëöùë°‚Ñé and ùëòùë°‚Ñé row of ùêø and ùëä respectively . sgn(‚ãÖ ) is the sign function of a real number and takes 0 as the subgradient of the absolute value function ùë¶ = ‚à£ùë•‚à£ at ùë• = 0 . Once the objective function ‚Ñã and its derivatives are computed , the L BFGS algorithm is applied to minimize ‚Ñã . instead of storing the dense Hessian During optimization , approximation matrix , the L BFGS algorithm saves only a few vectors to represent the approximation implicitly , which significantly decreases the memory requirement . Since LBFGS is a classic and well established algorithm [ 21 ] , [ 22 ] , we omit the detailed analysis on its complexity and convergence rate . In practice , we observe that the L BFGS algorithm converges very fast ( within around 1000 iterations on all the real datasets ) .
C . Bicluster Recognition
In order to detect the embedded biclusters , we need to select both genes and conditions for each bicluster . The weight ‚à£ùëäùëò,ùëö‚à£ determines the contribution of the ùëöùë°‚Ñé condition to the ùëòùë°‚Ñé bicluster . If ‚à£ùëäùëò,ùëö‚à£ is large enough , the bicluster should contain the ùëöùë°‚Ñé condition . Similarly for selecting genes into one bicluster , if the activation value ùëé(ùëñ ) is high , the ùëñùë°‚Ñé gene should belong to bicluster ùëò .
ùëò
The bicluster embedding process is summarized as follows : For each hidden neuron ùëò , ie , each potential bicluster , ‚àô Gene selection ùëò ‚à£>ùõø ( ùõø ‚àà ( 0 , 1) ) ; Pick any gene ùëñ corresponding to ‚à£ùëé(ùëñ ) Pick any condition ùëö corresponding to ‚à£ùëäùëò,ùëö‚à£>ùúñ ( ùúñ ‚àà ( 0 , 1) ) .
‚àô Condition selection
The thresholds ùõø and ùúñ can be tuned by users ; their values are fixed at 0.7 and 0.3 respectively for all of our experiments unless otherwise stated . Intuitively , the same threshold should work for both the gene and condition selection ; however , elements in weight matrix ùëä are usually much smaller due to the weight decay regularizer ; we pick different thresholds respectively for the gene and condition selection .
D . Robustness Against Noise
One of the major contributions we made is the non uniform weighting of the zero values and non zero values in the input data . As shown in Fig 1 , biclusters contain expression values representing upregulating ( +1 ) or downregulating ( ‚àí1 ) .
710 e r o c S
1
0.8
0.6
0.4
0.2
0
0
Fig 3 . Types .
Œ±=1.5 Œ±=1 Œ±=0.5
0.2
0.4
0.6
0.8
Noise Level ( Type A )
1 e r o c S
1
0.8
0.6
0.4
0.2
0
0
Œ±=1.5 Œ±=1 Œ±=0.5
0.2
0.4
0.6
0.8
Noise Level ( Type B )
1
Performance of AD with ùõº = {0.5 , 1 , 1.5} wrt Different Noise
Therefore , there are two kinds of noise : Type A noise corresponding to the cases where nonzeros appear outside the biclusters , and Type B noise corresponding to the cases where zeros appear inside a bicluster . Accordingly , there are two kinds of reconstruction errors : ( 1 ) false negative error when +1 or ‚àí1 is reconstructed as 0 ; ( 2 ) false positive error when 0 is reconstructed as +1 or ‚àí1 . According to Term ( I ) in ‚Ñã , penalty weight on the false positive error is controlled by ùõº while penalty weight on the false negative error is set to 1 . When ùõº is greater than 1 , AD allows more false negative errors in the reconstruction process . In this situation , AD tends to exclude ¬±1 ‚Äôs out from the final patterns than to include 0 ‚Äôs into the patterns , which is robust against Type A noise . In real gene expression datasets , we first run existing algorithms to detect biclusters and estimate the dominant noise type . In the case where Type A noise occurs more often than Type B noise , ùõº > 1 is recommended . Here we verify our analysis on AD ‚Äôs robustness against noise . We generate a set of matrices of size 100 √ó 500 . In each matrix , 100 of the 500 columns are 1 ‚Äôs while the others are 0 ‚Äôs . The area in the matrix containing 1 ‚Äôs is called pattern area while the area containing 0 ‚Äôs is called background area . We consider two simple , yet illustrative , scenarios . In the first scenario , the elements in background area are flipped to 1 ‚Äôs with probability ùëù ranging from 0 to 1 , whereas the pattern area is kept clean ( Type A noise ) . The flipping probability ùëù is named noise level . Oppositely , in the second scenario , the elements in pattern area are flipped to 0 ‚Äôs with probability ùëù ( noise level ) ranging from 0 to 1 whereas the background area is kept clean ( Type B noise ) . At each noise level , we generate 50 matrices and compute the average F score ( See Section V A ) . We show the result of AD with ùõº = 0.5 , 1 , 1.5 in Fig 3 . ùõº = 1 corresponds to the uniform weighting as in SAE . Obviously , with an appropriate ùõº our proposed model is more robust than the classic SAE approach .
E . Robustness Against Bicluster Overlaps
Many of existing biclustering algorithms cannot detect biclusters accurately when biclusters overlap at both gene and condition dimensions . Term ( III ) in ‚Ñã is designed to deal with such two dimension overlaps . Our intuition is that if two conditions ( genes ) have similar expression values , they should have similar bicluster membership . That is , for a condition
1 1 1 1
1 1 1 1
1 1 1 1
1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1
1
1 1 1 1 1 1 1 1 1 1 1 1
1
1
1 1 1 1
1 1 1 1 1 1 1 1
1 1 1 1
1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1
1.5 r e
1
0.5 l i t s u c B e h t n i s t i h g e W
1 1 1 1 # 1 1
" "
1 1 0 0 1 1 0 0
# % #
#
#
"
1 1 0 0
"" ""
0 0 # % # 0
"
1
0.5
0
‚àí0.5 l r e t s u c B e h i t n i n o i t a v i t c A
Fig 4 . Bicluster Patterns that Can Be Discovered by AD .
0 0
2
4 6 Row Index
8
10
‚àí1 0
10
20
30
Column Index
ùëñ,ùëó pair ( ùëñ , ùëó ) and any bicluster ùëò , ( ‚à£ùëäùëò,ùëñ‚à£ ‚àí ‚à£ùëäùëò,ùëó‚à£)2 should be as small as possible if the gene expression values in condition ùëñ is similar to that in condition ùëó . Furthermore , if one condition is similar to conditions in multiple biclusters , it should belong to these biclusters simultaneously , thus ‚àëùêæ resulting in biclusters overlapped in conditions . Formally , ( ‚à£ùëäùëò,ùëñ‚à£ ‚àí ‚à£ùëäùëò,ùëó‚à£)2 should be minimized ùëò=1 ùëÜ(ùëêùëúùëõùëëùëñùë°ùëñùëúùëõ ) where ùëÜ(ùëêùëúùëõùëëùëñùë°ùëñùëúùëõ ) is the similarity between the expression values under condition ùëñ and condition ùëó . Similarly for a gene ‚àë ùëñ‚àï=ùëó ùëÜ(ùëîùëíùëõùëí ) ùëò )2 should be minipair ( ùëñ , ùëó ) , mized where ùëÜ(ùëîùëíùëõùëí ) is the similarity between the expression values of gene ùëñ and gene ùëó across all the conditions . Due to our neural network structure ùëé(ùëñ ) = sigmoid(ùëä ùë•(ùëñ ) + ùëè1 ) , if two genes have similar expression values ( ùë•(ùëñ ) ‚àº ùë•(ùëó) ) , they will naturally have similar activation values ( ùëé(ùëñ ) ‚àº ùëé(ùëó) ) . Therefore , in AD , only the condition term is included , and ùëÜ(ùëêùëúùëõùëëùëñùë°ùëñùëúùëõ ) is replaced with ùëÜ for simplicity .
ùëò ‚àí ùëé(ùëó ) ( ùëé(ùëñ )
‚àëùêæ
ùëò=1
ùëñ,ùëó
ùëñ,ùëó
ùëñ,ùëó l r e t s u c B e h i t n i s t h g e W i
1.5
1
0.5
0
‚àí0.5
‚àí1
‚àí1.5 0
Fig 5 . Bicluster Recognition with Pattern IV .
" "
1 1 1 1 # % # # 1 1
"
1 1 0 0 1 1 0 0
#
#
1 1 0 0
"" ""
0 0 # "" # 0
""
1
0.5
0
‚àí0.5 l r e t s u c B e h i t n i t a v i t c A i n o
2
4 6 Row Index
8
10
‚àí1 0
10
20
30
Column Index
40
50
40
50
IV . BICLUSTER PATTERNS
Fig 6 . Bicluster Recognition with Pattern V .
AutoDecoder can identify a broad range of bicluster patterns in one trial . Fig 4 shows five types of bicluster patterns that can be found by AD .
( I III ) In these three patterns , conditions can be either positively or negatively correlated under the gene set whereas genes are positively correlated under the condition set . Our AD model can directly discover such patterns . For some ùëò , the weights ùëäùëò,ùëö corresponding to the condition set will be large in magnitude . The sign of the ùëäùëò,ùëö will be the same as that of the expressions under the ùëöùë°‚Ñé condition . The gene set will have large activation values in the ùëòùë°‚Ñé neuron .
( IV V ) In the fourth and fifth patterns , conditions can be either positively or negatively correlated under the gene set whereas genes can also be either positively or negatively correlated under the condition set . For such patterns , our AD model with a sigmoid hidden layer splits the bicluster into two subclusters in which the two subsets of genes behave oppositely . This is because column 1 ( 3 ) and column 2 ( 4 ) cannot simultaneously have large activation values under the same hidden neuron . Since both subclusters are associated with
711 the same condition set in our embedding process , they can be combined through postprocessing . Alternatively , if the sigmoid activation function in the hidden layer is replaced by a tanh activation function , these patterns can be directly discovered . We are going to show that AD with a tanh activation layer is able to discover Patterns IV and V . Recall that in Section II , ùëé(ùëñ ) = sigmoid(ùëä ùë•(ùëñ ) + ùëè1 ) . Now we replace sigmoid with a tanh function , ie , ùëé(ùëñ ) = tanh(ùëä ùë•(ùëñ ) + ùëè1 ) ‚àà ( ‚àí1 , 1 ) . As long as ‚à£ùëé(ùëñ)‚à£ is large , we regard the ùëñùë°‚Ñé gene to be active . In this case , the original definition of the sparsity parameter ÀÜùúåùëò = ùëò /ùëÅ is problematic ; therefore , we re define ùëò ‚à£/ùëÅ , 2 ÀÜùúåùëò = however , we favor the former due to its smoothness . All other components in our original AD model are kept unchanged . We generate two toy matrices of size 10√ó 50 , in which the 10 rows and the first 10 columns form a bicluster with Pattern IV and Pattern V respectively . The number of biclusters ùêæ is set at 1 . Fig 5 and 6 show the membership of rows and
‚àëùëÅ ùëñ=1 ùëé(ùëñ ) ‚àëùëÅ ùëñ=1 ùëé(ùëñ )
/ùëÅ . One can also use ÀÜùúåùëò =
ùëñ=1 ‚à£ùëé(ùëñ )
‚àëùëÅ
ùëò columns for a bicluster with Pattern IV and V respectively . The upper subfigure shows a simulated matrix with Pattern IV or V . The lower left subfigure provides the learnt weights of the 10 rows ( ùëä1,ùëö : ùëö = 1 , . . . , 10 ) while the lower right subfigure illustrates the activation values of the 50 columns ( ùê¥1,ùëõ : ùëõ = 1 , . . . , 50 ) . According to the bicluster recognition process discussed in Section III C , both the columns and rows belonging to the bicluster can be successfully identified due to a high magnitude in either weights or activation values .
V . EXPERIMENTS
In this section , we present empirical studies of AutoDecoder ( AD ) on both real gene expression datasets and controlled synthetic datasets , and compare AD with the state of the art biclustering algorithms in different categories : ( 1 ) Combinatorial search , Qubic [ 8 ] and COALESCE[7 ] , ( 2 ) Probabilistic model , FABIA [ 10 ] , and ( 3 ) Matrix factorization , S4VD [ 16 ] . These four algorithms represent the best results in their own category after a decade of efforts in searching high quality biclusters in gene expression data . A detailed comparison of many other existing algorithms with FABIA is available in [ 10 ] .
AD was implemented in MATLAB . All the experiments were conducted on a 3.4GHZ , 16GB , Intel PC running Windows 7 .
A . Evaluation Measures
Suppose ùëÄ‚àó
To assess various biclustering approaches , we use the average Relevance and Recovery scores , which were widely adopted in biclustering literature , such as S4VD [ 16 ] , QUBIC [ 8 ] , and BIMAX [ 5 ] . Overall , these two scores quantify the similarity between the set of computed biclusters and the set of true biclusters in the data . is the set of true biclusters , and ùëÄ is the set of discovered biclusters each of which contains a gene set G and a condition set C . We denote ùëÄ‚àó and ùëÄ respectively as ùëÄ‚àó = {ùëÄ‚àó ùëö‚àó} and ùëÄ = {ùëÄ1 , ùëÄ2 , , ùëÄùëö} . 2 , , ùëÄ‚àó ùëñ and ùëÄùëñ = ùê∫ùëñ √ó ùê∂ùëñ , where √ó is the Let ùëÄ‚àó ùëñ = ùê∫‚àó Cartesian product . The average Relevance and Recovery scores are defined as follows :
1 , ùëÄ‚àó ùëñ √ó ùê∂‚àó
Relevance =
Recovery =
1 ùëö
1 ùëö‚àó
ùëö‚àë
ùëñ=1
ùëö‚àó‚àë
ùëñ=1 max
ùëó‚àà{1,2,,ùëö‚àó} max
ùëó‚àà{1,2,,ùëö}
ùëó
ùëÄùëñ ‚à© ùëÄ‚àó ùëÄùëñ ‚à™ ùëÄ‚àó ùëñ ‚à© ùëÄùëó ùëÄ‚àó ùëñ ‚à™ ùëÄùëó ùëÄ‚àó
ùëó
ùëÄùëñ‚à©ùëÄ‚àó ùëÄùëñ‚à™ùëÄ‚àó
ùëó
ùëó where is the well known Jaccard coefficient [ 24 ] . The average Relevance evaluates to what degree the discovered biclusters represent the true biclusters , whereas the average Recovery measures how well the true biclusters are recovered by the current biclustering algorithm . We calculate the harmonic mean of the Relevance and Recovery scores , ùêπ = 2ùëÖùëíùëô‚àóùëÖùëíùëê in order to jointly consider them . Note ùëÖùëíùëô+ùëÖùëíùëê , that although there are various kinds of evaluation measures available for general clustering problems , for biclustering ,
712 we select the most widely adopted Relevance and Recovery measures in the literature .
The performance on all the simulated datasets is evaluated using ùêπ score computed as above . However , for real gene expression datasets , ground truth on the bicluster membership of genes is usually not available , therefore we can only compute the scores on the condition clusters each of which corresponds to the condition set within a bicluster , ie , ùëÄ‚àó ùëñ and ùëÄùëñ = ùê∂ùëñ . Meanwhile , the biological significance of the gene set within a detected bicluster is evaluated . This strategy was also adopted in our competing algorithms [ 10 ] , [ 16 ] .
ùëñ = ùê∂‚àó
B . Gene Expression Datasets
We experimented four real gene expression datasets widely used in biclustering studies : breast cancer , multiple tissue types , diffuse large B cell lymphoma , and lung cancer . For the first three datasets , Hoshida et al . [ 25 ] clustered the conditions using additional datasets and verified the clusters by gene set enrichment analysis . FABIA [ 10 ] studied how well biclustering algorithms can re identify these clusters without any additional information . Similarly , for the lung cancer dataset , S4VD [ 16 ] and SSVD [ 15 ] first compared the obtained condition clusters with ground truth and then evaluated gene sets within biclusters by doing enrichment analysis . We adopted a similar approach to evaluate the detected biclusters . We briefly describe the datasets as follows :
( a ) Breast cancer dataset [ 26 ] . As stated in [ 10 ] , the sample ( ie , condition ) S54 is an outlier and was removed from the original data . The dataset has 1,213 genes and 97 samples .
( b ) Multiple tissue types dataset [ 27 ] . It contains 5,565 genes and 102 samples from diverse tissues and cell lines . Hoshida et al . [ 25 ] discovered four sample clusters from this dataset .
( c ) Diffuse large B cell lymphoma ( DLBCL ) dataset [ 28 ] . This dataset was to predict the survival after chemotherapy , and contains 3,795 genes and 58 samples . Four sample clusters were discovered in [ 25 ] .
( d ) Lung cancer dataset [ 29 ] . It was previously analyzed in [ 16 ] , [ 15 ] . 12,625 genes under 56 samples were measured using the Affymetrix 95av2 GeneChip . are not valued among in the procedure discretization increasing order for each gene , sort
1 ) Preprocessing : For
{‚àí1 , 0 , 1} , we similar those gene expression datasets adopted to QUBIC [ 8 ] . its original expression as that a Specifically , values on ùëÄ conditions follows:(ùë•ùúã(1 ) , ùë•ùúã(2 ) , . . . , ùë•ùúã(ùë†‚àí1 ) , ùë•ùúã(ùë† ) , . . . , ùë•ùúã(ùëê‚àí1 ) , ùë•ùúã(ùëê ) , ùë•ùúã(ùëê+1 ) , . . . , ùë•ùúã(ùëÄ‚àíùë†+1 ) , ùë•ùúã(ùëÄ‚àíùë†+2 ) , . . . , ùë•ùúã(ùëÄ ))ùëá , where ùúã(ùëó ) is the permutated ùëóùë°‚Ñé index , ùëê = ‚åàùëÄ/2‚åâ and ùë† ‚àí 1 = ‚åäùëÄ ùëû‚åã . Same as [ 8 ] , we set ùëû at 006 A condition is considered as downregulating ( ‚àí1 ) for a gene if its expression value is less than ùë•ùúã(ùëê ) ‚àí ùëë and as is greater than ùë•ùúã(ùëê ) + ùëë , where upregulating ( +1 ) if it ùëë = min{ùë•ùúã(ùëê ) ‚àí ùë•ùúã(ùë† ) , ùë•ùúã(ùëÄ‚àíùë†+1 ) ‚àí ùë•ùúã(ùëê)} ; otherwise , the gene is not activated ( ie , 0 ) . The rationale to choose this procedure is given in the Supplementary Data of [ 8 ] . The choice is not exclusive ; other discretization methods can also be applied here . Since we find that FABIA , S4VD , and COALESCE do not work better on preprocessed data , the raw data are used as their input .
2 ) Parameter Setting : Biclustering algorithms generally involve many parameters . We explored the number of biclusters in all the methods except COALESCE from 5 to 8 , slightly larger than the true number in each dataset , as suggested in FABIA . COALESCE can find any number of biclusters that satisfy their criteria . In these popularly used real datasets , only a small number of biclusters are present ; nevertheless , we will later synthesize datasets with more biclusters embedded for comprehensive comparison . For each competing algorithm , we tuned 2 to 4 important parameters according to their manual to show their best performance on each dataset .
ùëÅ , ùõæ = 0.2
ùëÅ , and ùúÜ = 0.1‚àö
For AD , we observe that a fixed setting of parameters generalize very well across different datasets . Particularly , we set ùõΩ = 2ùëÄ‚àö ùëÅ . Two important parameters in AD are ùõº and ùúå . There are three typical values for ùõº : 1.5 , 0.5 , and 1 , which can deal with Type A noise , Type B noise , and balanced Type A and B noise as discussed in Section III D . For ùúå , it will be easier to set if one has any prior knowledge or preference over the number of genes contained in biclusters . In our experiments , we first run other algorithms to get a rough idea about the noise type and gene cluster size . In the real gene expression datasets we tested , Type A noise occurs more often than Type B noise , and therefore , we set ùõº at 15 We randomly draw each component of ùúå from the interval [ 0.01 , 0.03 ] , as we expect a bicluster to contain 1 % ‚àº 3 % the total number of genes .
3 ) Performance Comparisons : On all of these datasets , AD completes biclustering within 2 minutes . The results are summarized in Fig 7 . Columns ‚Äú ùëÖùëíùëô . ‚Äù , ‚Äú ùëÖùëíùëê . ‚Äù , and ‚Äú ùêπ ‚Äô respectively provide the average Relevance score , average Recovery score and their harmonic mean . The columns ‚Äú #g ‚Äù , ‚Äú #s ‚Äù , and ‚Äú #bc ‚Äù give the average number of genes , conditions in each bicluster , and the number of discovered biclusters respectively . ‚Äú TN ‚Äù gives the true number of condition clusters in each dataset . For the breast cancer dataset , FABIA performs the best . For the remaining three datasets , AD significantly outperforms other tuned biclustering algorithms . Understanding the differences between the breast cancer dataset and other datasets will be helpful to further improve the performance , which we leave for future study . The superiority of AD over SAE verifies the effectiveness of our proposed strategy in dealing with real data . Moreover , AD can achieve better performance once the parameters are tuned as in our competing algorithms .
To evaluate the biological significance of the gene set in a discovered bicluster , as in [ 8 ] , [ 10 ] , [ 16 ] , we conducted gene ontology ( GO ) enrichment analysis by computing the ùëÉ value [ 8 ] of each biological category wrt the gene set . Particularly , we caclulate the probability of having ùëü ( ùëü > 0 ) genes of the same biological category in a bicluster with ùëõ genes as :
Pr(ùëü‚à£ùëÅ , ùëö , ùëõ ) =
(
ùëö ùëü
)( (
) ùëÅ‚àíùëö ùëõ‚àíùëü ) ùëÅ ùëõ
( 1 )
713
Methods
AD SAE QUBIC COALESCE FABIA S4VD
Methods
AD SAE QUBIC COALESCE FABIA S4VD
Methods
AD SAE QUBIC COALESCE FABIA S4VD
Methods
AD SAE QUBIC COALESCE FABIA S4VD
#g 15 20 33 79 98 124
ùêπ 0.43 0.48 0.21 0.41 0.57 0.49
Breast Cancer ( TN : 3 ) ùëÖùëíùëô . ùëÖùëíùëê . #s 23 0.42 0.44 30 0.48 0.47 15 0.14 0.42 36 0.34 0.52 31 0.49 0.67 0.41 27 0.60 Multiple Tissue ( TN : 4 ) #s 23 34 18 77 31 8
#g 290 270 103 546 98 245 DLBCL ( TN : 4 )
ùëÖùëíùëô . ùëÖùëíùëê . 0.89 0.75 0.70 0.63 0.67 0.58 0.52 0.44 0.77 0.77 0.19 0.07
ùêπ 0.82 0.66 0.63 0.47 0.77 0.10
ùëÖùëíùëô . ùëÖùëíùëê . 0.48 0.53 0.48 0.48 0.35 0.34 0.39 0.36 0.55 0.18 0.24 0.34 Lung Cancer ( TN : 4 )
ùêπ 0.50 0.48 0.34 0.38 0.27 0.28
#g 103 118 174 289 99 270
#s 17 24 7 40 17 18
ùëÖùëíùëô . ùëÖùëíùëê . 0.89 0.96 0.76 0.60 0.59 0.65 0.48 0.29 0.85 0.85 0.78 0.68
ùêπ 0.92 0.67 0.62 0.36 0.85 0.72
#g 442 476 130 167 607 445
#s 14 15 12 14 13 16
#bc 3 6 1 11 4 2
#bc 5 5 5 3 4 1
#bc 5 5 6 6 1 2
#bc 5 6 4 89 4 3
Fig 7 . Results on Real Datasets . where ùëÅ is the total number of genes in the input , and ùëö is the number of genes from that biological category and encoded in the input . For each biological category with ùëü > 0 in one bicluster , we calculate its ùëÉ value wrt the gene set in the bicluster using the probability defined by ( 1 ) . We then use the smallest ùëÉ value among all possible biological categories as the ùëÉ value of the current bicluster . The smaller the ùëÉ value , the more biologically significant the bicluster [ 8 ] , [ 16 ] , [ 10 ] . Our model can generally discover biclusters with ùëÉ value around or less than 10‚àí4 , much often less than 10‚àí10 on all the datasets , which is comparable to the gene set analysis result shown by FABIA [ 10 ] and S4VD [ 16 ] . Due to space limit , we only show the summarized gene enrichment analysis results on the last three datasets .
For Multiple Tissue dataset , Bicluster 1 is enriched with genes related to the acyl CoA metabolic process and the thioester metabolic process ( ùëÉ value 2.8 √ó 10‚àí6 ) . Genes related to collagen fibril organization enrich Bicluster 2 ( ùëÉ value 4.0√ó 10‚àí6 ) . The most significant GO terms in Bicluster 3 are related to immune response ( ùëÉ value 12√ó10‚àí20 ) Genes in Bicluster 4 are related to positive regulation of superoxide anion generation ( ùëÉ value 6.9 √ó 10‚àí5 ) . The most significant GO terms in Bicluster 5 are related to G protein coupled receptor protein signaling pathway ( ùëÉ value 6.9 √ó 10‚àí7 ) .
For DLBCL dataset , genes in Bicluster 1 are most related to the regulation of transcription involved in G1/S phase of mitotic cell cycle ( ùëÉ value 1.1 √ó 10‚àí4 ) . Bicluster 2 is highly related to defense response ( ùëÉ value 6.3√ó 10‚àí10 ) . Bicluster 3 is enriched by genes from the regulation of peptide hormone secretion . The most significant GO terms in Bicluster 5 are highly related to the regulation of phospholipase activity ( ùëÉ value 5.3 √ó 10‚àí4 ) . Bicluster 4 is too small to allow for a reliable biological interpretation .
In the discovered biclusters from Lung Cancer dataset , Bicluster 1 is enriched with genes related to positive regulation of kidney development ( ùëÉ value 22√ó10‚àí6 ) The most significant GO terms in Bicluster 2 are highly related to cell division ( ùëÉ value 9.2 √ó 10‚àí26 ) . Bicluster 3 is related to interferongamma mediated signaling pathway ( ùëÉ value 1.2 √ó 10‚àí12 ) . Genes related to mitochondrial electron transport enrich Bicluster 4 ( ùëÉ value 39√ó10‚àí8 ) The most significant biological category in Bicluster 5 is related to cell adhesion ( ùëÉ value 2.2 √ó 10‚àí10 ) .
The evaluation of biclustering results illustrates that our approach not only improves the performance on condition clusters of these datasets , but also guarantees the biological significance of the gene sets discovered in the biclusters .
ùëÅ , and ùúÜ = 0.1‚àö
4 ) Sensitivity Analysis : For most of the learning problems , model selection is a critical problem . The learning performance might vary significantly under different parameter settings . ùõΩ , ùõæ , and ùúÜ are our model parameters that control the trade off among the regularization terms . We fix ùõΩ = 2ùëÄ‚àö ùëÅ , ùõæ = 0.2 ùëÅ on the previous experiments . In this subsection , we study the impact of the parameters on the performance of AD . Specifically , we fix other parameters as before and let one of {ùõΩ , ùõæ , ùúÜ} vary . As shown in Fig 8 , AD is generally not very sensitive with respect to these parameters , since high quality scores can be achieved under a large range of the studied parameters .
C . Synthetic Datasets
Our algorithm is also tested on a set of controlled synthetic datasets , which are generated as follows : Given the matrix size 100 √ó 500 and the number of biclusters ùêæ , the number of rows ùëü in a bicluster is randomly selected from the interval [ 10 , 30 ] , and the number of columns ùëê is randomly selected from [ 50 , 100 ] ; then we randomly choose ùëü rows from the total 100 rows and ùëê columns from the total 500 columns as the members of the bicluster . The matrix is initially filled with ‚Äú 0 ‚Äù . Each bicluster is filled with ‚Äú 1 ‚Äù . In total , ùêæ biclusters are generated . We then inject noise to each matrix by flipping the value of elements . Specifically , we flip the 1 ‚Äôs inside biclusters to be zeros with probability ùëù and flip the 0 ‚Äôs outside biclusters to be 1 or ‚àí1 respectively with probability ùëù 2 . The flipping probability ùëù is named noise level .
1
0.8
0.6
0.4
0.2
0 0.5
0.9
K=6 TPR K=6 FPR K=10 TPR K=10 FPR K=20 TPR K=20 FPR
0.6
Threshold Œ¥ on Gene Selection
0.7
0.8
1
0.8
0.6
0.4
0.2
K=6 TPR K=6 FPR K=10 TPR K=10 FPR K=20 TPR K=20 FPR
0 0.1
0.2
Threshold Œµ on Condition Selection
0.3
0.4
Fig 10 . True Positive Rate ( TPR ) and False Positive Rate ( FPR ) of AD .
For each parameter setting ùêæ and ùëù , 100 matrices are generated and the average performance of each algorithm on these 100 matrices is measured . We tune parameters in our competing algorithms and show their best performance . For AD , we still use a fixed parameter setting , where ùõº = 1 and ùúåùëò = 01,‚àÄùëò
Fig 9 illustrates the performance of five algorithms . It is observed that AD significantly outperforms all the other algorithms when noise level is beyond 15 % . When we increase the number of biclusters , recognition becomes more and more difficult because overlapping among biclusters also increases significantly . For example , around 12 % of the nonzeros belong to two biclusters when ùêæ = 10 , whereas the ratio increases to 22 % when ùêæ = 20 . In such situation , all the competitors are only able to detect a much smaller percentage of true biclusters , while AD still maintains a much higher F score . Fig 9 shows that AD covers the situation ( high noise and high overlaps ) where the existing algorithms cannot work well .
We further show the change of the true positive rate ( TPR ) and false positive rate ( FPR ) of AD , when varying the recognition thresholds ùõø and ùúñ in Section III C . We detail how to caculate the TPR and FPR in our biclustering setting : We first map each detected bicluster ùëÄùëñ to a true bicluster ùëÄ‚àó ùëó ùëÄùëñ‚à©ùëÄ‚àó by maximizing the Jaccard coefficient , i.e , by max . ùëÄùëñ‚à™ùëÄ‚àó We compute the TPR and FPR for each true bicluster , and then obtain their average as the overall TPR and FPR of AD . The above synthetic datasets with noise level at 0.2 are used for study . Fig 10 shows at 0.2 noise level , AD generally still achieves a high TPR while keeping the FPR at a low level . On the other hand , AD turns out to be not very sensitive to the thresholds , since similar results can be achieved under a large range of the thresholds .
ùëó
ùëó
ùëó
VI . RELATED WORK
The first biclustering algorithm for gene expression analysis was proposed in the year 2000 by Cheng and Church [ 30 ] . Since then , various combinatorial biclustering algorithms have been developed , including the Coupled Two Way Clustering [ 2 ] , the Order Preserving SubMatrix [ 3 ] , the Iterative Signature Algorithm [ 4 ] , BIMAX developed by [ 5 ] , QUBIC [ 8 ] , and COALESCE [ 7 ] . An association rule based method RAP [ 6 ] also falls into this category . We include the recent QUBIC and COALESCE for comparative studies in our experiments . Computational complexity and performance have
714 e r o c s
F e r o c s
F
1
0.8
0.6
0.4
0.2
0
0
1
0.8
0.6
0.4
0.2
0
0
Breast Lung Multi . DLBCL
4
1
0.8
0.6
0.4
0.2 e r o c s
F
0
0.1
0.2
Breast Lung Multi . DLBCL
0.5
0.6 e r o c s
F
1 3 Œ≤ ( unit : M/sqrt(N ) )
2
0.3
0.4 Œ≥ ( unit : 1/N )
Fig 8 . Sensitivity Analysis of {ùõΩ , ùõæ , ùúÜ} on Real Datasets .
K=6
K=10
AD QUBIC COALESCE FABIA S4VD
1
0.8
0.6
0.4
0.2 e r o c s
F
AD QUBIC COALESCE FABIA S4VD e r o c s
F
0.1
0.2
0.3
0.4
Noise level ( flipping probability p )
0.5
0.1
0.2
0.3
0.4
0.5
0
0
Noise level ( flipping probability p ) Fig 9 . Results on Synthetic Datasets
1
0.8
0.6
0.4
0.2
0
1
0.8
0.6
0.4
0.2
0
0
Breast Lung Multi . DLBCL
0.1
0.2
0.3 Œª ( unit : 1/sqrt(N ) )
0.4
K=20
AD QUBIC COALESCE FABIA S4VD
0.1
0.2
0.3
0.4
Noise level ( flipping probability p )
0.5 been steadily improved as the development of new algorithms . Probabilistic and generative methods are also available for biclustering gene expression data . The statistical algorithmic method for bicluster analysis ( SAMBA [ 9 ] ) is one of the earliest probabilistic approaches to biclustering . Other approaches include those proposed in [ 11 ] , [ 12 ] , [ 13 ] . FABIA [ 10 ] is one of the recently developed probabilistic approaches , and has demonstrated good performance on various real datasets . Another category of biclustering algorithms is based on matrix factorization . Spectral biclustering [ 14 ] applies singular vector decomposition ( SVD ) to extracting expression patterns in a matrix . It is indicated in [ 31 ] that SVD is capable of finding biclusters . Lee et al . [ 15 ] developed a sparse SVD ( SSVD ) algorithm . S4VD [ 16 ] improved SSVD [ 15 ] by incorporating a stability selection technique . Recently , query based biclustering algorithms [ 32 ] , [ 33 ] are developed , which utilize a set of seed genes provided by the user to prune the search space and guide the biclustering algorithm . Hanczar et al . [ 34 ] focus on the corrected measurement of the biclustering methods . Despite of many existing studies on biclustering , we are motivated to further improve the performance by approaching the problem from a novel perspective .
Cross association [ 35 ] , co clustering [ 36 ] , [ 37 ] , [ 38 ] , [ 39 ] , exclusive row biclustering [ 40 ] , monochromatic biclustering proposed in [ 41 ] , block models [ 42 ] , Boolean Matrix Factorization [ 43 ] , [ 44 ] , and techniques on noisy information theoretic tiles detection [ 45 ] have been applied to group rows and columns simultaneously in a matrix . Each of these methods also falls into one of the three previously mentioned categories , ie , combinatorial approach , probabilistic modelling , or matrix factorization . These existing models usually have one or more of the following characteristics : ( 1 ) Only 0 1 binary input can be handled , which is impossible to detect negative correlations ; ( 2 ) Disjoint/non overlapping or full coverage biclusters are generated , which is different from our emphasis introduced in Section I ; ( 3 ) They rely on stochastic approximation to do inference due to lack of computationally efficient algorithms . Our work is inspired by deep learning , ie , unsupervised feature learning using deep neural networks . Since the breakthrough on training multi layer neural networks was made by Hinton and Salakhutdinov[1 ] , numerous studies on learning deep feature hierarchies have been conducted . Among them , the most related one is sparse autoencoder proposed in [ 19 ] . Different from sparse autoencoder , our model is more resistant against noise by differently reconstructing the bicluster and background part of the input data . Besides , we also enhance the ability of sparse autoencoder to deal with bicluster overlaps . Through extensive experiments , we clearly demonstrate that our neural network based approach can outperform the existing biclustering algorithms , as well as the original sparse autoencoder .
VII . CONCLUSION AND FUTURE WORK
We developed a novel biclustering approach , AutoDecoder , to effectively discover biclusters in highly noisy expression data . To the best of our knowledge , this is the first attempt to relate the biclustering problem to unsupervised feature learning methods and apply neural network approaches to biclustering gene expression data . AutoDecoder associates the activation of hidden neurons in a two layer neural network with the membership of genes and conditions in biclusters . Compared with four state of the art algorithms , AutoDecoder
715 performs better on both real and synthetic datasets , especially when there are more overlapped biclusters and higher noise . Our experimental results show that neural network is a promising approach to biclustering , a long standing problem in gene expression data analysis .
Apart from evaluation in terms of Relevance and Recovery scores , and ùëÉ value , it will be interesting to verify whether the biclusters recognized by AutoDecoder are more useful to biologists in the future . Biclustering methods usually involve many parameters . Another very useful future work will be to test different parameter settings to fully explore their potential , especially for AutoDecoder . Since biclustering has been a long standing topic , to further improve the performance , one might need to explore new ideas different from existing biclustering methodologies .
ACKNOWLEDGMENT
This work was partially supported by the US National Science Foundation under grant IIS 0954125 and the Institute for Collaborative Biotechnologies through grant W911NF 090001 from the US Army Research Office . The content of the information does not necessarily reflect the position or the policy of the Government , and no official endorsement should be inferred .
REFERENCES
[ 1 ] G . Hinton and R . Salakhutdinov , ‚Äú Reducing the dimensionality of data with neural networks , ‚Äù Science , vol . 313 , no . 5786 , p . 504 , 2006 .
[ 2 ] G . Getz , E . Levine , and E . Domany , ‚Äú Coupled two way clustering analysis of gene microarray data , ‚Äù PNAS , vol . 97 , no . 22 , p . 12079 , 2000 .
[ 3 ] A . Ben Dor , B . Chor , R . Karp , and Z . Yakhini , ‚Äú Discovering local structure in gene expression data : the order preserving submatrix problem , ‚Äù J . of Computational Biology , vol . 10 , no . 3 4 , pp . 373‚Äì384 , 2003 .
[ 4 ] J . Ihmels , S . Bergmann , and N . Barkai , ‚Äú Defining transcription modules using large scale gene expression data , ‚Äù Bioinformatics , vol . 20 , no . 13 , pp . 1993‚Äì2003 , 2004 .
[ 5 ] A . Preli¬¥c , S . Bleuler , P . Zimmermann et al . , ‚Äú A systematic comparison and evaluation of biclustering methods for gene expression data , ‚Äù Bioinformatics , vol . 22 , no . 9 , pp . 1122‚Äì1129 , 2006 .
[ 6 ] G . Pandey , G . Atluri , M . Steinbach , C . L . Myers , and V . Kumar , ‚Äú An association analysis approach to biclustering , ‚Äù in SIGKDD . ACM , 2009 , pp . 677‚Äì686 .
[ 7 ] C . Huttenhower , K . Mutungu , N . Indik , W . Yang , M . Schroeder , J . Forman , O . Troyanskaya , and H . Coller , ‚Äú Detailing regulatory networks through large scale data integration , ‚Äù Bioinformatics , vol . 25 , no . 24 , pp . 3267‚Äì3274 , 2009 .
[ 8 ] G . Li , Q . Ma , H . Tang , A . Paterson , and Y . Xu , ‚Äú Qubic : a qualitative biclustering algorithm for analyses of gene expression data , ‚Äù Nucleic acids res , vol . 37 , no . 15 , pp . e101‚Äìe101 , 2009 .
[ 9 ] A . Tanay , R . Sharan , and R . Shamir , ‚Äú Discovering statistically significant biclusters in gene expression data , ‚Äù Bioinformatics , vol . 18 , no . suppl 1 , pp . S136‚ÄìS144 , 2002 .
[ 10 ] S . Hochreiter , U . Bodenhofer , M . Heusel et al . , ‚Äú Fabia : factor analysis for bicluster acquisition , ‚Äù Bioinformatics , vol . 26 , no . 12 , pp . 1520‚Äì1527 , 2010 .
[ 11 ] Q . Sheng , Y . Moreau , and B . De Moor , ‚Äú Biclustering microarray data by gibbs sampling , ‚Äù Bioinformatics , vol . 19 , no . suppl 2 , p . ii196 , 2003 . [ 12 ] L . Lazzeroni and A . Owen , ‚Äú Plaid models for gene expression data , ‚Äù
Statistica Sinica , vol . 12 , no . 1 , pp . 61‚Äì86 , 2002 .
[ 13 ] J . Gu and J . Liu , ‚Äú Bayesian biclustering of gene expression data , ‚Äù BMC genomics , vol . 9 , no . Suppl 1 , p . S4 , 2008 .
[ 14 ] Y . Kluger , R . Basri , J . Chang , and M . Gerstein , ‚Äú Spectral biclustering of microarray data : coclustering genes and conditions , ‚Äù Genome research , vol . 13 , no . 4 , pp . 703‚Äì716 , 2003 .
[ 15 ] M . Lee , H . Shen , J . Huang , and J . S . Marron , ‚Äú Biclustering via sparse singular value decomposition , ‚Äù in Biometrics , vol . 66 , 2010 , pp . 1087‚Äì 1095 .
716
[ 16 ] M . Sill , S . Kaiser , A . Benner , and A . Kopp Schneider , ‚Äú Robust biclustering by sparse singular value decomposition incorporating stability selection , ‚Äù Bioinformatics , vol . 27 , no . 15 , pp . 2089‚Äì2097 , 2011 .
[ 17 ] H . Lee , R . Grosse , R . Ranganath , and A . Y . Ng , ‚Äú Convolutional deep belief networks for scalable unsupervised learning of hierarchical representations , ‚Äù in ICML . ACM , 2009 , pp . 609‚Äì616 .
[ 18 ] Q . V . Le , R . M . MarcAurelio Ranzato , K . C . Matthieu Devin , and J . D . Greg Corrado , ‚Äú Building high level features using large scale unsupervised learning , ‚Äù in ICML . ACM , 2012 , pp . 131‚Äì138 .
[ 19 ] H . Lee , C . Ekanadham , and A . Ng , ‚Äú Sparse deep belief net model for visual area v2 , ‚Äù NIPS , vol . 20 , pp . 873‚Äì880 , 2008 .
[ 20 ] C . Bishop , Pattern recognition and machine learning , 2006 . [ 21 ] D . Liu and J . Nocedal , ‚Äú On the limited memory bfgs method for large scale optimization , ‚Äù Mathematical programming , vol . 45 , no . 1 , pp . 503‚Äì 528 , 1989 .
[ 22 ] J . Nocedal and S . J . Wright , Numerical optimization . Springer Science+
Business Media , 2006 .
[ 23 ] C . Goller and A . Kuchler , ‚Äú Learning task dependent distributed representations by backpropagation through structure , ‚Äù in IEEE Int . Conf . on Neural Networks , vol . 1 .
IEEE , 1996 , pp . 347‚Äì352 .
[ 24 ] M . Halkidi , Y . Batistakis , and M . Vazirgiannis , ‚Äú On clustering validation techniques , ‚Äù Journal of Intelligent Information Systems , vol . 17 , no . 2 , pp . 107‚Äì145 , 2001 .
[ 25 ] Y . Hoshida , J . Brunet , P . Tamayo , T . Golub , and J . Mesirov , ‚Äú Subclass mapping : identifying common subtypes in independent disease data sets , ‚Äù PLoS ONE , vol . 2 , 2007 .
[ 26 ] L . van‚Äôt Veer , H . Dai , V . D . Vijver et al . , ‚Äú Gene expression profiling predicts clinical outcome of breast cancer , ‚Äù Nature , vol . 415 , no . 6871 , pp . 530‚Äì536 , 2002 .
[ 27 ] A . Su , M . Cooke , K . Ching et al . , ‚Äú Large scale analysis of the human and mouse transcriptomes , ‚Äù PNAS , vol . 99 , no . 7 , p . 4465 , 2002 .
[ 28 ] A . Rosenwald , G . R . Wright , W . Chan et al . , ‚Äú The use of molecular profiling to predict survival after chemotherapy for diffuse large b cell lymphoma , ‚Äù New England Journal of Medicine , vol . 346 , no . 25 , pp . 1937‚Äì1947 , 2002 .
[ 29 ] A . Bhattacharjee , W . Richards , J . Staunton et al . , ‚Äú Classification of human lung carcinomas by mrna expression profiling reveals distinct adenocarcinoma subclasses , ‚Äù PNAS , vol . 98 , no . 24 , p . 13790 , 2001 .
[ 30 ] Y . Cheng and G . Church , ‚Äú Biclustering of expression data , ‚Äù in ISMB , vol . 8 , 2000 , pp . 93‚Äì103 .
[ 31 ] S . Busygin , O . Prokopyev , and P . Pardalos , ‚Äú Biclustering in data mining , ‚Äù Computers & Operations Research , vol . 35 , no . 9 , pp . 2964‚Äì2987 , 2008 . [ 32 ] H . Zhao , L . Cloots et al . , ‚Äú Query based biclustering of gene expression data using probabilistic relational models , ‚Äù BMC Bioinformatics , vol . 12 , 2011 .
[ 33 ] F . Alqadah , J . S . Bader , R . Anand , and C . K . Reddy , ‚Äú Query based biclustering using formal concept analysis . ‚Äù
[ 34 ] B . Hanczar and M . Nadif , ‚Äú Precision recall space to correct external indices for biclustering , ‚Äù in ICML , 2013 , pp . 136‚Äì144 .
[ 35 ] D . Chakrabarti , S . Papadimitriou , D . Modha , and C . Faloutsos , ‚Äú Fully automatic cross associations , ‚Äù in SIGKDD , 2004 , pp . 79‚Äì88 .
[ 36 ] I . Dhillon , S . Mallela , and D . Modha , ‚Äú Information theoretic co clustering , ‚Äù in SIGKDD . ACM , 2003 , pp . 89‚Äì98 .
[ 37 ] H . Shan and A . Banerjee , ‚Äú Bayesian co clustering , ‚Äù in ICDM .
IEEE ,
2008 , pp . 530‚Äì539 .
[ 38 ] M . Shafiei and E . Milios , ‚Äú Latent dirichlet co clustering , ‚Äù in ICDM .
IEEE , 2006 , pp . 542‚Äì551 .
[ 39 ] G . Bisson and C . Grimal , ‚Äú Co clustering of multi view datasets : a parallelizable approach , ‚Äù in ICDM .
IEEE , 2012 , pp . 828‚Äì833 .
[ 40 ] A . Painsky and S . Rosset , ‚Äú Exclusive row biclustering for gene expresIEEE , 2012 , sion using a combinatorial auction approach , ‚Äù in ICDM . pp . 1056‚Äì1061 .
[ 41 ] S . Wullf , R . Urner , and S . Ben David , ‚Äú Monochromatic bi clustering , ‚Äù in ICML , 2013 .
[ 42 ] E . Airoldi , D . Blei , S . Fienberg , and E . Xing , ‚Äú Mixed membership stochastic blockmodels , ‚Äù JMLR , vol . 9 , pp . 1981‚Äì2014 , 2008 .
[ 43 ] Z . Zhang , T . Li , C . Ding , X . Ren , and X . Zhang , ‚Äú Binary matrix factorization for analyzing gene expression data , ‚Äù Data Min Knowl Disc , vol . 20 , pp . 28‚Äì52 , 2010 .
[ 44 ] P . Miettinen and J . Vreeken , ‚Äú Model order selection for boolean matrix factorization , ‚Äù in SIGKDD . ACM , 2011 , pp . 51‚Äì59 .
[ 45 ] K . Kontonasios and T . De Bie , ‚Äú An information theoretic approach to finding informative noisy tiles in binary databases , ‚Äù 2010 .
