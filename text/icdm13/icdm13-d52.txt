2013 IEEE 13th International Conference on Data Mining
Linear Computation for Independent Social Influence
1School of Computer Science and Technology , University of Science and Technology of China
Qi Liu1 , Biao Xiang1 , Lei Zhang1 , Enhong Chen1,∗ , Chang Tan1 , Ji Chen2 {qiliuql,cheneh}@ustceducn , {bxiang,stone,tanchang}@mailustceducn
2Microsoft , One Microsoft Way , Redmond , WA 98052 , USA jich@microsoft.com
Abstract—Recent years have witnessed the increased interests in exploiting influence in social networks for many applications . To the best of our knowledge , from the computational aspect of social influence analysis , most of existing work focus on either describing the influence propagation process or identifying the set of most influential seed nodes . However , these work usually do not distinguish the “ independent influence ” of each single seed node after removing other seeds . Since it is important to quickly figure out the real contribution of each seed , in this paper we propose to measure the seed ’s independent influence model . Specifically , we first describe the linear social influence model , and then define the independent influence under this model for eliminating the “ mutual enrichment ” between seed nodes . Meanwhile , we find that the influence of a set of nodes is actually the sum of their independent influence , and we also give upper bounds for independent influence . Moreover , these findings are evaluated by two applications , ie , ranking the seeds by their independent influence and identifying the TopK influential ones . Finally , the experimental results on several real world datasets validate the effectiveness and efficiency of the proposed independent social influence measures . influence by a linear social
I . Introduction
Social networks have become very popular and they provide unparallel opportunities for understanding the human world and building novel applications . Thus , there is much research on social network analysis [ 1 ] . Indeed , tremendous efforts have been made to analyze and exploit the social influence between individuals for marketing , advertisement , recommendations , and so on [ 2 ] .
Social influence , as an intuitive and well accepted phenomenon , refers to the behavioral change ( eg , opinions , decisions ) of individuals ( nodes ) affected by others in a network . From the computational aspect ( ie , qualitatively or quantitatively measuring the social influence ) , two of the major research interests are modelling influence propagation and locating the set of most influential seed nodes by social influence computation . Actually , several models [ 3 ] , [ 4 ] , [ 5 ] have been provided to describe the dynamics of influence propagation , and among them , Independent Cascade ( IC ) model [ 4 ] is one of the most popular and widely used models . However , it is usually hard to directly apply traditional influence models , like IC model , for social influence computation , since they are step by step algorithms and thus
∗
Contact Author .
1550 4786/13 $31.00 © 2013 IEEE DOI 101109/ICDM201348
468 are very time consuming for large scale social networks . Considering that we are often interested in finding the set of most influential nodes ( called as a set of seeds ) for social influence maximization , several greedy ( eg , CELF [ 6 ] ) and heuristic ( eg , DegreeDiscount [ 7 ] , PMIA [ 8 ] and IRIE [ 9 ] ) approaches based on existing influence models have been proposed to improve the computational efficiency of the social influence maximization . Generally , existing approaches first claim an influence model , and then aim at finding a set of seed nodes by measuring their total influence , and finally use the seeds with a maximal influence for further applications , eg , viral marketing [ 8 ] .
However , to the best of our knowledge , few of scholars pay attention to the problem of efficiently measuring the independent social influence of these selected seed nodes . Here , we define the independent social influence of one node as its influence after removing others from the seed set ( this seed set may be selected manually or by above algorithms , eg , CELF ) . Intuitively , it is very important to figure out the real contribution ( independent influence ) of each seed node . For instance , the system in viral marketing could pay for the seeds based on their independent influence , or remove the less influential seeds from the seed set according to the budget . To that end , we propose to quickly measure each seed ’s independent influence by a linear social influence model that was preliminarily introduced in [ 10 ] . Specifically , we first describe the linear model , and then define the independent influence for eliminating the “ mutual enrichment ” between seed nodes . Meanwhile , we find two properties of the independent influence under this definition . The first property is that the influence of a set of nodes is actually the sum of their independent influence . The second property is that the independent influence of each single seed is no bigger than its original influence . Moreover , we evaluate these properties by two applications , ie , ranking the seeds by their independent influence and identifying the Top K influential seeds from the seed set . Finally , the experimental results validate the effectiveness and efficiency of the proposed independent social influence measures . Our main contributions can be summarized as follows . • We propose the idea of efficiently measuring the independent social influence of each selected seed . Along this line , we formalize this computation problem under a linear social influence model .
• We provide two properties for the defined independent influence : the influence of a set of nodes is the sum of their independent influence ; each node ’s original influence is the upper bound of its independent influence . • The extensive experiments demonstrate that linear computation could efficiently and effectively rank the seeds by their independent influence , and the upper bounds could be used for quickly finding the nodes with the highest independent influence from the seed set .
The rest of this paper is organized as follows . Section II introduces the related work . In Section III , we present the linear social influence model and the measurement of independent social influence in detail . Section IV first demonstrates the two properties of the independent influence , and then applies independent influence for two applications . In Section V , we show the experimental results . Finally , Section VI concludes this paper .
II . Related Work
Several different kinds of research issues have been proposed in the context of social influence analysis [ 2 ] . The first issue is the measurement of the influence between two neighbor nodes in a social network . For instance , Anagnostopoulos et al . [ 11 ] differentiate social influence from homophily or confounding variables by proposing the shuffle test and edge reversal test . Goyal et al . [ 12 ] propose a model to learn the probabilities on social edges from a log of actions by the users . Moreover , Steeg et al . [ 13 ] introduce content transfer , an information theoretic measure with a predictive interpretation to directly quantify the strength of the influence effect of one social user ’s content on another ’s . The second and a central problem is to describe the dynamics of influence propagation in social networks [ 3 ] , [ 4 ] , [ 5 ] , [ 14 ] , [ 8 ] , [ 15 ] . Among existing models , the idea of Independent Cascade ( IC ) model [ 4 ] and Linear Threshold ( LT ) model [ 5 ] are widely used . For instance , in IC model , the activated/influenced nodes have a single chance to influence their neighbors independently with a probability . This iterative propagation process will not stop until there is no newly influenced node . The IC model where each link shares the same propagation probability is called the Uniform IC Model , and the one with edge weights is called the Weighted Cascade ( WC ) Model [ 16 ] . Researchers have proved that the influence spread ( ie , the expected number of nodes that will be influenced ) computation under IC model is #P hard [ 8 ] . As an alternative , Monte Carlo simulation , which is verytime consuming , is employed to approximately calculate influence . Recently , Yang et al . propose GS ( Gauss−S eidel ) algorithm for quick approximation of influence spread under IC model by solving a linear system [ 17 ] .
The third research goal is to apply social influence and social influence models to the real applications . For instance , by exploiting social influence , Li et al . propose IPRank algorithm for ranking both individuals and groups [ 18 ] , and
2
5
1
4
6 tij
3 j i
7
Figure 1 . An example directed network .
Yang et al . design a recommendation to provide guidance for a social user to systematically approach his friending target [ 19 ] . Actually , one of the most important application for social influence is viral marketing , and the research problem can be summarized as finding a set of seed nodes which will influence the maximal number of individuals in the social network for maximizing the word of mouth propagation of one product . Along this line , both greedy and heuristic approaches have been proposed . For instance , for finding a set of nodes for social influence maximization , Leskovec et al . design the cost effective lazy forward ( CELF ) optimization [ 6 ] by taking advantage of submodularity property to reduce the number of searched nodes , and Chen et al . propose both the Degree Discount heuristic and the Maximum Influence Path heuristic exploiting the local structures of each node [ 7 ] , [ 8 ] . However , to the best of our knowledge , the problem of measuring the independent social influence of each selected seed remains pretty much open .
III . Independent Social Influence
In this section , we first introduce the linear social influence model [ 10 ] which is both tractable and efficient . Then , we define the independent influence under this model . Assume that G = ( V , A , T ) is a network ( as shown in Figure 1 ) , where V = {1 , 2 , , n} is the node set and edge set A represents all the connections between nodes . T = [ ti j]n∗n is a transmission matrix for influence propagation , ti j represents the propagation probability from node i to node j . If there is an edge from j to i in A ( ie , j trusts i ) , then ti j > 01 , otherwise ti j = 0 . Since learning the non zero ti j [ 12 ] is beyond the scope of this paper , we assume they ti j ≤ 1 [ 17 ] . Here , G is assumed to are known and usually be directed , as influence propagation is specific to direction in the most general case [ 14]2 . For better illustration , Table I shows some other math notations used in this paper . n . i=1
A . Linear Social Influence Model
Formulation . In the literature of influence propagation , there are two well known assumptions [ 4 ] , [ 5 ] : ( 1 ) if one is the initiator of something ( eg opinion ) , he/she will spread that with 100 % probability ; ( 2 ) otherwise , this probability will depend on his/her neighbors’ influence . Following them , we could propose an influence model as :
1If j trusts i , then i influence j . 2The proposed techniques can be applied to undirected networks .
469
Several important mathematical notations .
Table I
Description influence from node i to j total influence from i to the nodes in set T influence vector for node i parameter , the damping coefficient of node j vector , νi,i is used to guarantee fi→i = 1 represents ( I − dT ff
−1 , with each
) entry pi j , each column P·i pki vector , where pi = n . k=1 the nodes in S where node i is excluded influence from node i to j ( independent from other nodes in S ) independent influence from i to the nodes in set T independent influence vector for node i is used to guarantee f S\{i} vector , i ∈ S and νS\{i} i→i matrix , removing the rows and columns corresponding to the members in S\{i} from T i,i
= 1 entry Γi j , each column Γ·i
Notations fi→ j fi→T fi d j νi P p S\{i} f S\{i} i→ j f S\{i} i→T fS\{i} νS\{i} i i T
S iS i Γ
Definition 1 : Denote the influence from node i to j by fi→ j , then fi→i = 1 , fi→ j = d j fi k∈N j tk j fi→k , f or j . i ,
( 1 ) ( 2 )
. j∈T where N j = { j1 , j2 , jm} is j ’s trust friends set ( ie , ∀k ∈ N j , there is a connection ( j , k ) ∈ A ) . The major difference of this definition from the traditional models is that we assume the influence flowing to node j is proportional to the linear combination of the influence to j ’s neighbors ( see Equation ( 2) ) . Thus , the computation of influence will be in a linear efficient way . Here , the parameter d j is the damping coefficient of j for the influence propagation3 . It locates in range [ 0 , 1 ] , and the smaller d j is , the more influence will be blocked by node j . For simplicity , we choose the same d for each node . Similarly , we denote fi→T = fi→ j as the influence spread from node i to a set of nodes T ; that is , it stands for the total influence to the entire network if T = V . Influence Computation . Under the above model definition , we can solve the influence spread vector fi = [ fi→1 , fi→2 , fi→n ] for each node i as follows . First , we can rewrite Equation ( 1 ) and Equation ( 2 ) as fi + νi = ( I − dT ff
( 3 ) ( 4 ) where νi = [ 0 , 0 , , νi,i , 0 ] is a vector with only the i th entry νi,i nonzero ; that is , νi,i should be equal to a number to guarantee fi→i = 1 as described in Equation ( 1 ) . In this equation , ( I − dT ) is invertible because its transpose is strictly diagonally dominant , and n∗n matrix P = ( I−dT −1 . As νi is a vector with only νi,i nonzero , Equation ( 4 ) could be rewritten as fi = νi,iP·i . Specifically , fi→i = νi,i pii , with Equation ( 1 ) , we could get ff fi = dT = Pνi ,
−1νi
)
) ff ff ff ff
νi,i =
,
1 pii and thus , fi =
P·i pii
.
( 5 )
3Which is similar to that in PageRank [ 20 ] .
470 nfi j=1 n . ffe =
Since P is a positive definite matrix , pii > 0 . Then , the total influence from node i to the entire network G should be fi→V = f ff ie = fi→ j =
1 pii p ji =
, pi pii
( 6 ) nfi j=1 j=1 where pi = ( P·i ) p ji . Given parameter d , and the influence transmission matrix T , to get the influence vector fi , we only need to compute the i th column of P ( P·i ) , which can be computed in O(|A| ) since P −1P·i = ei is a linear system and it satisfies the Gauss Seidel condition . The computation process is shown in Algorithm 1 , where the i th entry in ei ( ei,i ) is 1 , otherwise , 0 .
Algorithm 1 : Gauss Seidel : ( I − dT input : T , d , i output : P·i=[p1i , , pni ] for ( j=0;j<n;j++ ) do ff
: the i th column of P . ff
)P·i = ei for P·i
= 0 ; //Initialization p(0 ) ji iter=0 ; while NOT Converge do for ( j=0;j<n;j++ ) do j−1 . p(iter+1 ) ji
= ( ei , j + dtk j p(iter+1 ) ki
+ n . k= j+1 dtk j p(iter ) ki
) ; k=1 iter++ ; return P·i
Relationships with Traditional Models . Actually , in this paper , we use a specialization of the linear influence model proposed in [ 10 ] with the prior probability αi = 1 for each node , and this linear model has close relationship with the traditional ones . For instance , it is easy to prove that the linear approximation method for the IC model [ 17 ] is actually a specialization of our linear model when d = 1 . Also , the non linear stochastic model [ 14 ] can be well approximated by this model when d ∈ ( 1 , 1 ] . Finally , it is worth noting that both PageRank and our model are random walk based methods , while in PageRank fi→i = pii ( a value for quick computation ) rather than 1 , and the detailed proof and explanations could be found in [ 10 ] .
2
B . Independent Social Influence Computation
Definition . One drawback when applying the influence model illustrated in Section III A is that it does not consider the “ mutual enrichment ” and “ influence overlap ” of different nodes . For instance , in a scientific collaboration network , if node ( researcher ) i is a close collaborator of j , and j is one of the most influential researcher in the network . Though i has limited influence herself , with the help of j ( ie , some of j ’s influence will flow to i ) , the computed influence of i will be much higher than its real value .
However , it seems hard to compute the real independent influence , since influence is always spread with the help of others . Even though , given a node set S and a node i ∈ S , it is still possible to evaluate the independent influence f S\{i} i→ j from node i to j , independent from other nodes in S , ie , S\{i} . Based on the linear model , it could be defined as : Definition 2 : Denote the independent influence from node i to j ( independent from other nodes in S , and i ∈ S ) by f S\{i} i→ j , then f S\{i} i→i f S\{i} i→ j f S\{i} i→ j
= 1 , = 0 , fi
= d kfiS j ∈ S & j . i , tk j f S\{i} i→k
, j fi S .
( 7 ) ( 8 )
( 9 ) f S\{i} i→ j
. j∈T
From this definition we can see that is essentially the influence of i when other nodes of S are “ removed ” from the network , ie , these nodes stop receiving and forwarding the information from i . Similarly , the independent influence spread from node i to a set of nodes T could be denoted as f S\{i} i→T f S\{i} i→ j .
=
Independent Influence Computation . Similar to the influence computation illustrated in Section III A , the independent influence spread vector fS\{i} , f S\{i} ff i→n ] for node i could be computed as follows . First , we rewrite the equations in Definition 2 and have
= [ f S\{i} i→1
, f S\{i} i→2 i fS\{i} i
= ( I − dT ff S iS i )
−1νS\{i} i
,
( 10 ) i ff
, 0 ]
4where TS iS i is the matrix reduced from T by removing it ’s rows and columns corresponding to the members in S\{i} , = [ 0 , 0 , , νS\{i} and νS\{i} is a vector with only the i th entry νS\{i} should be equal to a number to guarantee f S\{i} i→i = 1 . We could find Equation ( 10 ) is similar to Equation ( 3 ) , and thus independent influence can be solved in the same way as shown in Section III A . Specifically , if we denote Γ = ( I − dT nonzero , ie , νS\{i}
−1 , then i,i i,i i,i ff S iS i ) fS\{i} i
,
Γ·i = Γii fi
νS\{i} i,i
=
1 Γii = ( fS\{i}
) i f S\{i} i→V
, and thus , ff e = fi j∈V−S f S\{i} i→ j
=
1 Γii
Γ ji . j∈V−S
( 11 )
( 12 )
IV . Properties and Applications
In this section , we first demonstrate two properties of the proposed independent influence . With the help of these properties , we then apply independent influence to two possible applications .
A . Properties
Total Influence and Independent Influence . Following the definition in Section III A , total influence spread from a
4Note that the dimension of both fS\{i} n − |S| + 1 , since for ∀ j ∈ S and j . i , f S\{i} i i→ j and νS\{i} = 0 and νS\{i} i i , j can be viewed as =0 . node set S 5 to the network is fS→V = fS→k , and the influence ff spread vector fS = [ fS→1 , fS→2 , fS→n ] could be solved by fS + νS = ( I − dT ff
−1νS
) ff
. k∈V fS = dT = PνS ,
( 13 ) ( 14 ) ff where νS = [ 0 , 0 , , νS,i , 0 ] is a vector with only the entries νS,i ( i ∈ S ) nonzero ; that is , νS,i should be equal to a number to guarantee fS→i = 1 . Equation ( 14 ) could be solved the same as Equation ( 4 ) . In this way , a single influence value fS→V is output , but it can not distinguish the contribution from each single node in S .
Actually , by the following theorem , we could find that this total influence ( fS→V ) is the sum of each single node ’s f S\{i} i→V ) . independent influence ( Theorem 1 : For ∀k ∈ V , fS→V = fS→k = and thus f S\{i} i→k
. i∈S
. i∈S f S\{i} i→V .
Proof : First , we define an auxiliary function as g(a ) =
[ g1(a ) , g2(a ) , gn(a ) ]
, where a = [ a1 , a2 , , a|S| ] ff
. i∈S gi(a ) = ai , g j(a ) = d fi k=1 i ∈ S , tk jgk(a ) , j fi S , ff and
( 15 ) ( 16 ) ff ff
From Appendix 1 , we could prove that g(a + b ) = g(a ) + g(b ) and gk(a + b ) = gk(a ) + gk(b ) , where b is another vector with size equals to |S| . In the following , denote e = [ 1 , 1 , , 1 ] as a vector with |S| entries . Also , we choose another |S| vectors with sizes equal to |S| , eg , e1 = [ 1 , 0 , , 0 ] and e|S| = ff . Thus , e = e1 + e2 + + e|S| . In this way , g(e ) = [ 0 , 0 , , 1 ] g(e1 ) + g(e2 ) + + g(e|S| ) and gk(e ) = gk(e1 ) + gk(e2 ) + + gk(e|S| ) . According to the definition , gk(e ) = fS→k and gk(ei ) = f S\{i} i→k . Thus , fS→k = Since fS→V = . fS→V = i∈S f S\{i} i→k holds . . fS→k , we could get . . k∈V f S\{i} i→k = i∈S k∈V
. i∈S . = i∈S
, e2 = [ 0 , 1 , , 0 ] f S\{i} i→V . f S\{i} i→k
. k∈V ff the
Upper Bounds . Given node set S , we find that i→V , i ∈ S ) is no independent influence for each node i ( f S\{i} bigger than its original influence ( fi→V ) , and the original n . influence is no bigger than pi = ≤ fi→V ≤ pi
Theorem 2 : f S\{i} i→V for ∀ j ∈ V . From Definition 1 , there is
Proof : First , let us prove f S\{i} i→V
≤ fi→V by f S\{i} i→ j
≤ fi→ j pki . k=1 fi→i = 1 fi→ j = d fi k∈N j tk j fi→k , f or j . i .
5Here is a node set but a single node .
471 which could be transformed into the following equivalent formation fi→i = 1 , fi→ j = d fi→k = d fi l∈N j fi l∈Nk tl j fi→l = a j , f or j ∈ S & j . i , tlk fi→l , f or k fi S , i i i i
.
=
+ ( g(ai ) − g(ei ) ) = fS\{i}
= g(ei ) . Then , we have + g(aff ff ≥ 0 . Since g(aff where a j must be a number no less than 0 ( for d , tl j and fi→l are all no less than 0 ) . Following the notations in Theorem ff6 . 1 , there is fi = g(ai ) , where ai = [ a1 , a2 , ai = 1 , a|S| ] Meanwhile , fS\{i} fi = fS\{i} i ) , where aff ai − ei = [ a1 , a2 , ai = 0 , a|S| ] i ) ≥ g(0 ) = 0 , fi ≥ fS\{i} That is ∀ j ∈ V , fi→ j ≥ f S\{i} fi→V ≤ pi can be proved in the following way . Second , )fi = νi . Thus By Equation ( 4 ) , we have P 1 − d Since both tki ≥ 0 and fi→k ≥ 0 , we can get νi,i ≤ 1 . Meanwhile , as fi→k = pkiνi,i , fi→k ≤ pki . n . fi→k ≤ pi holds . Thus , ≤ fi→V ≤ pi holds . In this way , f S\{i} i→V
−1fi = ( I − dT k.i tki fi→k = νi,i . i→ j holds . fi→V =
. k=1 ff i
O(|S||A| ) . Finally , we can better understand each seed , eg , by ranking them based on their independent influence .
Top K Influential Seeds Identification . In some scenarios , the seed set S is usually very large , and at this time we are more interested in the seeds at both ends , ie , finding the Top K or Bottom K independent influential seeds from S . Actually , in this paper , we focus on quickly identifying the Top K influential seeds , and leave the Bottom K identification problem for future work .
The most straightforward way to select the Top K influential seeds is computing the independent influence for each seed , and then ranking them . However , as illustrated before , this will take O(|S||A| ) for our linear definition , and much more time consuming for IC model . Luckily , Theorem 2 provides two upper bounds for independent influence , and one of them can be used to develop an efficient algorithm . ff Specifically , the vector p = P contains the upper bounds ( eg , p j ) for all the seeds7 , and it could be finished in O(|A| ) by the Gauss Seidel method . This computation is also similar to Algorithm 1 except that we will solve e = [ p1 , , pn ] ff
−1p = e and P=(I− dT ff
( 17 ) ff −1 . It is worth noting that the as ( P computation of PageRank values follows the same procedure and time complexity .
)
)
( I − dT)p = e ,
B . Applications
Given a set of seed nodes S ( eg , the seeds selected by CELF [ 6 ] or PMIA [ 8 ] for viral marketing ) , we could evaluate the proposed independent influence computation by a number of applications . With the help of the above two properties , in this paper , we choose two of the most important and intuitive ones : rank the seeds based on their independent influence , and quickly find the Top K influential seed nodes from S .
Seeds Ranking . From Theorem 1 , we can see that the influence of set S is actually the sum of each node ’s independent influence , which means the system or the agent could figure out influence contribution of each selected seed . Thus , the system can rank and pay the seeds based on their independent influence , or further remove the ones which borrow lots of influence from other seeds in current seed set . the real
Specifically , these independent influence could be computed by Equation ( 11 ) and Equation ( 12 ) . Let ’s take the node i ∈ S as an example . For computing i ’s independent inand fS\{i} fluence , we first compute the νS\{i} in Equation ( 11 ) by the Gauss Seidel method , which is similar to Algorithm 1 in O(|A| ) except that we will solve ( I− dT S iS i)Γ·i = ei at this time . Then , the independent influence of i , f S\{i} i→V , could be summarized by Equation ( 12 ) . Under the linear definition , the above procedure could be run for all the nodes in S in i,i ff i
6Without loss of generality , we set S = {1 , 2 , |S|}
472
Then , these upper bounds are used to save computations , and the entire framework is shown in Algorithm 28 . In a nutshell , if we only have to compute the independent influence value for N seeds ( ie , we have to search for N candidate nodes ) , the time complexity of Algorithm 2 is O((N +1)|A| ) . From the experiments , we can see that usually N << |S| when K is small , which means our upper bounds are effective .
V . Experimental Results
In this section , we provide empirical validation on several networks . Specifically , we demonstrate : 1 ) Two case studies , which illustrate that it is important to distinguish the independent influence of each node i by removing other seeds ie , S\{i} ; 2 ) The effectiveness and efficiency of our method on ranking the seeds by independent influence computation ; 3 ) The effectiveness of our upper bound for quickly identifying the Top K influential seeds ( ie , Algorithm 2 ) .
A . Experimental Setup
We conduct experiments on the following five datasets : • MovieLens is a movie consumption network [ 21 ] that we constructed from the MovieLens dataset9 ;
• Polblogs is a network showing the links between politi cian blogs [ 22 ] ;
7Actually , the upper bounds of other nodes can be also computed . 8This way of using upper bounds is similar to that in [ 10 ] . 9http://wwwgrouplensorg/node/73
Algorithm 2 : Top K Independent Influential Seeds Identification input : G = ( V , A , T ) ; d is the damping factor ; S is the given set of seed nodes ; K is number of the most influential seeds . output : SK : Top K independent influential seeds . SK=∅ ; ff Compute p = [ p1 , , pn ] for each node i in S do in O(|A| ) ;
//Equation ( 17 )
// Upper bound
Ui = pi ; IsBoundi = T rue ; while |SK| < K do
Find node i with the biggest Ui in S ; if IsBoundi == T rue then for all ks in O(|A| ) ;
= Γki Γii )Γ·i = ei by Algorithm 1
Compute f S\{i} i→k //Solve ( I − dT ff Ui = f S\{i} S iS i i→V ; //Equation ( 12 ) IsBoundi = False ; else
'
SK = SK i ; Ui =MINIM ; return SK ;
//Eg , 0
Table II
Statistics of five networks .
Networks #Nodes #Edges/Arcs 312,400
MovieLens Polblogs DBLP DM Epinion Amazon 262,111 1,682
1,490 19,090
53,872 160,968
75,879 508,837 1,234,877
• DBLP DM is a scientific collaboration network from DBLP10 . We select the research papers published before Jan . 2013 in several typical top ranked journals ( eg , DMKD,TKDE ) and conferences ( eg , KDD , ICDM , SDM ) in data mining , and the authors are used as nodes to construct the scientific collaboration network ;
• Epinion11 is a who trust whom online social network of a general consumer review site Epinions.com ;
• Amazon12 is a co purchase network of the products from Amazoncom
Some basic statistics about these directed networks are given in Table II . Note that we use MovieLens and Polblogs mainly for case studies , since they are comparably small and the time consuming greedy algorithm CELF could be finished quickly . For experiments , the transmission matrix T is set the same as the transmission matrix of WC model [ 16 ] , ie , ti j on edge( j , i ) equals to Weight(A ji ) OutWeight( j ) . Benchmark Methods . In the following , we call our method as Linear , and we compare Linear with several benchmark methods :
10http://dblpuni trierde/xml/ 11http://snapstanfordedu/data/soc Epinions1html 12http://snapstanfordedu/data/amazon0302html
473
• Degree measures the independent influence based on the node ’s degree or its DegreeDiscount value [ 7 ] . Each time the best result of these two metrics are chosen for comparison .
• InfluenceRank is a method recently proposed in [ 9 ] , where the independent influence is measured by the InfluenceRank value .
• PageRank [ 20 ] measures the independent influence of each node by the independent PageRank value .
For computing the independent influence , all the benchmarks are run after removing the given nodes ( S\{i} ) from the network . Note that , to the best of our knowledge , none of these benchmarks follow the similar properties that we have found in Linear ( ie , Theorem 1 and Theorem 2 ) .
The following experiments are conducted on the same platform . For the purpose of comparison , we record the best performance of each algorithm by tuning their parameters , eg , the damping factor d in InfluenceRank , PageRank and Linear is set to be 0.85 , and the propagation probability p = 0.01 for DegreeDiscount [ 7 ] .
Evaluation Metrics . Since it is hard for measuring the real influence of each node , we refer to the result output by WC model [ 16 ] as the ground truth . The major reason is that as a kind of IC model , WC model is the most widely accepted influence computation model , and it could simulate the real world influence propagation process more accurately than the Uniform IC Model [ 17 ] . Specifically , we run MonteCarlo simulation under the WC model for sufficiently many ( ie , 20,000 ) times , and each time we sum up the influence spread ( ie , the expected number of nodes that will be influenced ) on the network , then the average influence spread is used for estimating the real influence . Meanwhile , for making more meaningful and persuasive illustrations , in this paper we mainly focus on evaluating the node ranking of each method based on their output independent influence . In other words , the better methods could output the ranking list more similar to that output by WC model .
B . Case Studies
In this section , we use two case studies to illustrate the importance of measuring independent influence . Specifically , the first case study illustrates that if we select a set of seeds S for viral marketing , the contribution ( independent influence ) of each single seed is quite different . The second case study illustrates that the seed ’s independent influence is affected by other seeds ( ie , S\{i} ) . Case Study 1 . In this case study , we first use CELF method ( a greedy algorithm based on IC model ) [ 6 ] to select a set of seed nodes ( ie , |S| = 8 ) for viral marketing . Then we show the percentage of the independent influence of each seed in this set . Also , we re rank the seeds based on their independent influence computed by WC model and Linear model , respectively . This experiment is performed on two small datasets MovieLens and Polblogs , since CELF is very
Data
MovieLens
Polblogs
Case study of the seed set ( Top 8 ) in MovieLens ( Movie Name ) and Polblogs ( Node Id ) .
Table III
Rank 4 Contact
Rank 1
The English Patient
Rank 2 Scream
Alg . CELF WC The English Patient(59.1 ) Contact(54.8 ) Scream(52.4 ) Titanic(49.8 ) Star Wars(51.7 ) Liar Liar(49.6 ) The Saint(45.3 ) Twelve Monkeys(44.6 ) Linear The English Patient(34.9 ) Contact(31.3 ) Star Wars(30.1 ) Scream(29.6 ) Titanic(28.1 ) Liar Liar(27.9 ) The Saint(25.0 ) Twelve Monkeys(24.1 ) CELF WC Linear
1050(37.8 ) 1050(30.0 )
1152(52.0 ) 1152(40.1 )
978
54(42.6 ) 54(33.7 )
1050
999(35.0 ) 999(26.7 )
962
962(87.0 ) 962(84.1 )
999
978(33.2 ) 978(26.4 )
154
154(79.7 ) 154(63.9 )
54
640(42.9 ) 640(34.2 )
Rank 3 Star Wars
Rank 6 Liar Liar
Rank 7
Twelve Monkeys
Rank 8 The Saint
Rank 5 Titanic
1152
640
The
English Patient Patient 15 %
The Saint
11 %
Twelve Monkeys
11 %
Liar Liar
12 %
Titanic Titanic 12 %
Contact
13 %
Scream
13 %
Star Wars
13 %
TheThe
English Patient 15 % 15 %
The Saint
11 %
Twelve Twelve Monkeys
10 %
Liar Liar
12 % 12 %
Titanic 12 %
Contact
14 % 14 %
Scream
13 %
Star Wars
13 % 13 %
( a ) WC model
( b ) Linear model
Figure 2 . The independent influence pie graph of Movielens seeds .
999 9 %
1050 9 %
962 21 % 21 %
999 8 %
1050 9 %
640 640 11 %
978 8 %
640 10 %
978 978 7 %
154 154 19 %
54 54 10 %
1152 13 %
54 54 10 %
1152 12 %
962 25 % 25 %
154 19 %
( a ) WC model
( b ) Linear model
Figure 3 . The independent influence pie graph of Polblogs seeds . time consuming . The final results are shown in Table III and Figure 2 and Figure 3 , respectively .
For each dataset , the first row in Table III are the seeds selected by CELF , and the rank orders of these seeds are also given . Then , the second and the third row rank these seeds based on their independent influence ( f S\{i} i→V , the number in each bracket ( . ) of this specific seed ) computed by WC model and linear model , respectively . Let ’s take MovieLens as an example , we can see the seeds selected by CELF are well known movies and they cover a number of movie genres . Thus , they may lead to the maximization of influence spread . However , the rank of the nodes based on their independent influence ( independent from other seven seeds ) is quite different from the CELF selection . For instance , movie “ Contact ” is actually more influential ( Rank 2 ) under both WC model and Linear model . Meanwhile , we could see that the ranking lists of WC model and Linear model are quite similar . For deeper understanding , we quantify each node ’s independent influence , and normalize them into pie graphs13(Figure 2 and Figure 3 ) . From these two figures we have the following interesting observations : First , the independent influence varies a lot for different seeds . This implies that the seed set S selected by CELF can not guarantee that each seed is useful , and it is necessary to
13It is worth noting that the total influence and independent influence output by WC model do not follow Theorem 1 . figure out the seed ’s real influence ; Second , the pie graphs got by WC model and Linear model are quite similar to each other , ie , the Linear estimation is consistent with the estimation of WC model . independent
Case study 2 . This is an even more straightforward yet complex case study , where the most influential and independent influential nodes in two datasets ( MovieLens and DBLP DM ) are illustrated . In this case study , we first use different methods ( ie , WC , Linear , Degree , InfluenceRank , PageRank ) select the Top 8 influential nodes . Then , we manually choose two set of nodes ( 5 movies or researchers as S\{i} ) from each dataset and find the most influential nodes independent from the nodes in these two sets . The final results are illustrated in Table IV and Table V . In the first five rows ( row 1 5 ) of each table are the most influential nodes ( at this time S\{i} = ∅ , ie , S = {i} ) selected by each method , and row 6 10 and row 11 15 are the most influential nodes with respect to two seed sets , respectively . Let ’s take Table V as an example , all the researchers in first five rows are famous researchers . Though the algorithms are quite different from each other , the influential researchers determined are quite similar . Meanwhile , the researchers’ independent influence is affected by the given seeds ( S\{i} ) . It is hard to find useful information in row 6 10 and row 11 15 at the first glance , however , some interesting observations could be explained . For instance , in our collected data , both Dr . Ming Syan Chen and Dr . Charu C . Aggarwal have close collaboration with Dr . Philip S . Yu , thus when Philip S . Yu is chosen in the given seed set , the independent influence of Ming Syan Chen and Charu C . Aggarwal is affected a lot ( this can be seen from their ranking orders in row 6 10 ) . In contrast , when MingSyan Chen and Charu C . Aggarwal are included in the given seed set , Philip S . Yu will lost some independent influence ( row 11 15 ) . In summary , this case study illustrates that the nodes’ independent influence is affected by other nodes in the seed sets , and the closer the nodes the more influence will be lost . Meanwhile , different algorithms output different node ranking lists , since they compute independent influence following different strategies .
C . Independent Influence Computation
In this section , we present the performance comparison on seeds ranking by independent influence computation between Linear and the benchmark methods . Specifically , we first generate a seed set S by randomly selecting given number ( |S|=20 , 40 , 60 or 80 ) of seeds from the Top
474
Given ( S\{i} )
{Star Wars Liar Liar Contact Fargo {Scream
The English Patient}
Air Force One
Titanic
Toy Story
Return of the Jedi}
Most Influential or Independent Influential ( Given two different sets ) Nodes ( Movies ) in MovieLens .
Table IV
Rank 4 Liar Liar Scream
Rank 3 Star Wars Star Wars
Rank 5 Fargo Fargo
Fargo
Star Wars Star Wars
Return of the Jedi
Fargo Scream
Liar Liar Scream Fargo
Rank 6 Scream Titanic Scream Titanic Titanic
Rank 1
Alg . WC Linear Degree
Rank 2 The English Patient Contact The English Patient Contact Contact InfluenceRank The English Patient Contact PageRank The English Patient Contact
Star Wars
WC Linear Degree
Scream Scream
Titanic Chasing Amy LA Confidential Air Force One Titanic Air Force One The Fully Monty LA Confidential Return of the Jedi
The Fully Monty Return of the Jedi
InfluenceRank
PageRank
Scream Scream
Return of the Jedi Scream
Toy Story
The Godfather Titanic Return of the Jedi The Full Monty LA Confidential Air Force One Titanic Air Force One
Twelve Monkeys Air Force One
WC Linear Degree
The English Patient Contact The English Patient Contact Contact InfluenceRank The English Patient Contact PageRank The English Patient Contact
Star Wars
Star Wars Star Wars
Fargo Fargo
Star Wars
Fargo
Fargo
Liar Liar
The Full Monty LA Confidential Return of the Jedi The Fully Monty The Fully Monty The English patient Twelve Monkeys The Fully Monty The Fully Monty
Liar Liar Star Wars
Liar Liar Liar Liar
Liar Liar
Fargo
Rank 7
LA Confidential
Liar Liar
The English Patient
Liar Liar Liar Liar
Chasing Amy
Independent Day(ID4 )
Twelve Monkeys
Chasing Amy
LA Confidential LA Confidential
The Godfather
LA Confidential LA Confidential
Rank 8
Air Force One Air Force One
Toy Story
Return of the Jedi
Air Force One
Conspiracy Theory
Evita
Pulp Fiction The Godfather
Evita
The Game
Chasing Amy
Independence Day(ID4 )
Twelve Monkeys
Chasing Amy
Given ( S\{i} )
Most Influential or Independent Influential ( Given two different sets ) Nodes ( Researchers ) in DBLP DM . Rank 7 J . Pei J . Pei
Rank 4 H . Wang M . Chen
Eamonn J . Keogh
C . C . Aggarwal
E . J . Keogh
K . Wang
Rank 5
Rank 6
Table V
Alg . WC Linear Degree
InfluenceRank
PageRank
Rank 1 P . S . Yu P . S . Yu J . Han P . S . Yu P . S . Yu
Rank 3
Rank 2 C . Faloutsos J . Han J . Han C . Faloutsos P . S . Yu C . Faloutsos C . Faloutsos J . Han J . Han C . Faloutsos
WC Linear Degree
Q . Yang H . Mannila K . Wang PageRank H . Mannila Q . Yang
H . Mannila H . Kargupta V . Kumar K . Wang H . Mannila Q . Yang Z . Chen Q . Yang K . Wang P . S . Yu
C . Faloutsos
InfluenceRank M . Chen
WC Linear Degree
J . Han J . Han
C . Faloutsos
InfluenceRank
PageRank
J . Han J . Han
E . Bertino A . Gionis P . S . Yu C . Faloutsos E . J . Keogh J . Han E . J . Keogh H . Mannila P . S . Yu C . Faloutsos E . J . Keogh P . S . Yu C . Faloutsos E . J . Keogh
J . Pei
M . Chen M . Chen
J . Pei
E . Bertino H . Xiong
S . Parthasarathy
{P . S . Yu , J . Han C . Faloutsos
E . J . Keogh , H . Wang}
{M . Chen , J . Pei C . C . Aggarwal K . Wang , Q . Yang}
Q . Yang
E . J . Keogh E . J . Keogh P . Melville
S . Parthasarathy
H . Kriegel E . Bertino
S . Parthasarathy
E . J . Keogh H . Mannila H . Xiong E . Bertino H . Mannila
E . J . Keogh
K . Wang K . Wang T . Jiang V . Kumar M . J . Zaki H . Mannila V . Kumar T . Jiang E . Bertino
W . Fan
H . Mannila E . Bertino
K . Wang
J . Pei J . Pei N . Abe
H . Kriegel J . X . Yu
H . Kargupta H . Kriegel H . Mannila
T . Li
J . X . Yu
S . Parthasarathy
T . Li
Rank 8 K . Wang
C . C . Aggarwal
H . Mannila
C . C . Aggarwal C . C . Aggarwal
J . Sun M . Chen V . Kumar
J . Pei
M . Chen J . Wang P . Smyth H . Kriegel P . Smyth P . Smyth
WC Degree InfluenceRank PageRank Linear
100 nodes with highest degree . Then , we rank these seeds by Linear and the benchmarks , respectively . Finally , we compute and compare the Spearman correlations ( the bigger the better)14 between these rankings with the ground truth ( ie , 20,000 times Monte Carlo simulation of WC model ) . Meanwhile , we record the running time . With respect to each dataset , the above procedure will be run 4 times for each size of seed set , and the average results are used for final comparison .
The experimental results on DBLP DM , Epinion and Amazion are shown in Figure 4 , Figure 5 and Figure 6 , respectively . We could find the similar observations from these figures : For the effectiveness comparison , the rankings of Linear method have the highest Spearman Correlation values with the ground truth for most of the time , while Degree based methods perform the worst since the nodes with the highest degree may not be most influential and vice versa ; For the efficiency issue , we could see that it is most time consuming to run the WC model and our Linear method is as fast as PageRank , while degree based methods are very efficient since they only need to search the nodes once . In summary , Linear method could effectively and efficiently rank the seeds based on their independent influence .
D . Top K Influential Seeds Identification
In this section , we provide empirical validation on the second application , Top K independent influential seeds i
14http://enwikipediaorg/wiki/Spearman ’s rank correlation coefficient l n o i t a e r r o C n a m r a e p S
0.5
0.4
0.3
0.2
0.1
0
20
40
Degree InfluenceRank PageRank Linear
50
40
30
20
10
) c e S ( e m T i
60
80
Size of Seed Set
0
20
40
60 Size of Seed Set
80
( a ) Ranking result comparison
( b ) Running time comparison
Figure 4 .
Independent influence computation on DBLP DM . l n o i t a e r r o C n a m r a e p S
0.99
0.98
0.97
0.96
0.95
0.94
20
40
WC Degree InfluenceRank PageRank Linear
Degree InfluenceRank PageRank Linear
) c e S ( e m T i
250
200
150
100
50
0
20
40
60
80
Size of Seed Set
60
80
Size of Seed Set
( a ) Ranking result comparison
( b ) Running time comparison
Figure 5 .
Independent influence computation on Epinion . dentification from seed set S . The experimental setup is similar to that in Section V C : First , we generate a seed set S by randomly selecting given number ( |S|=20 , 40 , 60 or 80 ) of seeds from the Top 100 nodes with highest degree . Then , we identify the Top 10 ( ie , we fix K=10 )
475 l n o i t a e r r o C n a m r a e p S
1
0.96
0.92
0.88
0.84
0.8
20
40
WC Degree InfluenceRank PageRank Linear
Degree InfluenceRank PageRank Linear
) c e S ( e m T i
250
200
150
100
50
0
20
40
60 Size of Seed Set
80
60
80
Size of Seed Set
( a ) Ranking result comparison
( b ) Running time comparison
Figure 6 .
Independent influence computation on Amazon . independent influential seeds from each of these sets by Linear ( Algorithm 2 ) and the benchmarks . For comparing the effectiveness of each method , we compute the Jaccard similarity ( the bigger the better)15 of their outputs with the ground truth ( ie , Top 10 seeds output by the 20,000 times Monte Carlo simulation of WC model ) . Also , this procedure is run 4 times for each size of seed set on each dataset , and the average values are used for final comparison .
Besides computing the Jaccard similarity of the Top 10 seeds , we also compare each method ’s running time and the effectiveness of our proposed upper bounds in Algorithm 2 . Along this line , the experimental results on DBLP DM , Epinion and Amazion can be found in Figure 7 , Figure 8 and Figure 9 , respectively . For the Jaccard similarity comparison ( the leftmost subfigures ) , we can see that the most influential seeds identified by Linear have the largest overlaps with the ground truth , with the average Jaccard similarity value bigger than 079 For the running time comparison ( the middle subfigures ) , WC model and InfluenceRank are the most and second most time consuming algorithms . Among these algorithms , Degree is the fastest algorithm , however , to Top 10 seeds identification ( Figure 7(a ) , Figure 8(a ) and Figure 9(a) ) . Meanwhile , in this experiment Linear becomes much faster than PageRank , and this is due to the help of our upper bounds . More specifically , we demonstrate the effectiveness of our upper bounds by presenting the number of searched nodes ( ie , N ) for finding the Top 10 independent influential seeds in each seed set ( the rightmost subfigures ) . We can observe that this number is comparably small with respect to the size of the entire seed set , which also indicates that Algorithm 2 is scalable . it performs the worst with respect
VI . Concluding Remarks And Future Work
In this paper , we provided a focused study on measuring the node ’s independent influence by a linear social influence model . Along this line , we first presented the definition of linear social influence model and the independent influence in detail . Then , we found two properties of the proposed independent influence , ie , the influence of a set of nodes
15http://enwikipediaorg/wiki/Jaccard index
476
( this node set may be selected manually or by some algorithms , eg , CELF ) is actually the sum of their independent influence and the independent influence is no bigger than each seed ’s original influence . Moreover , we applied this independent influence computation for seeds ranking and quickly identifying Top K independent influential seeds from the seed set . Finally , an empirical study was conducted on five network datasets , and the results demonstrated the effectiveness and efficiency of the proposed independent influence measures .
This paper provides an introduction of the problem space in independent social influence analysis . The area is still in its infancy , and we anticipate that more techniques will be developed . Specifically , in the future , we plan to find more reasonable metrics on influence evaluation . Meanwhile , quickly identifying the Bottom K influential seeds and the topic sensitive [ 23 ] independent social influence computations are also possible directions for future research .
VII . Acknowledgements
The work described in this paper was supported by grants from Natural Science Foundation of China ( Grant No . 61073110 ) , Research Fund for the Doctoral Program of Higher Education of China ( Grant No . 20113402110024 ) , and National Key Technology Research and Development Program of the Ministry of Science and Technology of China ( Grant No . 2012BAH17B03 ) . Enhong Chen gratefully acknowledges the support of Huawei Technologies Co . , Ltd . ( Grant No . YBCB2012086 ) .
References
[ 1 ] C . C . Aggarwal , An introduction to social network data analytics .
Springer , 2011 .
[ 2 ] J . Sun and J . Tang , “ A survey of models and algorithms for social influence analysis , ” in Social Network Data Analytics . Springer , 2011 , pp . 177–214 .
[ 3 ] P . Domingos and M . Richardson , “ Mining the network value of customers , ” in SIGKDD . ACM , 2001 , pp . 57–66 .
[ 4 ] J . Goldenberg , B . Libai , and E . Muller , “ Talk of the network : A complex systems look at the underlying process of word of mouth , ” Marketing letters , vol . 12 , no . 3 , pp . 211–223 , 2001 .
[ 5 ] M . Granovetter , “ Threshold models of collective behavior , ” American journal of sociology , pp . 1420–1443 , 1978 .
[ 6 ] J . Leskovec , A . Krause , C . Guestrin , C . Faloutsos , J . VanBriesen , and N . Glance , “ Cost effective outbreak detection in networks , ” in SIGKDD . ACM , 2007 , pp . 420–429 .
[ 7 ] W . Chen , Y . Wang , and S . Yang , “ Efficient influence maximization in social networks , ” in SIGKDD . ACM , 2009 , pp . 199–208 .
[ 8 ] W . Chen , C . Wang , and Y . Wang , “ Scalable influence maximization for prevalent viral marketing in large scale social networks , ” in SIGKDD . ACM , 2010 , pp . 1029–1038 .
[ 9 ] K . Jung , W . Heo , and W . Chen , “ Irie : Scalable and robust influence IEEE , 2012 , pp . 918– maximization in social networks , ” in ICDM . 923 .
[ 10 ] B . Xiang , Q . Liu , E . Chen , H . Xiong , Y . Zheng , and Y . Yang , “ Pagerank with priors : An influence propagation perspective , ” in IJCAI , 2013 , pp . 2740–2746 .
[ 11 ] A . Anagnostopoulos , R . Kumar , and M . Mahdian , “ Influence and correlation in social networks , ” in SIGKDD . ACM , 2008 , pp . 7–15 .
0.6
0.4
0.2
Degree InfluenceRank PageRank Linear
80
60
40
20
) c e S ( e m T i
IC Degree InfluenceRank PageRank Linear s e d o N d e h c r a e S #
60
50
40
30
20 y t i r a l i i m S d r a c c a J
0
20
40
60 Size of Seed Set
80
0
20
40
60 Size of Seed Set
80
20
60 40 Size of Seed Set
80
( a ) Jaccard similarity of Top 10 seeds
( b ) Running time comparison
( c ) Effectiveness of the upper bounds
Figure 7 . Top 10 independent influential seeds identification results on DBLP . y t i r a l i i m S d r a c c a J
1
0.8
0.6
0.4
0.2
0
20
40
60 Size of Seed Set
80
Degree InfluenceRank PageRank Linear
) c e S ( e m T i
400
300
200
100
0
20
40
WC Degree InfluenceRank PageRank Linear s e d o N d e h c r a e S #
16
14
12
10
20
40 60 Size of Seed Set
80
60
80
Size of Seed Set
( a ) Jaccard similarity of Top 10 seeds
( b ) Running time comparison
( c ) Effectiveness of the upper bounds
Figure 8 . Top 10 independent influential seeds identification results on Epinion . y t i r a l i i m S d r a c c a J
1
0.8
0.6
0.4
0.2
0
20
40
60 Size of Seed Set
80
Degree InfluenceRank PageRank Linear
) c e S ( e m T i
300
250
200
150
100
50
0
20
40
60 Size of Seed Set
80
WC Degree InfluenceRank PageRank Linear s e d o N d e h c r a e S #
35
30
25
20
15
10
20
40 60 Size of Seed Set
80
( a ) Jaccard similarity of Top 10 seeds
( b ) Running time comparison
( c ) Effectiveness of the upper bounds
Figure 9 . Top 10 independent influential seeds identification results on Amazon .
[ 12 ] A . Goyal , F . Bonchi , and L . V . Lakshmanan , “ Learning influence probabilities in social networks , ” in WSDM . ACM , 2010 , pp . 241– 250 .
[ 13 ] G . Ver Steeg and A . Galstyan , “ Information theoretic measures of influence based on content dynamics , ” in WSDM . ACM , 2013 , pp . 3–12 .
[ 14 ] C . Aggarwal , A . Khan , and X . Yan , “ On flow authority discovery in social networks , ” in SDM , 2011 , pp . 522–533 .
[ 15 ] M . Kimura and K . Saito , “ Tractable models for information diffusion in social networks , ” in PKDD . Springer , 2006 , pp . 259–271 .
[ 16 ] D . Kempe , J . Kleinberg , and ´E . Tardos , “ Maximizing the spread of influence through a social network , ” in SIGKDD . ACM , 2003 , pp . 137–146 .
[ 17 ] Y . Yang , E . Chen , Q . Liu , B . Xiang , T . Xu , and S . A . Shad , “ On Springer , approximation of real world influence spread , ” in PKDD . 2012 , pp . 548–564 .
[ 18 ] P . Li , J . X . Yu , H . Liu , J . He , and X . Du , “ Ranking individuals and Springer , 2011 , pp . groups by influence propagation , ” in PAKDD . 407–419 .
[ 19 ] D N Yang , H J Hung , W C Lee , and W . Chen , “ Maximizing acceptance probability for active friending in on line social networks , ” arXiv preprint arXiv:1302.7025 , 2013 .
[ 20 ] L . Page , S . Brin , R . Motwani , and T . Winograd , “ The pagerank citation ranking : bringing order to the web . ” 1999 .
[ 21 ] Q . Liu , B . Xiang , E . Chen , Y . Ge , H . Xiong , T . Bao , and Y . Zheng , “ Influential seed items recommendation , ” in RecSys . ACM , 2012 , pp . 245–248 .
477
[ 22 ] L . A . Adamic and N . Glance , “ The political blogosphere and the 2004 us election : divided they blog , ” in Proceedings of the 3rd international workshop on Link discovery . ACM , 2005 , pp . 36–43 .
[ 23 ] T . H . Haveliwala , “ Topic sensitive pagerank : A context sensitive ranking algorithm for web search , ” IEEE TKDE , vol . 15 , no . 4 , pp . 784–796 , 2003 .
Appendix 1
In this section , we prove that g(a + b ) = g(a ) + g(b ) and gk(a + b ) = gk(a ) + gk(b ) for Theorem 1 .
.
First , we rewrite g(a ) as gi(a ) = d When i fi S , νi(a ) equals to 0 . Otherwise , νi(a ) is a value k=1 tkigk(a ) + νi(a ) for i = 1 , 2 , n . ff
) to make sure gi(a ) = ai . Similar to Equation ( 3 ) and Equation ( 13 ) , we have g(a ) = ( I − dT −1g(a ) . Then ,
−1ν(a ) = Pν(a ) , and ν(a ) = P just considering the nodes in S , we could get −1 −1 S S a , where νS ( a ) and P S S are the remaining entries −1 S S b=P
−1 S S ( a + b)=νS ( a + b ) , thus , g(a + b ) = Pν(a + b ) = g(a ) + g(b ) holds , and incorrespondingly , gk(a + b ) = gk(a ) + gk(b ) .
νS ( a ) = P in ν(a ) and P
−1 , respectively .
Since νS ( a)+νS ( b)=P
−1 S S a + P
