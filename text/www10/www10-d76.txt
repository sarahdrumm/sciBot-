Selectivity Estimation for SPARQL Graph Pattern
Hai Huang Faculty of ICT
Chengfei Liu Faculty of ICT
Swinburne University of Technology hhuang@swineduau
Swinburne University of Technology cliu@swineduau
ABSTRACT This paper focuses on selectivity estimation for SPARQL graph patterns , which is crucial to RDF query optimization . The previous work takes the join uniformity assumption , which would lead to high inaccurate estimation in the cases where properties in SPARQL graph patterns are correlated . We take into account the dependencies among properties in SPARQL graph patterns and propose a more accurate estimation model . We first focus on two common SPARQL graph patterns ( star and chain patterns ) and propose to use Bayesian network and chain histogram for estimating the selectivity of them . Then , for an arbitrary composite SPARQL graph pattern , we maximally combines the results of the star and chain patterns we have precomputed . The experiments show that our method outperforms existing approaches in accuracy .
Categories and Subject Descriptors H24 [ Database Management ] : Systems—query processing
General Terms Algorithms , Performance
Keywords Selectivity Estimation , RDF Query Processing
1 .
INTRODUCTION
Since the use of RDF to represent data has grown dramatically over the last few years , query processing on RDF data becomes an important issue . Selectivity estimation for SPARQL graph patterns is crucial to RDF query processing . As we know , RDF data is a set of triples with the form ( subject , property , object ) . This fine grained model leads to SPARQL queries on RDF data with a large number of joins . As such , precise estimation of the selectivity of joined triple patterns is very important . In [ 1 , 2 ] the join uniformity assumption is made when estimating the selectivity of joined triple patterns , which assumes that each triple satisfying a triple pattern is equally likely to join with the triples satisfying the other triple pattern . However , this assumption does not hold in many cases .
Copyright is held by the author/owner(s ) . WWW 2010 , April 26–30 , 2010 , Raleigh , North Carolina , USA . ACM 978 1 60558 799 8/10/04 .
2 . ESTIMATION FOR STAR PATTERNS US
ING BAYESIAN NETWORKS
The star graph pattern is common in SPARQL graph patterns . It has the form of a number of triple patterns with different properties sharing the same subject ( an example is shown in Figure 1 ) . For estimating the selectivity of frequent star patterns , we construct the cluster property table R for each one .
?flzfl
Iflnflcfloflmflefl
Pfloflsflifltflifloflnfl
'fl<fl=fl7fl0fl
Kfl'fl
TfleflaflcflhfleflrflOflffl
'flPflrfloflffl.fl'fl
?flZfl,fl flIflnflcfloflmflefl,fl fl'fl<fl=fl7fl0flKfl'fl ?flZfl,fl flPfloflsflifltflifloflnfl,fl fl fl'flPflrfloflffl.fl'fl ?flZfl,fl TfleflaflcflhfleflrflOflffl fl,fl fl'flAfldflvflaflnflcflefldfl flcflofluflrflsflefl'fl
'flAfldflvflaflnflcflefl dfl flcflofluflrflsflefl'fl
( flAfldflcfl)fl
Figure 1 : Star style graph pattern
Given a frequent star pattern Q with predicates prop1 , prop2 , · · · , propn , if we know the joint probability distribution over values of properties Pr(prop1 = o1 , prop2 = o2 , · · · , propn = on ) in R , we can easily obtain the selectivity sel(Q ) of Q as : sel(Q ) = Pr(prop1 = o1 , prop2 = o2 , , propn = on ) · |R| , where |R| is the number of rows in R . However , it is impossible to explicitly store the joint probability distribution over property values in R , since the possible combinations of values of properties could be exponential . We employ Bayesian network to approximately store the joint probability distribution information . Bayesian networks make use of Bayes’ Rule and conditional independence assumption to compactly represent the full joint probability distribution using a little space . Given a star pattern Q and Bayesian network β learned from table R , we have : sel(Q ) = Pr(prop1 = o1 , prop2 = o2 , , propn = on ) · |R|
≈ P rβ(prop1 = o1 , prop2 = o2 , , propn = on ) · |R|
= n
Y i=1
Pr(propi = oi | P arents(propi ) = ~ok ) · |R| where P arents(propi ) denotes the set of immediate predecessors of propi in the Bayesian network ; ~ok denotes the set of values of P arents(propi ) . Note that for computing Pr(propi | parents(propi ) = ~ok ) , we only need to know the values of propi ’s parent properties , which would save a lot of space in practice .
3 . ESTIMATION FOR CHAIN PATTERNS
The chain graph pattern is another kind of common SPARQL query patterns , which consists a sequence of triple patterns
WWW 2010 • PosterApril 26 30 • Raleigh • NC • USA1115 where the object of the previous triple pattern is also the subject of the next pattern . We construct the chain count table T C ( shown in Figure 2 ) for frequent chain patterns , which has two attributes : Head Chain Rear and Count . Each row of T C indicates a chain pattern with their frequencies ( selectivities ) . However , chain table T C could be too large .
Fflrfleflqflufleflnfltfl flcflhflafliflnfl flpflafltfltfleflrflnflPfl1fl:fl fl"flTflaflkfleflnflBflyfl flAflgflefl"fl
?flcflofluflrflsflefl
TflaflkfleflnflBflyfl
?flsfltflufldfl eflnfltfl
Aflgflefl
?flaflgflefl
Cflhflafliflnfl flCflofluflnfltfl flTflaflbfllflefl TflCfl
Hfleflafldfl flCflhflafliflnfl flRfleflaflrfl
Cflofluflnfltfl
Cflhflafliflnfl flHfliflsfltfloflgflrflaflmfl fl flHfl
Afldflcfl/flpfl1fl/fl2fl0fl fl2fl2fl
Pflrflcfl/flpfl1fl/fl/fl2fl0fl fl2fl2fl
Pflrflcfl/flpfl1fl/fl2fl3fl fl2fl5fl
Afldflcfl/flpfl1fl/fl2fl3fl fl2fl5fl
?fl/flpfl1fl/fl2fl0fl fl2fl2fl
?fl/flpfl1fl/fl2fl3fl fl2fl5fl
Afldflcfl/flpfl1fl/fl?fl
Pflrflcfl/flpfl1fl/fl?fl
?fl/flpfl1fl/fl?fl
5fl0fl
2fl6fl
3fl2fl
4fl8fl
7fl6fl
8fl0fl
9fl8fl
5fl8fl
1fl5fl6fl
Bfllflofloflmfl flFflifllfltfleflrfl fl fl fl flCflofluflnfltfl
{flAfldflcfl/flpfl1fl/fl2fl0fl fl2fl2fl,flAfldflcfl/flpfl1fl/fl2fl3fl fl2fl5fl,fl Pflrflcfl/flpfl1fl/fl?fl}fl
{flPflrflcfl/flpfl1fl/fl2fl0fl fl2fl2fl,flPflrflcfl/flpfl1fl/fl2fl3fl fl2fl5fl}fl
{fl?fl/flpfl1fl/fl2fl0fl fl2fl2fl,fl?fl/flpfl1fl/fl2fl3fl fl2fl5fl,flAfldflcfl/flpfl1fl/fl?fl}fl
{fl?fl/flpfl1fl/fl?fl}fl
5fl2fl
2fl9fl
8fl5fl
1fl5fl6fl
Figure 2 : An example of the chain count table and the chain histogram . “ ? ” indicates a variable .
Thus , we group the chain patterns in T C into several buckets according to their frequencies . And for each bucket we only need to save the average frequency and its chain pattern members . So given a chain pattern and which bucket it belongs to , we can easily get the frequency of this chain pattern . For efficient processing the membership queries , we use bloom filter , a space efficient probabilistic data structure often used to test whether an element is a member of a set . Here , we use bloom filter to test whether a chain pattern is a member of a bucket .
4 . ESTIMATION FOR COMPOSITE GRAPH
PATTERNS
To estimate the selectivity of a composite SPARQL graph pattern Q , we propose to maximally use the statistics of the sub star and chain patterns we have precomputed to obtain the overall selectivity of Q . We wish to find the maximum precomputed pattern cover of Q and process the uncovered part of Q with independence assumption . Based on dynamic programming , we can get an optimal algorithm for finding the maximum pattern cover of Q .
For a composite graph pattern decomposed the precomputed patterns , we need to combine the selectivity of precomputed star and chain patterns . There are three basic cases : Case 1 ( star chain join ) : The composite graph pattern Q can be decomposed into a precomputed star pattern S and a chain pattern C joined on a variable Y . Case 2 ( star star join ) : Q can be decomposed into two precomputed star patterns joined on a variable Y . Case 3 ( chainchain join ) : Q can be decomposed into two precomputed chain patterns joined on a variable Y .
For these cases , we go through all values of the join node Y . We can acquire the selectivity of star pattern S with different values on Y through inference on the Bayesian network . Similarly , we can obtain the selectivity of chain pattern C through the chain histogram . If two patterns have the same value on the join node Y , we combine the selectivity of two patterns in the product form . For the case where a graph pattern Q can be decomposed into multiple patterns , we select two joined patterns from Q and compute the selectivity of the joined patterns . Iterate this process until the overall selectivity of Q is obtained .
5 . EXPERIMENTS
We run all algorithms on a windows XP system with 3G CPU and 2 GB RAM . We use the data set LUBM in our experiment and we generate 600k distinct triples ; We compare our method with two other methods PF and RDF 3X proposed in [ 1 ] and [ 2 ] : fl fl ) fl % fl( fl fl fl fl fl fl fl flE R
PFfl
RDF 3Xfl
BNMfl
1000fl
900fl
800fl
700fl
600fl
500fl
400fl
300fl
200fl
100fl
0fl
2000fl
4000fl
8000fl
16000fl
Sfltfloflrflaflgflefl fllfliflmflifltfl fl(flbflyfltfleflsfl)fl
( flafl)fl flSfltflaflrfl flpflafltfltfleflrflnflsfl fl fl ) fl % fl( fl fl fl fl fl fl fl flE R
PFfl
RDF 3Xfl
CHMfl
1000fl
900fl
800fl
700fl
600fl
500fl
400fl
300fl
200fl
100fl
0fl fl fl ) fl % fl( fl fl fl fl fl fl fl flE R
PFfl
RDF 3Xfl Optimal fl
1000fl
900fl
800fl
700fl
600fl
500fl
400fl
300fl
200fl
100fl
0fl
2000fl
4000fl
8000fl
16000fl
2000fl
4000fl
8000fl
16000fl
Sfltfloflrflaflgflefl fllfliflmflifltfl fl(flbflyfltfleflsfl)fl
( flbfl)fl flCflhflafliflnfl flpflafltfltfleflrflnflsfl
Sfltfloflrflaflgflefl fllfliflmflifltfl fl(flbflyfltfleflsfl)fl
( flcfl)fl flCfloflmflpfloflsflifltflefl flpflafltfltfleflrflnflsfl
Figure 3 : Performance of our method .
Figure 3 shows the accuracy of three methods for the queries on the LUBM dataset . In all figures , X axis is the space limit and Y axis is the average relative error RE(RE = |sel− fsel| max(1,sel ) ) . We first develop 50 star queries and 50 chain queries respectively and vary the the space limit from 2K bytes to 16K bytes for storing CPTs and chain histogram for star and chain patterns . Figure 3(a ) , ( b ) show the performance of three methods . “ BNM ” and “ CHM ” indicate our Bayesian network and chain histogram based methods for star and chain patterns . Our method outperforms the other methods . Then we develop 50 composite query patterns . All these query patterns can be decomposed into star patterns and chain patterns we have precomputed . Figure 3(c ) shows the results of three methods , where “ Optimal ” stands for the optimal decomposition algorithm . Our method obtains more accurate estimations since we construct the refined model when dealing with joined triple patterns and do not adopt join uniformity assumption .
6 . CONCLUSION
In this paper , we construct the Bayesian networks and chain histogram for estimating the selectivity of star and chain patterns . For an composite graph pattern , we combine the results of precomputed chain patterns and star patterns to estimate the overall selectivity . Experiments demonstrate the effectiveness of our method .
7 . ACKNOWLEDGMENTS
This work was supported partly by the Australian Research Council Discovery Project under the grant number DP0878405 .
8 . REFERENCES [ 1 ] M . Stocker , A . Seaborne , A . Bernstein , C . Kiefer : SPARQL basic graph pattern optimization using selectivity estimation . In WWW , pages:595 604 , 2008 .
[ 2 ] T . Neumann , G . Weikum : RDF 3X : a RISC style engine for RDF . PVLDB 1(1 ) : 647 659 , 2008 .
WWW 2010 • PosterApril 26 30 • Raleigh • NC • USA1116
