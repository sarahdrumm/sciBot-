Earthquake Shakes Twitter Users :
Real time Event Detection by Social Sensors
Takeshi Sakaki
The University of Tokyo Yayoi 2 11 16 , Bunkyo ku
Tokyo , Japan sakaki@biz modeltu tokyoacjp
Makoto Okazaki
The University of Tokyo Yayoi 2 11 16 , Bunkyo ku
Tokyo , Japan m_okazaki@biz modeltu tokyoacjp
Yutaka Matsuo
The University of Tokyo Yayoi 2 11 16 , Bunkyo ku
Tokyo , Japan matsuo@biz modeltu tokyoacjp
ABSTRACT Twitter , a popular microblogging service , has received much attention recently . An important characteristic of Twitter is its real time nature . For example , when an earthquake occurs , people make many Twitter posts ( tweets ) related to the earthquake , which enables detection of earthquake occurrence promptly , simply by observing the tweets . As described in this paper , we investigate the real time interaction of events such as earthquakes in Twitter and propose an algorithm to monitor tweets and to detect a target event . To detect a target event , we devise a classifier of tweets based on features such as the keywords in a tweet , the number of words , and their context . Subsequently , we produce a probabilistic spatiotemporal model for the target event that can find the center and the trajectory of the event location . We consider each Twitter user as a sensor and apply Kalman filtering and particle filtering , which are widely used for location estimation in ubiquitous/pervasive computing . The particle filter works better than other comparable methods for estimating the centers of earthquakes and the trajectories of typhoons . As an application , we construct an earthquake reporting system in Japan . Because of the numerous earthquakes and the large number of Twitter users throughout the country , we can detect an earthquake with high probability ( 96 % of earthquakes of Japan Meteorological Agency ( JMA ) seismic intensity scale 3 or more are detected ) merely by monitoring tweets . Our system detects earthquakes promptly and sends e mails to registered users . Notification is delivered much faster than the announcements that are broadcast by the JMA .
Categories and Subject Descriptors H28 [ Database Management ] : Database Applications— Data Mining ; H35 [ Information Storage and Retrieval ] : On line Information Services—Web based services
General Terms Algorithms , Experimentation
Keywords twitter , event detection , social sensor , location estimation , earthquake
Copyright is held by the International World Wide Web Conference Committee ( IW3C2 ) . Distribution of these papers is limited to classroom use , and personal use by others . WWW 2010 , April 26–30 , 2010 , Raleigh , North Carolina , USA . ACM 978 1 60558 799 8/10/04 .
1 .
INTRODUCTION
Twitter , a popular microblogging service , has received much attention recently . It is an online social network used by millions of people around the world to remain socially connected to their friends , family members and co workers through their computers and mobile phones [ 18 ] . Twitter asks one question , ” What ’s happening ? ” Answers must be fewer than 140 characters . A status update message , called a tweet , is often used as a message to friends and colleagues . A user can follow other users ; her followers can read her tweets . A user who is being followed by another user need not necessarily reciprocate by following them back , which renders the links of the network as directed . After its launch on July 2006 , Twitter users have increased rapidly . They are currently estimated as 44.5 million worldwide1 . Monthly growth of users has been 1382 % year on year , which makes Twitter one of the fastest growing sites in the world2 .
Some researchers have examined Twitter : Java et al . analyzed Twitter as early as 2007 . They described the social network of Twitter users and investigated the motivation of Twitter users [ 13 ] . Huberman et al . analyzed more than 300 thousand users . They discovered that the relation between friends ( defined as a person to whom a user has directed posts using an ” @ ” symbol ) is the key to understanding interaction in Twitter [ 11 ] . Recently , boyd et al . investigated retweet activity , which is the Twitter equivalent of e mail forwarding , by which users post messages originally posted by others [ 5 ] .
Twitter is categorized as a microblogging service . Microblogging is a form of blogging that allows users to send brief text updates or micromedia such as photographs or audio clips . Microblogging services other than Twitter include Tumblr , Plurk , Emote.in , Squeelr , Jaiku , identi.ca , and others3 . They have their own characteristics . Some examples are the following : Squeelr adds geolocation and pictures to microblogging ; and Plurk has a timeline view integrating video and picture sharing . Although our study , which is based on their real time nature , is applicable to other microblogging services , we specifically examine Twitter in this study because of its popularity and data volume .
An important common characteristic among microblogging services is their real time nature . Although blog users
1http://wwwtechcrunchcom/2009/08/03/twitter reaches445 million people worldwide in june comscore/ 2According to a report from http://blognielsencom/nielsenwire/online mobile/twitterstweet smell of success/ 3wwwtumblrcom , wwwsqueelrcom , wwwjaikucom , identi.ca wwwplurkcom , wwwemotein ,
WWW 2010 • Full PaperApril 26 30 • Raleigh • NC • USA851 such as ” Earthquake! ” or ” Now it is shaking ” , for which earthquake or shaking could be keywords , but users might also make tweets such as ” I am attending an Earthquake Conference ” , or ” I am shaking hands with his boss ” . We prepare the training data and devise a classifier using a support vector machine based on features such as keywords in a tweet , the number of words , and the context of target event words . After doing so , we can produce a probabilistic spatiotemporal model of an event . We make a crucial assumption : each Twitter user is regarded as a sensor and each tweet as sensory information . These virtual sensors , which we call social sensors , are of a huge variety and have various characteristics : some sensors are very active ; others are not . A sensor could be inoperable or malfunctioning sometimes ( eg , a user is sleeping , or busy doing something ) . Consequently , social sensors are very noisy compared to ordinal physical sensors . Regarding each Twitter user as a sensor , the event detection problem can be reduced into one of object detection and location estimation in a ubiquitous/pervasive computing environment in which we have numerous location sensors : a user has a mobile device or an active badge in an environment where sensors are placed . Through infrared communication or a WiFi signal , the user location is estimated as providing location based services such as navigation and museum guides [ 9 , 25 ] . We apply Kalman filters and particle filters , which are widely used for location estimation in ubiquitous/pervasive computing .
As an application , we develop an earthquake reporting system using Japanese tweets . Because Japan has numerous earthquakes and because Twitter users are similarly numerous and geographically dispersed throughout the country , it is sometimes possible to detect an earthquake by monitoring tweets . In other words , many earthquake events occur in Japan . Many sensors are allocated throughout the country . Figure 1 portrays a map of Twitter users worldwide ( obtained from UMBC eBiquity Research Group ) ; Fig 2 depicts a map of earthquake occurrences worldwide ( using data from Japan Meteorological Agency ( JMA) ) . It is apparent that the only intersection of the two maps , which means regions with many earthquakes and large Twitter users , is Japan . Other regions such as Indonesia , Turkey , Iran , Italy , and Pacific coastal US cities such as Los Angeles and San Francisco also roughly intersect , although their respective densities are much lower than in Japan . Our system detects an earthquake occurrence and sends an e mail , possibly before an earthquake actually arrives at a certain location : An earthquake propagates at about 3–7 km/s . For that reason , a person who is 100 km distant from an earthquake has about 20 s before the arrival of an earthquake wave .
We present a brief overview of Twitter in Japan : The Japanese version of Twitter was launched on April 2008 . In February 2008 , Japan was the No . 2 country with respect to Twitter traffic5 . At the time of this writing , Japan has the 11th largest number of users ( more than half a million users ) in the world . Although event detection ( particularly the earthquake detection ) is currently possible because of the high density of Twitter users and earthquakes in Japan , our study is useful to detect events of various types throughout the world .
The contributions of this paper are summarized as follows : • The paper provides an example of integration of semantic analysis and real time nature of Twitter , and presents potential uses for Twitter data .
5http://blogtwittercom/2008/02/twitter web traffic aroundworldhtml
Figure 1 : Twitter user map .
Figure 2 : Earthquake map . typically update their blogs once every several days , Twitter users write tweets several times in a single day . Users can know how other users are doing and often what they are thinking about now , users repeatedly return to the site and check to see what other people are doing . The large number of updates results in numerous reports related to events . They include social events such as parties , baseball games , and presidential campaigns . They also include disastrous events such as storms , fires , traffic jams , riots , heavy rainfall , and earthquakes . Actually , Twitter is used for various real time notification such as that necessary for help during a large scale fire emergency and live traffic updates . Adam Ostrow , an Editor in Chief at Mashable , a social media news blog , wrote in his blog about the interesting phenomenon of real time media as follows4 :
Japan Earthquake Shakes Twitter Users And Beyonce : Earthquakes are one thing you can bet on being covered on Twitter first , because , quite frankly , if the ground is shaking , you’re going to tweet about it before it even registers with the USGS and long before it gets reported by the media . That seems to be the case again today , as the third earthquake in a week has hit Japan and its surrounding islands , about an hour ago . The first user we can find that tweeted about it was Ricardo Duran of Scottsdale , AZ , who , judging from his Twitter feed , has been traveling the world , arriving in Japan yesterday .
This post well represents the motivation of our study . The research question of our study is , ” can we detect such event occurrence in real time by monitoring tweets ? ”
This paper presents an investigation of the real time nature of Twitter and proposes an event notification system that monitors tweets and delivers notification promptly . To obtain tweets on the target event precisely , we apply semantic analysis of a tweet : For example , users might make tweets
4http://mashable.com/2009/08/12/japan earthquake/
WWW 2010 • Full PaperApril 26 30 • Raleigh • NC • USA852 • For earthquake prediction and early warning , many studies have been made in the seismology field . This paper presents an innovative social approach that has not been reported before in the literature .
This paper is organized as follows : In the next section , we explain semantic analysis and sensory information , followed by the spatiotemporal model in Section 3 . In Section 4 , we describe the experiments and evaluation of event detection . The earthquake reporting system is introduced into Section 5 . Section 6 is devoted to an explanation of related works and discussion . Finally , we conclude the paper .
2 . EVENT DETECTION
As described in this paper , we target event detection . An event is an arbitrary classification of a space–time region . An event might have actively participating agents , passive factors , products , and a location in space/time [ 21 ] . We target events such as earthquakes , typhoons , and traffic jams , which are visible through tweets . These events have several properties : i ) they are of large scale ( many users experience the event ) , ii ) they particularly influence people ’s daily life ( for that reason , they are induced to tweet about it ) , and iii ) they have both spatial and temporal regions ( so that real time location estimation is possible ) . Such events include social events such as large parties , sports events , exhibitions , accidents , and political campaigns . They also include natural events such as storms , heavy rainfall , tornadoes , typhoons/hurricanes/cyclones , and earthquakes . We designate an event we would like to detect using Twitter as a target event . 2.1 Semantic Analysis on Tweet
To detect a target event from Twitter , we search from Twitter and find useful tweets . Tweets might include mentions of the target event . For example , users might make tweets such as ” Earthquake! ” or ” Now it is shaking ” . Consequently , earthquake or shaking might be keywords ( which we call query words ) . But users might also make tweets such as ” I am attending an Earthquake Conference ” , or ” Someone is shaking hands with my boss ” . Moreover , even if a tweet is referring to the target event , it might not be appropriate as an event report . For instance , a user makes tweets such as ” The earthquake yesterday was scaring ” , or ” Three earthquakes in four days . Japan scares me . ” These tweets are truly descriptions of the target event , but they are not real time reports of the events . Therefore , it is necessary to clarify that a tweet is truly referring to an actual earthquake occurrence , which is denoted as a positive class .
To classify a tweet into a positive class or a negative class , we use a support vector machine ( SVM ) [ 14 ] , which is a widely used machine learning algorithm . By preparing positive and negative examples as a training set , we can produce a model to classify tweets automatically into positive and negative categories .
We prepare three groups of features for each tweet as fol lows :
Features A ( statistical features ) the number of words in a tweet message , and the position of the query word within a tweet .
Features B ( keyword features ) the words in a tweet6 .
6Because a tweet is usually short , we use every word in a tweet by converting it into a word ID .
Features C ( word context features ) the words before and after the query word .
To process Japanese texts , morphological analysis is conducted using Mecab7 , which separates sentences into a set of words . In the case of English , we apply standard stopword elimination and stemming . We compare the usefulness of the features in Section 4 . Using the obtained model , we can classify whether a new tweet corresponds to a positive class or a negative class . 2.2 Tweet as a Sensory Value
We can search the tweet and classify it into a positive class if a user makes a tweet on a target event . In other words , the user functions as a sensor of the event . If she makes a tweet about an earthquake occurrence , then it can be considered that she , as an ” earthquake sensor ” , returns a positive value . A tweet can therefore be considered as a sensor reading . This is a crucial assumption but it enables application of various methods related to sensory information .
Assumption 2.1 Each Twitter user is regarded as a sensor . A sensor detects a target event and makes a report probabilistically .
The virtual sensors ( or social sensors ) have various characteristics : some sensors are activated ( ie make tweets ) only by specific events , although others are activated to a wider range of events . The sensors are vastly numerous ; there are more than 40 million ” Twitter sensors ” worldwide . A sensor might be inoperable or operating incorrectly sometimes ( which means a user is not online , sleeping , or is busy doing something ) . Therefore , this social sensor is noisier than ordinal physical sensors such as location sensors , thermal sensors , and motion sensors .
A tweet can be associated with a time and location : each tweet has its post time , which is obtainable using a search API . In fact , GPS data are attached to a tweet sometimes , eg when a user is using an iPhone . Alternatively , each Twitter user makes a registration on their location in the user profile . The registered location might not be the current location of a tweet . However , we think it is probable that a person is near the registered location . For this study , we use GPS data and the registered location of a user . We do not use the tweet for spatial analysis if the location is not available ( We use the tweet information for temporal analyses )
Assumption 2.2 Each tweet is associated with a time and location , which is a set of latitude and longitude .
By regarding a tweet as a sensory value associated with a location information , the event detection problem is reduced to detecting an object and its location from sensor readings . Estimating an object ’s location is arguably the most fundamental sensing task in many ubiquitous and pervasive computing scenarios [ 7 ] .
Figure 3 presents an illustration of the correspondence between sensory data detection and tweet processing . The motivations are the same for both cases : to detect a target event . Observation by sensors corresponds to an observation by Twitter users . They are converted into values by a classifier . A probabilistic model is used to detect an event , as described in the next section .
7http://mecabsourceforgenet/
WWW 2010 • Full PaperApril 26 30 • Raleigh • NC • USA853 Figure 4 : Number of tweets related to earthquakes .
Figure 3 : Correspondence between event detection from Twitter and object detection in a ubiquitous environment . 3 . MODEL
For event detection and location estimation , we use probabilistic models . In this section , we first describe event detection from time series data . Then we describe the location estimation of a target event . 3.1 Temporal Model
Each tweet has its post time . When a target event occurs , how can the sensors detect the event ? We describe the temporal model of event detection .
First , we examine the actual data . Figures 4 and 5 respectively present the numbers of tweets for two target events : an earthquake and a typhoon . It is apparent that spikes occur on the number of tweets . Each corresponds to an event occurrence . In the case of an earthquake , more than 10 earthquakes occur during the period . In the case of typhoon , Japan ’s main population centers were hit by a large typhoon ( designated as Melor ) in October 2009 .
The distribution is apparently an exponential distribution . The probability density function of the exponential distribution is f ( t ; λ ) = λe−λt where t > 0 and λ > 0 . The exponential distribution occurs naturally when describing the lengths of the inter arrival times in a homogeneous Poisson process .
In the Twitter case , we can infer that if a user detects an event at time 0 , assume that the probability of his posting a tweet from t to ∆t is fixed as λ . Then , the time to make a tweet can be considered as an exponential distribution . Therefore , even if a user detects an event , she might not make a tweet right away if she is not online or doing something . She might make a post only after such problems are resolved . Therefore , it is reasonable that the distribution of the number of tweets follows an exponential distribution . Actually the data fit very well to an exponential distribution ; we get λ = 0.34 with R2 = 0.87 on average .
To assess an alarm , we must calculate the reliability of multiple sensor values . For example , a user might make a false alarm by writing a tweet . It is also possible that the
Figure 5 : Number of tweets related to typhoons . classifier misclassifies a tweet into a positive class . We can design the alarm probabilistically using the following two facts :
• The false positive ratio pf of a sensor is approximately
0.35 , as we show in Section 41
• Sensors are assumed to be independent and identically distributed ( iid ) , as we explain in Section 33
Assuming that we have n sensors , which produce positive signals , the probability of all n sensors returning a false alarm is pn f . Therefore , the probability of event occurrence can be estimated as 1 − pn f . Given n0 sensors at time 0 and n0e−λt sensors at time t . Therefore , the number of sensors we expect at time t is n0(1 − e−λ(t+1))/(1 − e−λ ) . Consequently , the probability of an event occurrence at time t is poccur(t ) = 1 − pn0(1−e−λ(t+1))/(1−e−λ ) f
.
We can calculate the probability of event occurrence if we set λ = 0.34 and pf = 035 For example , if we receive n0 positive tweets and would like to make an alarm with a false positive ratio less than 1 % , then we can calculate the expected wait time twait to deliver the notification as twait = ( 1 − ( 01264/n0))/07117 − 1 .
Although many works describing event detection have been reported in the data mining field , we use this simple approach utilizing the characteristics of the classifier and the distribution . 3.2 Spatial Model
Each tweet is associated with a location . We describe how to estimate the location of an event from sensor readings .
WWW 2010 • Full PaperApril 26 30 • Raleigh • NC • USA854 t × Rn t × Rn t → Rn
To define the problem of location estimation , we consider the evolution of the state sequence {xt , t ∈ N} of a target , given xt = ft(xt−1 , ut ) , where ft : Rn t → Rn t is a possibly nonlinear function of the state xt−1 . Furthermore , ut is an iid process noise sequence . The objective of tracking is to estimate xt recursively from measurements zt = ht(xt , nt ) , where ht : Rn is a possibly nonlinear function , and where nt is an iid measurement noise sequence . From a Bayesian perspective , the tracking problem is to calculate , recursively , some degree of belief in the state xt at time t , given data zt up to time t . Presuming that p(xt−1|zt−1 ) is available , the prediction p(xt|xt−1 ) stage uses the following equation : p(xt|zt−1 ) = p(xt−1|zt−1 ) dxt−1 . Here we use a Markov process of order one . Therefore , we can assume that p(xt|xt−1 , zt−1 ) = p(xt|xt−1 ) . In the update stage , Bayes’ rule is applied as p(xt|zt ) = p(zt|xt)p(xt|zt−1)/p(zt|zt−1 ) , where the normalizing constant is p(zt|zt−1 ) = p(zt|xt)p(xt|zt−1)dxt .
R
R t
To solve the problem , several methods of Bayesian filters are proposed such as Kalman filters , multi hypothesis tracking , grid based and topological approaches , and particle filters [ 7 ] . For this study , we use Kalman filters and particle filters , both of which are widely used in location estimation .
321 Kalman Filters The Kalman filter assumes that the posterior density at every time step is Gaussian and that it is therefore parameterized using a mean and covariance . We can write it as xt = Ftxt−1 + ut and zt = Htxt + nt . Therein , Ft and Ht are known matrices defining the linear functions . The respective covariants of ut and nt are Qt and Rt .
The Kalman filter algorithm can consequently be viewed as the following recursive relation : p(xt−1|zt−1 ) = N ( xt−1 ; mt−1|t−1 , Pt−1|t−1 ) p(xt|zt−1 ) = N ( xt ; mt|t−1 , Pt|t−1 ) p(xt|zt ) = N ( xt ; mt|t , Pt|t ) where mt|t−1 = Ftmt−1|t−1+ut , Pt|t−1 = Qt+FtPt−1|t−1F T t , mt|t = mt|t−1 + Kt(zt − Htmt|t−1 ) , and Pt|t = Pt|t−1 − KtHtPt|t−1 , and where N ( x ; m , P ) is a Gaussian density with argument x , mean m , covariance P , and for which the following are true : Kt = Pt|t−1H T St = HtPt|t−1H T t + Rt . This is the optimal solution to the tracking problem if the assumptions hold . A Kalman filter works better in a linear Gaussian environment .
, and
−1 t t S
When utilizing Kalman filters , it is important to construct a good model and parameters . As described in this paper , we implement models for two cases as follows .
Case 1 : Location estimation of an earthquake center . In this case , we need not consider the time transition property , thereby we use only location information x(dx , dy ) . We set xt = ( dxt , dyt )t where dxt is the longitude and dyt is the latitude ; zt = ( dxt , dyt ) , F = I2 , H = I2 , and ut = 0 . We assume that errors of temporal transition do not occur , and assume that errors in observation are Gaussian for simplicity : Qt = 0 , Rt = [ σ2 ] , and nt = N ( 0 ; Rt ) .
Case 2 : Trajectory estimation of a typhoon . We need to consider both the location and the velocity of an event . We apply Newton ’s motion equation as follows : xt = ( dxt , dyt , vxt , vyt )t where vxt is the velocity on longitude , and vyt is the velocity on latitude . We set zt =
Algorithm 1 Particle filter algorithm
1 . Initialization : Calculate the weight distribution Dw(x , y ) from twitter users’ geographic distribution in Japan .
2 . Generation : Generate and weight a particle set , which means N discrete hypothesis .
( 1 ) Generate a particle set S0 = ( s0
0 , . . . , sN−1 ) and allocate them on the map evenly : particle sk 0 = ( xk 0 ) , where x corresponds to the longitude , y corresponds to the latitude and w corresponds to the weight .
0 , wk
0 , yk
0 , s2
0 , s1
0
( 2 ) Weight them based on weight distribution Dw(x , y ) .
3 . Re sampling
( 1 ) Re sample N particles from a particle set St using weights of respective particles and allocate them on the map . ( We allow re sampling of more than one of the same particles . )
( 2 ) Generate a new particle set St+1 and weight them based on weight distribution Dw(x , y ) .
4 . Prediction : Predict the next state of a particle set St from
Newton ’s motion equation .
( xk t , yk t ) = ( xk t−1 + vxt−1 ∆t + yk t−1 + vyt−1 ∆t +
∆t2 ) axt−1
∆t2 ,
2 ayt−1
2
( vxt , vyt ) = ( vxt−1 + axt−1 , vyt−1 , ayt−1 ) axt = N ( 0 ; σ2 ) , ayt = N ( 0 ; σ2 ) .
5 . Weighing : Re calculate the weight of St by measurement m(mx , my ) as follows . dxk t = mx − xk t , t ) · t = Dw(xk t , yk wk t = my − yk dyk √ · exp (
2πσ )
1 t
− ( dxk t
!
2 )
2 + dyk t 2σ2
6 . Measurement : Calculate the current object location o(xt , yt ) by the average of s(xt , yt ) ∈ St .
7 . Iteration : Iterate Steps 3 , 4 , 5 , and 6 until convergence .
«
,
0B@ 1 0 ∆t
1CA , H =
„
( dxt , dyt )t , F =
0 0 ∆t 0 1 0 1 Bt = I4 , ut = ( axt 2 ∆t2 , ayt 2 ∆t2 , axt ∆t , ayt ∆t)t where axt is the acceleration on longitude , and ayt is the acceleration on latitude .
1 0 0 0 0 1 0 0
0 1 0 0 0 0
Similarly to Case 1 , we assume for simplicity that errors of temporal transition do not occur , and that errors in observation are Gaussian , as Qt = 0 , Rt = [ σ2 ] , and nt = N ( 0 ; Rt ) .
322 Particle Filters A particle filter is a probabilistic approximation algorithm implementing a Bayes filter , and a member of the family of sequential Monte Carlo methods . For location estimation , it maintains a probability distribution for the location estimation at time t , designated as the belief Bel(xt ) = {xi t is a discrete hypothesis about the location of the object . The wi t are non negative weights , called importance factors , which sum to one . t} , i = 1 . . . n . Each xi t , wi
The Sequential Importance Sampling ( SIS ) algorithm is a Monte Carlo method that forms the basis for particle filters . The SIS algorithm consists of recursive propagation of the
WWW 2010 • Full PaperApril 26 30 • Raleigh • NC • USA855 weights and support points as each measurement is received sequentially . We use a more advanced algorithm with resampling [ 1 ] . We employ weight distribution Dw(x , y ) which is obtained from the twitter user distribution to consider the biases of user locations8 .The algorithm is shown in Algo . 1 . 3.3 Information Diffusion Related to a Real time Event
Some information related to an event diffuses through Twitter . For example , if a user detects an earthquake and makes a tweet about the earthquake , then a follower of that user might make tweets about that . This characteristic is important because , in our model , sensors might not be mutually independent , which would have an undesired effect in terms of event detection .
Figures 6 , 7 , and 8 respectively portray the information flow networks for an earthquake , a typhoon , and a new Nintendo DS game9 . We infer the network as follows : Assume that user A follows user B . If user B makes a tweet about an event , and soon thereafter user A makes a tweet about an event , then we consider the information flows from B to A10 . This definition is similar to those used in other studies of information diffusion ( eg [ 15 , 16] ) .
In the case of earthquakes and typhoons , very little information diffusion takes place on Twitter . On the other hand , the release of a new game illustrates the scale and rapidity of information diffusion . Therefore , we can assume that the sensors are iid when considering real time event detection such as typhoons and earthquakes .
4 . EXPERIMENTS AND EVALUATION
In this section , we describe the experimental results and evaluation of tweet classification and location estimation .
The whole algorithm is shown in Algo . 2 . We prepare a set of queries Q for a target event . We first search for tweets T including the query set Q from Twitter every s seconds . We use a search API11 to search tweets . In the earthquake case , we set Q = { ” earthquake ” and ” shaking ” } ; in the typhoon case , we set Q = { ” typhoon ” } . We set s as 3 s . After determining a classification and obtaining a positive example , the system makes a calculation of a temporal and spatial probabilistic model . We consider that an event is detected if the probability is higher than a certain threshold ( poccur(t ) > 0.95 in our case ) . The location information of each tweet is obtained and used for location estimation of the event . In the earthquake reporting system explained in the next section , the system quickly sends an e mail ( usually mobile e mail ) to registered users . 4.1 Evaluation by Semantic Analysis
For classification of tweets , we prepared 597 positive examples that report earthquake occurrence as a training set . The classification performance is presented in Table 1 . We use two query words—earthquake and shaking ; performances using either query are shown . We used a linear kernel for SVM . We obtain the highest F value when we use feature
8We sample tweets associated with locations and obtain a user distribution that is proportional to the number of tweets in each region . 9Love Plus , a game that offers a virtual girlfriend experience , which was recently released in September 3 , 2009 . 10Because of this definition , the diffusion includes retweet , which is a type of message that repeats some information that was previously tweeted by another user . 11searchtwittercom
Algorithm 2 Event detection and location estimation algorithm .
1 . Given a set of queries Q for a target event .
2 . Put a query Q using search API every s seconds and obtain tweets T .
3 . For each tweet t ∈ T , obtain features A , B , and C . Apply the classification to obtain value vt = {0 , 1} .
T ; if it is above the threshold pthre 5 .
4 . Calculate event occurrence probability poccur using vt , t ∈ occur , then proceed to step 5 . For each tweet t ∈ T , we obtain the latitude and the longitude lt by i ) utilizing the associated GPS location , ii ) making a query to Google Map the registered location for user ut . Set lt = null if both do not work .
6 . Calculate the estimated location of the event from lt , t ∈ T using Kalman filtering or particle filtering .
7 . ( optionally ) Send alert e mails to registered users .
Table 1 : Performance of classification .
( i ) earthquake query : Features
A B C All
Recall 87.50 % 87.50 % 50.00 % 87.50 %
Precision 63.64 % 38.89 % 66.67 % 63.64 %
F value 73.69 % 53.85 % 57.14 % 73.69 %
( ii ) shaking query :
Features
A B C All
Recall 66.67 % 86.11 % 52.78 % 80.56 %
Precision 68.57 % 57.41 % 86.36 % 65.91 %
F value 67.61 % 68.89 % 68.20 % 72.50 %
A and all features . Surprisingly , features B and feature C do not contribute much to the classification performance . When an earthquake occurs , a user becomes surprised and might produce a very short tweet . It is apparent that the recall is not so high as the precision . That result is attributable to the usage of query words in a different context than we intend . Sometimes it is difficult even for humans to judge whether a tweet is reporting an actual earthquake or not . Some examples are that a user might write ” Is this an earthquake or a truck passing ? ” Overall , the classification performance is good considering that we can use multiple sensor readings as evidence for event detection . 4.2 Evaluation of Spatial Estimation
Figure 9 presents the location estimation of an earthquake on August 11 . We can find that many tweets originate from a wide region in Japan . The estimated location of the earthquake ( shown as estimation by particle filter ) is close to the actual center of the earthquake , which shows the efficiency of the location estimation algorithm . Table 2 presents results of location estimation based on a total of 621 tweets for 25 earthquakes in August , September , and October , 2009 . We compare Kalman filtering and particle filtering , with the weighted average and the median as a baseline . The weighted average simply takes the average of latitudes and longitude on all the positive tweets , and median simply takes their median . Particle filters perform well compared to other methods . The poor performance of Kalman filtering implies that the linear Gaussian assumption does not hold for this problem . We can find that if the center of the earthquake is in an oceanic area , it is more difficult to locate it precisely from tweets . Similarly , it becomes more difficult to make
WWW 2010 • Full PaperApril 26 30 • Raleigh • NC • USA856 Figure 6 : Earthquake information diffusion network .
Figure 7 : Typhoon information diffusion network .
Figure 8 : New Nintendo game information diffusion network .
Figure 9 : Earthquake location estimation based on tweets . Balloons show the tweets on the earthquake . The cross shows the earthquake center . Red represents early tweets ; blue shows later tweets . good estimations in less populated areas . That is reasonable : all other things being equal , the greater the number of sensors , the more precise the estimation will be .
Figure 10 depicts a trajectory estimation of typhoon Melor based on a total of 2037 tweets . In the case of an earthquake , the center is one location . However , in the case of a typhoon , the center moves and produces a trajectory . A comparison of the performance is presented in Table 3 . The particle filter works well and outputs a trajectory resembling the actual trajectory .
5 . EARTHQUAKE REPORTING SYSTEM We developed an earthquake reporting system using the event detection algorithm . Earthquake information is much more valuable if it is received in real time . We could turn off a stove or heater in our house and hide ourselves under a desk or table if we were to have several seconds’ notice before an earthquake actually hits . Several Twitter accounts report earthquake occurrence . Some examples are that the United States Geological Survey ( USGS ) feeds tweets on world earthquake information , but such information is not useful for prediction or early warning .
Vast amounts of work have been done on intermediate
Figure 10 : Typhoon trajectory estimation based on tweets . term earthquake prediction in the seismology field ( eg [ 23] ) . Various attempts have also been made to produce shortterm forecasts to realize an earthquake warning system by observing electromagnetic emissions from ground based sensors and satellites [ 3 ] . Other precursor signals such as ionospheric changes , infrared luminescence , and air conductivity change , along with traditional monitoring of movements of the earth ’s crust , are investigated .
In Japan , the government has allocated a considerable amount of its budget to mitigating earthquake damage . An earthquake early warning service has been operated by JMA since 2007 . It provides advance announcements of the estimated seismic intensities and expected arrival times . It detects P waves ( primary waves ) and makes an alert immediately so that earthquake damage can be mitigated through countermeasures such as slowing trains and controlling elevators . In fact , P waves are a type of elastic wave that can travel faster than S waves ( secondary waves ) , which cause shear effects and engender much more damage .
The proposed system , called Toretter12 , has been operated since August 8 of this year . A system screenshot is depicted in Fig 11 . Users can see the detection of past earthquakes . They can register their e mails to receive notices of future earthquake detection reports . A sample e mail is presented It alerts users and urges them to prepare for in Fig 12 .
12It means ” we have taken it ” in Japanese .
WWW 2010 • Full PaperApril 26 30 • Raleigh • NC • USA857 Table 2 : Location estimation accuracy of earthquakes from tweets . For each method , we present the difference of the estimated latitude and the longitude to the actual ones , and their Euclidean distance . Smaller distance means better performance .
Date
Aug . 10 01:00 Aug . 11 05:00 Aug . 13 07:50 Aug . 17 20:40 Aug . 18 22:17 Aug . 21 08.51 Aug . 24 13:30 Aug . 24 14:40 Aug . 25 02:22 Aug . 25 20:19 Aug . 31 00:46 Aug . 31 21:11 Sep . 3 22:26 Sep . 4 11:30 Sep . 05 10:59 Sep . 08 01:24 Sep . 10 18:29 Sep . 16 21:38 Sep . 22 20:40 Oct . 1 19:43 Oct . 5 09:35 Oct . 6 07:49 Oct . 10 17:43 Oct . 12 16:10 Oct . 12 18:42
Average distance
Actual center long . lat . 138.50 33.10 138.50 34.80 140.80 33.00 33.70 130.20 123.50 23.30 140.00 35.70 138.60 37.50 140.30 41.10 142.80 42.10 35.40 140.40 141.50 37.20 130.90 33.40 130.30 31.10 140.10 35.80 140.20 37.00 42.20 143.00 146.20 43.20 130.90 33.40 141.70 47.60 140.70 36.40 141.60 42.40 35.90 137.60 142.20 41.80 137.60 35.90 37.40 139.70
Median ( baseline )
Weighted ave . ( baseline )
Kalman filters
Particle filters lat . 3.40 0.90 1.30 4.60 7.80 0.50 0.40 1.90 2.90 1.60 0.40 4.50 6.20 3.10 2.70 3.60 5.90 1.10 11.10 0.70 3.70 0.50 3.50 2.80 2.00 long . 0.80 0.90 9.60 6.00 9.90 4.40 0.00 1.10 3.90 1.80 3.60 3.60 0.10 1.70 8.30 8.90 10.20 0.20 7.50 3.80 3.10 1.20 5.40 0.50 4.40 dist . 3.49 1.27 9.69 7.56 12.60 4.43 0.40 2.20 4.86 2.41 3.62 5.76 6.20 3.54 8.73 9.60 11.78 1.12 13.40 3.86 4.83 1.30 6.44 2.84 4.83 5.47 lat . 2.70 0.70 2.30 0.90 8.70 0.10 0.50 1.30 6.10 2.20 1.10 0.50 4.00 0.20 1.40 2.50 4.90 0.90 10.80 0.60 2.70 0.20 1.40 0.80 1.50 long . 0.10 0.30 2.30 3.20 10.90 1.00 0.40 0.50 3.80 0.70 2.30 2.10 5.00 0.90 3.10 3.90 7.10 2.10 3.10 1.80 2.00 0.80 2.10 1.20 0.90 dist . 2.70 0.76 3.25 3.32 13.95 1.00 0.64 1.39 7.19 2.31 2.55 2.16 6.40 0.92 3.40 4.63 8.63 2.28 11.24 1.90 3.36 0.82 2.52 1.44 1.75 3.62 lat . 2.67 0.60 1.63 1.63 8.32 0.00 0.50 1.50 5.20 0.70 1.30 0.70 4.90 0.00 1.30 4.50 4.50 0.50 11.30 0.30 2.60 0.10 2.20 0.80 1.70 long . 0.50 0.20 3.75 4.35 10.13 0.60 0.30 0.50 3.70 1.60 2.20 1.90 7.20 1.00 3.30 6.00 7.20 1.40 3.80 1.50 1.60 0.90 2.60 1.60 1.40 dist . 2.72 0.63 4.09 4.65 13.11 0.60 0.58 1.58 6.38 1.75 2.56 2.02 8.71 1.00 3.55 7.50 8.49 1.49 11.92 1.53 3.05 0.91 3.41 1.79 2.20 3.85 lat . 2.60 0.30 2.70 0.10 5.60 0.80 2.40 3.10 1.80 1.40 0.30 0.20 2.40 0.80 2.10 1.30 0.90 0.20 7.80 0.70 1.10 0.30 2.40 3.60 1.00 long . 0.50 0.90 2.70 0.80 8.10 0.48 0.70 2.00 1.90 0.10 0.30 1.70 2.10 1.40 5.80 3.60 7.00 2.50 3.00 0.30 1.70 0.50 1.30 1.40 0.60 dist . 2.65 0.95 3.82 0.81 9.85 0.93 2.50 3.69 2.62 1.40 0.42 1.71 3.19 1.61 6.17 3.83 7.06 2.51 8.36 0.76 2.02 0.58 2.73 3.86 1.17 3.01
Table 3 : Trajectory estimation accuracy of typhoon Melor based on tweets .
Date
Location
Oct . 7 12:00 Oct . 7 15:00 Oct . 7 18:00 Oct . 7 21:00 Oct . 8 0:00 Oct . 8 6:00 Oct . 8 9:00 Oct . 8 12:00 Oct . 8 15:00 Oct . 8 18:00 Oct . 8 21:00
Average distance lat . 29.00 29.90 30.80 31.60 32.90 35.10 36.10 37.10 38.00 39.00 40.00 long . 131.80 132.50 133.20 134.30 135.60 137.20 138.80 139.70 140.90 142.30 143.60
Median ( baseline ) Weighted ave . ( baseline ) lat . 1.90 3.70 4.10 3.90 2.30 1.60 0.60 1.70 2.30 3.20 4.30 long . 1.90 2.60 1.90 3.50 0.10 3.00 3.60 3.90 3.20 7.30 3.90 dist . 2.69 4.52 4.52 5.24 2.30 3.40 3.65 4.25 3.94 7.97 5.81 4.39 lat . 5.20 3.80 4.40 3.60 2.30 0.80 0.00 1.50 2.40 3.50 4.00 long . 3.60 2.40 3.50 3.30 0.90 1.70 0.50 1.20 2.20 5.10 5.30 dist . 6.32 4.49 5.62 4.88 2.47 1.88 0.50 1.92 3.26 6.19 6.64 4.02
Kalman filters
Particle filters lat . 3.90 3.20 6.40 10.90 12.60 4.20 0.50 2.10 1.70 2.10 1.60 long . 1.10 3.10 5.40 1.60 20.40 16.00 2.60 1.60 7.60 18.80 4.50 dist . 4.05 4.46 8.37 11.02 23.98 16.54 2.65 2.64 7.79 18.92 4.78 9.56 lat . 4.70 2.70 3.20 3.70 2.90 0.60 0.70 1.40 2.40 3.70 4.20 long . 1.10 0.90 0.70 0.50 3.50 2.50 0.80 0.10 2.70 5.10 3.10 dist . 4.83 2.85 3.28 3.73 4.55 2.57 1.06 1.40 3.61 6.30 5.22 3.58
Table 5 : Earthquake detection performance for two months from August 2009 . ’Promptly detected’ denotes detection within a minutes .
JMA intensity scale Num . of earthquakes Detected Promptly detected
2 or more
3 or more
4 or more
78
25
3
70(89.7 % ) 53 ( 67.9 % )
24 ( 96.0 % ) 20 ( 80.0 % )
3 ( 100.0 % ) 3 ( 100.0 % ) the earthquake . It is hoped that the e mail is received by a user shortly before the earthquake actually arrives . An earthquake is transmitted through the earth ’s crust at about 3–7 km/s . Therefore , a person has about 20 s before its arrival at a point that is 100 km distant .
Table 4 presents some facts about earthquake detection and notification using our system . This table shows that we investigated 10 earthquakes during 18 August – 2 September , all of which our system detected . The first tweet of an earthquake is usually made within a minute or so . The delay can result from the time for posting a tweet by a user , the time to index the post in Twitter servers , and the time to make queries by our system . We apply classification for 49,314 tweets retrieved by query words in one month ; results show 6,291 positive tweets posted by 4,218 users . Ev ery earthquake elicited more than 10 tweets within 10 min , except one in Bungo suido , which is the sea between two large islands : Kyushu and Shikoku . Our system sent e mails mostly within a minute , sometimes within 20 s . The delivery time is far faster than the rapid broadcast of announcements of JMA , which are widely broadcast on TV ; on average , a JMA announcement is broadcast 6 min after an earthquake occurs . Statistically , we detected 96 % of earthquakes that were stronger than JMA seismic intensity scale13 3 or more as shown in Table 5 .
6 . RELATED WORK
Twitter is an interesting example of the most recent social media : numerous researchers have examined Twitter . Aside from the studies introduced into Section 1 , several
13The JMA seismic intensity scale is a measure used in Japan and Taiwan to indicate earthquake strength . Unlike the Richter magnitude scale , the JMA scale describes the degree of shaking at a point on the earth ’s surface . For example , the JMA scale 3 is , by definition , one which is ” felt by most people in the building . Some people are frightened ” . It is similar to the Modified Mercalli scale IV , which is used along with the Richter scale in the US .
WWW 2010 • Full PaperApril 26 30 • Raleigh • NC • USA858 Table 4 : Facts about earthquake detection .
Date
Aug . 18 Aug . 18 Aug . 21 Aug . 25 Aug . 25 Aug . 27 Aug . 27 Aug . 31 Sep . 2 Sep . 2
Magnitude
4.5 3.1 4.1 4.3 3.5 3.9 2.8 4.5 3.3 3.6
Location Tochigi
Suruga wan
Chiba
Uraga oki Fukushima Wakayama Suruga wan Fukushima Suruga wan Bungo suido
Time 6:58:55 19:22:48 8:51:16 2:22:49 22:21:16 17:47:30 20:26:23 00:45:54 13:04:45 17:37:53
E mail sent time #tweets within 10 min Announce of JMA
7:00:30 19:23:14 8:51:35 2:23:21 22:22:29 17:48:11 20:26:45 00:46:24 13:05:04 17:38:27
35 17 52 23 13 16 14 32 18 3
07:08 19:28 8:56 02:27 22:26 17:53 20:31 00:51 13:10 17:43 and products for marketing purposes . It can classify positive and negative tweets , and can identify influential users . The classification of tweets might be done similarly to our algorithm . Web2express Digest15 is a website that autodiscovers information from Twitter streaming data to find real time interesting conversations . It also uses natural language processing and sentiment analysis to discover interesting topics , as we do in our study .
Various studies have been made of the analysis of web data ( except for Twitter ) particularly addressing the spatial aspect : The most relevant study to ours is one by Backstrom et al . [ 2 ] . They use queries with location ( obtained by IP addresses ) , and develop a probabilistic framework for quantifying spatial variation . The model is based on a decomposition of the surface of the earth into small grid cells ; they assume that for each grid cell x , there is a probability px that a random search from this cell will be equal to the query under consideration . The framework finds a query ’s geographic center and spatial dispersion . Examples include baseball teams , newspapers , universities , and typhoons . Although the motivation is very similar , events to be detected differ . Some examples are that people might not make a search query earthquake when they experience an earthquake . Therefore , our approach complements their work . Similarly to our work , Mei et al . targeted blogs and analyzed their spatiotemporal patterns [ 17 ] . They presented examples for Hurricane Katrina , Hurricane Rita , and iPod Nano . The motivation of that study is similar to ours , but Twitter data are more time sensitive ; our study examines even more time critical events eg earthquakes .
Some works have targeted collaborative bookmarking data , as Flickr does , from a spatiotemporal perspective : Serdyukov et al . investigated generic methods for placing photographs on Flickr on the world map [ 24 ] . They used a language model to place photos , and showed that they can estimate the language model effectively through analyses of annotations by users . Rattenbury et al . [ 22 ] specifically examined the problem of extracting place and event semantics for tags that are assigned to photographs on Flickr . They proposed scale structure identification , which is a burst detection method based on scaled spatial and temporal segments .
Location estimation studies are often done in the field of ubiquitous computing . Estimating an object ’s location is arguably the most fundamental sensing task in many ubiquitous and pervasive computing scenarios . Representing locations statistically provides a unified interface for location information , which enables us to make applications independent of the sensors used—even when using very different sensor types , such as GPS and infrared badges [ 7 ] , or even Twitter . Well known algorithms for location estimation are Kalman filters , multihypothesis tracking , grid based , and topological approaches , and particle filters . Hightower and Borriello investigated the application of particle filters to location sensors deployed throughout a lab building [ 10 ] . More
Figure 11 : Screenshot of Toretter , an earthquake reporting system .
Dear Alice ,
We have just detected an earthquake around Chiba . Please take care .
Toretter Alert System
Figure 12 : Sample alert e mail . others have been done . Grosseck et al . investigated indicators such as the influence and trust related to Twitter [ 8 ] . Krishnamurthy et al . crawled nearly 100,000 Twitter users and examined the number of users that each user follows , in addition to the number of users following them . Naaman et al . analyzed contents of messages from more than 350 Twitter users and manually classified messages into nine categories [ 19 ] . The numerous categories are ” Me now ” and ” Statements and Random Thoughts ” ; statements about current events corresponding to this category .
Some studies have examined novel applications of Twitter : Borau et al . tried to use Twitter to teach English to English language learners [ 4 ] . Ebner et al . investigated the applicability of Twitter for educational purposes , ie mobile learning [ 6 ] . The integration of the Semantic Web and microblogging was described in a previous report [ 20 ] in which a distributed architecture is proposed and the contents are aggregated . Jensen et al . analyzed more than 150 thousand tweets , particularly those mentioning brands in corporate accounts [ 12 ] .
In contrast to the small number of academic studies of Twitter , numerous Twitter applications exist . Some are used for analyses of Twitter data . For example , Tweettronics14 provides an analysis of tweets related to brands
14http://wwwtweettronicscom
15http://web2express.org
WWW 2010 • Full PaperApril 26 30 • Raleigh • NC • USA859 than 30 lab residents were tracked ; their locations were estimated accurately using the particle filter approach .
7 . DISCUSSION
We plan to expand our system to detect events of various kinds using Twitter . We developed another prototype that detects rainbow information . A rainbow might be visible somewhere in the world ; someone might be twittering about a rainbow . Our system can identify rainbow tweets using a similar approach to that used for detecting earthquakes . The differences are that in the rainbow case , the information is not so time sensitive as that in the earthquake case .
Our model includes the assumption that a single instance of the target event exists . For example , we assume that no two or more earthquakes or typhoons occur simultaneously . Although that assumption is reasonable for these cases , it might not hold for other events such as traffic jams , accidents , and rainbows . To realize multiple event detection , we must produce advanced probabilistic models that can accommodate multiple event occurrences .
A search query is important for seeking tweets that might be relevant . For example , we set query terms as earthquake and shaking because most tweets mentioning an earthquake occurrence use either word . However , to improve the recall , it is necessary to obtain a good set of queries . We can use advanced algorithms for query expansion , which is a subject of our future work .
8 . CONCLUSION
As described in this paper , we investigated the real time nature of Twitter , in particular for event detection . Semantic analyses were applied to tweets to classify them into a positive and a negative class . We consider each Twitter user as a sensor , and set a problem to detect an event based on sensory observations . Location estimation methods such as Kalman filtering and particle filtering are used to estimate the locations of events . As an application , we developed an earthquake reporting system , which is a novel approach to notify people promptly of an earthquake event .
Microblogging has real time characteristics that distinguish it from other social media such as blogs and collaborative bookmarks . As described in this paper , we presented an example using the real time nature of Twitter . It is hoped that this paper provides some insight into the future integration of semantic analysis with microblogging data .
9 . REFERENCES [ 1 ] S . Arulampalam , S . Maskell , N . Gordon , and
T . Clapp . A tutorial on particle filters for on line non linear/non gaussian bayesian tracking . IEEE Transactions on Signal Processing , 2001 .
[ 2 ] L . Backstrom , J . Kleinberg , R . Kumar , and J . Novak .
Spatial variation in search engine queries . In Proc . WWW2008 , 2008 .
[ 3 ] T . Bleier and F . Freund . Earthquake warning system .
Spectrum , IEEE , 2005 .
[ 4 ] K . Borau , C . Ullrich , J . Feng , and R . Shen .
Microblogging for language learning : Using twitter to train communicative and cultural competence . In Proc . ICWL 2009 , pages 78–87 , 2009 .
[ 5 ] d . boyd , S . Golder , and G . Lotan . Tweet , tweet , retweet : Conversational aspects of retweeting on twitter . In Proc . HICSS 43 , 2010 .
[ 6 ] M . Ebner and M . Schiefner . In microblogging.more than fun ? In Proc . IADIS Mobile Learning Conference , 2008 .
[ 7 ] D . Fox , J . Hightower , L . Liao , D . Schulz , and
G . Borriello . Bayesian filters for location estimation . IEEE Pervasive Computing , 2003 .
[ 8 ] G . Grosseck and C . Holotescu . Analysis indicators for communities on microblogging platforms . In Proc . eLSE Conference , 2009 .
[ 9 ] J . Hightower and G . Borriello . Location systems for ubiquitous computing . IEEE Computer , 34(8):57–66 , August 2001 .
[ 10 ] J . Hightower and G . Borriello . Particle filters for location estimation in ubiquitous computing : A case study . In Proc . UbiComp04 , 2004 .
[ 11 ] B . Huberman and D . R . F . Wu . Social networks that matter : Twitter under the microscope . First Monday , 14 , 2009 .
[ 12 ] B . Jansen , M . Zhang , K . Sobel , and A . Chowdury . Twitter power:tweets as electronic word of mouth . Journal of the American Society for Information Science and Technology , 2009 .
[ 13 ] A . Java , X . Song , T . Finin , and B . Tseng . Why we twitter : Understanding microblogging usage and communities . In Proc . Joint 9th WEBKDD and 1st SNA KDD Workshop 2007 , 2007 .
[ 14 ] T . Joachims . Text categorization with support vector machines . In Proc . ECML’98 , pages 137–142 , 1998 .
[ 15 ] J . Leskovec , L . Adamic , and B . Huberman . The dynamics of viral marketing . In Proc . ACM Conference on Electronic Commerce , 2006 .
[ 16 ] Y . Matsuo and H . Yamamoto . Community gravity : measuring bidirectional effects by trust and rating on online social networks . In Proc . WWW2009 , 2009 . [ 17 ] Q . Mei , C . Liu , H . Su , and C . Zhai . A probabilistic approach to spatiotemporal theme pattern mining on weblogs . In Proc . WWW’06 , 2006 .
[ 18 ] S . Milstein , A . Chowdhury , G . Hochmuth , B . Lorica , and R . Magoulas . Twitter and the micro messaging revolution : Communication,connections , and immediacy.140 characters at a time . O’Reilly Media , 2008 .
[ 19 ] M . Naaman , J . Boase , and C . Lai . Is it really about me ? Message content in social awareness streams . In Proc . CSCW’09 , 2009 .
[ 20 ] A . Passant , T . Hastrup , U . Bojars , and J . Breslin .
Microblogging : A semantic and distributed approach . In Proc . SFSW2008 , 2008 .
[ 21 ] Y . Raimond and S . Abdallah . The event ontology ,
2007 . http://motoolssfnet/event/eventhtml
[ 22 ] T . Rattenbury , N . Good , and M . Naaman . Towards automatic extraction of event and place semantics from flickr tags . In Proc . SIGIR 2007 , 2007 .
[ 23 ] E . Scordilis , C . Papazachos , G . Karakaisis , and
V . Karakostas . Accelerating sesmic crustal deformation before strong mainshocks in adriatic and its importance for earthquake prediction . Journal of Seismology , 8 , 2004 .
[ 24 ] P . Serdyukov , V . Murdock , and R . van Zwol . Placing flickr photos on a map . In Proc . SIGIR 2009 , 2009 .
[ 25 ] M . Weiser . The computer for the twenty first century .
Scientific American , 268(3):94–104 , 1991 .
WWW 2010 • Full PaperApril 26 30 • Raleigh • NC • USA860
