Navigational Complexity in Web Interactions Geetha Manjunath Praphul Chandra Hewlett Packard Labs
Hewlett Packard Labs , India praphulchandra@hpcom geethamanjunath@hpcom
ABSTRACT As the web grows in size , interfaces & interactions across websites diverge for differentiation and arguably for a better user experience . However , this size & diversity is also a cognitive load for the user who has to learn a new user interface for every new website she visits . Several studies have confirmed the importance of well designed websites . In this paper , we propose a method for quantitative evaluation of the navigational complexity of user interactions on the web . Our approach of quantifying interaction complexity exploits the modeling of the web as a graph and uses the information theoretic definition of complexity . It enables us to measure the navigational complexity of web interaction in bits . Our approach is structural in nature and can be applied to both traditional paradigm of web interaction ( browsing ) and to emerging paradigms of web interaction like web widgets .
Categories and Subject Descriptors D28 [ Metrics ] : Complexity Measures . H12 [ User/Machine Systems ] : Human Factors , Human Information Processing . H54 [ Hypertext / Hypermedia ] : Navigation , Theory , User Issues .
General Terms Measurement , Human Factors , Algorithms .
Keywords User interaction , complexity , widgets , graph theory , hypertext .
1 . INTRODUCTION ‘User interactions on the web’ is not a homogeneous group – each website is designed differently & has a unique interaction experience . A quantitative evaluation of interaction complexity has potentially widespread applications for eg search engines can use interaction complexity as a parameter in ranking search results . We propose an approach to quantify the navigational complexity of web interactions . The rest of the paper is organized as follows . Section 2 briefly outlines the related work in quantitative measures for interaction complexity . Section 3 discusses our proposed approach . In Section 4 , we give some examples of how our proposed approach can be applied . Section 5 discusses future work & concludes .
2 . RELATED WORK Efforts to quantify user interaction have a rich history . One of the early works which used a structural graph theoretic approach to quantify complexity was a Petri net based approach applied to an interactive ( dialog based ) system [ 1 ] . A state ( si ) transition ( tj ) matrix described all possible user actions to change from one dialog state to another . Thus , a user interaction was modeled as
Copyright is held by the author/owner(s ) . WWW 2010 , April 26–30 , 2010 , Raleigh , North Carolina , USA . ACM 978 1 60558 799 8/10/04 .
( s1 ) > [ t1 ] > ( s2 ) > [ t2 ] … . > ( sn ) . Based on this framework & empirical data from user studies , the authors found that the measure which best captured interaction complexity was the cyclomatic number of the Petri net . For a graph G , of n vertices , e edges , & p connected components , the cyclomatic number is defined as v(G ) = e – n + p . In a strongly connected graph , the cyclomatic number measures the maximum number of linearly independent circuits [ 3 ] – which can serve as the basis for generating the graph . Thus , as the number of potential flows in the interaction graph increases , the cyclomatic number grows correspondingly [ 2 ] .
In recent work , the MAUSE project [ 7 ] is a collaborative effort to measure user experiences provided by graphical user interfaces , using multiple Usability Evaluation Methods ( UEM ) . Comber [ 4 ] has focused on analyzing the complexity of layout design on GUI usability . Our work is different from these , in that we concentrate on measuring the navigational complexity due to the hypertext feature in web interactions . This work was , in fact , motivated by our prior work on Tasklets [ 6 ] that reduce web interaction complexity by packaging web interaction flows into widgets . We formulate a graph theoretic structural model to measure the reduction in complexity achieved by these widgets created automatically . 3 . WEB INTERACTION COMPLEXITY In this work , we focus exclusively on the interaction complexity due to the navigational complexity of a web interaction ie the cognitive load induced on a first time user on a website to achieve her goal . Our approach is structural in nature and independent of the interaction semantics & UI design which we are pursuing in future work . We start with the assumption that the start & end of the web interaction are known .
Figure 1 : An interaction flow through the web ( highlighted ) . To capture the complexity due to navigation , we model a web interaction as a flow ( W ) through a graph ( set of web pages wk ) as highlighted in Figure 1 . The interaction complexity of this flow should then capture the cognitive load due to navigation . If the user is on page wi and should ideally go to wi+1 to achieve her goal , the cognitive load on the user is the choice among the number of outgoing hyperlinks , ri from wi . This notion is captured in eq . 1 below the extra “ 1 ” in the eq . accounts for ( a ) the Back
WWW 2010 • PosterApril 26 30 • Raleigh • NC • USA1075 button in the web browsers and / or ( b ) leaf web pages graph which have no outgoing link eg w11 & w12 in Figure 1 . ( Eq 1 ) p(wi+1|wi ) = f(1 + ri ) ~ 1 /(1 + ri ) p(W ) = p(w1).p(w2|w1 ) p(w3|w2)…… . p(wk|wk 1 ) ( Eq 3 ) p(w1 ) = g ( Page Rank(w1 ) )
( Eq 2 )
The exact form of function f( ) will depend on whether & how we want to differentiate between outgoing links for eg it can incorporate UI design in future work . Under the simplifying assumption of treating all outgoing links homogeneously , eq . 1 reduces to 1 /(1 + ri ) . Eq 2 extends the model from a single web page to a flow over a web graph . We make the simplifying assumption that the probability of going from page wi to wi+1 is independent of the path that led to wi . The value of p(W ) has a range between ( 0 , p(w1) ] . The upper bound of p(w1 ) is met when each node in the underlying web graph has just one outgoing link to the next node . The lower bound tends to zero as the cyclomatic number of the underlying web graph increases . The first term , p(w1 ) captures the probability of the user reaching the starting web page of the user interaction . This can either be ‘1’ if the starting page of the web interaction is known or it can be defined using eq . 3 if the starting point of the interaction is reached via a search engine . The exact form of g( ) is search engine dependent . We now define an information theoretic measure of complexity . If we assume a random walker on the web , we can restate the navigational complexity in terms of the ‘lack of information’ of a random walker to choose among the number of outgoing hyperlinks , ri available on a web page , wi . In information theory , entropy [ 5 ] measures the information content one is missing when one does not know the value of the random variable & is defined as . Using this definition of entropy , with ∑−= eq . 1,2 & 3 ,
AH ) log p p
( i i i wH i
(
)
−= wH i
(
)
−=
GWH
=
)
( r i
∑ r i r + i k ∑
+
1
2 wp ( i
| w i log )
2 wp ( i
1 +
| w i
)
1 + log
2
1( 1 + r i
) wH i
(
)
This entropy measures ( in bits ) the information content that a first time user is to be able to decide where to navigate on the web to achiever her goal . The form of G will depend on g( ) in eq . 6 . The above equations focus explicitly on defining a quantitative measure of user interaction complexity due to navigational complexity but other interactions such as form filling can also be included for eg if each potential user action on a particular web page wi ( eg a radio button ) is taken to have an equal cognitive load ai , then the interaction complexity can be modeled as , p(wi+1|wi ) = f(1 + ri , ai ) ~ 1 /(1 + ri + ai ) Thus , correspondingly : wH i
(
)
−= r a + i i ar ++ i i
1 log
2
1 r ++ i
( 1 a i
) local weather
4 . PRELIMINARY RESULTS We applied our proposed complexity measure to a number of web interactions but we present only two here due to space limitations . In all cases , we assumed that the user knew the starting webpage of the web interaction needed to achieve her task/goal . Getting information from wwwweathercom : starting page has 192 outgoing links , 3 radio buttons , 2 text boxes and 2 associated submit buttons . Accessing the weather information of a desired location requires 2 mouse clicks & filling out one form field . Thus , r1=192 & a1=7 , p(W)=p(w2|w1 ) = 1/(1+ 192+7)=0.005 & H(W)=199/200 log2(200)=7.61 ~ 8 bits . Getting personal horoscope from wwwmsncom : starting page has 198 outgoing links , 4 textboxes & 4 associated submit buttons ; second page has 169 outgoing links with 3 text boxes , 5 checkboxes , 3 buttons & 4 drop down lists with 2 , 12 , 31 & 110 drop down items respectively . Therefore , we have r1=198 & a1=8 , r2=169 & a2=15 ; p(W)=p(w2|w1 ) . p(w3|w2)=(1/(1+198+8) ) . ( 1/(1+ 169+15))=0.000026 & H(W)=206/207 log2(207)+174/175 log2(175)=15.07 ~ 16 bits . to personalized Since widgets provide 1 button access information such as local weather or horoscope , H(W ) also measures the reduction in interaction complexity achieved by a widget . This is mainly due to reduced number of user actions required to achieve user ’s goal . A widget reduces the navigational uncertainty by capturing one of the many flows that are possible across a graph . Thus , the proposed measure , quantifies the reduction in navigational complexity achieved by a widget . The above example shows that a widget for getting horoscope has more value than the one getting weather information – purely from complexity reduction perspective . 5 . CONCLUSIONS & FUTURE WORK We have proposed a method to measure the navigational complexity of a web interaction . We have also shown how the proposed complexity measure may be applied to measure the reduction in interaction complexity due to a web widget . Our future work will ( a ) validate the proposed measure with user studies & ( b ) extend the proposed measure to account for UI design & non navigational interactions like form filling etc .
6 . REFERENCES [ 1 ] Rauterberg , M . How to Measure Cognitive Complexity in
Human Computer Interaction , Cybernetics and systems research V2 ( 1996 )
[ 2 ] McCabe , TJ A Complexity Measure . in IEEE Transactions on Software Engineering . Issue : 4 ( 1976 ) , pp . 308 320
[ 3 ] C . Berge , Graphs and Hypergraphs . Amsterdam , The
Netherlands : North Holland , 1973 .
[ 4 ] Comber T . and Maltby JR Layout Complexity : Does It Measure Usability ? IFIP TC13 Intl Conference on HCI ( 1997 ) . pp : 623 626
[ 5 ] CE Shannon , A Mathematical Theory of Communication , Bell System Technical Journal , vol . 27 , July , October , 1948 .
[ 6 ] Manjunath , G . et al . Creating Personal Mobile Widgets without Programming in Developers Track at 18th international conference on World wide web ( 2009 )
[ 7 ] MAUSE project , http://cost294.org
WWW 2010 • PosterApril 26 30 • Raleigh • NC • USA1076
