Pruning Social Networks Using Structural Properties and Descriptive Attributes
Lisa Singh
Computer Science Dept . Georgetown University Washington , DC , USA
Lise Getoor
Computer Science Dept . University of Maryland College Park , MD , USA singh@csgeorgetownedu getoor@csumdedu
Louis Licamele
Computer Science Dept . University of Maryland College Park , MD , USA licamele@csumdedu
Abstract
Social networks abound ; examples include online community networks , disease transmission networks , corporate executive networks , and criminal/terrorist networks . Scale is often an issue with understanding and making use of large social networks . As the size of the network increases , it is harder to make sense of the network , and it is computationally costly to manipulate and maintain . Here we investigate methods for pruning social networks by determining the most relevant relationships in a social network . We measure importance in terms of predictive accuracy on a set of target attributes of social network groups . Our goal is to create a pruned network that models only the most informative affiliations and relationships . We present methods for pruning networks based on both structural properties and descriptive attributes . These pruning approaches can be used to decrease the expense of constructing social networks for analysis by reducing the number of relationships that need to be investigated and as a data reduction approach for approximating larger graphs or visualizing large graphs . We demonstrate our method on a network of NASDAQ and NYSE businesses and their executives and on a bibliographic network describing publications and authors .
1 Introduction
A social network is defined as ” a set of actors ( eg , persons , organizations ) linked by a set of social relationships ( eg , friendship , transfer of funds , overlapping membership ) of a specified type ” [ 12 ] . Social networks are often represented as graphs ; one of the most common representations has nodes for the actors and edges indicating links between related actors . Examples of social networks include online community networks , disease transmission networks , corporate executive networks , co author networks and criminal/terrorist networks . Many different types of relationships or affiliations exist between nodes or actors in a network . Examples of relationships include coworkers , family relationships , schoolmates , athletic teammates , etc .
A social network has both structural properties and descriptive attributes . The structural properties are determined by the graph structure of the network . Examples include the density of the graph , the average degree of nodes in the graph , the number of cliques in the graph , etc . A great deal of recent research has focused on understanding the structural properties of social networks . In addition to structural properties , there are descriptive attributes describing features specific to the social context of the network . A corporate board social network may contain descriptive attributes representing the job function and age of a board member . A disease transmission social network may contain descriptive attributes representing the location of person ’s home and date of disease discovery . While a corporate board network and a disease transmission network may have similar structural attributes , the example illustrates that the conceptual data component will likely contain different descriptive attributes .
In the past , the social networks as studied in sociology tended to be relatively small , often with only tens of nodes . However , given the great increase in ability to both gather and process data , the social networks being analyzed today can be quite large . Because the data used to describe the network may not originally have been collected for the purpose of social network analysis , the data may contain irrelevant , redundant or noisy information . Noisy and redundant information can make networks difficult to interpret . Automatic techniques for identifying relevant aspects of the social networks can help improve computational efficiency and may at the same time improve understandability . Furthermore , since recording changes to a social network and maintaining consistency can be expensive , we can benefit from minimizing the amount of information that we store .
The goal of this paper is to investigate different approaches to pruning one common category of social networks called an affiliation network . Affiliation networks are a special type of social network containing two kinds of entities , actors and events , and links between actors and an event represent participation of the actors in the event . We begin by presenting a general framework for affiliation networks and use relational algebra to more formally characterize the different network representations . Then using our relational algebra model , we present different pruning strategies based on both structural properties and descriptive attributes . Our aim is to find compressed networks that maintain predictive and descriptive quality . Here we measure the compression in terms of the description length of the network and we measure the quality by measuring the predictive accuracy for event attribute classifier built from the compressed network .
We have evaluated our pruning methods on two realworld datasets . One is a network of NASDAQ and NYSE business firm executives and board members . The second is a bibliographic network describing publications and authors . We have found that we can achieve significant compression without sacrificing ( and in some cases improving ) predictive accuracy .
2 Related Work
Recently there has been a surge of interest in social networks . The studies range from the more traditional analysis of social structures to the analysis of information networks such as the web and communications networks . Here we give a sampling of some of the recent work . Much of the attention on graphs has been on web graphs . There has been work on representing [ 17 ] , characterizing [ 2 ] , and compressing the web graph [ 19 ] . Other related work includes work on graph mining [ 3 , 7 , 8 ] . However , the majority of graph mining approaches study collections of graphs rather than a single social network .
A large portion of the work in mining social networks has focused on analyzing structural properties of the networks . For a recent survey , see Newman [ 14 ] . Much of the work has been descriptive in nature , but recently there has been more work which uses structural properties for prediction . Within this category , a number of papers focus on the spread of influence through the network ( eg , [ 4 , 10] ) . These papers attempt to identify the most influential nodes in the network . Domingos and Richardson [ 4 ] use a global , probabilistic model that employs the joint distribution of the behavior over all the nodes . Kempe et al . [ 10 ] use a diffusion process that begins with an initial set of active nodes and uses different weighting schemes to determine whether or not a neighbor should be activated . Liben Nowell and Kleinberg [ 13 ] attempt to predict future interactions between actors using the network topology . In addition , Palmer et al . [ 15 ] propose an efficient method for approximating the connectivity properties of a graph .
Other work uses structural properties for both classification and clustering . For example , Agrawal et al . [ 1 ] use the link structure of newsgroup social networks to classify user behavior within a newsgroup , specifically they identify whether or not a respondent agrees with a posting . Schwartz and Wood [ 18 ] create an email graph with edges corresponding to sets of shared interests and present an algorithm that analyzes the graph structure in order to clustering users with similar interests . Their approach derives a specialization subgraph from the relationship clusters .
While the above approaches utilize the link structure to predict class membership , they do not investigate techniques for maintaining predictive accuracy while reducing the overall size of the social network . Schwarts and Woods [ 18 ] create a subgraph during analysis . This subgraph can be viewed as a pruned version of the original graph . However , this work and the others mentioned above do not make use of the attribute values for related actors and events . By only considering the links , valuable attribute information that could be used to improve predictive accuracy is ignored .
There is a line of work which makes use of the descriptive attributes of the entities in the network for collective prediction ( eg , [ 9 , 20 , 6] ) . While potentially applicable here as well , our focus is not on collective classification .
Our paper investigates using both the link structure and neighboring attribute information to predict attributes associated with different actors and events . Our focus is on a general formulation of the problem , and within that formulation , on strategies for reducing the size of the network while maintaining predictive accuracy .
3 Formal Framework
We begin this section by defining and describing different representations of affiliation networks . We will then translate these network models into relational algebra expressions . By doing so , we will be able to use relational algebra operators to more clearly illustrate our pruning methodology . Throughout we use terms from the field of social networks [ 21 ] .
An affiliation network is described by a set of actorsA , a set of eventsE , and a set of membership relationsR : A=fa1;:::;agg ; E=fe1;:::;ehg ; R=f ijj actorai participates in eventejg :
3.1 Affiliation Graph Representations
An affiliation network may be represented using many different graph structures . The most common representation for affiliation networks is as a bipartite graph , which we
2 a1 a2 e1 a1 a2 e1 e2 e3 a3 e2 e3 a5 a3 a4 a5 a4
Figure 1 . ( a ) A simple affiliation network with actorsa1,a2,a3,a4 anda5 and eventse1,e2 ande3 ( b ) ffl Actors have attributesB1;:::;Bk ffl Events have attributesC1;:::;C  ffl Membership relations have attributesD1;:::;D .
The co(cid:173)membership graph for the affiliation network ( c ) The event overlap graph for the network .
( b )
( a )
( c ) will call simply the affiliation graph . In this representation , there are two different node types , representing actors and events . Networks with two node types are called two mode networks . There is a single edge type and edges represent membership relationships between actors and the events in which they participate . Figure 1(a ) shows an example of a two mode actor event node graph . The squares in the figure represent actors and the triangles represent events . The membership relations are highlighted in this graph structure .
To focus on actors , one can perform a unipartite projection of the actors on the two mode affiliation graph . The resulting network is a uni mode network , where we have a single object type and a single edge type . Representing an affiliation network in this way results in what is called the co membership graph . The co membership graph has a node for each actor , and an edge between actors who participate in the same event . Figure 1(b ) shows an example uni mode co membership graph corresponding to the affiliation graph in Figure 1(a ) . In this case , events are associated with cliques in the graph and the emphasis is on connections among actors .
Similarly , to focus on events , one can perform a unipartite projection of events on the two mode affiliation graph . This results in what is called an event overlap graph . It also contains a single node type and a single edge type . In the event overlap graph , the emphasis is on the connections among events . This graph has a node for each event , and an edge between events that share a common actor . Figure 1(c ) shows an example of a uni modal event overlap graph corresponding to the affiliation graph in Figure 1(a ) .
In addition to the nodes and edges themselves , the nodes and edges in the affiliation network can have descriptive attributes or features associated with them . We will define the following attribute types for an affiliation network :
3
Figure 2(a ) shows the affiliation graph along with descriptive attributes for the actors and events ( shown in ovals ) .
For example , in a corporate board social network , executives may have attributes such as education level , academic degree and age , corporate boards may have attributes describing the corporation such as industry , sector , stock exchange and share price , and the serves on board relation may have attributes describing the relationship between the corporation and the executive such as position on the board and length of time served on the board .
3.2 Relational Algebra Formulation
The previous section gave abstract representations for affiliations networks . In this section , we translate these representations into relational representations . The relational representations will have the advantage that we can discuss certain transformations of the graphs in terms of relational algebra .
We introduce the relationsA dA;B1;:::;Bk , representing the actors,E dE;C1;:::;C  , representing the events , andR dA ; dE;D1;:::;D representing the participation relations of a network . Here the dA , dE , and dA ; dE are keys for the relationsA,E andR , reR , which maps actors and events . The translation can be
Given the above relations , the translation to the twomode bipartite graph representation of the affiliation graph is straightforward . The nodes in the graph are the union of the actors in relation A and the events in relation E . The edges in the graph are identical to the participation relation spectively . b1 = 1 b1 = 2 b1 = 2 b1 = 3 b1 = 3 b1 = 4 b1 = 4 b1 = 5 b1 = 5 a1 a2 a3 a4 a5 e1 e2 e3 c1 = 2 c1 = 0 c1 = 1
IdE IdE
1 1
2 2
3 3 c1 c1
2 2
0 0
1 1
Max(b1 ) Max(b1 )
Avg(c1 ) Avg(c1 )
2 2
4 4
5 5
0 0
1.5 1.5
0 0
Figure 2 . ( a ) The affiliation graph with descriptive attributes for the actors and events shown in ovals . ( b ) The constructed attributes for the events .
( a )
The CM relation describes an edge created for each pair of used to create the affiliation graph where an edge is placed
The objects in the co membership graph are simply the actors in relation A and the edges can be constructed using the following algebraic expression to find instances of related actors : 1 between each dA and dE for every instance in relation R . C S : dA;R : dA = S : dA;R : dA S : dA<R : dA flS R ./ S : dE=R : dER actorsS : dA andR : dA which participate together in at E S : dE;R : dE = S : dA=R : dAR ./ S : dE;R : dE S : dE<R : dE flS R where an edge represents each pair of eventsS : dE and R : dE which have at least one actor in common . while minimizing information loss . Let = A;E;R be 1Recall thatfl is the relation renaming operator [ 5 ] .
Similarly , the objects in the event overlap graph are the events in relation E and we can construct the edges in the event overlap graph using the following algebraic expression to find instances of related events : least one event . Note that the co membership graph loses information—we no longer know how many events the actors have in common .
Our goal is to develop principled approaches to compressing and pruning social networks . Our approach is to determine which portions of the network can be removed
4 Prediction in Social Networks
4
( b )
4.1 Predicting Event Attributes
Here , we will focus on maximizing our predictive accuracy on the event attributes . For ease of exposition , we will assume we are attempting to maximize the predictive accu network ( we will describe how we construct the pruned network shortly ) . In this section , we describe the predictive accuracy measure used to assess the performance of different pruning approaches . We will frame our discussion using the relational algebra notation presented in the previous section . our original network and 0= A0;E0;R0 be our pruned racy for a single event attributeE:Ci , based on attributes of fier , using local neighborhood information , to predictE:Ci . tributesfB1;:::;Bkg , we have associated aggregate operatorsfaB1;aBkg and for the event attributesfC1;:::;C g , we have associated aggregate operatorsfaC1;:::;aC g , AA dE;AB1;:::;ABk = 2Recall thatfl is the grouping operator in relational algebra [ 5 ] .
We solve this problem by computing an aggregate over the set of related actors and over the set of events . Aggregation is a common technique used to construct feature vectors in relational domains [ 11 , 16 ] . Here we assume some set of aggregates is associated with each attribute . For the actor at
Now it is easy to see the difficulty with this setup . Each event may have a different number of related actors and a different number of related events , so how can we construct features to use in our classifier ? related actors found using the co membership information and based on attributes of related events found using the event overlap information . The idea is to construct a classi
We begin by computing the aggregates over the set of related actors : 2 which we call AE for aggregates over events . which we call AA for aggregates over actors . Next we compute aggregates constructed from the related events :
We can combine these two relations to get the following set of constructed features from which we will learn to predict event attributes :
R : dA=A : dAA fl dE;aB1 B1 ;:::;aBk Bk R ./ AE dE;AC1;:::;AC  = E :R : dE=E : dEE ./ fl dE;aC1 C1 ;:::;aC  C  E ./ E ./ E : dE=AA : dEAA E : dE=AE : dEAE operator that we use forB1 is maximum and the aggregate operator that we use forC1 is average . The constructed a classifierF , which predicts the value of E.C based on fAB1;:::;ABk;AC1;:::;AC g . We compare the classifierF constructed from the original social network =fA;E;Rg with the classifierF 0 constructed from a pruned social network 0= fA0;E0;R0g . We compare both accuracy on the training
The above describes in a generic way how we find the features from which we will predict event attributes . In order to actually make a prediction , we will need to first learn a classifier . Here we do not do anything out of the ordinary . We construct an appropriate training set from an observed social network . The constructed training set can be used by any supervised learning method to learn
Example : Consider the affiliation network with descriptive attributes shown in Figure 2(a ) . Suppose that the aggregate table showing the aggregates that will be used to build our classifier is shown in Figure 2(b ) .
4.2 Learning a Classifier for Event Attributes sets and , more importantly , accuracy on test sets . Our goal is to find pruned networks that are both compact and accurate .
5 Pruning Techniques
Next we consider different techniques for pruning the network . We consider two categories of operations . The first involves removing edges from the affiliation network . The second involves removing actors ( and incident edges ) from the affiliation network . We can use different techniques for pruning a network . The three techniques of interest to us are : 1 ) pruning based on structural properties , 2 ) pruning based on descriptive attribute values , and 3 ) pruning based on random sampling .
Descriptive Attribute based Pruning Another pruning technique of interest involves pruning based on descriptive
Structural Pruning Structural network properties or measurements involve evaluating the location of actors in a social network . Measuring the network location involves finding the centrality of a node . Structural measures have traditionally been used to identify prominent or important nodes in a social network . Two well known centrality measures are degree and betweenness . The degree of a node is defined as the number of direct connections a node has to other nodes in the network . The nodes with the most connections are considered the most active nodes in the network . They are referred to as the connectors or the hubs in the network . Betweenness of a node corresponds to the number of cliques to which a node belongs . A node with high betweenness is considered to have great influence in the network . Nodes with high betweenness are referred to as brokers . Therefore , when pruning based on structure , we will be interested in removing actors that are not hubs and/or brokers from the network . attributes . We prune edges by selecting on attributesDj of theR relation , R0=R:Dj=dj R ; wheredj is some constant . In other words , we will remove edges from our graph based on values forDj . We look at both the case where we keep only edges with valuedj for Dj , and also the case where we keep all edges except edges with valuedj . Pruning edges may result in pruning both In addition , we prune actors by selecting on attributesBj of theA relation,A0=A:Bj=bj A : D =  g jAj   g jEj jRj   g jAj   g jEj where the logs are base two.D is the number of bits
Random Sampling Finally , as a baseline , we compare pruning based on random sampling . This involves maintaining only a random sample of the actor population for analysis .
It is important to quantify the compression achieved by pruning . We use a relatively generic measure , the description length of the graph ,
Pruning actors also results in a reduction in the number of edges , since we drop any edges to non selected actors . actor and event nodes if after pruning there are no edges connecting them to the network . required to represent the network . We need the first two terms to describe the number of actors and the number of events and the final term is the number of bits required to represent the edges .
5
ECN Exchange Attribute
ECN Sector Attribute i o i t a R n o s s e r p m o C
1.00
0.90
0.80
0.70
0.60
0.50
0.40
0.30
0.20
0.10
0.00
Full
Age
Tenure
Position
Structure
Random i o i t a R n o s s e r p m o C
1.00
0.90
0.80
0.70
0.60
0.50
0.40
0.30
0.20
0.10
0.00
0.00
10.00
20.00
30.00
40.00
50.00
60.00
70.00
80.00
0.00
5.00
10.00
15.00
20.00
25.00
30.00
35.00
40.00
45.00
Predictive Accuracy
( a )
Predictive Accuracy
( b )
APN Publication Type Attribute
APN Number of References Attribute i o i t a R n o s s e r p m o C
1.00
0.90
0.80
0.70
0.60
0.50
0.40
0.30
0.20
0.10
0.00
0.00
10.00
20.00
30.00
40.00
50.00
60.00
70.00
Predictive Accuracy
( c )
Full
Descriptive
Structural
Random i o i t a R n o s s e r p m o C
1.00
0.90
0.80
0.70
0.60
0.50
0.40
0.30
0.20
0.10
0.00
0.00
10.00
Full
Age
Tenure
Position
Structure
Random
Full
Descriptive
Structural
Random
Figure 3 . Comparisons of compression vs . accuracy for a variety of network pruning strategies for a ) ECN exchange b ) ECN sector c ) APN pulbication type and d ) APN number of references .
6 Experimental Results
In this section we evaluate the degree of compression and the predictive accuracy of different pruning approaches . We analyzed two affiliation networks . The first data set , the Executive Corporation Network ( ECN ) , contains information about executives of companies that are traded on the NASDAQ and the NYSE . The executives serve on the Board of Directors for one or more of the companies in the data set . This data was collected from the Reuter ’s market data website ( yahoomulexinvestorcom ) in January 2004 . There are 66,134 executives and 5384 companies ( 3284 NASDAQ and 2100 NYSE ) . The executives are the actors in ECN , the companies are the events and board membership is the connecting relationship between the actor nodes and the event nodes . The relational schema is : ffl A = Executive(exec id , exec name , age , educa
80.00
90.00
40.00
50.00
60.00
70.00
20.00
30.00
( d )
Predictive Accuracy ffl E = Company(co id , co name , stock exchange , sector , ffl R = BoardMembership(exec id , stock price ) tion level ) co id , offi cer position , join date )
The average board size is 14 , the average number of boards an officer is on is 1.14 , the number of officers serving on multiple boards is 6544 , and the number of boards these officer are on is 24 We predict two attributes , stock exchange and sector . A sector is a coarse grouping of industries of the companies , eg , telecommunications and health care . We prune on descriptive attributes such as officer position , eg , CEO , President , Treasurer and Director .
The second data set , the Author Publication Network ( APN ) , contains information about publications and their authors . This data set was created using a portion of the ACM SIGMOD anthology . There are 13,070 authors and
6
ECN Structural Properties for Actors in Descriptive Attribute Networks
APN Structural Properties for Actors in Descriptive Attribute Networks
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0 s r o t c A f o r e b m u N
A g e.A
A g e.B
A g e.C
A g e.D
A g e.E
T en.A
T en.B
T en.C
T en.D
OTHER
HBR
BRK
HUB
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0 s r o t c A f o r e b m u N
Figure 4 . The structural characteristics of actors in different prunings for a ) ECN and b ) APN .
P os.A
P os.B
P os.C
P os.D
P os.E
F U L L
Ne twork
( a ) ber of publications )
16,287 publications . The authors are the actors in the APN and the publications are the events . Paper authorship is the connecting relationship . The relational schema is : ffl A = Author(author id , author name , affiliation , numffl E = Publication(pub id , pub type , pub date , numffl R = PaperAuthorship(author id , pub id ) ffl no pruning ( full ) ffl descriptive attribute pruning ( descriptive ) ffl pruning based on hubs and brokers ( structural ) ffl random sampling ( random )
The average number of authors per publication is 2.4 and the average number of publications per author is 29 For APN , we predicted the two event attributes pub type and number of references ( to publication ) .
Our goal is to find small networks that can accurately predict event attributes . We compare the following affiliation networks : ber of references , number of citations )
We built event attribute classifiers from the networks as described in Section 4 . For categorical aggregate attributes , we calculated the mode of the neighboring event values , and for numeric aggregate attributes , we calculated the minimum , maximum and average of the neighboring event values . The classifiers were created using WEKA . We tested a range of classification algorithms including decision trees , naive Bayes , and support vector machines ( SVMs ) . The results were relatively consistent across classifiers ; due to space constraints , here we present results only for SVMs using five fold cross validation .
When constructing our feature vector , we constructed aggregates for the following ECN actor and event attributes : stock exchange , industry , sector , number of officers on a board , number of advanced degrees on a board and officer age of a board . We evaluated three descriptive prunings . The first two descriptive prunings , position and tenure , involve removing edges from our affiliation
OTHER
HBR
BRK
HUB
A
B
C
D
E
FULL
Ne twork
( b ) graph for executives based on the attributes BoardMembership.officer position and BoardMembership.join date . For example , one pruning of BoardMembership.officer position keeps only edges of CEOs and removes all other membership edges from the network . The third descriptive pruning involves removing actors based on age .
To group attribute values , we binned numeric attributes and we abstracted categorical attributes . Each descriptive attribute used for pruning buckets was created based on maintaining approximate equal size buckets or based on sematically interpretable abstractions . For both our networks , the binnings resulted in four to five bins for each attribute . For example , the attribute bands for BoardMembership.officer position are as follows : ffl A Chairman of the Board ffl B Executive Officer ( CEO , President , COO , etc . ) ffl C Senior Officer ( VP , Sr . VP , Comptroller , etc . ) ffl D Board Officer ( Treasurer , Secretary , etc . ) ffl E Director one of two interpretations for an attributeB with attribute value : 1 ) maintain only actors withB= ( only ) and 2 ) maintain all actors except whereB= ( except ) . We ( between10 and90 of the actors in the network ) .
For structural pruning , we tested the following four cases : maintaining only actors who are hubs , maintaining only actors who are brokers , maintaining only actors who are both hubs and brokers , and maintaining only actors who are hubs or brokers . Finally , for random pruning , we compared results on random samples for 9 different sample sizes evaluated pruning on every descriptive attribute value for each descriptive pruning category .
For thor.number of publications for descriptive pruning .
As mentioned earlier , descriptive attribute pruning has attribute
APN , used
Au the we
Figure 3 shows compression versus predictive accuracy for different attributes of the each of the networks . The right upper corner represents the ’best’ networks in terms of compression and predictive accuracy . Figure 3(a ) shows results
7 for the ECN exchange . The classifier built using the full network achieves accuracy of 724 % The best accuracy and compressions are for the following networks : pruning on position , we achieve an accuracy of 72.3 % with a compression of 94 % ( in this case , we kept only the chairs ) ; pruning on tenure , we achieve an accuracy of 70.29 % with a compression of 95 % , and pruning on age , we achieve an accuracy of 69.2 % with a compression of 99 % ( in this case , we kept only the older executives ) . These accuracies are all significantly better than the baseline prediction accuracy of 61 % achieved by simply choosing the most common exchange . For predicting the ECN sector , shown in Figure 3(b ) , the full network achieves accuracy of 40.4 % and the the best networks are the ones that prune on age ( we achieve accuracy of 40.2 % with compression of 34 % , in this case we kept the younger executives rather than the older ones ) and structure ( we achieve accuracy of 39.7 % and compression of 97 % by keeping only the brokers ) . Figure 3(c ) and ( d ) show similar results for the pruned APN networks , with many of the pruned networks achieving significantly higher accuracies than classifiers built from the full network . For both APN attributes , the network pruned on structure that achieved the best accuracy compression tradeoff was the one that kept only the actors that were both hubs and brokers . In all cases , pruning on descriptive attributes and structure properties significantly outperformed random pruning .
To better understand how the two relate , in Figure 4 we show the percentage of structural actor types ( hubs , brokers ( BRK ) , hubs and brokers ( HBR ) , and other ) preserved under various descriptive pruning strategies . These graphs show that for two different datasets , the networks created using descriptive pruning contain a different mix of actors than those created using structural pruning . This supports our claim that structural pruning and descriptive pruning are two distinct methods for compressing networks .
7 Conclusions
We believe that exploring descriptive and structural compression techniques together , beyond allowing compact and accurate compression of networks , is also important for identifying actors that are the most useful for network understanding . In this paper we showed how to use structural properties and descriptive attributes to prune social networks . We began by introducing a general framework for representing affiliation networks using relational algebra to formally express different network representations . We then used relational algebra expressions to define pruning strategies based on structural properties and descriptive attributes . Finally , we demonstrated the effectiveness of these pruning approaches on two real world data sets . While the networks resulting from structural pruning and descriptive pruning are quite distinct , both are viable approaches for reducing the size of a social network while still maintaining predictive accuracy on a set of target event attributes .
References
[ 1 ] R . Agrwal , S . Rajagopalan , R . Srikant , and Y . Xu . Mining newsgroups using networks arising from social behavior . In International World Wide Web Conference , 2003 .
[ 2 ] A . Broder , R . Kumar , F . Maghoul , P . Raghavan , S . Rajagopalan , R . Stata , A . Tomkins , and J . Wiener . Graph structure in the web . In International World Wide Web Conference , 2000 .
[ 3 ] D . Cook and L . Holder . Graph based data mining . IEEE Intelligent
Systems , 15(2 ) , 2000 .
[ 4 ] P . Domingos and M . Richadson . Mining the network value of customers . In ACM Intl . Conf . on Knowledge Discovery and Data Mining , 2001 .
[ 5 ] H . Garcia Molina , J . Ullman , and J . Widom . Database Systems .
Prentice Hall , New Jersey , 2002 .
[ 6 ] L . Getoor .
Link based classification .
In S . Bandyopadhyay , U . Maulik , L . Holder , and D . Cook , editors , Advanced Methods for Knowledge Discovery from Complex Data . Springer , 2005 .
[ 7 ] T . Horvath , T . Gartner , and S . Wrobel . Cyclic pattern kernels for predictive graph mining . In ACM Intl . Conf . on Knowledge discovery and data mining , 2004 .
[ 8 ] A . Inokuchi , T . Washio , and H . Motoda . An apriori based algorithm for mining frequent substructures from graph data . In Principles of Data Mining and Knowledge Discovery , 2000 .
[ 9 ] D . Jensen and J . Neville . Data mining in social networks .
In National Academy of Sciences Symposium on Dynamic Social Network Analysis , 2002 .
[ 10 ] D . Kempe , J . Kleinberg , and ´E . Tardos . Maximizing the spread of influence through a social network . In ACM Intl . Conf . on Knowledge Discovery and Data Mining , 2003 .
[ 11 ] A . J . Knobbe , M . de Haas , and A . Siebes . Propositionalisation and aggregates . In Eur . Conf . on Principles of Data Mining and Knowledge Discovery . Springer Verlag , 2001 .
[ 12 ] E . O . Laumann , L . Galskeiwicz , and P . Marsden . Community structure as interorganizational linkages . Annual Review of Sociology , 4:455–484 , 1978 .
[ 13 ] D . Liben Nowell and J . Kleinberg . The link prediction problem for social networks . In Intl . Conf . on Information and Knowledge Management , 2003 .
[ 14 ] M . Newman . The structure and function of complex networks . IAM
Review , 45(2):167–256 , 2003 .
[ 15 ] C . Palmer , P . Gibbons , and C . Faloutsos . ANF : A fast and scalable tool for data mining in massive graphs . In ACM Intl . Conf . on Knowlege Discovery and Data Mining , 2002 .
[ 16 ] C . Perlich and F . Provost . Aggregation based feature invention and In Intl . Conf . on Knowledge Discovery relational concept classes . and Data Mining , 2003 .
[ 17 ] S . Raghavan and H . Garcia Molina . Representing web graphs .
In
IEEE Intl . Conf . on Data Engineering , 2003 .
[ 18 ] M . F . Schwartz and D . C . Wood . Discovering shared interests using graph analysis . Communications of the ACM , 36(8 ) , 1993 .
[ 19 ] T . Suel and J . Yuan . Compressing the graph structure of the web . In
Data Compression Conference , 2001 .
[ 20 ] B . Taskar , E . Segal , and D . Koller . Probabilistic classification and clustering in relational data . In Intl . Joint Conf . on AI , 2001 .
[ 21 ] S . Wasserman and K . Faust . Social network analysis : methods and applications . Cambridge University Press , Cambridge , 1994 .
8
