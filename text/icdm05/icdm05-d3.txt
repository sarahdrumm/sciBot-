Blocking Anonymity Threats Raised by Frequent Itemset Mining
Maurizio Atzoriyz
Francesco Bonchiy
Fosca Giannottiy
Dino Pedreschiz yPisa KDD Laboratory zPisa KDD Laboratory
ISTI CNR , Area della Ricerca di Pisa
Computer Science Dep . , University of Pisa
Via Giuseppe Moruzzi , 1 56124 Pisa , Italy
Largo Pontecorvo , 3 56127 Pisa , Italy
Abstract
Example 1 Consider the following association rule :
In this paper we study when the disclosure of data mining results represents , per se , a threat to the anonymity of the individuals recorded in the analyzed database . The novelty of our approach is that we focus on an objective definition of privacy compliance of patterns without any reference to a preconceived knowledge of what is sensitive and what is not , on the basis of the rather intuitive and realistic constraint that the anonymity of individuals should be guaranteed . In particular , the problem addressed here arises from the possibility of inferring from the output of frequent itemset mining ( ie , a set of itemsets with support larger than a threshold ) , the existence of patterns with very low support ( smaller than an anonymity threshold k)[3 ] . In the following we develop a simple methodology to block such inference opportunities by introducing distortion on the dangerous patterns .
1 . Introduction
Consider a medical institution where the physicians collect , for research purposes , data about their patients . Having unrestricted access to the data , they can perform real mining on all available information using traditional mining tools { not necessarily the privacy preserving ones . This way they maximize the outcome of the knowledge discovery process , without any concern about privacy of the patients which are recorded in the data . But the anonymity of patients becomes a hot issue when the physicians want to share their discoveries ( eg , association rules holding in the data ) with their scientific community . It is generally believed that data mining results do not violate the anonymity of the individuals recorded in the source database . In fact , data mining models and patterns , in order to ensure a required statistical significance , represent a large number of individuals and thus conceal individual identities : this is the case of the minimum support threshold in association rule mining . We have recently shown that the above belief is ill founded [ 3 ] . a1 ^ a2 ^ a3 ) a4
[ sup = 80 ; conf = 98:7 % ] where sup and conf are the usual interestingness measures of support and confidence as defined in [ 2 ] . Since the given rule holds for a number of individuals ( 80 ) , which seems large enough to protect individual privacy , one could conclude that the given rule can be safely disclosed . But , is this all the information contained in such a rule ? Indeed , one can easily derive the support of the premise of the rule : sup(fa1 ; a2 ; a3g ) = sup(fa1 ; a2 ; a3 ; a4g ) conf
80
0:987
= 81:05
Given that the pattern a1 ^ a2 ^ a3 ^ a4 holds for 80 individuals , and that the pattern a1 ^ a2 ^ a3 holds for 81 individuals , we can infer that in our database there is just one individual for which the pattern a1 ^ a2 ^ a3 ^ :a4 holds .
In [ 3 ] we say that the two itemsets fa1 ; a2 ; a3g and fa1 ; a2 ; a3 ; a4g represent an inference channel ( a simple one ) , for the pattern a1 ^ a2 ^ a3 ^ :a4 .
By shifting the concept of k anonymity [ 6 ] from data to patterns , we have formally characterized the notion of a threat to anonymity in the context of pattern discovery , and provided a methodology to efficiently and effectively identify such threats that might arise from the disclosure of a set of extracted patterns . In this paper we study a methodology to eliminate the threats to anonymity by introducing distortion on the dangerous patterns in a controlled way , by measuring the effects of the distortion .
2 . Problem Definition
Definition 1 A binary database D = ( I ; T ) consists of a finite set of binary variables I = fi1 ; : : : ; ipg , also known as items , and a finite multiset T = ft1 ; : : : ; tng of p dimensional binary vectors ( transactions ) recording the values of the items . A pattern for the variables in I is a propositional sentence built by AN D ( ^ ) , OR ( _ ) and N OT ( : ) logical connectives , on variables in I . The domain of all possible patterns is denoted Pat(I ) . a 1 1 1 1 1 1 1 1 0 0 0 1 b 1 1 1 1 1 1 1 0 0 0 0 1 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 c 1 1 1 1 1 1 0 0 1 1 1 0
D d 1 1 1 1 1 1 1 0 1 1 1 0 ( a ) e 1 1 1 1 1 1 1 1 1 1 1 0 f 1 0 0 1 0 0 0 1 1 0 1 1 g 1 1 0 1 0 0 0 1 1 0 1 1 h 1 0 0 0 0 0 0 0 0 0 1 0
Notation : patterns supD(a _ f ) = 11 supD(e ^ ( :b _ :d ) ) = 4 supD(h ^ :b ) = 1
Notation : itemsets supD(abc ) = 6 supD(abde ) = 7 supD(cd ) = 9
F(D ; 8 ) = fh ; ; 12i ; ha ; 9i ; hb ; 8i ; hc ; 9i ; hd ; 10i ; he ; 11i ; hab ; 8i ; hae ; 8i ; hcd ; 9i ; hce ; 9i ; hde ; 10i ; hcde ; 9ig
( c )
Cl(D ; 8 ) = fh ; ; 12i ; ha ; 9i ; he ; 11i ; hab ; 8i ; hae ; 8i ; hde ; 10i ; hcde ; 9ig
( d )
MCh(3 ; Cl(D ; 8 ) ) = fhC cde hC ab a ; 1i ; hC cde a ; 1i ; hC ae e
;
; 1i ; ; 1i ; hC cde de ; 1ig
( b )
( e )
Figure 1 . Example : ( a ) the binary database D ; ( b ) different notation used for patterns and itemsets ; the set of frequent ( = 8)(c ) , and of closed ( d ) itemsets ; ( e ) the set of maximal inference channels for k = 3 .
Definition 2 Given a database D , a transaction t 2 D and a pattern p , we write p(t ) if t makes p true . The support of p in D is given by the number of transactions which make p true : supD(p ) = jft 2 D j p(t)gj .
Definition 3 The set of all itemsets 2I , is a pattern class consisting of all possible conjunctions of the form i1 ^ i2 ^ : : : ^ im . Given a database D and a support threshold , the set of frequent itemsets in D is denoted F(D ; ) = fhX ; sup D(X)i j X 2 2I ^ supD(X ) g . The problem addressed in this paper is given by the possibility of inferring from the output of frequent itemset mining , i.e , F(D ; ) , the existence of patterns with very low support , that represent a threat for the anonymity of the individuals about which they are true ( Figure 1(b ) shows the different notation used for general patterns and for itemsets ) . Definition 4 A set S of pairs hX ; ni , where X 2 2I and n 2 N , and a database D are said to be compatible if S F(D ; ) . Given a pattern p we say that S j= sup(p ) > x ( respectively S j= sup(p ) < x ) if , for all databases D compatible with S , we have that sup D(p ) > x ( respectively sup D(p ) < x ) . In general [ 4 ] , the support of a pattern p = i1 ^ ^ im ^ :a1 ^ ^ :an can be inferred if we know the support of itemsets I = fi1 ; : : : ; img , J = I [ fa1 ; : : : ; ang , and every itemset X such that I fl X fl J . supD(p ) = X IXJ
( ,1)jXnIjsupD(X )
( 1 )
The right hand side of Equation ( 1 ) is denoted f J
I ( D ) . Definition 5 Given a database D and two itemsets I J 2 2I , if 0 < f J I ( D ) < k , then the set of itemsets fXjI X Jgis an inference channel . We denote such inference channel C J I ( D ) .
I and we write supD(CJ
I ) = f J
Example 2 Consider D in Figure 1 , and suppose k = 3 . We have that supD(b ^ :d ^ :e ) = f bde ( D ) = supD(b ) , supD(bd ) , supD(be ) + supD(bde ) = 8 , 7 , 7 + 7 = 1 . Therefore , C bde is an inference channel of support 1 . b b
In [ 3 ] we have shown that , since a generic pattern p 2 Pat(I ) can be considered without loss of generality in normal disjunctive form , we can conclude that all possible threats to anonymity are due to inference channels of the form C J I . However two cases can be distinguished : ( i ) I and J are both frequent itemsets ; ( ii ) J is not frequent . For lack of space we focus only on the first and most essential form of channels . Definition 6 The set of all C J I holding in F(D ; ) , together with their supports , is denoted Ch(k ; F(D ; ) ) = fhCJ
I ; f J In our previous paper [ 3 ] , we have studied the problem of how to detect the inference channels holding in a set of frequent itemsets that we want to disclose ( ie , computing Ch(k ; F(D ; )) ) . In this paper we study how to transform ( sanitize ) the collection to remove the inference channels .
I ( D)i j hJ ; supD(J)i 2 F(D ; )g . frequent itemProblem 1 Given a collection of sets F(D ; ) , and the set of all its inference channels Ch(k ; F(D ; ) ) , transform F(D ; ) in a collection of freitemsets Ok , which can be safely disclosed . quent Ok is the output of our problem , and it must satisfy the following conditions : ( i ) Ch(k ; Ok ) = ; ; ( ii ) 9D0 : Ok = F(D0 ; ) .
The second condition constraints the output collection of itemsets to be \realistic" ; ie , to be compatible with at least a database . This requirement is due to the fact that disclosing an output which is not compatible with any database could represent a threat . In fact , a malicious adversary could recognize that the set of itemsets disclosed is not \real" , and he could exploit this leak by reconstructing the missing patterns , starting from those ones present in the output . We call this kind of threat inverse mining attacks .
3 . Avoiding Redundant Distortion
In this Section we show how , using a condensed representation of Ch(k ; F(D ; ) ) , we can avoid redundant distortion when blocking inference channels . Consider the two inference channels hC acd abd ; 1i holding in the database in Fig 1(a ) : one is more specific than the other , but they both uniquely identify transaction t7 . It is easy to see that many other families of equivalent , and thus redundant , inference channels can be found . The theory of closed itemsets [ 5 ] can help us with this problem . ad ; 1i and hC abcd
Definition 7 The set of frequent closed itemsets is Cl(D ; ) = fhX ; sup D(X)i 2 F(D ; )j@Y Xs:t:hY ; supD(X)i 2 F(D ; )g . An itemset I 2 Cl(D ; ) is said to be maximal iff @J I st hJ ; si 2 Cl(D ; ) .
Analogously to what happens for the pattern class of itemsets , if we consider the pattern class of conjunctive patterns we can rely on the anti monotonicity property of frequency . Proposition 1 Given C J H we say that C J when I H and ( J n I ) ( L n H ) . It holds that : CJ I CL Definition 8 An inference channel C J is said to be I maximal wrt D and , if 8H ; L such that I H and ( J n I ) ( L n H ) , f L H = 0 . The set of maximal inference channels is denoted MCh(k ; Cl(D ; ) ) .
H ) 8D : f J
I ( D ) f L
I and CL
I CL
H
H ( D ) .
Proposition 2 CJ I 2 MCh(k ; Cl(D ; ) ) ) I 2 Cl(D ; ) ^ J is maximal . In [ 3 ] we have proved that from MCh(k ; Cl(D ; ) ) we can reconstruct every channel in Ch(k ; F(D ; ) ) and its support without accessing the database . Proposition 3 Given hC J I ( D)i 2 Ch(k ; F(D ; ) ) , let M be any maximal itemset such that M J . The following equation holds :
I ; f J
I ( D ) = X f J f M c(X)(D ) c(X )
( 2 ) where c(I ) c(X ) M and c(X ) \ ( J n I ) = ; .
As the set of all closed frequent itemsets Cl(D ; ) contains all the information of F(D ; ) in a more compact representation , analogously the set MCh(k ; Cl(D ; ) ) represents , without redundancy , all the information in Ch(k ; F(D ; ) ) . Removing the redundancy existing in Ch(k ; F(D ; ) ) , we also implicitly avoid redundant sanitization , and thus we dramatically reduce the distortion needed to block all the inference channels . In fact , to block an inference channel C J have two main options :
I 2 Ch(k ; F(D ; ) ) we ffl making the inference channel anonymous enough , ie , forcing f J
I ( D ) k ; ffl making the inference channel disappear , ie , forc ing f J
I ( D ) = 0 .
The following two propositions show that , whichever option we choose , we can just block the channels in MCh(k ; Cl(D ; ) ) , obtaining to block all the inference channels in Ch(k ; F(D ; ) ) .
H ; f L
Proposition 4 Given a database D , consider a database D0 st 8hCL H ( D)i 2 MCh(k ; Cl(D ; ) ) it H ( D0 ) k . Then from Proposition 1 it folholds that f L I ( D0 ) k . lows that 8hC J I ; f J Proposition 5 Given a database D , consider a database D0 st 8hCL H ( D)i 2 MCh(k ; Cl(D ; ) ) it H ( D0 ) = 0 . Then from Proposition 3 it folholds that f L I ; f J lows that 8hC J
I ( D)i 2 Ch(k ; F(D ; ) ) ; f J
I ( D)i 2 Ch(k ; F(D ; ) ) ; f J
I ( D0 ) = 0 .
H ; f L
In the next Section we exploit the properties above to reduce the distortion needed to sanitize our output .
4 . Suppressive Sanitization
The basic idea of Suppressive Sanitization is to hide inference channels , pushing their support to 0 : this can be done by removing transactions t st I t ^ ( J n I ) \ t = ; . Unfortunately , we can not simulate such suppression of transactions simply by decreasing the support of the itemset I by f J for each I CJ I 2 Ch(k ; F(D ; ) ) , since we would lose databasecompatibility due to the other items appearing in the dangerous transactions . Consider for instance a transaction I [ fx ; y ; zg : removing it we reduce the support of I , but as uncontrolled side effect , we also reduce the support of the itemset I [ fxg . Therefore , in order to maintain database compatibility , we must take into account these other items carefully . One na(cid:127)ve way of achieving this is to really access the database , suppress the dangerous transactions , and reduce the support of all itemsets contained in the suppressed transactions accordingly . But this is not enough : while introducing distortion to block the \real" inference channels holding in F(D ; ) , transforming it in Ok , we could possibly create some new \fake" inference channels ( not existing in the original database and thus not violating the anonymity of real individuals ) . We do not allow this possibility : although fake , such inference channels could be the starting point for a backward reasoning of a malicious adversary , in other terms , could open the door to inverse mining attacks . The unique solution here is to perform again the detection algorithm [ 3 ] , and if necessary , to block the novel inference s n o i t c a s n a r T f o r e b m u N
1400
1200
1000
800
600
400
200
0
RETAIL
Suppressive k = 5 Suppressive k = 10 Suppressive k = 25 Suppressive k = 50
)
%
( d e t r o t s d i s t e s m e t I
100
80
60
40
20
0
RETAIL
Suppressive k = 5 Suppressive k = 10 Suppressive k = 25 Suppressive k = 50
)
%
( n o i t r o i t s D e g a r e v A
RETAIL
Suppressive k = 5 Suppressive k = 10 Suppressive k = 25 Suppressive k = 50
3,0
2,5
2,0
1,5
1,0
0,5
0,0
0,4
0,6
0,8
1,0
1,2
0,4
0,6
0,8
1,0
1,2
0,4
0,6
0,8
1,0
1,2
Support ( % )
Support ( % )
Support ( % )
Figure 2 . Distortion empirical evaluation . channels found . Obviously , this process can make some frequent itemsets become infrequent .
Algorithm 1 implements the suppressive sanitization which access the database D on the basis of the information in MCh(k ; Cl(D ; ) ) , and adjust Cl(D ; ) with the information found in D : the following pseudo code outputs a sanitized version of Cl(D ; ) but nothing prevents us from disclosing a sanitized version of F(D ; ) . e
; due
; 1i ; hCcde de ; 1i
; 1i ; hCab a ; 1i ; hCae a ; 1i ; hCcde
Example 3 Consider Cl(D ; 8 ) and MCh(3 ; Cl(D ; 8 ) ) in Fig 1(d ) and ( e ) : we got 5 maximal channels hCcde to transactions t12 ; t8 and t7 . The suppression of these 3 transactions reduces the support of some closed itemsets : at the end of the suppression phase ( line 8 of Algorithm 1 ) we got that Cl(D ; 8 ) = fh ; ; 9i ; ha ; 6i ; he ; 9i ; hab ; 6i ; hae ; 6i ; hde ; 9i ; hcde ; 9ig . Compacting Cl(D ; 8 ) means to remove from it itemsets which , due to the transactions suppression , are no longer frequent or no longer closed ( lines 9 { 12 ) , ie , Cl(D ; 8 ) = fhcde ; 9ig . At this point Algorithm 1 invokes the detection algorithm ( see [ 3 ] ) to find out the maximal channels in the new Cl(D ; 8 ) , and if necessary , starts a new suppression phase ( in our example this is not the case ) .
The plots in Fig 2 report the following three measures of distortion ( recorded on the well known retail dataset [ 1 ] for different values of and k ) :
1 . Absolute number of transactions virtually sup pressed .
2 . The fraction of itemsets in F(D ; ) which have their support changed in Ok : j fhI ; supD(I)i 2 F(D ; ) j supOk ( I ) 6= supD(I)g j jF(D ; )j where supOk ( I ) = s if hI ; si 2 Ok ; 0 otherwise .
3 . The average distortion wrt the original support of itemsets :
1 j F(D ; ) j X
I2F ( D ; ) jsupOk ( I ) , supD(I)j supD(I )
Algorithm 1 Suppressive Sanitization Input : Cl(D ; ) ; MCh(k ; Cl(D ; ) ) ; D Output : Ok
1 : while MCh(k ; Cl(D ; ) ) 6= ; do 2 :
//Scan the database for all t 2 D do
3 :
4 :
5 :
6 :
7 :
8 :
9 :
10 :
11 :
I ; f J if 9hC J I t and ( J n I ) \ t = ; then
I i 2 MCh(k ; Cl(D ; ) ) st
//Transaction suppression for all hX ; sup D(X)i 2 Cl(D ; ) st X t do sup D(X ) sup D(X ) , 1 ;
//Compact Cl(D ; ) for all hX ; si 2 Cl(D ; ) do if 9hY ; si 2 Cl(D ; ) st Y X or s < then
Cl(D ; ) Cl(D ; ) n hX ; si ; detect MCh(k ; Cl(D ; ) ) in Cl(D ; ) ;
12 : 13 : Ok Cl(D ; ) ;
Note that the last measure is really tough with itemsets which become infrequent during the sanitization process : for these itemsets we count a maximum distortion of 1 ( supOk ( I ) = 0 ) . However , while the number of itemsets distorted is usually very large , the average distortion on itemsets is very low : this means that quite all itemsets are touched by the sanitization , but their supports are changed just a little .
References
[ 1 ] http://fimicshelsinkifi/data/ [ 2 ] R . Agrawal , T . Imielinski , and A . N . Swami . Mining association rules between sets of items in large databases . In Proceedings of the 1993 ACM SIGMOD .
[ 3 ] M . Atzori , F . Bonchi , F . Giannotti , and D . Pedreschi . k anonymous patterns . In Proceedings of the PKDD’05 .
[ 4 ] T . Calders and B . Goethals . Mining all non derivable fre quent itemsets . In Proceedings of the 6th PKDD , 2002 .
[ 5 ] N . Pasquier , Y . Bastide , R . Taouil , and L . Lakhal . Discovering frequent closed itemsets for association rules . In Proc . ICDT ’99 , 1999 .
[ 6 ] L . Sweeney . k anonymity : a model for protecting privacy . International Journal on Uncertainty Fuzziness and Knowledge based Systems , 10(5 ) , 2002 .
