Hete CF : Social Based Collaborative Filtering
Recommendation using Heterogeneous Relations
4 1 0 2 c e D 4 2
]
R
I . s c [
1 v 0 1 6 7
.
2 1 4 1 : v i X r a
Chen Luo
College of Computer Science and Technology
Jilin University , China
Email : rackingroll@163.com
Wei Pang
School of Natural and Computing Sciences
University of Aberdeen , UK Email : pangwei@abdnacuk
Zhe Wang
College of Computer Science and Technology
Jilin University , China
Email : wz2000@jlueducn
Abstract—Collaborative filtering algorithms haven been widely used in recommender systems . However , they often suffer from the data sparsity and cold start problems . With the increasing popularity of social media , these problems may be solved by using social based recommendation . Social based recommendation , as an emerging research area , uses social information to help mitigate the data sparsity and cold start problems , and it has been demonstrated that the social based recommendation algorithms can efficiently improve the recommendation performance . However , few of the existing algorithms have considered using multiple types of relations within one social network . In this paper , we investigate the social based recommendation algorithms on heterogeneous social networks and proposed Hete CF , a Social Collaborative Filtering algorithm using heterogeneous relations . Distinct from the exiting methods , Hete CF can effectively utilize multiple types of relations in a heterogeneous social network . In addition , Hete CF is a general approach and can be used in arbitrary social networks , including event based social networks , location based social networks , and any other types of heterogeneous information networks associated with social information . The experimental results on two realworld data sets , DBLP ( a typical heterogeneous information network ) and Meetup ( a typical event based social network ) show the effectiveness and efficiency of our algorithm .
I .
INTRODUCTION
With the advent of Internet era and the emergence of Big Data , users constantly suffered from information overload . Therefore , recommendation systems , as effective methods to deal with information overload , become a very popular research topic in recent years [ 1 , 2 ] . On the other hand , recommendation systems also help e commerce companies provide personalised services [ 3 ] . Many companies , including YouTube and Amazon , have launched their own personalised recommender systems so that they can provide better services .
Among many recommendation algorithms , Collaborative Filtering [ 2 ] has been widely used in both social networks and online stores . Most of the collaborative filtering methods aim to provide recommendations or rating predictions based on historical user item preference records [ 1 ] . However , in the real world , users only rate a limited number of items . For example , in Amazon , a user always buys a small fraction of all available commodities , which makes the corresponding useritem information matrix very sparse . Consequently , collaborative filtering recommendation algorithms severely suffer from the cold start and data sparsity problems [ 4 ] .
In order to deal with the data sparsity problem , many algorithms have been proposed . Social based recommendation , as one of the efficient and emerging methods , has attracted much attention in recent years [ 1 , 2 , 5–9 ] . Social based recommendation utilises social information to help improve the recommendation performance . For example , Zhang et al . [ 5 ] consider the recommendation system on EBSN ( Event Based Social Network ) [ 6 ] , which contains both online and offline networks . The algorithm presented in [ 5 ] uses the social information extracted from offline networks to help make recommendations in online networks . Another recommendation system research on EBSN also demonstrates the effectiveness of this method [ 7 ] . In [ 7 ] , the author proposed LCARS , a location content aware recommender system , and LCARS considers both personal interests and local preferences to make recommendations . In IJCAI 13 , Yang et al . proposed the TrustMF recommendation algorithm [ 2 ] . TrustMF considers the trust and trustee information between users from the social network . Similar to TrustMF , Xiao Yu et al . proposed several recommendation algorithms [ 8 , 9 ] based on heterogeneous information networks by introducing the relationships between items . In [ 1 ] , the cross domain knowledge was used to improve the recommendation performance . In this paper , we will introduce the above related research in detail in Section V .
Previous research has demonstrated that more effective information could lead to better recommendation results [ 2 , 6 ] . However , most of the above algorithms only use part of the information in social networks ( either user user or itemitem information ) . In order to make better use of the social information , in this work we study the collaborative filtering method on heterogeneous social networks . Different from previous research , in this paper we will utilize all three types of relations , that is , not only the user user and item item relations , but also the user item relations .
As in [ 9 , 10 ] , a heterogeneous social network contains more information than homogeneous ones and may have more semantic meaning . Fig 1 shows a simple heterogeneous network ( Bibliographic Network ) , and from this figure we can see that there are three types of objects in this network : Author , Paper , and Conference . It is also noted that there is more than one relation in the network . In order to utilize these relations in a heterogeneous network , we can use meta path [ 11 ] to present each type of relations . Meta path is an effective way to represent relationships in heterogeneous information networks [ 11 ] . For example , the co author relationship can
Conf .
Paper
Author
HSN : Heterogeneous
Social Network
HIN : Heterogeneous Information Network
HIN
HSN
( cid:72)(cid:85 )
( cid:72)(cid:85 )
( cid:36)(cid:87)(cid:75)(cid:85 )
( cid:36)(cid:87)(cid:75)(cid:85 )
( cid:36)(cid:87)(cid:75)(cid:85 )
Fig 1 : A Simple Heterogeneous Network be represented as a meta path “ Author−Paper−Author ” ; the co conference relationship can be represented as a meta path “ Author−Paper−Conf.−Paper−Author ” . It is pointed out that , the heterogeneous social networks in our research denotes all the HIN ( heterogeneous information networks ) [ 12 ] with social information , for example , EBSNs ( Event based Social Networks)[6 ] and LBSNs ( Location based Social Networks ) [ 11 ] . We will discuss the relations between these networks in Section II A .
In this research , we model the three types of relations ( user user , user item , and item item ) respectively and propose a unified model . However , not all the social information is of benefit to the recommendation system . If the historical useritem rating is not very sparse , the social information may bias the recommendation result [ 1 ] . Therefore , we also proposed a leveraging method to evaluate the weight of the introduced social information .
Our contributions in this research are listed as follows : 1 . We proposed a general recommendation algorithm ( Hete CF ) on heterogeneous social networks . The proposed algorithm can be used in many types of heterogeneous social networks , including LBSN and EBSN , etc .
2 . Three types of relations have been integrated to form a unified model , and a leveraging method has been proposed to leverage the impact of user item relation in our model .
3 . Our approach has been tested on on two real world data sets : DBLP , a typical heterogeneous information network with social information , and Meetup , a typical event based social network . Experimental results demonstrate the effectiveness and efficiency of our algorithm .
The rest of the paper is organised as follows : relevant background knowledge is introduced in Section II ; the proposed recommendation model is described in detail in Section III . In Section IV , we present our experimental results . This is followed by the introduction of some work related to our research in section V . Finally , we conclude our research and explore future work in Section VI .
II . PRELIMINARY
In this section , we first introduce some background knowledge for our research , including heterogeneous social networks [ 12 ] and meta path [ 11 ] . Then we briefly introduce the collaborative filtering algorithm .
LBSN
EBSN
LBSN : Location Based
Social Network
EBSN : Event Based
Social Network
Fig 2 : Relationships between various types of
Heterogeneous Networks .
A . Heterogeneous Social Network
The Heterogeneous Social Networks ( HSNs ) in our work can be regarded as HINs [ 12 ] containing social information , for instance , bibliographic networks , or Facebook relationship network . The relations between HSN , HIN , EBSN and LBSN are illustrated in Fig 2 .
From this figure , we can see that LBSN and EBSN are special cases of HSN , and HSN is a special case of HIN . In this research , we consider all kinds of HSNs , including LBSN [ 13 ] , EBSN [ 6 ] and any other types of HIN [ 12 ] associated with social information .
As HSN is a special case of HIN , we define HSN by following the concepts of HIN . Refer to the definition of heterogeneous information networks [ 12 ] , the heterogeneous social network is defined as follows : of data objects , have m types
Definition 1 ( Heterogeneous Social Network ) : Suppose we by denoted X1 = {x11 , , x1n1 } , , Xm = {xm1 , , xmnm} , a heterogeneous social network is in the form of a graph G = hO , E , W i , where O = Sm i=1 Xi ( m ≥ 2 ) , and in O there exists at least one Xi which is the type of social objects ( eg , Person , Author , or Actor ) . E is the set of links between any two data objects in O . W is the set of weight values on the links .
Obviously , G will reduce to a homogeneous network when m = 1 .
In [ 11 ] , the concept of meta path is used to denote different relations in heterogeneous information networks . In the same way as in [ 11 ] , in this research , meta path is used to represent the relations in heterogeneous social networks . Following [ 11 ] , the meta path is defined as follows :
Definition 2 ( Meta path [ 11] ) : Given a heterogeneous social network G = hO , E , W i , A meta path P is in the form of Rl−l→ Al , which defines a composite A1 relation P = R1 ◦ R2 ◦ ◦ Rl−1 between two objects , and ◦ is the composition operator on relations .
R2→ Al−1
R1→ A2
In addition , the reverse meta path is defined as follow :
R1→ A2
Definition 3 ( Reverse Meta path [ 11] ) : Given a meta path P : Rl−l→ Al , P −1 is the reverse meta path of Al R−1 l→ A1 , where R−1 P if P −1 is Al → Al−1 is the reverse relation of R .
R2→ Al−1 Rl−1
→ A2
Rl−2
−1
−1
After describing the concept of meta path , we need to know how to measure it . Here , we use a topological measure , PathSim , which is proposed in [ 11 ] :
Given a meta path , denoted as P , the PathSim between two objects s and t can be calculated as follows :
SP S
P ( s , t ) =
2 ∗ SP C
P ( s , t ) P ( s , : ) + SP C
SP C
P −1 ( : , t )
( 1 )
In the above , SP C
P ( s , t ) is a Path Count measure [ 11 ] and can be calculated as the number of path instances between s and t . P −1 denotes the reverse meta path of P . SP C P ( s , : ) denotes the path count value following P and starting with s ; and SP C P ( s , : ) denotes the path count value following P −1 and ending with t .
B . Collaborative Filtering Model
Collaborative filtering uses historical user item ratings to make recommendations . Suppose R is an n−by−m matrix , which denotes the user item rating matrix ( n is the number of users and m the number of items ) . Ri,j denotes the rating that User i gives to Item j . One can map users and items to a lower dimension vector , denoted as Ui and Vj , respectively . The lower dimension vectors ( also called feature vectors ) , Ui and Vj , can be learned by minimizing the following loss function [ 2 ] : consider an example of recommending conferences to authors for submitting their papers . Given two authors Tom and Peter , who focus on similar research topics and are both interested in artificial intelligence , if Tom frequently publishes his papers in the conference AAAI , Peter may have a high possibility to publish his paper in AAAI as well .
We model the above common sense by using graph regu larization [ 17 ] , and the object function is shown as follows : min U,A
αk
NA
Xk=0 n n
Xi=0
Xj=0
Sk
A(i , j ) kUi − Uj k2
F
( 3 )
In the above , αk denotes the importance of the k−th metapath between users and A = [ α1 , α2 , , αNA ] ; NA is the number of meta paths between users . Ui has the same meaning A is the similarity matrix for as mentioned in Section II B . Sk users under the k−th meta path relation , and it is calculated as follows ( recall PathSim described in Section II A ) :
Sk A(i , j ) = SP S P A k
( i , j ) ,
( 4 ) where P A k is the k−th meta path between User i and User j . 2 ) Modelling the relations between items : as in [ 15 ] , we can see that by introducing the relations between items the recommendation performance can be improved . It is common sense that a user may be interested in similar items . For example , if an author is interested in publishing his/her papers in ICML , this author may also be interested in publishing his/her papers in similar conferences , for instance , NIPS ( NIPS and ICML are both top conferences in the field of machine learning ) . Here we also employ graph regularization [ 17 ] to model this common sense as follows : min U,V m n
Xi=0
Xj=0
( U T i Vj − Ri,j)2 + λ(kU k2
F + kV k2
F ) ,
( 2 ) min V,B
βk
NB
Xk=0 m m
Xi=0
Xj=0
Sk
B(i , j ) kVi − Vj k2
F
( 5 ) where k∗k2 F is the Frobenius norm [ 14 ] . λ ∈ ( 0 , 1 ) captures the importance of each term in the loss function . U = [ U1 , U2 , , Un ] and V = [ V1 , V2 , , Vm ] are the low rank representation of users and items [ 2 ] . Then the rating can be calculated as ˆRij = U T i denotes the transpose of Ui . Several algorithms have been proposed to improve the performance of learning U and V [ 15 , 16 ] . Theses algorithms will be introduced in Section V . i Vj , where U T
III . THE HETE CF MODEL
In this section , we first propose to combine the three types of relations ( user user , user item , and item item ) in heterogeneous social networks into a unified model . Then we introduce the leaning method of our model . At last , we introduce the complete algorithm and analyse its parameter and time complexity .
A . The Recommendation Model
1 ) Modelling the relations between users : as in [ 2 ] , when we recommend items to users , the relationships between users can be used to improve the recommendation performance . This is because it is common sense that similar users may have similar orientations on a certain range of items . Let us
In the above βk denotes the importance of the k − th meta path between items and B = [ β1 , β2 , , βNB ] ; NB is the number of meta paths between items ; Vi has the same meaning as mentioned in Section II B . Sk B is the similarity matrix for items ; Sk
B(i , j ) is calculated as follows :
Sk B(i , j ) = SP S P B k
( i , j ) ,
( 6 ) where P B k is the k−th meta path between Item i and Item j . 3 ) Modelling the relations between users and items : as mentioned in Section II B , the collaborative filtering algorithm uses historical user item ratings to make recommendations . In a heterogeneous social network , there are also many other types of relations between users and items , and these relations may be used to further improve the recommendation performance .
For instance , if an author often cites papers from a particular conference , he may also be very likely to submit his papers to that conference . The common sense here is that users may be highly interested in the items which are “ close ” to them . The term “ close ” here in the context of HSNs can be represented as the larger similarity of the meta path between a user and an item , and this distance can be calculated by using PathSim
TABLE I : The three Sub models
Factor
User−User
Item−Item
User−Item
Sub model n n m
Pi=0 Pi=0 wk m
Pj=0 Pj=0 Pi=0 n
Sk
A(i , j ) kUi − Ujk2
F
B(i , j ) kVi − Vjk2 Sk
F
( U T i Vj − Rk i,j )2 m
Pj=0
NA
NB
βk
αk
Pk=0 Pk=0 Pk=0
NW min U,A min V,B min U,V,W
[ 11 ] , the concept of which has been introduced in Section II A . Same as the historical user item ratings , these relationships are also between users and items . So , we can use the collaborating filtering method to model such relationships , and the model is shown below : min U,V,W wk
NW
Xk=0 n m
Xi=0
Xj=0
( U T i Vj − Rk i,j)2
( 7 )
Here , m and n are the numbers of items and users , respectively ; wk denotes the importance of the k−th meta path between a user and an item , and W = [ w1 , w2 , , wNW ] ; NW is the number of meta paths between users and items . Rk is the relation graph for the k−th meta path between users and items , and it can be calculated as below :
Rk(i , j ) = SP S P W k
( i , j ) ,
( 8 ) where P W k is the k−th meta path between User i and Item j . 4 ) A Unified Model : Having proposed the modelling approaches in Sections III A1 ∼ III A3 , we intend to put all the three factors together . The three corresponding submodels are illustrated in Table I . And the unified model for recommendation in a heterogeneous social network is proposed as follows : m n i Vj − Ri,j )2 min
U,V,A,B,W
+
+ n n
NA
NB
αk
( U T
Xi=0 Xk=0 Xk=0 Xk=0
Xj=0 Xj=0 Xi=0 Xj=0 Xi=0 Xi=0 Xj=0 wk
NW
βk m m m n
Sk
A(i , j ) kUi − Uj k2
F
Sk
B(i , j ) kVi − Vjk2
F
+µ
( U T i Vj − Rk i,j)2
+λ(kU k2
F + kV k2
F + kAk2
F + kBk2
F + kW k2 F )
In the above , the symbols have the same meanings as introduced in previous sections . µ and λ are important parameters which captures the importance of each term , and we will discuss these parameters in section III C1 .
The first term of the model incorporates the collaborating filtering component , which keeps the U T V closer to the useritem rating matrix R . The second and third terms consider the user user and item item relations , respectively . The fourth term of the model is the user item relationship component . The last
( 9 ) and
αk
NA
Xk=0 n n
Xi=0
Xj=0
Sk
A(i , j ) kUi − Uj k2
F
= T r(U T (
αkLk
A)U ) ,
NA
Xk=0
NB
X k=0 m m
βk
X
X
B(i , j ) kVi − Vj k2 Sk
F i=0 j=0
NV
= T r(V T (
X
βk Lk
B)V ) . k=0
( 11 )
( 12 ) term of the model is the smoothing term . After minimising this model , we can obtain U and V , and then the ratings can be obtained as ˆRij = U T i Vj .
In order to avoid over fitting during the learning process , we introduce weighted λ regularization [ 15 ] in our algorithm . This method penalizes the feature vectors which involves more ratings . Thus the last term of our model becomes :
λ(X nuseri kU k2
F +X i j nitemj kV k2
F +kAk2
F +kBk2
F +kW k2
F ) , where nuseri and nitemi denote the number of ratings given by User i and the number of ratings given to Item j , respectively .
On the other hand , in a heterogeneous social network , the similarity values calculated by PathSim are between 0 and 1 ( recall PathSim described in section II A ) . So , as suggested in [ 16 ] , in order to fit the data more conveniently , we adopt a logistic function to bound the inner product of the latent feature vectors into the interval [ 0 , 1 ] . As in [ 16 ] , we use the logistic function f ( x ) = 1/(1 + exp(−x ) ) in our model . Then the model to be optimized is shown below : m n min
U,V,A,B,W i Vj ) − Ri,j )2
Sk
A(i , j ) kUi − Ujk2
F
Sk
B(i , j ) kVi − Vjk2
F
( 10 ) n n
αk
( f ( U T
Xj=0 Xi=0 Xj=0 Xj=0 Xi=0 Xj=0 Xi=0 wk
βk m m m n
+
+
NA
NB
Xi=0 Xk=0 Xk=0 Xk=0 +λ(Xi
+µ
+ kAk2
NW
( f ( U T i Vj ) − Rk i,j )2 nuseri kU k2 nitemi kV k2
F
F +Xi
F + kBk2
F + kW k2 F )
Then the predicted rating becomes i Vj ) . However , this model cannot be directly optimised . So , in order to optimize it , we rewrite the graph regularizing terms into their trace forms as in [ 18 ] . Then the graph regularizing terms are derived as follows :
ˆRij = f ( U T
In the above , Lk
A = Dk
A − Sk
A , where Lk trix and Dk where Lk
A(i , i ) = Pn B is a diagonal matrix and Dk j=0 Sk
A(i , j ) . Similarly , Lk
B(i , i ) = Pm
A is a diagonal maB , B −Sk B(i , j ) .
B = Dk j=0 Sk
Then , based on Equations ( 10 ) , ( 11 ) , and ( 12 ) , the unified model , denoted as J , can be rewritten as :
NA
αkLk
A)U ) + T r(V T (
( f ( U T i Vj ) − Rk i,j)2
βk Lk
B)V )
NV
Xk=0
( 18 )
J1 =T r(U T (
NW
+µ wk
Xk=0 n
Xk=0 Xi=0 m
Xj=0
+λ(kAk2
F + kBk2
F + kW k2 F )
We can see that J1 becomes to a linear model for each A , B , and W . Therefore , we also use SGD ( Stochastic Gradient Descent ) to obtain A , B , W . The gradient descents on A , B , W are shown as follows :
J = m n
Xi=0
Xj=0
( f ( U T i Vj ) − Ri,j )2
NA
αkLk
A)U ) + T r(V T ( n
Xk=0 Xi=0 m
Xj=0
+T r(U T (
NW
+µ
Xk=0 +λ(Xi
+ kAk2 wk
( f ( U T i Vj ) − Rk i,j)2 nuseri kU k2 nitemi kV k2
F
F +Xi
F + kBk2
F + kW k2 F )
βk Lk
B)V )
NV
Xk=0
( 13 )
B . The Learning Algorithm
In this subsection , we introduce the learning algorithm of our model presented in Equation . ( 13 ) . The learning method of our model is a two step iteration method , where the predicted rating vector U , V and the weight for each meta path A , B , W mutually enhance each other . In the first step , we fix the weight vectors A , B , W and learn the best predicted rating vector U , V . In the second step , we fix the predicted rating vector U , V and learn the best weight vectors A , B , W .
1 ) Optimize U , V Given A , B , W : When A , B , W are fixed , the model becomes to a traditional Collaborative Filtering model . Therefore , as in [ 2 ] , we can use SGD ( Stochastic Gradient Descent ) to solve such problem . The gradient descents on U are shown as follows : f ( U T i Vj )
′
U T i ( f ( U T i Vj ) − Ri,j ) + Ui
αkLk A
NA
Xk=0 f ( U T i Vj )
′ wk n
Xi=0
U T i ( f ( U T i Vj ) − Rk i,j ) + λUi ,
( 14 ) and the gradient descents on V are shown as follows : f ( U T i Vj )
′
Vi(f ( U T i Vj ) − Ri,j ) + Vi
βkLk B
NB
Xk=0
( 15 ) f ( U T i Vj )
′ wk m
Xj=0
Vi(f ( U T i Vj ) − Rk i,j ) + λVi
1 2
∂J ∂Ui
= n
NW
Xi=0 Xk=0
+µ
1 2
∂J ∂Vj
= m
NW
Xj=0 Xk=0
+µ
Then in each iteration , U , V can be updated as :
Ui ← Ui − αs ∂L ∂Ui
( i = 0 , · · · , n − 1 ) ,
( 16 ) and
Vi ← Vi − αs ∂L ∂Vj
( i = 0 , · · · , m − 1 )
( 17 ) where αs ∈ ( 0 , 1 ) is used to control the convergence speed .
2 ) Optimize A , B , W Given U , V : When U , W is fixed , the terms only involving U , V can be discarded , then the objective function can be reduced to :
1 2
∂J1 ∂αk
=λαk +
( f ( U T i Vj ) − Ri,j)2
+T r(U T (
αk Lk
A)U )
1 2
∂J1 ∂βk
=λβk +
( f ( U T i Vj ) − Ri,j)2
+T r(V T (
βk Lk
B)V ) n m n m
NA
Xj=0 Xi=0 Xk=0 Xi=0 Xj=0 Xk=0 Xi=0 Xj=0
NB m n
( 19 )
( 20 )
1 2
∂J1 ∂wk
= λwk + µ
( f ( U T i Vj ) − ( R)i,j)2
( 21 )
Then in each iteration , A , B , W can be updated as : and and
αi ← αi − αs ∂J1 ∂αi
βi ← βi − αs ∂J1 ∂βj
( i = 0 , · · · , NA − 1 ) ,
( i = 0 , · · · , NB − 1 ) , wi ← wi − αs ∂J1 ∂wj
( i = 0 , · · · , NW − 1 )
( 22 )
( 23 )
( 24 )
C . The Complete Algorithm
After presenting the calculation method for each relevant variable in Section III B1 and Section III B2 , the detailed steps of our recommendation algorithm is given in Algorithm 1 .
1 ) Parameter Settings : There are two parameters , λ and µ , in our model . As in [ 2 , 15 , 16 ] , λ is always assigned manually based on the experiments and experience . Therefore , we only discuss the assignment of parameter µ in our model .
µ is an important parameter , and it can directly affect the performance of our algorithm . When R is sparse , a larger µ can improve the recommendation results , because more information can be added to the training process . On the other hand , when R is not sparse , a larger µ will bias the recommendation results .
Therefore , the value of µ depends on how sparse R is . In this sense , we can use the proportion of non zero elements in matrix R to calculate µ as follows :
µ = Pn i=1Pm m × n j=1 Ii,j
,
( 25 )
Input : A heterogeneous information network G = hO , E , W i . Three sets of meta paths between user and item , users , and items . The user item rating matrix R . Parameter λ , αs .
Output : The rating Matrix ˆR ;
1 Initialize U , V , A , B , W randomly ; 2 while not reaching the inner U , V , A , B , C difference threshold do
3 4 5 6 while not reaching the inner U , V difference threshold do
Update U , V using Eqs.(16 ) and ( 17 ) ; end while not reaching the inner A , B , C difference threshold do
Update A , B , W using Eqs . ( 22 ) , ( 23 ) and ( 24 ) ; end
7 8 9 end 10 The prediction rating is ˆRij = f ( U T 11 return ˆRij ; i Vj ) . ;
Algorithm 1 : Hete CF where Ii,j is calculated as :
Ii,j =(0
1 if Ri,j = 0 if Ri,j 6= 0
( 26 )
2 ) Time Complexity Analysis :
In Algorithm 1 , the time for learning our model is mainly taken by computing the objective function ( 13 ) and its corresponding gradients against feature vectors . In the inner iteration , the time complexity of computing the gradients of J against U , V is O(td(n+NW n+ NA ) ) and O(td(m + NW m + NB) ) , respectively . The time complexity of computing the gradients of J against W , A , and B is O(td(mn) ) , O(td(mn + NA ) , and O(td(mn + NB ) , respectively . In the above , t is the number of iterations ; d is the dimensionality of feature vector . NW , NB , and NA have the same meaning as mentioned in Section III A , and NW , NB , and NA are far less than mn . Therefore , the upper bound of the complexity of inner iteration is O(td(mn) ) . Suppose the number of outer iteration is T , the overall complexity of our method is O(T td(mn) ) . We can see the complexity is linearly scaling to the dimension of the user item numbers . The efficiency test will be introduced in Section IV D .
IV . EXPERIMENTAL RESULTS
In this section , we first report the experimental evaluation of our algorithm by performing a set of experiments on two real datasets . Then we test the efficiency of the algorithm on synthetic datasets . Finally , we study the parameter of our algorithm and analyse the learned weight for each selected meta path .
A . Datasets
In this research , we use two real heterogeneous social network datasets for our experiments : DBLP 1 and MeetUp 2 . As the links in DBLP and MeetUp are always sparse , we can test the ability of our algorithm on mitigating the cold start problem and data sparsity problem . On the other hand , our algorithm is proposed for the HSNs , and these two datasets are typical HSN data .
Term
Location
Citation
Mention
Hold In
Live
Friends
Paper write
Publish
Author
Conf . or Journal
Event
User
Participate
Hold
Belong To
Group
( a ) DBLP
( b ) MeetUp
Fig 3 : Network Schema
DBLP dataset is widely used for heterogeneous network analysis [ 8 , 11 , 12 ] . In this research , we extract a sub dataset from DBLP . The sub dataset contains the papers published in 261 computer journals and 313 computer conferences . The schema [ 19 ] of DBLP is shown in Fig 3(a ) , in which Term is extracted from the titles of the papers . For the DBLP data , our recommendation problem becomes to recommend conferences to authors . Therefore , we model the historical useritem relationship as the “ Author−Paper−Conference ” metapath , and the rate that an author gives to a conference is calculated as the PathSim ( see Section II A ) of the meta path “ Author−Paper−Conference ” .
As in previous research on DBLP as a heterogeneous social network [ 12 ] , the meta paths chosen for the experiments are shown in Table II . In this table , A stands for “ Author ” ; P stands for “ Paper ” , C means “ Conference or Journal ” , and T is for “ Term ” .
The second dataset is taken from Meetup , an online social website for offline meetings . The dataset comes from the one published in [ 6 ] . We extract a sub network from the total dataset as in [ 5 , 20 , 21 ] . The sub network contains the events happened in New York City and Los Angeles and involved the corresponding users and groups . This sub dataset is the same as the one used in [ 5 ] . The schema of Meetup network is shown in Fig 3(b ) . For the Meetup dataset , we recommend groups to users . The meta paths chosen for the experiment are shown in Table II . We have two principles for choosing the meta paths : ( 1 ) all the types of objects need to be included into the selected meta path ; ( 2 ) choose as few meta paths as possible . In this table , U stands for ” User ” , L stands for ” Location ” , G stands for “ Group ” , and E stands for “ Event ” .
B . Experimental Setup
1 ) Cross validation : As in [ 2 ] , we use 5 fold crossvalidation for learning and testing . We randomly select 40 % ( 60 % ) of the data as the training set and the rest 60 % ( 40 % ) as the testing set . Each result discussed below is averaged over ten trials .
2 ) Comparison Methods : There are three baselines and two state of the art methods used in our methods for comparison . The three baselines are listed as follows :
1http://wwwinformatikuni trierde/∼ley/db/ 2http://wwwmeetupcom/
TABLE II : Meta paths selected in DBLP and MeetUp
Dataset
DBLP Dataset
MeetUp Dataset
Relations Authors−Author Conf . − Conf . Author − Conf . Users − User Group − Group Users − Group
Meta paths A − P − A , A − P − C − P − A , A − P − T − P − A C − P − A − P − C , C − P − P − C , C − P − T − P − C A − P − T − P − C , A − P − P − C U − L − U , U − G − U , U − E − U , U − U G − U − G , G − E − L − E − G , G − U − U − G U − U − G , U − E − G , U − L − E − G
•
•
•
UserMean : prediction rate equals the mean value of the users .
ItemMean : prediction rate equals the mean value of the items .
NMF : non negative matrix factorization function [ 2 ] , with d = 5 , and d = 10 , where d denotes the dimension of the feature vector .
The three baselines cannot make use of the heterogeneous relations in the heterogeneous social network , and they only consider the target recommendation relation ( The A − P − C relation in DBLP , and the U − G relation in MeetUp ) . So in this experiment , we only consider the target recommendation relations in each dataset for these three baseline algorithms .
The two state of the art methods selected in our experiment are described below :
•
Trust MF [ 2 ] : this is a recommendation approach proposed by Yang et al . in IJCAI 13 . Trust MF introduced the relations between users to help improve the recommendation results . In the DBLP dataset used in our experiment , in terms of the relations between users , we use the co author relationship . For the MeetUp dataset , we use the friendship relation to denote the relation between users in our experiment . As in [ 2 ] , the parameters of this algorithm is set as follows : λ = 0.001 and λt = 1 . For more details of parameter assignment of Trust MF please refer to [ 2 ] .
• Hete MF [ 18 ] : this is an approach proposed by Yu et al . in IJCAI HINA’13 . Hete MF considers the relations between ’items’ . In this paper , for the relations between ’items’ , we add all the selected relations : C −P −P −C , C −P −A−P −C , C −P −T −P −C in DBLP , and G − U − G , G − E − L − E − G , G − U − U − G in Meetup .
3 ) Evaluation Methods : As in the following previous recommendation systems research [ 2 , 18 ] , we use two evaluation methods in our experiment :
• MAE : Mean Absolute Error , which is denoted as follows :
M AE =
1 T n m
X
X i=0 j=0
|Ri,j − ˆRi,j | , where Ri,j denotes the ground truth rating that User i gives to Item j . ˆRij denotes the rating calculated by the selected algorithm and T = mn is the number of ratings .
I e m T n o i t u c e x E #
40 35 30 25 20 15 1
3
2 7 # Feature Dimension
4
5
6
8 x 104
4
2
0 10K i e m T n o i t u c e x E #
30k 50k # Data Size
70k
( a ) Varying Feature Dimension
( b ) Varying Data Size
Fig 4 : Efficient Study , in ( a ) we fix the size of dataset , and vary the number of feature dimensions ; in ( b ) we fix the feature dimension ( d = 10 ) and vary the datasets .
• RMSE : Root Mean Square Error , which is denoted as follows :
RM SE = (
1 T n m
X
X i=0 j=0
|Ri,j − ˆRi,j|2 )
1
2
The notations in RMSE have the same meaning as in MAE .
C . Result and Analysis
The experimental results are reported in Table III . From these results , we can see that for our Hete CF algorithm , with the increase of the training data , its performance becomes better . This is because more training data can provide more information and more importantly , our model can avoid overfitting . On the other hand , In the DBLP dataset , we can see that when the dimension of feature vector d = 5 , the performance is always better . This is because our datasets extract nearly five areas of data from the DBLP dataset ( see Section IV A ) . Compared with the other algorithms , Hete CF always performs better . From this aspect , our algorithm has significant advantages when performing the recommendation task on heterogeneous social networks .
D . Efficiency Study
In this section we study the efficiency of our algorithm . As in [ 10 ] , we use the synthetic datasets considering the fact that we can manipulate the size of the dataset flexibly .
In Fig 4(a ) , we fix the size of data , and vary the number of the feature dimensions . From the results we can see that the running time of Hete CF is almost linear to the feature dimension . In Fig 4(b ) , we keep the number of feature dimensions ( d = 10 ) fixed and randomly link 20 % of the objects in the datasets . Then we vary the data size . We can
TABLE III : Algorithm Performance Comparison in DBLP and MeetUp .
%Training
Feature Evaluation UserMean
ItemMean
NMF
Trust MF
Hete MF
Hete CF
DBLP Dataset
40 %
60 %
MeetUp Dataset
40 %
60 % d = 5 d = 10 d = 5 d = 10 d = 5 d = 10 d = 5 d = 10
MAE RMSE MAE RMSE MAE RMSE MAE RMSE
MAE RMSE MAE RMSE MAE RMSE MAE RMSE
0.942 ± 0.02 1.065 ± 0.02 2.156 ± 0.02 0.831 ± 0.01 0.931 ± 0.02 0.831 ± 0.02 1.216 ± 0.01 1.123 ± 0.02 2.394 ± 0.01 1.013 ± 0.02 1.105 ± 0.01 1.002 ± 0.03 0.943 ± 0.03 0.948 ± 0.01 2.194 ± 0.03 0.887 ± 0.01 0.901 ± 0.01 0.859 ± 0.01 1.138 ± 0.02 1.256 ± 0.04 2.292 ± 0.02 1.083 ± 0.03 1.114 ± 0.03 1.056 ± 0.02 0.948 ± 0.02 0.919 ± 0.01 2.131 ± 0.04 0.812 ± 0.02 0.891 ± 0.02 0.831 ± 0.02 1.132 ± 0.02 1.157 ± 0.01 2.385 ± 0.01 0.907 ± 0.02 1.010 ± 0.03 0.938 ± 0.02 0.932 ± 0.03 0.978 ± 0.03 2.184 ± 0.02 0.873 ± 0.03 0.881 ± 0.01 0.856 ± 0.02 1.154 ± 0.02 1.143 ± 0.02 2.275 ± 0.01 1.051 ± 0.01 1.013 ± 0.02 0.994 ± 0.03
1.076 ± 0.01 0.954 ± 0.02 1.154 ± 0.03 0.887 ± 0.02 1.035 ± 0.02 0.854 ± 0.01 1.154 ± 0.02 1.143 ± 0.03 1.354 ± 0.03 1.046 ± 0.02 1.154 ± 0.02 0.986 ± 0.02 0.943 ± 0.03 1.065 ± 0.01 1.154 ± 0.03 0.876 ± 0.03 1.013 ± 0.03 0.854 ± 0.01 1.121 ± 0.04 1.265 ± 0.03 1.264 ± 0.02 1.076 ± 0.01 1.235 ± 0.01 0.967 ± 0.02 0.976 ± 0.02 1.054 ± 0.02 1.154 ± 0.01 0.854 ± 0.01 0.964 ± 0.02 0.837 ± 0.03 1.167 ± 0.01 1.136 ± 0.01 1.343 ± 0.02 1.054 ± 0.04 1.132 ± 0.01 0.966 ± 0.02 0.965 ± 0.02 0.943 ± 0.02 1.112 ± 0.02 0.887 ± 0.02 0.953 ± 0.03 0.876 ± 0.01 1.254 ± 0.01 1.254 ± 0.02 1.254 ± 0.02 1.052 ± 0.01 1.012 ± 0.02 0.978 ± 0.02 see that the CPU execution time increases with the increase of the data size , but the increase of CPU time is linear to the data size .
E . Parameter Study
In this section , we study the impact of parameter µ in Equation ( 13 ) , which is used for leveraging the importance of the introduced meta paths between users and items in our model . The result is shown in Fig 5 .
In Fig 5 , we can see that when the value of µ is too small or too large , the result will not be good enough . Because µ is used for leveraging the user item meta path term ( the fourth term ) in our model ( Equation ( 13) ) , the extreme value of µ ( too large or too small ) will bias the result .
On the other hand , the µ value calculated by Equation ( 25 ) is µ = 0.7 in DBLP and µ = 0.4 in MeetUp . And the best result just appeared when µ = 0.7 and µ = 0.4 , as shown in Fig 5 . This demonstrates that our proposed method of evaluating the µ value is effective , and it can deal with the parameter pre assignment issue .
F . Case Study for Meta path Weight
The output of our algorithm not only contains the predicted ratings but also the weights for each selected meta path . In this section , we study the learned weight for each meta path . The weight for each selected meta path is shown in Table IV and Table V . For the ease of illustration , we mapped all the weights for each meta path to the range [ 0 , 1 ] .
From the result in Table IV , we can see that the meta path “ A − P − A ” has a bigger weight , which means the co author relationship can make an important impact on conference recommendation . The meta path “ C −P −A−P −C ” also has e c n a m r o f r e P
1.3
1.2
1.1
1
0.9
0.8
0.2
RMSE MAE
0.4
0.8 # Parameter Value
0.6
( a ) DBLP Dataset e c n a m r o f r e P
1.3
1.2
1.1
1
0.9
0.8
1.0
RMSE MAE
0.4
0.6
0.2
0.8 # Parameter Value ( b ) MeetUp Dataset
1.0
Fig 5 : Parameter investigation on the DBLP and MeetUp datasets , µ ranges from 0.1 to 10 The value of µ calculated by our method is : µ = 0.7 in DBLP and µ = 0.4 in MeetUp a big weight , that is because the meta path “ C−P −A−P −C ” contains the target recommendation meta path ( A−P −C ) and may have a high impact on the conference recommendation . The meta path “ A − P − P − C ” has a high weight too , which is consistent with the ground truth that authors often submit their papers to the conference which they often cites .
From the result in Table V , we can see that the metapath “ U − U ” has a bigger weight . This means the friendship between users has a high impact on Group recommendation , which is consistent with human intuition . The meta path “ G − U − G ” also has a big weight , that is because G − U − G contains the target recommendation relation “ U − G ” . The Meta Path “ U − E − G ” has high weight , which means if an user has participated an Event of a Group , the user may have high probability to be a member of that Group .
V . RELATED WORK
In this section , we introduce some related works to our research .
TABLE IV : Meta path Weight of DBLP
Meta path Type Meta path
Author−Author
Conf.− Conf .
Weight A − P − A 0.4 ∼ 0.5 A − P − C − P − A 0.3 ∼ 0.4 A − P − T − P − A 0.2 ∼ 0.3 C − P − P − C 0.2 ∼ 0.3 C − P − A − P − C 0.5 ∼ 0.6 C − P − T − P − A 0.2 ∼ 0.3 0.7 ∼ 0.8 A − P − T − P − C 0.2 ∼ 0.3
Author− Conf . A − P − P − C
TABLE V : Meta path Weight of MeetUp
Meta path Type Meta path
User−User
Group−Group
User−Group
Weight 0.4 ∼ 0.5 U − U 0.1 ∼ 0.2 U − L − U 0.3 ∼ 0.4 U − G − U 0.1 ∼ 0.2 U − E − U G − U − G 0.4 ∼ 0.5 G − E − L − E − G 0.2 ∼ 0.3 0.3 ∼ 0.4 G − U − U − G U − U − G 0.3 ∼ 0.4 0.4 ∼ 0.5 U − E − G U − L − E − G 0.2 ∼ 0.3
A . Collaborative Filtering and Social based Recommendation trust the authors introduced the social
Collaborative Filtering Recommendation is a popular method , which has been researched intensively in recent years . In [ 2 ] , information and proposed a novel collaborative filtering model . In [ 15 ] , the authors proposed a parallel collaborating algorithm for the Netflix Prize , Alternating Least Squares with Weighted Regularization ( ALS WR ) . In [ 16 ] , the authors proposed a probabilistic matrix factorization model , which can deal with problems with large scale datasets and sparse ratings . In this research , we have incorporated the ideas presented in [ 15 ] and [ 16 ] to improve our model .
Social based recommendation is an emerging research topic which combines the recommendation algorithms and social media mining algorithms . In [ 22 ] , the authors proposed a general social based recommendation framework using social regularization . This work demonstrates that the social network information can benefit recommender systems . In [ 5 ] , the author proposed a group recommendation method on EBSN . This method considers location features , social features , and implicit patterns in a unified model . Another recommendation system proposed on EBSN is LCARS [ 7 ] . LCARS consists of an off line model , which considers the off line part of EBSN , and an on line recommendation model . By considering both the on line and off line parts , the recommendation performance was significantly improved [ 7 ] . In [ 20 ] , the authors proposed to realise location recommendation services . The recommendation method in [ 20 ] considered both the friend relationship and the geographic information . The algorithm proposed in [ 1 ] utilised the knowledge from other domains to improve the recommendation performance . In [ 8 ] , the authors proposed a recommendation algorithm on HIN and utilise part of the heterogeneous relationships .
In this research , we aim to bridge the gap between CF based recommendation and social based recommendation . Different from the above algorithms , our proposed method considers the recommendation in HSNs ( eg , LBSN , EBSN and other HINs with social information ) . In addition , our method utilises all types of relations in HSNs while the above algorithms utilise only part of the relations .
B . Mining Heterogeneous Social Network
Heterogeneous Social Network is defined as the heterogeneous information network with social information in our paper . As introduced before , Heterogeneous Social Network is a special case of HIN . HIN ( Heterogeneous Information Network ) has multi typed objects and relations , and it may contain more meaningful information . The concept of heterogeneous information network is first proposed by Sun et . al in [ 12 ] . The works proposed by them [ 7–12 , 18 ] also demonstrated that by mining heterogeneous information network , one can obtain more meaningful results . It also attracted other researchers to investigate on mining the heterogeneous information network [ 19 , 23 ] .
There are also some other kinds of heterogeneous social networks as previously introduced in Section II A . Location based networks [ 13 ] are heterogenous social networks with location information , and they have attracted many researchers in recent years [ 24 , 25 ] . In [ 24 ] , the authors proposed a model to mine interesting locations using GPS data ; in [ 25 ] , the authors designed a model to explain the human movements using some location based network data . Event based social networks ( EBSNs ) are those heterogeneous social networks which contain not only social information but also the offline event information . Recently EBSNs also receive more and more attention [ 5 , 6 ] . In [ 6 ] , the authors formally proposed the definition of EBSNs , and some initial research was carried out in [ 6 ] on event based social networks , such as community detection and link prediction .
In this research , we consider all types of heterogeneous social network together , and our recommendation method can be used in all the networks introduced above .
VI . CONCLUSION AND FUTURE WORK
Collaborative filtering recommendation are frequently suffered from the data sparsity and cold start problems . Social based recommendation , as one of the efficient and emerging methods to deal with these problems , has attracted much attention in recent years . In this paper , we focus on the recommendation problem using social heterogeneous relations , and we proposed Hete CF , a Collaborative Filtering recommendation method on Heterogeneous Social Networks . Different from the previous social based recommendation methods , we propose to effectively incorporate all the social relations , including the relations between users , items and user item . In addition , since Hete CF is a network structure based model , it can be used in many types of social networks ( eg , LBSN , EBSN , and other HINs with social information ) . For instance , Hete CF can be used in recommending off line events in EBSN or recommending locations ( or hotels ) in LBSN . The experiments on two real world heterogeneous social networks ( DBLP and Meetup ) demonstrate the effectiveness and efficiency of HeteCF .
In the future , we intend to apply Hete CF to more realworld recommendation problems . In addition , another direction of our future research is to explore the potential of HeteCF on big data problems , such as problems involving massive amounts social media data .
REFERENCES
[ 1 ] S . Gao , H . Luo , D . Chen , S . Li , P . Gallinari , and J . Guo , “ Cross domain recommendation via cluster level latent factor model , ” in Machine Learning and Knowledge Discovery in Databases . Springer , 2013 , pp . 161–176 . [ 2 ] B . Yang , Y . Lei , D . Liu , and J . Liu , “ Social collaborative filtering by trust , ” in Proceedings of the Twenty Third international joint conference on Artificial Intelligence . AAAI Press , 2013 , pp . 2747–2753 .
[ 3 ] J . B . Schafer , J . A . Konstan , and J . Riedl , “ E commerce recommendation applications , ” in Applications of Data Mining to Electronic Commerce . Springer , 2001 , pp . 115–153 .
[ 4 ] A . I . Schein , A . Popescul , L . H . Ungar , D . M . Pennock , and D . Ungar , “ Methods and metrics for coldstart recommendations , ” in Research and Development in Information Retrieval , 2002 , pp . 253–260 .
[ 5 ] W . Zhang , J . Wang , and W . Feng , “ Combining latent factor model with location features for event based group recommendation , ” in Proceedings of the 19th ACM SIGKDD international conference on Knowledge discovery and data mining . ACM , 2013 , pp . 910–918 .
[ 6 ] X . Liu , Q . He , Y . Tian , W C Lee , J . McPherson , and J . Han , “ Event based social networks : linking the online and offline social worlds , ” in Proceedings of the 18th ACM SIGKDD international conference on Knowledge discovery and data mining . ACM , 2012 , pp . 1032–1040 . [ 7 ] H . Yin , Y . Sun , B . Cui , Z . Hu , and L . Chen , “ LCARS : a location content aware recommender system , ” in Proceedings of the 19th ACM SIGKDD international conference on Knowledge discovery and data mining . ACM , 2013 , pp . 221–229 .
[ 8 ] X . Yu , X . Ren , Y . Sun , B . Sturt , U . Khandelwal , Q . Gu , B . Norick , and J . Han , “ Recommendation in heterogeneous information networks with implicit user feedback , ” in Proceedings of the 7th ACM conference on Recommender systems . ACM , 2013 , pp . 347–350 .
[ 9 ] X . Yu , X . Ren , Y . Sun , Q . Gu , B . Sturt , U . Khandelwal , B . Norick , and J . Han , “ Personalized entity recommendation : A heterogeneous information network approach , ” WSDM’14 , 2014 .
[ 10 ] Y . Sun , B . Norick , J . Han , X . Yan , P . S . Yu , and X . Yu , “ Integrating meta path selection with user guided object clustering in heterogeneous information networks , ” in Proceedings of the 18th ACM SIGKDD international conference on Knowledge discovery and data mining . ACM , 2012 , pp . 1348–1356 .
[ 11 ] Y . Sun , J . Han , X . Yan , P . S . Yu , and T . Wu , “ Pathsim :
Meta path based top k similarity search in heterogeneous information networks , ” VLDB’11 , 2011 .
[ 12 ] Y . Sun , Y . Yu , and J . Han , “ Ranking based clustering of heterogeneous information networks with star network schema , ” in Proceedings of the 15th ACM SIGKDD international conference on Knowledge discovery and data mining . ACM , 2009 , pp . 797–806 .
[ 13 ] Y . Zheng , Y . Chen , X . Xie , and W Y Ma , “ Geolife2 . 0 : a location based social networking service , ” in Mobile Data Management : Systems , Services and Middleware , 2009 . MDM’09 . Tenth International Conference on . IEEE , 2009 , pp . 357–358 .
[ 14 ] R . A . Horn and C . R . Johnson , Matrix analysis . Cam bridge university press , 2012 .
[ 15 ] Y . Zhou , D . Wilkinson , R . Schreiber , and R . Pan , “ Largescale parallel collaborative filtering for the netflix prize , ” in Algorithmic Aspects in Information and Management . Springer , 2008 , pp . 337–348 .
[ 16 ] R . Salakhutdinov and A . Mnih , “ Probabilistic matrix factorization . ” in NIPS , vol . 1 , no . 1 , 2007 , pp . 2–1 .
[ 17 ] M . Wu and B . Sch¨olkopf , “ Transductive classification via local learning regularization , ” in International Conference on Artificial Intelligence and Statistics , 2007 , pp . 628–635 .
[ 18 ] X . Yu , X . Ren , Q . Gu , Y . Sun , and J . Han , “ Collaborative filtering with entity similarity regularization in heterogeneous information networks , ” IJCAI HINA , 2013 .
[ 19 ] C . Luo , W . Pang , and Z . Wang , “ Semi supervised clustering on heterogeneous information networks , ” in Advances in Knowledge Discovery and Data Mining . PAKDD’14 . Springer , 2014 , pp . 548–559 .
[ 20 ] J . Bao , Y . Zheng , and M . F . Mokbel , “ Location based and preference aware recommendation using sparse geosocial networking data , ” in Proceedings of the 20th International Conference on Advances in Geographic Information Systems . ACM , 2012 , pp . 199–208 .
[ 21 ] A . Sadilek , H . Kautz , and J . P . Bigham , “ Finding your friends and following them to where you are , ” in Proceedings of the fifth ACM international conference on Web search and data mining . ACM , 2012 , pp . 723– 732 .
[ 22 ] H . Ma , D . Zhou , C . Liu , M . R . Lyu , and I . King , “ Recommender systems with social regularization , ” in Proceedings of the fourth ACM international conference on Web search and data mining . ACM , 2011 , pp . 287– 296 .
[ 23 ] C . Luo , R . Guan , Z . Wang , and C . Lin , “ Hetpathmine : A novel transductive classification algorithm on heterogeneous information networks , ” in Advances in Information Retrieval . ECIR’14 . Springer , 2014 , pp . 210–221 .
[ 24 ] Y . Zheng , L . Zhang , X . Xie , and W Y Ma , “ Mining interesting locations and travel sequences from GPS trajectories , ” in Proceedings of the 18th international conference on World wide web . ACM , 2009 , pp . 791– 800 .
[ 25 ] E . Cho , S . A . Myers , and J . Leskovec , “ Friendship and mobility : user movement in location based social networks , ” in Proceedings of the 17th ACM SIGKDD international conference on Knowledge discovery and data mining . ACM , 2011 , pp . 1082–1090 .
