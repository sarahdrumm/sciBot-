Identifying Early Buyers from Purchase Data
Paat Rusmevichientong
Cornell University
Ithaca , NY
∗
Shenghuo Zhu
Amazon.com Seattle , WA
David Selinger
Amazon.com Seattle , WA paatrus@oriecornelledu shenghuo@amazon.com selly@amazon.com
ABSTRACT Market research has shown that consumers exhibit a variety of different purchasing behaviors ; specifically , some tend to purchase products earlier than other consumers . Identifying such early buyers can help personalize marketing strategies , potentially improving their effectiveness . In this paper , we present a non parametric approach to the problem of identifying early buyers from purchase data . Our formulation takes as inputs the detailed purchase information of each consumer , with which we construct a weighted directed graph whose nodes correspond to consumers and whose edges correspond to purchases consumers have in common ; the edge weights indicate how frequently consumers purchase products earlier than other consumers .
Identifying early buyers corresponds to the problem of finding a subset of nodes in the graph with maximum difference between the weights of the outgoing and incoming edges . This problem is a variation of the maximum cut problem in a directed graph . We provide an approximation algorithm based on semidefinite programming ( SDP ) relaxations pioneered by Goemans and Williamson , and analyze its performance . We apply the algorithm to real purchase data from Amazon.com , providing new insights into consumer behaviors . Categories and Subject Descriptors : H28 [ Database Management ] : Database Applications – Data Mining Keywords : consumer behavior , early buyers , semidefinite programming , social network .
1 .
INTRODUCTION
Marketing literature has long recognized differences between early and late buyers [ 2 ] . Although no precise definition for these two groups of consumers exists , the term early buyers generally refers to consumers who tend to purchase products earlier than other consumers . Identifying these early buyers can help personalize marketing strategies . Fur
∗This work was done while the author was at Amazoncom thermore , we can potentially use sales information among early buyers to predict product trends , forecast sales , or guide new product introduction . The problem of identifying and distinguishing early buyers has received much attention in the marketing literature [ 6 ] .
In this paper , we present a non parametric approach to the problem of identifying early buyers from purchase data . Our formulation takes as inputs the detailed purchase information of each consumer , and partitions the consumers into two sets : early and late buyers . We construct from the purchase data a weighted directed graph whose nodes correspond to consumers . We have an edge from node i to node j with weight wij ≥ 0 if , among the products that consumer i and j bought in common , wij of these products were bought by consumer i before consumer j . A large value of wij relative to wji indicates that , in general , consumer i bought many products before consumer j .
Using the above graphical representation , the problem of identifying early buyers can be formulated as a variation of a maximum cut problem in a directed graph . Using techniques pioneered by Goemans and Williamson [ 5 ] , we provide an approximation algorithm based on semidefinite programming ( SDP ) relaxations and analyze its performance . We apply the algorithm to real purchase data from Amazon.com , providing new insights into consumer behaviors .
Let us briefly contrast our graph based formulation with another approach for identifying early buyers . As a proxy for the set of early buyers , we might consider , for each product , the first x % of consumers who purchased the product , or those consumers who purchased the product before a certain cutoff date . Then , we can combine these sets of consumers together . This simple approach raises many questions : How do we choose the cutoff point for each product ? Also , how do we combine the various sets of consumers together ?
Our formulation obviates the need to answer these questions since the graphical representation encapsulates all of the relevant purchase information of each consumer . Moreover , we will show that the set of early buyers has a natural interpretation in our graph based formulation , corresponding to the set of nodes with maximum difference between weights of the outgoing and incoming edges . We believe that the intuitive formulation , the compactness of the graphbased representation , and the interpretability of the solution constitute some of the advantages of our formulation over other approaches . 1.1 Contributions and Literature Review
Our work relates to the study of the diffusion of innovations in the marketing literature . Management science researchers have attempted to understand and model the evolution of product sales over time , assuming that product sales arise from two groups of consumers : innovators who tend to buy products early , and imitators who tend to buy products later [ 2 ] . Models developed in this literature typically assume that product sales over time follow a specific parametric form [ 6 , 7 ] . Most of the research focus on estimating the model parameters from data and understanding the evolution of product sales over time , without characterizing each individual consumer . Our work shares with this line of research a common goal of understanding the behavior of early and late buyers . Departing from this line of research , however , we focus on characterizing each individual consumer and identifying those who are early buyers .
We should note that our work differs from recent works in the study of social networks [ 4 , 8 ] . Most of this research attempts to model the influence among consumers and understand how this influence propagates in the networks . Although our work aims to identify consumers who tend to purchase products before other consumers , we do not know if these early buyers actually influence the late buyers to adopt the products .
Agrawal et al . [ 1 ] proposed a similar graphical representation for the problem of identifying consumers who are “ for ” or “ against ” a particular topic in newsgroup postings . They modelled the links between newsgroup postings as an unweighted undirected graph and formulated the problem as the standard maximum cut problem . Our formulation differs from this approach in the use of a weighted directed graph . Our representation applies to consumer purchase data , with a different interpretation from the graph used by Agrawal et al . [ 1 ] . Moreover , it turns out that the problem of identifying early buyers differs from the standard maximum cut problem and requires a dedicated analysis .
In summary , the contributions of this paper are as follow : • We present a non parametric approach to the problem of identifying early buyers , making use of a new graphical representation of purchase data .
• We provide an approximation algorithm with provable performance bounds .
• We apply our algorithm to real purchase data from Amazon.com , providing new insights into consumer behaviors .
1.2 Organization
In Section 2 , we present a detailed problem formulation and show how our formulation relates to the problem of finding a maximum likelihood assignment under a certain probabilistic model . Section 3 presents an approximation algorithm based on semidefinite programming relaxations . Then , in Section 4 , we apply our algorithm to real purchase data from Amazon.com and identify new insights generated from our analysis . Section 5 presents conclusions and discusses possible improvements . Due to space constraints , most of the results are stated without proofs . For more details , the reader is referred to a full length version of our paper . of each consumer , including the date and time of each purchase . We will represent this information using a weighted directed graph G = ( V,V × V , w ) , where each node v ∈ V = {1 , . . . , M} corresponds to a consumer . The mapping w : V ×V → <+ represents the non negative weight on each edge . We have an edge ( i , j ) ∈ V ×V with weight wij ≥ 0 if , among the products that consumer i and j bought in common , wij of these products were bought by i before j . For ease of exposition , we represent a missing edge from i to j as an edge with zero weight . An edge ( i , j ) with wij = 0 means that either consumer i and j never bought any product in common , or that , among products that i and j bought in common , consumer i always purchased them after consumer j . Note that for any i and j , the sum of wij and wji equals the total number of products purchased by consumer i and j . A large value of wij relative to wji indicates that consumer i and j bought many of the same products , and in most cases , consumer i bought them before consumer j .
We want to identify consumers who tend to purchase products earlier than other consumers . Let us briefly discuss the underlying motivations leading up to the final formulation considered in this paper . Since the weight of each edge measures how frequently a consumer bought products before another consumer , as a first try , we might formulate the problem as a maximum cut problem . In that case , we want to find a subset S ⊆ V with maximum weights of the outgoing edges , ieX
X wij = max Y ⊆V wij ,
( i,j)∈S×Sc
( i,j)∈Y ×Y c where Y c denotes the set of nodes not in Y .
The above formulation determines the subset of consumers who have bought the greatest number of products before all other consumers . However , this criterion does not quite capture our notions of early buyers , as demonstrated in the following example .
Example 1 . Assume that we have 3 consumers {1 , 2 , 3} and the following 4 edges with nonzero weight : w12 = 10 , w21 = 9 , w13 = 3 , and w23 = 3 .
The standard maximum cut formulation will identify {1} as the early buyer and label {2 , 3} as late buyers . However , the set of early buyers should be {1 , 2} since these two consumers bought so many products earlier than the other consumer ( consumer 3 ) . In addition , consumer 1 bought products before consumer 2 only slightly more than half of the time ( 10/19 ) . So , it does not seem reasonable to characterize consumer 1 as an early buyer , while labelling consumer 2 as a late buyer .
It follows from the above example that early buyers should correspond to those consumers who bought more products earlier relative to other consumers . We thus need to take into account the weights of the incoming edges as well . So , an alternative formulation that we might consider is the following :
X max Y ⊆V
( i,j)∈Y ×Y c
( wij − wji ) .
2 . PROBLEM FORMULATION
Assume that we have M consumers indexed by 1 , 2 , . . . , M and n products . We have the detailed purchase information
We can also put different weights on incoming and outgoing edges . In Section 2.1 , we will show how these weights are related to the probability that an early buyer will purchase a product before a late buyer . This leads us the following general formulation , named EARLY BUYERS ( G , β , γ ) :
X max Y ⊆V
( i,j)∈Y ×Y c
( βwij − γwji ) , where the parameters β and γ denote the weights associated with outgoing and incoming edges , respectively . The following result follows immediately from the fact that EARLY BUYERS(G , 1 , 0 ) corresponds to the standard maximum cut problem in a directed graph .
Theorem 1 . EARLY BUYERS(G , β , γ ) is NP complete .
2.1 A Probabilistic Interpretation
In this section , we provide a probabilistic interpretation for our formulation , showing that the EARLY BUYERS problem is related to the problem of finding a maximum likelihood assignment in a certain probabilistic model . This probabilistic view provides an alternative interpretation for the parameters β and γ . For each consumer i ∈ {1 , . . . , M} , let Xi denote a binary random variable that indicates the state of consumer i , with Xi = 1 indicating an early buyer and Xi = 0 indicating a late buyer . Assume that X1 , . . . , XM are independent and identically distributed with Pr{Xi = 1} = p0 for all i .
Under this model , we assume that we have an infinite number of products , a reasonable assumption in our setting since Amazon.com sells millions of products . Let Wij denote the weight of the edge ( i , j ) . Conditioned on Xi and Xj , we assume that Wij has a geometric distribution with parameter f ( Xi , Xj ) , ie for any wij ∈ Z+ , Pr{Wij = wij|Xi = xi , Xj = xj} = ( 1 − f ( xi , xj ) ) f ( xi , xj)wij , where f ( xi , xj ) = p1 1 − p1 1/2 1/2 if xi = 1 and xj = 0 , if xi = 0 and xj = 1 , if xi = 0 and xj = 0 , if xi = 1 and xj = 1
 for some parameter 0 < p1 < 1 . The parameter p1 corresponds to the probability that an early buyer will purchase a product before a late buyer . In this model , whenever two nodes have the same state , we assume that the probability of having an edge between nodes is 1/2 . We can consider the problem of finding an assignment x = ( x1 , . . . , xM ) ∈ {0 , 1}M that maximizes the likelihood of the graph G under this model . For any x = ( x1 , . . . , xM ) , let S0 = {i : xi = 0} and let S1 = {i : xi = 1} . Then , it can be shown that the log likelihood l(x1 , . . . , xM ) is given by l(x1 , . . . , xM ) = log Pr{Wij = wij ∀i , j and Xk = xk ∀k}
X
= α(x ) +
( i,j)∈S1×Sc 1
( βwij − γwji ) , where for any x = ( x1 , . . . , xM ) ∈ {0 , 1}M , α(x ) = |S0| log(1 − p0 ) + |S1| log p0
+ |S0||S1| log(4p1(1 − p1 ) ) + log
X
( i,j)∈V×V
( wij + 1 ) ,
1 2 x only through PM
β = log 2p1 , and γ = − log 2(1− p1 ) . Since α(x ) depends on j=1 xj , this observation leads directly to the following lemma .
Lemma 1 . Let β and γ be defined as above . Then , for any 0 ≤ K ≤ M , x:PM argmax j=1 xj =K l ( x1 , . . . , xM ) = argmax Y :|Y |=K
( i,j)∈Y ×Y c
( βwij − γwji ) .
X
The above lemma shows that finding a set of early buyers of size K is equivalent to finding a maximum likelihood assignment of X1 , . . . , XM subject to the constraint that exactly K of the Xi ’s are one .
The above lemma also establishes a relationship between the parameters β , γ , and the probability p1 that an early buyer will purchase a product before a late buyer . We showed that β = log 2p1 and γ = − log 2(1 − p1 ) . This result allows us to estimate the parameters β and γ from p1 . Also , if we assume that this probability is at least 1/2 , then it follows that β ≤ γ .
3 . ALGORITHMS
In this section , we develop algorithms for solving the EARLY
BUYERS problem . Section 3.1 presents an exact polynomialtime algorithm for a special case when β = γ . Then , Section 3.2 presents an approximation method for the general problem .
To facilitate our discussion , let us introduce the following notations that will be used throughout the paper . For any β ≥ 0 and γ ≥ 0 , let ZM AX ( β , γ ) denotes the optimal value of the EARLY BUYERS ( G , β , γ ) problem , ie
ZM AX ( β , γ ) = maxY ⊆VP
( i,j)∈Y ×Y c ( βwij − γwji ) .
3.1 A Special Case When β = γ
When β = γ , it turns out that the EARLY BUYERS problem can be solved efficiently via a simple algorithm . This result is stated in the following theorem .
Theorem 2 . For β ≥ 0 ,
ZM AX ( β , β ) = β n i ∈ V :P where SG =
X j∈V wij ≥P
( i,j)∈SG×ScG
( wij − wji ) , o j∈V wji
.
It follows from the above theorem that , when β = γ , we can determine the optimal cut for the EARLY BUYERS problem from the difference , at each node , between the weights of the outgoing edges and of the incoming edges . The optimal cut corresponds to those vertices whose difference is non negative . 3.2 General β and γ
Although we have an efficient algorithm for solving the EARLY BUYERS problem when β = γ , it is unlikely that such an algorithm can be found for general β and γ . In this section , we develop an approximation algorithm based on semidefinite programming relaxations pioneered by Goemans and Williamson [ 5 ] .
321
Integer Programming Formulation
We will first formulate the EARLY BUYERS problem as an integer quadratic programming as follows :
Maximize P subject to : i,j wij 4 fij(y0 , yi , yj ) ∀i , yi ∈ {−1 , +1} , where for any ( i , j ) ∈ V × V , fij(y0 , yi , yj ) = ( (β − γ)(1 − yiyj ) + ( γ + β)y0(yi − yj ) )
Note that for y0 , yi , yj ∈ {−1 , +1} ,
 4β ,
−4γ , 0 , if y0 = yi and yi 6= yj , if y0 = yj and yi 6= yj , otherwise . fij(y0 , yi , yj ) =
The above function is non zero only when yi 6= yj . Moreover , the variable y0 can be used to determine which side of the graph constitutes a cut . Given yi ’s , we define a cut S as the set {i : yi = y0} . The above formulation differs from the standard maximum cut formulation ( Section 6.3 in [ 5 ] ) because our objective function can be negative .
We will now relax the above integer programming problem to the following semidefinite programming problem ( P ) :
Max
( (β − γ)(1 − vi · vj ) + ( γ + β)v0 · ( vi − vj ) ) wij 4
X i,j
( P ) subject to : vi ∈ Sn ,
∀i . where Sn = {v ∈ <n : kvk2 = 1} denotes the n dimensional unit sphere . It follows from [ 5 ] that the above problem ( P ) is a semidefinite programming problem , and can be solved efficiently . Our algorithm proceeds as follows :
Algorithm :
1 . Solve the problem ( P ) and obtain solutions v0 , . . . , vn .
2 . Generate a random vector r that is uniformly dis tributed on Sn .
3 . Define y1 , . . . , yn as follows : yi = 1 if sgn(vi · r ) = sgn(v0 · r ) and yi = −1 otherwise .
4 . Define a cut S as {i : yi = 1} .
322 Performance Bounds
In this section , we offer bounds on the performance of our solution . Since our objective function can be negative , the standard analysis of the error bounds for the maximum cut problem does not apply directly in this case . We will provide a dedicated analysis specific to this problem .
Let v0 , v1 , . . . , vM denote the solutions of the semidefinite program ( P ) given in Section 321 , and let y1 , . . . , yM denote the integral solution found after the randomized rounding . Let us introduce the following notations . Let W total de note the total weights of all edges , ie W total =P
( i,j)∈V×V wij .
Let Z P ( β , γ ) denote the optimal value of the semidefinite programming relaxation problem ( P ) . Finally , let Z H ( β , γ ) denote the of the value of the cut S determined by our algorithm after the randomized rounding . Note that for any β and γ , Z H ( β , γ ) ≤ ZM AX ( β , γ ) ≤ Z P ( β , γ ) .
The main result of this section is stated in the following theorem , which relates the expected value of the cut produced by our algorithm to the optimal value . The proof of this result relies on techniques similar to that of Goemans and Williamson [ 5 ] .
Theorem 3 . Let λ = inf 0≤θ≤π
λ ≤ E.Z H ( β , γ)fi + φW total
ZM AX ( β , γ ) + φW total ≤ 1 ,
2 π where φ = max(γ , γ+β
) .
2
1−cos θ ≈ 087856 Then ,
θ
Let us briefly discuss the performance bound given in Theorem 3 and the choice of φW total which appears in the result . Note that our objective function can be negative , and let us denote its minimum value by ZM IN ( β , γ ) ≤ 0 . Since the value of the cut produced by our algorithm can also be negative , a natural performance measure to consider is given by
R(β , γ ) ≡ E.Z H ( β , γ)fi − ZM IN ( β , γ )
ZM AX ( β , γ ) − ZM IN ( β , γ )
.
Unfortunately , we could not find a constant lower bound for R(β , γ ) that holds for all β and γ . Since −φW total ≤ ZM IN ( β , γ ) ≤ Z H ( β , γ ) , we instead use −φW total as an approximation to ZM IN ( β , γ ) and develop the bound given in Theorem 3 .
Although we cannot find a lower bound for R(β , γ ) that holds in general , for specific instances of β and γ , we can still assess the quality of our solution as indicated in the following lemma .
Lemma 2 . For any β , γ ≥ 0 ,
E.Z H ( β , γ)fi − ZM IN ( β , γ )
ZM AX − ZM IN ( β , γ )
≥ E.Z H ( β , γ)fi + E.Z H ( γ , β)fi
Z P ( β , γ ) + Z P ( γ , β )
.
The proof of Lemma 2 makes use of the fact that ZM IN ( β , γ ) = −ZM AX ( γ , β ) . This result enables us to develop a conservative lower bound on the quality of our solution for specific instances of β and γ by solving two semidefinite programming problems : one with ( β , γ ) and another with ( γ , β ) .
4 . EXPERIMENTS
In this section , we apply our algorithm to real purchase data from Amazon.com , providing new insights into consumer behaviors . Section 4.1 describes the dataset used in our experiment . Section 4.2 compares the performance of our algorithm with other heuristics . The next two sections evaluate the set of early and late buyers identified by our algorithm , contrasting the purchasing behavior between these two groups of consumers . Finally , Section 4.5 concludes with an evaluation of our algorithm for different values of β and γ . 4.1 Dataset
We use purchase data from Amazon.com during the year 2002 . To ensure that we have sufficiently many consumers , we chose the top 50 most popular electronics items sold in the year 2002 as the set of products for our analysis . Moreover , to eliminate consumers who purchased very few products , we only consider those who bought at least four of these 50 products in 2002 . Given consumers i and j , we create an edge ( i , j ) with weight wij ≥ 0 if among the 50 products that i and j have bought in common , wij of those products were bought by consumer i at least 24 hours prior to consumer j . We will use purchase data from the year 2002 to identify the set of early and late buyers . Then , we will evaluate the performance of this set of consumers using purchase data from the year 2003 . 4.2 Performance Comparison
We evaluate the performance of two different algorithms : our algorithm based on SDP relaxations and the Top NetWeight algorithm .
βP j∈V wij ≥ γP
The Top Net Weight algorithm uses the following set of nodes as an approximation to the optimal cut : {i ∈ V : . Note that when β = γ , the al o j∈V wji gorithm yields the optimal cut by Theorem 2 .
For our experiment , we choose the following set of parameters : β = 0.3365 and γ = 05108 This choice of parameters is motivated by the discussion in Section 21 We showed that the parameters β and γ are related to the probability p1 that an early buyer will purchase a product before a late buyer , where β = log 2p1 , and γ = − log 2(1 − p1 ) .
Since an early buyer is more likely to purchase a product before a late buyer , we want p1 to exceed 1/2 . Our choice of β and γ is determined by setting p1 = 07 We chose this value only as a benchmark , and in Section 4.5 , we will evaluate the performance of our algorithm on different values of β and γ . Also , for our algorithm , we use an implementation of the dual scaling algorithm for positive semidefinite programming developed by Benson and Ye [ 3 ] .
The objective values of the cuts produced by the algorithms are given in Table 1 . The results in Table 1 show that our algorithm based on semidefinite programming relaxations yields a 7.18 % improvement in the objective value over the Top Net Weight algorithm .
Algorithm
Number of Early Buyers ( as % of Total Customers )
Top Net Weight
SDP
34.31 % 48.93 %
Objective
Value 700,037 750,275
Table 1 : Performance comparison between the TopNet Weight algorithm and the SDP .
4.3 Overall Purchase Characteristics
Using the set of early and late buyers identified by our algorithm , we compare the characteristics of these two groups of consumers across different dimensions . We look at the following characteristics for the year 2002 and 2003 : 1 ) overall revenue ( total amount of money that the consumer spent on all products ) , 2 ) electronics revenue ( total amount of money that the consumer spent on electronics products ) , 3 ) overall quantity ( total quantity of all products purchased ) , and 4 ) electronics quantity ( total quantities of electronics products purchased ) .
For each of these characteristics , we compute its average for each group of consumers . Table 2 shows , for each variable , the ratio between the average among the early buyers and the average among the late buyers for the year 2002 and 2003 . If the ratio exceeds one , then the average value among the early buyers is higher than the average among the late buyers . All variables are statistically significant at p value less than 5 % .
It follows from Table 2 that for the year 2002 , the early buyers spent more money than the late buyers overall and on electronics products . Moreover , the early buyers continued to spend more money overall and on electronics products even in the year 2003 . 4.4 Sales Distributions Over Time
In the previous section , we showed that early and late buyers exhibit significant differences in their overall purchasing behaviors . In this section , we look at the actual timing of the product purchases between these two groups of consumers .
Variable
Ratio Between Ratio Between Early and Late Early and Late overall revenue electronics revenue overall quantity electronics quantity
Buyers ( 2002 )
1.16 1.15 1.16 1.14
Buyers ( 2003 )
1.06 1.02 1.05 0.98
Table 2 : Purchase characteristics between early and late buyers for the year 2002 and 2003 . All variables are statistically significant at p value less than 5 % .
Figure 1 : Cumulative sales distribution for the year 2002 among early buyers , late buyers , and the overall population for a wireless notebook adapter
Figure 1 shows the cumulative sales distributions in 2002 for a wireless notebook adapter , one of the top selling electronics products in the year 2002 that appears in our analysis . As expected , in the year 2002 , the early buyers are more likely to purchase this product before the late buyers . We see from the graph that over 90 % of the sales from the early buyers occurred by July 2002 , while at the same time , less than 10 % of the sales have occurred for the late buyers . A similar purchasing pattern continues to holds for almost all of the products in our analysis .
In Figure 2 , we consider sales distributions for two brand new products that were not introduced until the year 2003 ( and hence not part of the analysis ) : a portable CD player and a 40GB iPod . This figure shows the sales distribution in the year 2003 for these two products . It it interesting to note that the early buyers identified by our algorithm purchased both of these products significantly before the late buyers .
4.5 Performance For Different β and γ
We conclude this section by evaluating the performance of the SDP algorithm against the Top Net Weight algorithm introduced in Section 4.2 for different values of β and γ . It follows from the definition that , for γ > 0 , the EARLY BUYERS(G , β , γ ) problem is equivalent to the EARLY BUYERS ( G , β/γ , 1 ) problem . Thus , in this experiment , we set γ = 1.0 and vary only the parameter β . Figure 3 shows the relative difference between the objective value under the SDP and the Top Net Weight algorithm for different choices of β . As predicted by Theorem 2 , when β = γ = 1.0 , the difference is zero since both algorithms yield the optimal value . However , as β differs from γ , the SDP outperforms
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1DECNOVOCTSEPAUGJULJUNMAYAPRMARFEBJANCumulative Proporiton of SalesMonth2002 Cumulative Sales Distribution ForWireless Notebook AdapterWilcox test : Z= 402098 , p value=0.0000OverallEarly BuyersLate Buyers not impose any constraint on the number of early buyers that we can have . However , in certain applications , we might want to know , say , the top 1 % of the early buyers . It is interesting to explore if we can introduce such constraints into our problem formulation . 5.3 Definition of the Edge Weights
Currently , the weight of an edge measures how frequently a consumer purchased products before another consumer . We can certainly extend the definition of the weight to reflect the time between purchases . 5.4 Product Life Cycles
Our formulation uses purchase data during a specified time window , ignoring differences in the product life cycles . Mature products exhibit very different sale patterns than emerging products . A more realistic model should incorporate this information into the formulation . 5.5 Choices of β and γ
In this paper , we treat the parameters β and γ as given . In Section 2.1 , we showed how these parameters relate to the probability that an early buyer will purchase a product before a late buyer . If we know this probability a priori , we can use this information to estimate β and γ . Finding an approach that estimates the parameters directly from the data remains an open question .
Acknowledgments We are grateful to Ronny Kohavi , Benjamin Van Roy , and the referees whose suggestions greatly improved the content and the presentation of this paper . We also thank Jeremy York , Doug Bryan , and Mike Perkowitz for many helpful comments . We thank our colleagues , David Liu , John Rauser , Dan Sommerfield , and Toby Walker for stimulating discussions on related topics . We would like to thank Yinyu Ye and Aileen Sandridge for pointers to interesting problems during the early part of this research . Finally , we are grateful to Steven J . Benson for the use of his semidefinite programming solver and for all of his assistance .
6 . REFERENCES [ 1 ] R . Agrawal , S . Rajagopalan , R . Srikant , and Y . Xu , “ Mining
Newsgroup Using Networks Arising From Social Behavior , ” WWW Conf . , May 20 24 , 2003 , Budapest , Hungary .
[ 2 ] F . M . Bass , “ A New Product Growth Model for Consumer
Durables , ” Management Science , 15 Jan 1969 , pp . 215 227 .
[ 3 ] S . Benson and Y . Ye , “ DSDP4 : A software package implementing the dual scaling algorithm for semidefinite programming , ” Tech Report ANL/MCS TM 255 , Argonne National Laboratory , Argonne , IL , June 2002 . Software downloadable from http://www unixmcsanlgov/∼benson/ [ 4 ] P . Domingos and M . Richardson , “ Mining the Network Value of Customers , ” KDD 2001 .
[ 5 ] M . Goemans and D . Williamson , “ Improved Approximation
Algorithms for Maximum Cut and Satisfiability Problems Using Semidefinite Programming , ” J . of the ACM , vol . 42 , pp . 1115 1145 , 1995 .
[ 6 ] V . Mahajan and E . Muller , “ When Is It Worthwhile Targeting the Majority Instead of the Innovators in a New Product Launch ? , ” J . of Marketing Research , 35 , pp . 488 95 , Nov 1998 .
[ 7 ] V . Mahajan , E . Muller , and R . K . Srivastava , “ Determination of Adopter Categories by Using Innovation Diffusion Models , ” J . of Marketing Research , 27 , pp . 37 50 , 1990 .
[ 8 ] M . Richardson and P . Domingos , “ Mining Knowledge Sharing
Sites for Viral Marketing , ” KDD 2002 .
( a ) Portable CD Player
( b ) 40GB iPod
Figure 2 : Cumulative sales distribution in the year 2003 for ( a ) portable CD player and ( b ) 40GB iPod . These products were not released until 2003 .
Figure 3 : Relative difference between the objective values under the SDP and the Top Net Weight algorithm for different values of β . We set γ = 10 the Top Net Weight algorithm , yielding a much higher objective value for all values of β .
5 . CONCLUSIONS AND EXTENSIONS
We presented a non parametric approach to the problem of identifying early buyers . Our formulation makes use of a new graphical representation of purchase data . We provided an approximation algorithm based on semidefinite programming relaxations and analyzed its performance . We also applied the algorithm to real purchase data from Amazon.com , providing new insights into consumer behaviors . Our current formulation offers many interesting extensions and directions for future research . We outline a few of these here . 5.1 Scalability
Millions of consumers shopped at Amazon.com in the past year . The SDP algorithm can handle only thousands of consumers . It remains an open research question if we can design an efficient approximation algorithm that can scale up to the number of consumers that we have at Amazoncom We studied the SDP algorithm primarily because it provides us with performance guarantee . 5.2 Constraints on Number of Early Buyers
The paper aims to identify consumers who tend to purchase products earlier than other consumers . Thus , we do
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1DECNOVOCTSEPAUGJULJUNMAYAPRMARFEBJANCumulative Proporiton of SalesMonth2003 Cumulative Sales Distribution ForPortable CD PlayerWilcox test : Z= 14 , p value=0.0087OverallEarly BuyersLate Buyers 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1DECNOVOCTSEPAUGJULJUNMAYAPRMARFEBJANCumulative Proporiton of SalesMonth2003 Cumulative Sales Distribution For40 GB iPodWilcox test : Z= 18 , p value=0.0022OverallEarly BuyersLate Buyers00%50%100%150%200%250%300%350%400 % 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2Relative DifferencebRelative Difference Between the Objective Value Under SDP Relaxtion and the Top Net Weight Algorithm for Different Values of b ( with g=1.0 )
