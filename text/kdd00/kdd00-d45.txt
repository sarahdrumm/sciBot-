Interactive Exploration of Very Large Relational Datasets through 3D Dynamic Projections
Department of Computer Science , Western Michigan University
Kalamazoo , Michigan 49008
Li Yang yang@cswmichedu
ABSTRACT The grand tour , one of the most popular methods for multidimensional data exploration , is based on orthogonally projecting multidimensional data to a sequence of lower dimensional subspaces and then moving continuously from one to another . By running experiments on screen and in the CAVE virtual environment , we were able to use the method for the 3D rendering of very large relational datasets where projections are made onto 3D subspaces . 3D cluster guided tour is proposed where sequences of projections are determined by centroids of data clusters . It makes inter clusterdistance preserving projections in the perspectives that the data clusters are displayed as separate as possible . The exploration of very large datasets is supported by using volume rendering through texture splatting . Volume rendering takes as input only the aggregation or part of data needed for rendering , which can be retrieved efficiently by SQL queries in an ad hoc manner while we explore or drill down large datasets . To facilitate interactive picking and brushing , a kd tree multidimensional indexing mechanism is designed . Access methods for subspace search and range query are proposed to greatly reduce the cost of searching and picking interesting data records . Various add on features , such as projecting variable axes and cluster similarity graphs , help further the understanding of data .
Categories and Subject Descriptors H28 [ Database Management ] : Database Applications— Data Mining ; I36 [ Computer Graphics ] : Methodology and Techniques—Interaction Techniques ; I37 [ Computer Graphics ] : Three Dimensional Graphics and Realism— Animation , Virtual Reality ; H33 [ Information Storage and Retrieval ] : Information Search and Retrieval—Clustering , Selection Process ; G.3 [ Mathematics of Computing ] : Probability and Statistics—Multivariate Statistics
General Terms Design , Experimentation
INTRODUCTION
1 . Visualization techniques have proven to be of high value in exploratory data analysis and data mining . When we talk about very large relational tables , we imply that either the tables are very wide ( up to a few hundred dimensions ) , or very long ( a huge number of records ) , or both . For small dataset with a few dimensions and a few records , scatterplot is an excellent means for visualization . Patterns could be efficiently unveiled by simply drawing each data record as a geometric object in the space determined by two or three numeric variables of the data , while its size , shape , color and texture determined by other variables of the data . The ability to draw scatterplots is a common feature of many visualization systems . However , conventional scatterplots lose their effectiveness as either dimensionality or the number of records becomes large .
The ways to handle large datasets are then twofold : to deal with high dimensionality and to deal with large number of records . Many techniques , such as scatterplot matrix , parallel coordinates , star glyphs , and dimensional stacking , are developed to visualize data of more than three dimensions . While these techniques are useful to explore moderate dimensioned datasets , they are not intuitive for interactive exploration . To retain the nature of data records as multidimensional points , a good way is to project data orthogonally onto 2D or 3D subspaces which allow us to look at relational data in a geometry that is within the perceptibility of human eyes . Since there is an infinite number of possibilities to project high dimensional data onto lower dimensions , the grand tour method [ 1 , 5 , 6 ] provides an overview of all possible projections through sampling all possible planes randomly . By displaying a number of intermediate projections obtained by interpolation between any two projections , the entire process creates an illusion of continuous smooth motion . This helps to find interesting projections which is hard to find in the original data with only low dimensional plots .
A tour could be further guided by projection pursuit which examines the distribution of data and aims at helping the users to find interesting projections . For clustered datasets , the position of data clusters could be used to help choosing projections . The idea is to choose the centroids of four clusters and project all data points onto a 3D subspace determined by these four cluster centroids . The four clusters will then be displayed as separate as possible from each other . Furthermore , this projection is distance preserving in the sense that the distance shown between any two of these four cluster centroids is exactly the same as their original distance . We call this a cluster guided projection . By using grand tour linking the cluster guided projections from one to another with a geodesic ( actually pseudo geodesic after interpolation ) path , a viewer can quickly have a good sense of the position of all data clusters by moving smoothly through all cluster guided projections . This is what we call the cluster guided tour .
Datasets could also be very large in terms of the number of data records . Modern relational databases often contain so many records that it is impractical to display interactively all of them as points in a single scatterplot . Even if the display of so many points were possible , its usefulness would be diminished by overwhelming appearance and excessive occlusion . Previous way to deal with this problem is sampling . In this paper we show a better way for the exploration of very large dataset by visualizing 3D density maps using volume rendering .
To handle large number of data records , one improvement to scatterplot is to draw density maps instead of individual data points . The way to draw 3D density map is volume rendering . The main idea behind volume rendering is that data points are discretized and grouped into bins . Each bin is a range of values for each of the variables . Data points belonging to each range are then categorized into each bin . Volume rendering takes each of these bins , and displays them onto screen as voxels . There are many methods of implementing volume rendering . Since the result is expected to represent an amorphous cloud of colored data points , it is felt that texture splatting using Gaussian footprints[18 ] is the most natural choice .
Volume rendering takes as input only a set of data bins and , in each bin , the number of data records . The size of this highly aggregated data is much smaller than that of the original , making it possible to be transferred from database in an ad hoc manner . More importantly , data bins and the number of records in each bin can be retrieved efficiently from relational database by the SQL GROUP BY query . To further accelerate the process , the binned and aggregated data can be pre calculated and stored as summary tables in database . Volume rendering , together with database support , enables fast rendering of very large datasets .
Picking and brushing are problems for the interactive exploration of very large datasets . Picking and brushing are special kinds of range queries that each mouse click on screen selects a “ tubular ” range in the original n dimensional space . Since the data to be selected are points in high dimensional space , it is felt that kd tree[3 ] and its variants such as k d btree[12 ] and KD DT[15 ] are favorable multidimensional indexing mechanisms . Access method of subspace search and range query is proposed to take advantage of the kd tree data structure to reduce the cost of searching and picking interesting data points .
There are other issues for the interactive visualization of relational data . For example , a direct interface to databases is absolutely necessary so that only data needed for rendering are retrieved in an ad hoc manner while we drill down large datasets . Another issue is that many variables are categorical rather than numerical . The values of categorical variables have no explicit ordering . This makes them difficult to map to a linear scatterplot axis . Furthermore , real world datasets have always a lot of missing values[11 ] . Missing values need special treatments in data visualization , for the same reason they are specially treated in databases .
There are many previous work focusing on the visualization of multivariate datasets . XmdvTool[17 ] is a tool integrating scatterplot matrices , parallel coordinates , star glyphs , and dimensional stacking by linking alternative views using brushing . The idea of using sequences of lower dimensional projections to simulate higher dimensional display was proposed in [ 1 ] . An example visualization system that implemented 2D projection and grand tour was XGobi[13 ] . 2D cluster guided projections were studied in [ 8 ] and were implemented in CViz , which concentrates on 2D projections determined by any three clusters . There are also examples of exploratory data visualization in immersive virtual reality environments . Virtual Data Visualizer[16 ] employs a data organization with data arranged hierarchically in classes that can be visualized within the virtual environment . VRGobi[14 ] , which is a virtual reality extension of XGobi , uses the C2 immersive environment for the dynamic display of statistical graphics . So far , the only application we have encountered that implements volume rendering for visual data mining is the SplatViz[2 ] tool in the SGI MineSet software .
This paper presents the n23Tool , a visual exploration tool which uses 3D grand tour for relational data and 3D cluster guided tour for data clusters . Compared with previous work such as CViz[8 ] on 2D cluster projections , n23Tool is capable of 3D view by taking advantage of modern graphics hardware . It allows tour transition between cluster views . Up to four clusters can be displayed in a distance preserving way in a 3D view . All these features make it easier to discover complex patterns and holes in datasets . n23Tool is particularly capable for very large datasets through volume rendering . Selection and drill down are instantly supported through interface with databases . Two versions of the tool have been implemented : one is an on screen version ; the other is a virtual reality version using the CAVE[7 ] immersive virtual environment . The on screen version supports stereo display which provides depth cues for 3D scatterplot . The virtual reality version is more impressive . With the CAVE as a 3D “ magic canvas ” , scatterplots can be drawn in mid air in a 3D virtual space . The n23Tool was designed as a high end tool to cater the needs for the visual exploration of very large datasets . It is now routinely employed for database exploration , preprocessing and analyzing clustering results .
2 . 3D CLUSTER GUIDED TOUR Grand tour is an extension of data rotation for multidimensional datasets . It is based on selecting a sequence of projections and moving continuously from one projection to the next . By displaying a number of intermediate projections obtained by interpolation between any two projections , the entire process creates an illusion of continuous , smooth motion . This helps to find interesting projections which are hard to find with only low dimensional plots of the original data . Furthermore , grand tour allows a viewer to easily
A G e o d e s i c P a t h n e t fl a r g P r oje ctio
T
The Origin
Current fl Projection
Figure 1 : Moving 2D projections along a geodesic path in a 3D space . keep track of a specific group of data points throughout the journey of a tour .
For illustration , suppose we are to make a 2D tour of 3D Euclidean space(Figure 1 ) . The most straight way to move from one 2D projection to the next is a sequence of interpolated projections to move the 2D projection plan , or a 2 frame ( a 2 frame is an orthonormal pair of vectors ) , to the next along a geodesic path . For 3D grand tour of ndimensional ( n > 3 ) datasets , in the same way , it is necessary to have an explicitly computable sequence of interpolated 3 frames in n dimensional Euclidean space . The n dimensional data is then projected , in turn , onto the 3D subspace spanned by each 3 frame . For the shortest path to move from one 3D projection to another , the sequence of the interpolated 3 frames should be along a geodesic path . Moving along a geodesic path creates a sequence of intermediate projections moving smoothly from the current to the target projection . This is a way of assuring that the sequence of projections is comprehensible , and also moves rapidly to the target projection . For 3D projections , a geodesic path is simply a rotation in the ( at most ) 6 dimensional subspace containing both the current and the target 3D subspaces . This implies that some preprojection is useful in the implementation to speed up computation .
There are various ways of choosing paths of a tour . A simplest way is random tour . The target projection in each step in a random tour is randomly generated . This creates a way for dynamic browsing of relational data by moving among randomly chosen 3D subspaces . Another straightforward way is choosing the span of any three arbitrary variables as a 3D subspace and moving from this span to the next span of another three variables . The projection in a span is exactly a 3D scatterplot . This is more than 3D scatterplots , however , because more information could be unveiled by the motion moving from one projection to another . This is what we call simple projection . Simple projection gives a way to continuously check a sequence of scatterplots of data on any three variables . Figure 2 shows a simple projection of the
Figure 2 : Simple projection : a 3D scatterplot .
Adult dataset from the UCI ML Repository[4 ] . Two categorical variables , education and occupation , are plotted with their possible values shown along the axes from the origin . A continuous variable , age , is displayed with its mean value set at the origin and its range of values marked by numbers .
More advanced ways of grand tour come from exploratory statistics where data distribution is involved in choosing the path of a tour . For example , one way is to restrict paths of projections to principal components and canonical variate subspace[10 ] . Another way constructs hill climbing paths that follow gradients of projection pursuit indices[6 , 9 ] . These techniques are efficient ways to examine statistical significance of variables . For clustered datasets , however , we have a way , what we call the cluster guided tour , to show the structure of data clusters .
Suppose that we have partitioned an n dimensional dataset into k ( k > 4 ) clusters , and let {cj }k j=1 denote the centroids of these clusters . Any combination of four distinct and noncolinear cluster centroids ca , cb , cc and cd in {cj } determines a unique 3D subspace of n space . Let i1 , i2 and i3 constitute an orthonormal basis of the 3D subspace ( this could be obtained by orthonormalizing , for example , cb −ca , cc −ca , and cd − ca ) . We can then compute a 3D projection by projecting the n dimensional dataset onto the 3 frame ( i1 , i2 , i3 ) . This projection preserves the inter cluster distances , that is , the Euclidean distances between any two of the four cluster centroids {ca , cb , cc , cd} will remain unchanged after the projection . This projection is a right perspective to view these four clusters because the four clusters are visualized as separate as possible .
Table 1 : Processed Data for volume rendering
Minority Commute Crime 0 25 26 50 · · · 0 25 0 25 · · ·
001 002 001 002 · · · 001 002 001 002 · · ·
0 1 0 1 · · · 2 3 4 5 · · ·
· · · Weight · · · · · · · · · · · · · · · · · ·
2 1 · · · 5 1 · · ·
An improvement of scatterplot to display large number of data points is to draw density map instead of individual data points . The way to draw 3D density map is volume rendering . Volume rendering helps a viewer perceive the density of data points in each location of a 3D scatterplot .
Conventionally , volume rendering is the direct display of 3D volume data . However , the volume data it has to take as input here are multidimensional . The multidimensional voxelized data to be rendered are obtained using binning . The tradeoff between accuracy and rendering speed is determined by binning resolution . Relational table is a natural data structure for representing the voxelized data because of the sparsity of data points in multidimensional space . Each voxel is represented as a record in the table . The weight of each voxel after binning is an aggregation . In most cases , it is the number of data points in a corresponding bin . In some other cases , it may be the sum or even the weight records by the value of some other variable . We use again the Boston Housing data as an example . The first step is to bin the variables to a desired resolution . Then an aggregation is performed to compute counts using binned numeric variables as keys . This results in the processed data shown in Table 1 . There will be at most one row ( bin ) for each combination of variables .
Uniform binning is used to discretize the continuous variables . Categorical variables use unique values as bins . The binning is performed directly on database using aggregation queries . To further speed up the process , a summary table can be created in database to store the binning results . Since table is used as the underlying data structure , no storage is wasted on regions with no data .
We decided to use splatting[18 ] as a way for volume rendering . Splatting projects voxels onto the 2D viewing plane . The projection of each voxel is approximated by a Gaussian splat , whose opacity and colour depend on those of the voxel . The resulting splats are composited on top of each other in back to front order to produce the final image . Splatting was proposed to improve the calculation speed at the price of less accurate rendering . The n23Tool utilizes the splatting method using 2D texture splats . A high degree of accuracy is not necessary for our purposes as compared to the rendering speed .
Opacity is assigned to each voxel as a function of its weight of the corresponding bin . The function used in the n23Tool is :
α = 1 − e−µ·weight where α is the opacity of a splat at its center , weight is
Figure 3 : A 3D cluster guided projection where the 3D subspace is determined by centroids of 4 clusters 0 , 1 , 3 , 5 . The projection determining cluster centroids are visualized as big spheres , while other cluster centroids are visualized as smaller cubes .
Cluster guided tour is a way to get cluster centroids involved in choosing projection steps . Given k cluster centroids , there are at most ( k 4 ) combinations of unique 3D cluster projections . The basic idea behind cluster guided tour is simple : Choose a target projection from ( k 4 ) possible cluster guided projections , move smoothly from the current projection to the target projection , and continue . We illustrate the 3D cluster guided tour on the Boston housing data set[4 ] . The dataset was clustered into 6 clusters . There are ( 6 4 ) = 15 possible 3D cluster guided projections . One of them is plotted in Figure 3 . The 3D cluster guided tour reveals significant information about the position of clusters .
3 . VOLUME RENDERING One of the problems of displaying large multi dimensional data sets with 3D scatterplot is the possibility of having more than one data point with the same values . These points would be drawn in the exact same location in a scatterplot , preventing the viewer from seeing more than one data point . Another problem is that the visual presentation of a large dataset using a scatterplot would result in millions of data points cluttered together making it nearly impossible for the average human to understand .
Query Region
Query Region
( a )
( b )
Figure 5 : kd tree splitting patterns : ( a ) Cyclic splitting , and ( b ) Domain priority splitting .
There exist a number of multidimensional indexing techniques . Since we take data as a set of static points in ndimensional Euclidean space , it seems that kd tree is a good choice . Binary kd trees organize n dimensional data for efficient search of nearest neighbors . A kd tree partitions a dataset recursively by the median of the dimension with the greatest range . The “ longest ” dimension is always split in an attempt to keep each node ’s geometric region as compact as possible . The user specifies a threshold , that is , the minimum number of data records allowed in a leaf node . The algorithm uses the threshold to decide when to stop partitioning a node . Each leaf lists the data records that satisfy the conditions implied by the path to the leaf . kd tree is a main memory data structure generalizing the binary search tree to multidimensional data . To adapt kdtrees to secondary storage , one way is to choose domains cyclically to split interior nodes(Figure 5(a ) ) and pack multiple interior nodes into a single page . We are better off including in one page a node and all its descendants for some number levels . Another way is to have multiway branches at each interior node where interior nodes look more like B tree nodes which have multiple partitions along a dimension(Figure 5(b) ) .
Typical inputs to kd tree search are a “ query ” instance ( a n dimensional position ) and a threshold , which defines the size of neighbor . For brushing and picking on screen , however , each mouse click specifies a n dimensional “ tube ” with 2 dimensions bounded by the size of the brush and the rest n − 2 dimensions open for free1 . Furthermore , the orientation of the brushing “ tube ” will always change depending on the move of projections in a tour . In such a case , it would be desirable to have kd tree regions as “ n cubical ” as possible . The cyclic splitting pattern(Figure 5(a ) ) would be better than the domain priority splitting(Figure 5(b) ) . This is because that , in most cases , the former would have smaller regions to search for brushing and picking .
It is convenient to think of a brushing “ tube ” as an ndimensional region that satisfies a neighborhood inequation . Brushing is to select all data points within this region . The search begins from the root of kd tree . If that node is not a
1In the case of 3D brushing and picking in a virtual reality environment , 3 dimensions are bounded by a 3D brush , and the rest n − 3 dimensions are open for free .
Figure 4 : Volume rendering of a simple projection . the weight of aggregated data points in the bin , and µ is a scale factor . This exponential opacity function is effective in modeling light propagation through clouds of tiny lightemitting spheres . The colour of the splat is determined by the average value of colors of all points in the corresponding bin . The splats are drawn in back to front order , at each bin location to form an image that approximates the appearance of a scatterplot of the original data ( Figure 4 ) . A slider is used to vary the value of the scale factor µ . This allows global scaling of the opacity for each splat to make an entire display image of rendered splats more or less transparent .
An advantage of the n23Tool is that it has direct interface to backend database system . With database support , the volume exploration of a large dataset never needs retrieving the whole dataset . The less aggregated subset of data will not be retrieved until you select a subset of data and drill down . This pick and drill down process could continue until you reach the record level when a set of individual data points are retrieved . In this way , the n23Tool is capable of visual exploration of very large datasets .
4 . BRUSHING AND PICKING WITH THE
KD TREE INDEX
Brushing and picking are fundamental requirements for interactive data exploration . During the journey of a tour , a viewer can easily keep track of the movement of selected data points . Data points picked up can then be related back to the data , thus make it possible for further analysis such as launching another tour of selected data points or another mining process for drill down . Due to the highly interactive nature of brushing and picking , the brute force way of searching all data records for matching points will not work for large datasets . An index and search strategy is needed . leaf , the query region is compared to the node ’s split point and the appropriate children that intersect with the query region are identified . Recursive call to each child is then made . If the node is a leaf , the algorithm checks whether each data point at the leaf is within the query region . The algorithm finally returns a list of selected data points .
5 . CATEGORICAL AXES AND MISSING
VALUES
It is quite common for many variables to be categorical rather than numerical . A categorical variable can be mapped onto a linear scatterplot axis in the same way as a numeric variable , provided that some order of distinct values of that variable is given along the categorical axis . Here we have several options : First , the distinct values of a categorical variable may be explicitly listed . The order of the categorical values being listed will be the order these values be arranged on the axis . Second , categorical values could be grouped together , reflecting the natural taxonomy of values . Third , values of a categorical variable can also be sorted alphabetically , or numerically by aggregate value of some other variable .
The scatterplot in Figure 2 shows two categorical variables , occupation and education . Values of occupation are sorted by the variable hours per week along the left axis . The occupations , farming fishing and executive managerial , listed at the end of the axis have the longest working hours , and private house services has the shortest . Values of education are given explicitly with some of the values , such as Masters and Doctorate , are grouped together .
It is common for relational data to contain missing values . These missing values are treated quite differently from one data mining algorithm to another . The remedies for dealing with missing values are based on the randomness of the missing data process and the method used to estimate the missing values[11 ] . Simply removing all nulls isn’t a fully satisfactory solution since you significantly bias the data . Also , assuming nulls to a certain value , for example , the mean of the variable , is generally not acceptable as this introduces more confusion and creates outliers . There are algorithms[11 ] that try to estimate a maximum likelihood value for each null . For the purpose of visualization , we think it is better to do nothing more on missing values but to keep what it is . Null axis values for a continuous variable are placed below the range of the values for that variable . For a categorical variable , missing values are placed at the origin of the corresponding axis . They are not confused with other values as all categorical values are arranged on the positive part of the categorical axis . In addition , null color values are shown as gray , and null label and message values are shown with a question mark . In Figure 2 , the value of occupation is sometimes missing . These points appear on the plane through the origin where the value of occupation is zero , offset from the points that have the first occupation value .
6 . RENDERING IN THE CAVE CAVE is a projection based virtual environment that uses 3D computer graphics and position tracking to immerse viewers inside a 3D space . The CAVE allows multiple view
Figure 6 : A snapshot of the n23Tool CAVE Version . The wireframe box indicates the CAVE ’s physical space where data points being plotted in mid air . The cube at the bottom is for brushing . ers to enter the space and share the same virtual experience . With the CAVE as a 3D “ magic canvas ” , 3D projection of high dimensional data is rendered as a galaxy in mid air in the virtual space ( Figure 6 ) . This helps visualize the exact 3D position of data points , show similarity or dissimilarity between clusters , and determine which clusters to merge or to split further . The variable vectors , which show the contribution to the projection of each variable , are visualized as lines in white color through the origin and marked by the names of variables at their far ends . There are two ways of interactive picking : brushing with a resizable cube brush ( shown in Figure 6 ) ; and cluster picking by selecting a cluster centroid . The CAVE has plenty of space for 3D rendering .
The CAVE was initially designed for scientific and engineering visualization . It has no tool or library for GUI design . The n23Tool requires a user interface that is fairly complicated for a virtual environment . The interface must be designed to give the user control over the journey of a tour . We have taken the approach that a combination of more orless traditional menus and more direct means of icon manipulation will do the job . Controls in the n23Tool include a panel ( shown in the lower right corner of the right wall in Fugure 6 ) and submenus for various actions and controlling animation . Tools include a cube brush for picking data points , reclustering using the k means clustering algorithm , single step forward and backward in a guided tour , and so on .
7 . SOME ADD ON FEATURES 7.1 Where We Are in a Tour ?
A dizzy feeling besets many viewers of high dimensional data projections and they may ask “ How do I know what I am looking at ” . In geometric terms , the task is to locate the position of a projection 3 frame . In XGobi[13 ] , a visual way of conveying this information is to project the variable unit vectors in n space like regular data , and render the result together with data points . n23Tool follows the way used in XGobi . Examples of the application are shown throughout all screen snapshots in this paper . A generalized tripod called “ n pod ” is an enhanced rendition of the n variable unit vectors in n space . Variable unit vectors in the n pod can be treated as if they were real data , rendered as lines , and labeled by variable names in the far ends so that they are recognized as guide posts rather than data . Continuous variables are displayed as lines with their means set at the origin . This is for the easy mark of both minimum and maximum values at both ends of each line . Categorical variables are displayed as rays starting from the origin . The n23Tool always maps categorical values onto the positive part of a categorical axis . The n pod looks like a star with n unequal rays ( or lines across the origin for continuous variables ) in 3D space , each indicating the contribution of a variable to the current projection .
7.2 Cluster Similarity Graphs Data projection is a continuous transformation . Two points which are close with each other will remain close after projection . However , two points which are close in a projection need not be close themselves . To somewhat mitigate this information loss , we use cluster similarity graph as an enhancement to data projection .
A cluster similarity graph can be defined as follows . Let vertices be a set of cluster centroids , and add an edge between two vertices if the distance between them is less than a user controlled threshold . It is thus intuitively clear that changing the threshold value will reveal the difference of distances among cluster centroids . The cluster similarity graph can be overlaid onto data projections . Figure 7 represents a cluster similarity graph at a certain threshold . It can be seen that the Clusters 0 , 1 , 3 are close to each other , among which Cluster 1 and Cluster 3 are close to Cluster 4 which is close to Cluster 2 . Cluster 5 is standalone from all others . The cluster similarity graph adds yet another information dimension to cluster projections .
Other features of the n23Tool include parallel clustering and stereo display . The n23Tool implemented multithread kmeans clustering on shared memory machines . The many iterations that the clustering function has to perform is spread out over many processes ( threads ) . The on screen version of the n23Tool includes an option to view the scatterplot and volume rendering in stereoscopic images .
8 . CONCLUSION AND FUTURE WORK This paper discussed the n23Tool , a tool using 3D grand tour and volume rendering to visualize very large relational datasets . Grand tour creates an illusion of smooth motion through multidimensional space . Cluster guided tour preserves distances between the cluster centroids . It allows us to capture the inter cluster structure of complex relational data . Volume rendering using texture splatting enables the
Figure 7 : A cluster similarity graph adds yet another information dimension . visual exploration of very large datasets . Brushing , interactive picking and drill down are well supported by the kd tree index and the access method for subspace search and range query . With database support , only aggregation or part of data that are needed in rendering are retrieved . Categorical variables are processed in the same way as continuous variables , provided that the orders of their distinct ( or grouped ) values are listed explicitly or sorted numerically by aggregate value of some other variable . A CAVE virtual reality environment is at our disposal for 3D immersive display . The use of the CAVE virtual environment maximizes the chance of finding patterns . Add on features and interaction tools invite viewer ’s interaction with data . This approach of multidimensional visualization provides a natural metaphor to visualize large datasets and data clusters by mapping the data onto a time indexed family of 3D natural projections suitable for human eye ’s exploration .
The n23Tool scales well to large datasets . The computational complexity of tour is linear to the number of variables . The number of variables matters only in calculating dot products which has a linear complexity to the dimensionality of arguments . Making projections and scatterplots have a computational complexity linear to the number of data points . This is in the sense that all data points have to be projected one by one . With volume rendering , this complexity can be greatly reduced . Whatever how big an original dataset is , volume rendering takes the binned and aggregated relational data as input .
The n23Tool represents a new data mining strategy that allows users to understand both the process of mining and the data at hand . The cluster guided tour is a way to use data mining as a drive for visualization , that is , clustering identifies homogenous sub populations of data , and the subpopulations are used to help design the path of a tour . The same principle applies to other data mining techniques , for instance , to identify the significant rules produced by classification and rule induction . We hope that the n23Tool will be useful to visually explore results generated by other data mining techniques . This remains as one of the future work .
9 . REFERENCES [ 1 ] D . Asimov . The grand tour : A tool for viewing algorithm for exploratory data analysis . IEEE Trans . Comput . , 23:881–890 , 1974 .
[ 10 ] C . Hurley and A . Buja . Analyzing high dimensional data with motion graphics . SIAM Journal on Scientific and Statistical Computing , 11(6):1193–1211 , 1990 . multidimensional data . SIAM Journal of Science and Statistical Computing , 6(1):128–143 , Jan . 1985 .
[ 11 ] R . Little and D . Rubin . Statistical Analysis With
Missing Data . Wiley , New York , 1987 .
[ 2 ] B . G . Becker . Volume rendering for relational data . In
[ 12 ] J . T . Robinson . The K D B tree : A search structure
IEEE Symposium on Information Visualization ( InfoVis’97 ) , Phoenix , Arizona , Oct . 1997 .
[ 3 ] J . L . Bentley . Multidimensional binary search trees used for associative searching . Commun . ACM , 18(9):509–517 , 1975 .
[ 4 ] C . L . Blake , E . Keogh , and C . Merz . UCI repository of machine learning databases , 1998 . http://wwwicsuciedu/∼mlearn/MLRepositoryhtml
[ 5 ] D . Cook and A . Buja . Manual controls for high dimensional data projections . Journal of Computational and Graphical Statistics , 6(4):464–480 , 1997 .
[ 6 ] D . R . Cook , A . Buja , and J . Cabrera . Grand tour and projection pursuit . Journal of Computational and Graphical Statistics , 4(3):155–172 , 1995 .
[ 7 ] C . Cruz Neira , D . J . Sandin , T . DeFanti , R . Kenyon , and H . J , C . The CAVE audio visual experience automatic virtual environment . Commun . ACM , 35(1):64–72 , 1992 .
[ 8 ] I . S . Dhillon , D . S . Modha , and W . S . Spangler .
Visualizing class structure of high dimensional data . In Proc . of 30th Symp . Interface : Computer Science and Statistics , Jan . 1998 .
[ 9 ] J . Friedman and J . Tukey . A projection pursuit for large multidimensional dynamic indexes . In Proceedings of ACM SIGMOD Conference , pages 10–18 , Ann Arbor , Michigan , June 1981 .
[ 13 ] D . F . Swayne , D . Cook , and A . Buja . XGobi :
Interactive dynamic data visualization in the X window system . Journal of Computational and Graphical Statistics , 7(1):113–130 , 1998 .
[ 14 ] J . Symanzik , D . Cook , B . D . Kohlmeyer , U . Lechner , and C . Cruz Neira . Dynamic statistical graphics in the c2 virtual environment . In Second World Conference of the International Association for Statistical Computing , Pasadena , California , USA , Feb . 1997 .
[ 15 ] D . Talbert and D . Fisher . Exploiting sample data distributions to reduce the cost of nearest neighbor searches with kd trees . In Proceedings of IDA’99 , LNCS 1642 , pages 407–414 . Springer , 1999 .
[ 16 ] R . van Teylingen , W . Ribarsky , and C . van der Mast .
Virtual data visualizer . IEEE Trans . Visualization Computer Graphics , 3(1 ) , January March 1997 .
[ 17 ] M . Ward . High dimensional brushing for interactive exploration of multivariate data . In Proceedings of Visualization’95 , pages 271–278 , 1995 .
[ 18 ] L . Westover . Footprint evaluation for volume rendering . ACM Computer Graphics , 24(4):367–376 , Aug . 1990 .
