Large Human Communication Networks : Patterns and a Utility Driven Generator
Nan Du* Christos Faloutsos* Bai Wang†
Leman Akoglu*
*Carnegie Mellon University , †Beijing University of Posts and Telecommunications
{dunan , christos , lakoglu}@cscmuedu , wangbai@bupteducn
ABSTRACT Given a real , and weighted person to person network which changes over time , what can we say about the cliques that it contains ? Do the incidents of communication , or weights on the edges of a clique follow any pattern ? Real , and in person social networks have many more triangles than chance would dictate . As it turns out , there are many more cliques than one would expect , in surprising patterns .
In this paper , we study massive real world social networks formed by direct contacts among people through various personal communication services , such as Phone Call , SMS , IM etc . The contributions are the following : ( a ) we discover surprising patterns with the cliques , ( b ) we report power laws of the weights on the edges of cliques , ( c ) our real networks follow these patterns such that we can trust them to spot outliers and finally , ( d ) we propose the first utility driven graph generator for weighted time evolving networks , which match the observed patterns . Our study focused on three large datasets , each of which is a different type of communication service , with over one million records , and spans several months of activity .
1 .
INTRODUCTION
Questions have emerged from research on social networks . What patterns should we expect in a network of human tohuman interactions ? How can we spot anomalies ( eg , telemarketers , spammers ) ? What will be the net effect if we lower the price of each phone call ?
Social networks , and graphs in general , have had an increase of interest recently . The related applications are numerous and almost everywhere in people ’s modern life . Online social networks , like Facebook ( wwwfacebookcom ) and LinkedIn ( wwwlinkedincom ) , mimic publicly the telecommunication networks where and what people communicate privately . Product recommendation systems , such as Amazon(wwwamazoncom ) and Netflix(wwwnetflixcom ) , rely on a network of trust and collaboration [ 18 ] . Computer networks have predictable relations regarding intrusion detec tion [ 23 ] , security , and virus propagation . It is important in all the above applications to spot anomalies and outliers [ 1 ] [ 4][13][20 ] . Anomaly detection [ 9 ] is tightly connected to patterns : if most of the nodes in our network closely follow a power law , then the few deviations that do exist are probably outliers . Several patterns have been reported for un weighted graphs , like small diameter ( ’s ix degrees’ ) [ 36 ] , shrinking diameter [ 21 ] , scale free ( powerlaw ) [ 35 ] or lognormal [ 6 ] or Double Pareto LogNormal ( DPLN ) distributions [ 24 ] [ 31 ] for the in and out degrees etc .
In this paper , we are investigating the following questions : • When we isolate the cliques in a network , what patterns do they follow ? How large are our social circles on average ? If someone has many contacts , does that indicate popularity ? • What patterns do the edge weights follow , both in triangles and in general cliques ? Specifically , in a triangle , all three nodes are equivalent in topology , but is it normal if all three weights are equal as well ? • How can we design an intuitive generator that will naturally reproduce all the above behaviors ? Most existing generators try to mimic the skewed degree distribution , but fail to incorporate the weight information . Here , we want a utility driven generator , which should try to model the way in which humans decide when and whom to contact . Our guiding principle is that humans balance a trade off between the cost of the communication ( in time and money ) , and its benefit ( in valuable information and emotional support ) .
Let ’s elaborate on the last item , the utility driven generator . Many preferential attachment [ 5 ] guided models assume that a newly added node is more likely to be linked to the most popular node of the current graph . However , in real world scenarios , incoming nodes are typically unaware of such global structural knowledge of the network . Moreover , most earlier generators dictate that nodes/humans will choose contacts at random ; in contrast , we argue that they choose contacts to maximize some utility . Our goal is to design an intuitive graph generator , where each node ( a ) uses only the local information , and ( b ) uses no randomness , but instead tries to maximize a well defined utility function .
Such a generator should be carefully designed so that the resulting graphs follow all the observed patterns ( old and new ) . The major advantage over older generators is that it can answer what if scenarios . For example , if the connection price of each phone call goes up , will this decrease the average number of friends/edges ? What about a change in the price per minute ? What if there is a flat rate ?
We examine multiple large anonymized human communication networks , where we have the hash codes of the source , and the destination , as well as the time stamp of the contact ( Phone Call , IM , or SMS the specific service is also anonymized ) . For ease of presentation , we will refer to these contacts as Phone Calls generally . The analysis of human communication networks is important because various personal communication services and applications are ubiquitous . Furthermore , as unlike many artificial social networks , such as the scientific collaboration network which emerges as a one mode projection of the bipartite graph between authors and papers , the massive anonymized human communication networks are formed from the real time direct contact events of people . They can fully capture the underlying realistic social structures , and lay a solid foundation for our upcoming work .
The paper is organized as follows . Section 2 reviews related work . Section 3 proposes background materials . Section 4 presents our observed patterns . Section 5 describes the utility driven model . Section 6 gives the conclusion .
2 . RELATED WORK
The network formation problem has been studied by many researchers from the fields of statistical physics , economics , game theory , combinatorial optimization and computer science . A major class of network models extend from the classic Erd¨os R´enyi(ER ) random graph model [ 14 ] where edges are randomly placed among nodes . Many famous graph generators belong to this class , including the small world model [ 37 ] , the preferential attachment model [ 5 ] , the forest fire model [ 21 ] , as well as the recent ’butterfly’ model [ 22 ] . [ See [ 3 ] and [ 8 ] for a detailed review ]
There is another whole class of network models , often referred to as games of network formation , mainly from the fields of economics and game theory . Here , linking between two nodes is regarded as a strategic activity and the network structure can arise from the collective interactions between the nodes . Laoutaris [ 19 ] proposes a network formation game , where links have costs and lengths , and players have preference weights on the other players , to study the properties of pure Nash equilibria [ 26 ] in different settings . Albers [ 2 ] , Demaine [ 11 ] , and Fabrikant [ 16 ] study a similar game where players do not have fixed budgets and the cost function is defined in terms of the sum of the number of edges . Even Dar [ 15 ] proposes a network creation game where nodes act as buyers and sellers such that the resulting graphs are bipartite .
Moreover , Onnela [ 28][29 ] and Nanavati [ 25 ] have also used mobile phone call data to examine and characterize the social interactions of cell phone users . Seshadri [ 32 ] further shows that the degree distribution of large scale mobile phone call networks can be better fitted using the lesser known but more suitable DPLN distribution[24][31 ] , which is close to yet more precise than the power law distribution . In summary , our work differs from earlier work as follows : most research work on network formation games is only interested in the effect of specific linking strategies on the properties of the system equilibria . By contrast , our work studies how the microscopic behavior of each node can collectively influence the emerged macroscopic network structure itself . We are the first to discover the patterns where people can form cliques , and how the edge weights can be distributed in cliques . Moreover , we give the first
Figure 1 : Maximal clique example . Here we have two maximal cliques {0,1,2,3} and {1,2,4} . utility driven graph generator that is able to reproduce the weighted time evolving networks , which can have both the old and the new patterns . di
3 . BACKGROUND A simple graph G is represented as a set of nodes V ( G ) and a set of edges E(G ) . The weight of the edge eij ∈ E(G ) is quantified by the number of contact times between node i and j over the studied period , and is denoted by wij . The total weight wi of node i is defined as wi = k=1 wik where di is the degree of node i . In social network analysis , social cohesion [ 34 ] is often used to explain and develop sociological theories . Examples of cohesive subgroups include sports teams , work groups , student unions etc . Mathematical analysis of social cohesion has been a hot research topic for many years . The clique model is one of the classic and well known graph models used for studying cohesive subgroups [ 30][34 ] . Given subgraph Gi , if ∀u , v ∈ V ( Gi),∃(u , v ) ∈ E(G ) , then Gi is called a complete subgraph or a clique of G . In this paper , we assume that mathematically , a triangle is the smallest clique possible . If there is no other subgraph Gj that is also a clique of G with V ( Gj ) ⊃ V ( Gi ) , Gi is further called a maximal clique of G . In Figure 1 , {0,1,2,3} and {1,2,4} are two maximal cliques , because cliques {0,1,2} , {0,1,3} , {0,2,3} , and {1,2,3} are included in {0,1,2,3} . ∀vi ∈ V ( G ) , let C(vi ) denote the set of the maximal cliques which contain vi , so C(0 ) = {{0 , 1 , 2 , 3}} , and C(1 ) = {{0 , 1 , 2 , 3},{1 , 2 , 4}} . The complete clique enumeration is a classic NP complete problem [ 7 ] . However , real world social networks have several unique properties such as the sparsity and scale freeness . People who share a common friend are highly likely to become friends themselves [ 17 ] . This kind of locality generates triangles which further form larger cliques . Consequently , we are able to design an efficient algorithm for practical situations . Following earlier literature , we use the algorithm Peamc[12 ] to find the complete set of all the maximal cliques in our human communication networks .
4 . PATTERNS AND OBSERVATIONS
Here , we seek to find the patterns that our social networks can have . Starting with a description of the datasets , and the known recurring patterns that hold for the real world networks , we report three newly discovered patterns that our datasets seem to follow . The first is Clique Degree PowerLaw ( CDPL ) , correlating the ith largest degree with the average number of maximal cliques , which seems to remain rather stable over time so that we trust them to further detect outliers and spot anomalies . The second is Clique Participation Law ( CPL ) , which gives the distribution of the number of maximal cliques that each node participates in .
30241 ( a ) PDF of #Partners
( b ) PDF of #Calls
T 1 , GS1
Figure 2 : Known properties of communication networks . ( a ) is the pdf of the number of partners in graph GS1 T 5 . ( b ) is the pdf of the total calls in the same graphs . Both are in logarithmic scales , and follow a DPLN distribution . The rest networks behave similarly .
T 3 , and GS1
Finally , the third comes Triangle Weight Law ( TWL ) , describing how the weights are distributed on the edges of triangles , based on which we could further make predictions about the missing values of the edge weights in time evolving weighted networks . 4.1 Data Description
The datasets analyzed are made of a large collection of records from several human communication services including voice , data , IM , SMS etc . Each record is represented as a triple < IDi , IDj , T ime > , where < IDi > and < IDj > are generally referred to as the caller and callee . During a particular time period , there can be multiple times for a pair of people to communicate with each other , and the accumulated number of communication times between IDi and IDj is defined as the edge weight between node i and j . We have the weighted graphs extracted from the records of three types of services ( S1 , S2 and S3 ) , referred to as GS1 , GS2 , and GS3 respectively . Each type of service has on average about 1 million records , which were collected by different geographic locations . Apart from this spatial diversity and the service type variety , we also incorporate temporal diversity by collecting data for each type of service during five consecutive time periods represented from T 1 to T 5 , so GS1 is the graph of service type S1 in time period T 1 , and GS2 is the graph of service type S2 in time period T 5 etc .
T 1
T 5
Notice that we only focus on the link between the caller and callee . It is important to know that our work is only an aggregate statistical analysis , and therefore , we do not study any individual ’s behavior from any specific type of communication service . More importantly , any information that could identify users is stripped to access . We only use the encrypted user id in this study , and restrict our interest only in the statistical findings that are held within the networks . 4.2 Old Patterns
We first consider the total number of unique callers and callees which are often referred to as the partners associated with every user . This essentially corresponds to the degree of each node . Then we calculate the total number of calls made or received by each user , which is represented by the node weight . We show the full results in Figure 2 for GS1 T 1 ( the beginning ) , GS1 T 5 ( the last ) , because
T 3 ( the middle ) , and GS1
Figure 3 : Partners Calls distribution of GS1 T 1 in logarithmic scales . Black dots are the medians by logarithmic binning . Least square fit slope is 124
T 1 ∼ GS3
T 5 and GS3
T 5 have similar observations .
GS2 T 1 ∼ GS2 We also study the correlation between the number of partners and the total number of contacts per user ( shown in Figure 3 ) . It is observed that there is a “ fortification effect ” leading to a Snapshot Power Law ( SPL ) [ 22 ] . The more partners an individual has , the superlinearly more calls he makes and receives . Here , the result of service type S1 in the first time period GS1 T 1 is reported , for that the fortification effect is very stable and leads to similar results in the rest . 4.3 New Patterns
In this section , we will give the newly discovered findings of our human communication networks , and discuss the potential ways in which they can be utilized .
431 Clique Degree Power Law As defined previously , ∀vi ∈ V ( G ) , di is the number of all the partners that vi has , and C(vi ) represents the set of all the maximal cliques that vi participates in . Is there any relationship between di and |C(vi)| ? We can imagine that if a particular user has doubled his partners , it tends to be easier for him to participate in doubled social circles as well . This kind of relationship seems to be linear , and sounds reasonable . However , this is often not the case . For our real world social networks , the number of social circles actually over doubles by following a Clique Degree Power Law .
Figure 4 plots the number of partners vs . the number of maximal cliques averaged over all the nodes with that many of partners , from T 1 to T 5 . The result is surprising because for any given node , the clique participation is superlinearly related to its degree . In addition , we notice that the exponent takes values in the range [ 1.84 , 1.88 ] , [ 2.04 , 2.21 ] and [ 1.41 , 1.58 ] for GS1 , GS2 , and GS3 , which seems to be stable over time .
Observation 1 . ( Clique Degree Power Law ( CDPL) ) .
The number of maximal cliques that a node participates in , is super linearly related to its degree . Given di and C di avg , they follow a power law :
C di avg ∼ dα i
( 1 ) where α is the exponent of CDPL , and remains about constant over time .
The direct application of CDPL is to spot outliers .
In Figure 4 , all of the detected anomalies are marked by red
10010110210310−510−410−310−210−1100#PartnersPDF T1T3T510010110210310410−510−410−310−210−1100# CallsPDF T1T3T5 Figure 4 : Clique Degree Power Law . Number of partners vs . the average number of maximal cliques in GS1 ∼ GS3 from T 1 to T 5 . All of the exponents are fitted with R2 > 095 Notice that CDPL is very stable over time . The detected outliers are marked by red circles .
( a ) Centered with vertex vy
( b ) Centered with vertex vz
Figure 5 : Detected typical outliers . Both vy and vz ( in GS1 T 5 from Figure 4 ) have too many unrelated partners , resulting in a star like subgraph .
T 3 and GS1 circles . We can see that these points present a clear pattern which does not conform to the established normal behavior . In other words , for these users the actual number of the maximal cliques that they belong to is significantly distant from the one that they should have according the number of their friends . It is also interesting to notice that some outliers are stable and persistent , such as node vx and vy from GS1 T 1 to GS1 T 3 , while others are more casual and bursty , such as node vz in GS1 T 5 , and the circled outliers in GS3 T 5 . Figure 5 shows the egocentric subgraphs centered with node vy and vz , which are composed of the connections among their neighbors in T 5 . Clearly , for node vy , although it has a large number of partners , it only belongs to few maximal cliques on the left upper part of Figure 5(a ) . As to node vz , almost no connections exist among its partners . Because any automatic customer service id is excluded from our communication networks , the anomalous behavior of vy and vz makes them more like the tele marketers . In fact , there are more outliers in the last time period T 5 than the others , especially in the network GS3 T 5 of the third communication service . We guess it is probably because there is actually a big holiday in T 5 , and the third communication service is the cheapest and most widely used application by people .
432 Clique Participation Law
Based on the discovered maximal cliques , we are able to study how people get involved into them . Figure 6 shows the distribution of the number of maximal cliques that people actually participate in . That is , in graph G , it plots the correlation between the number of maximal cliques ( x axis ) and the pdf of nodes ( y axis ) that get involved in that many of maximal cliques . We observe that there exists a power law followed by this kind of relationship , which is called Clique Participation Law .
Observation 2 . ( Clique Participation Law ( CPL) ) . For a given number of maximal cliques , say nclique , and the set Vclique = {vi|vi ∈ V ( G),|C(vi)| = nclique} , we have nclique ∼ |Vclique|cp
( 2 ) where cp is the clique participation exponent of CPL , and keeps about constant over time .
According to the above discussion , for most people in real world social networks , they are often involved in a small number of maximal cliques ( or social circles ) . Only a few of them are really ’s ocial butterflies’ that can actively span
100101102103100101102103#PartnersAverage #Maximal CliquesGS1T1Vxslope=1.87100101102103100101102103#PartnersAverage #Maximal CliquesGS1T2Vxslope=1.85100101102103100101102103#PartnersAverage #Maximal CliquesGS1T3VxVyslope=1.8610010110210310−1100101102103#PartnersAverage #Maximal CliquesGS1T4Vxslope=1.8810010110210310−1100101102103#PartnersAverage #Maximal CliquesGS1T5VxVyVzslope=1.8410010110210310−1100101102103#PartnersAverage #Maximal CliquesGS2T1slope=2.1410010110210310−1100101102103#PartnersAverage #Maximal CliquesGS2T2slope=2.0410010110210310−1100101102103#PartnersAverage #Maximal CliquesGS2T3slope=2.1210010110210310−1100101102103#PartnersAverage #Maximal CliquesGS2T4slope=2.2110010110210310−1100101102103#PartnersAverage #Maximal CliquesGS2T5slope=2.1010010110210−1100101102#PartnersAverage #Maximal CliquesGS3T1slope=1.5810010110210−1100101102#PartnersAverage #Maximal CliquesGS3T2slope=1.4810010110210−1100101102#PartnersAverage #Maximal CliquesGS3T3slope=1.4510010110210−1100101102#PartnersAverage #Maximal CliquesGS3T4slope=1.4110010110210−1100101102#PartnersAverage #Maximal CliquesGS3T5slope=1.68yz Figure 6 : Clique Participation Law . PDF of #Maximal Cliques in GS1 T 1 . The rest graphs behave similarly .
T 1 ∼ GS3
T1 1.78 1.63 3.21
T2 1.74 1.56 3.50
T3 1.76 1.52 3.46
T4 1.70 1.56 3.50
T5 1.68 1.54 3.01
GS1 GS2 GS3
Table 1 : Power Law exponents of CPL in GS1 ∼ GS3 from T 1 to T 5 . Notice the stability . many social circles simultaneously . In Figure 6 , we report the results from GS1 ∼ GS3 only in T 1 for brevity , because in Table 1 we observe that CPL is rather stable over time , leading to similar plots in the rest .
Actually , the CPL pattern could be potentially applied to help the operators to make better designed family plans . Because we have a model of the distribution of user behavior to form close knit groups , we can propose better pricing strategies that charge users differently according to the size of their social circles . For example , in most cases people only belong to one or two cliques , which may be formed by their families or best friends . We can design specific billing plans which are favorable to the communications among members of the same clique who are also the customers of the same operator . Even if our friends are the customers of other operators , we may still like to invite them to join us , because we know that it will be good for all of us . As a result , this could implicitly improve the loyalty of the current users , and may further help to increase the rate at which new customers sign up the plans . Moreover , we can also reward a few loyal users who span multiple social groups , because they might help to achieve a quick market promotion by introducing new products and services to their friends .
433 Triangle Weight Law
According to the clique definition , each node in a clique has connections with all the other nodes . Although it is very intuitive that all these nodes are equivalent in topology , will this also mean that they could have equally close relationships ? In our communication networks , the edge weight wij gives the total number of contact times between i and j , which is an important indicator to show how intimately they could relate to each other . Since that triangle is the base case of a clique , given any triangle {i , j , k} , will wij , wik , and wjk hold approximately equal values because of the structure equivalence between i , j , and k ? Although this intuitive conjecture seems to make sense , we have made very unexpected and striking discoveries in the real social networks , which are described as follows .
Observation 3 . ( Triangle Weight Law ( TWL) ) .
For any triangle , let MaxWeight , MidWeight , and MinWeight
Figure 7 : Triangle Weight Law . Minimum , medium , and maximum weights in all 3 pairs are plotted in logarithmic scales . Least square fits all have R2 > 0.95 in GS1
T 1 ∼ GS3 T 1 .
Figure 8 : Persistence of Triangle Weight Law . Exponent α , β , and γ ( red , blue , green ) in GS1 ∼ GS3 remain about constant from T 1 to T 5 . denote the maximum , medium , and the minimum edge weight respectively . In all our graphs , they follow three power laws :
M axW eight ∼ M idW eightα M axW eight ∼ M inW eightβ M idW eight ∼ M inW eightγ
( 3 )
( 4 )
( 5 ) where α , β , and γ are the power law exponents which remain constant in weighted time evolving social networks .
As a result , for the given triangle {i , j , k} , rather than being approximately equal , wij , wik and wjk are significantly different from each other . Figure 7 gives the results from the networks GS1 ∼ GS3 in the same time period T 1 . To achieve a good fit , we bucketize the x axis with logarithmic binning [ 27 ] , and for each bin , we compute the average value of y . Moreover , Figure 8 shows the three exponents of TWL in GS1 ∼ GS3 from T 1 to T 5 . Notice that α , β , and γ of these graphs take values in the range [ 13,16 ] , [ 17,22 ] , and [ 12,14 ] , which seem persistent and stable .
10010110210310−510−410−310−210−1100#Maximal CliquesPDFGS1T1slope = −1.7810010110210310−410−310−210−1100#Maximal CliquesPDFGS2T1slope = −1.6310010110210−610−410−2100102#Maximal CliquesPDFGS3T1slope = −3.21012340123456MidWeightMaxWeightGS1T1 slope = 1.5012340123456MidWeightMaxWeightGS2T1 slope = 1.3012340123456MidWeightMaxWeightGS3T1 slope = 1400511522530123456MinWeightMaxWeightGS1T1 slope = 2.2012340123456MinWeightMaxWeightGS2T1slope = 1700511522530123456MinWeightMaxWeightGS3T1 slope = 2.00123450123456MinWeightMidWeightGS1T1 slope = 1.2012340123456MinWeightMidWeightGS2T1 slope = 1.4012340123456MinWeightMidWeightGS3T1 slope = 13T1T2T3T4T5115225TimeExponentGS1 αβγT1 T2 T3 T4 T5 1121416182TimeExponentGS2 αβγT1T2T3T4T511214161822224TimeExponentGS3 αβγ In practical situations , due to missing data we can only have partial network information to analyze . For example , in Figure 9 , given the weighted egocentric subgraph that link e23 belongs to , what can we say about the missing w23 ? Where the link prediction [ 10 ] tries to predict between which unconnected nodes a link will form next , our problem here concerns how to estimate the value of an edge weight , because we already know there is a link between node 2 and 3 . We formulate this problem as the weight prediction problem , which not only is important to fill and complete the missing values , but also is useful for discovering anomalous links , because if the actual value of w23 is significantly different from the predicted value , it would be highly unusual . Based on the above discussion , we can find that TWL can help to solve the weight prediction problem due to its persistence and generality . Formally , given eij ∈ E(G ) , let denote the set of all the edges ( excluding eij itself ) of the triangles that eij belongs to . ∀ek ∈ , w(ek ) denotes the weight of ek . The minimum and maximum values of w(ek ) are represented as min and max accordingly . On one hand , if wij < min or wij > max , the numerical relationship between wij and the weights on the other two edges in any given triangle is determined , so we can use either equation ( 4 ) and ( 5 ) or ( 3 ) and ( 4 ) to estimate wij directly . On the other , if wij ∈ [ min,max ] , wij might be the minimum in one triangle , while might be the maximum in another triangle . Therefore , for ∀ek ∈ , we define φ(eij ,ek)(x ) to represent one of the three equations ( 3 ) ∼ ( 5 ) based on the particular numerical relationship that eij and ek could hold . The return value of φ(eij ,ek)(x ) is the estimated weight for edge ek given the possible value x of wij . Here , we assume that all edge weights are positive integers . Let wmin be the minimum estimated value of wij when wij < min , and wmax be the maximum estimated value of wij when wij > max . Then the optimal value of wij is given as :
( w(ek ) − φ(eij ,ek)(x ) )
( 6 ) ek∈
ˆwij = argmin where x ∈ [ wmin , wmax ] . We evaluate this approach in GS1 ∼ GS3 by comparing ˆwij with wij for each edge in T 1 , T 3 and T 5 . Due to the persistence of TWL , we set α = 1.5 , β = 2.2 , and γ = 1.2 for GS1 ; α = 1.3 , β = 1.7 , and γ = 1.4 for GS2 ; α = 1.4 , β = 2.1 , and γ = 1.3 for GS3 . Let = | ˆwij − wij| denote the prediction error . The the average prediction accuracy of = 0 ( the exact prediction ) and = 1 is around 0.21 and 0.32 accordingly . One problem of this simple method is that it can not predict wij , if the edge eij does not belong to any triangle . To solve this problem , and further improve the prediction accuracy is an area of future work .
5 . UTILITY DRIVEN GENERATIVE MODEL
The next goal is to design a generative model that mimics people ’s natural communication behaviors . The guiding principle is that such a model should be utility driven , as opposed to earlier models ( preferential attachment [ 5 ] , forestfire [ 21 ] , butterfly [ 22 ] , etc . ) which are mainly randomnessguided generators .
On one hand , every communication , such as phone call , SMS , and e mail , has a cost in terms of money , time , and equipment . On the other hand , it has a benefit , otherwise
Figure 9 : Weight Prediction Problem . What can we say about w23 ? humans would not do it . The benefits can be psychological and emotional ( talking to friends makes us happy ) , or monetary ( stock tip ) , or desirable in other ways . For ease of presentation , we refer to the benefit as if it is measured by emotional dollars . The point of this thought experiment is to set up a utility driven model for the social contacts of humans , which should be more realistic and more informative than the ones using randomness .
Therefore , we assume that people are rational agents , and we design our generator to guide the behavior of each agent according to a well defined utility function . Ideally , the fundamental macro phenomena of a social network should then emerge from the simple local behavior of each agent/human . 5.1 Model Description
Following the above discussion , we now present our utilitydriven model PaC as a Pay and Call game . Assume a setting where a set A of n distinct agents create links to one another through phone calls . In every round of the game , each agent ’s strategy is to choose among other peers to whom he will make calls and build links . Links are undirected . Once agent ai ∈ A calls aj ∈ A , there will be a link between them . The total number of phone calls that ai and aj give to each other is treated as the weight on the undirected link between them . The PaC model essentially includes the following four ingredients :
• It adopts the agent based modeling approach . Each agent has a friendliness value , an exponential lifetime , a certain amount of capital , and the expected payoffs from talking to strangers . • The goal of each agent is to invest his limited capital into phone calls and maximize the potential payoffs from each conversation . • The per minute gain of a conversation will be gradually saturated , and finally both of the callers and callees will lose interest , and stop the conversation . • Each agent ai can ask his partners for recommendations . Every partner recommends the profitable agents from his own partners , so ai benefits from talking to the most profitable agent within the recommendations .
Friendliness and Exponential Lifetime . Each agent has a friendliness value Fi ∈ ( 0 , 1 ) to show his personality . Fi approaching to 1 means the agent is very open and friendly , and Fi close to 0 means he is very shy and introverted . ai has a probability Pl , uniformly chosen from 0 to 1 , to stay in the game , and has the probability 1 − Pl to leave the game . Once an old agent leaves , all his links will be removed , and a new agent replaces his position with the friendliness and Pl initialized to new values .
02 53217 1 ? 4106 In summary , the P aC model is formulated in the pseudocode of algorithm 1 .
Algorithm 1 : PaC Model
Input : Cini , Cpm , α foreach ai ∈ A do if ai stays with probability ai.Pl and ai.capital ≥ Cini + Cpm then if N ( ai ) = ∅ then
Talk2Strangers(ai ) else
Talk2Partners(ai ) if ai quits with probability 1 − ai.Pl then
Replace ai with a newly born agent
Utility driven Phone Calls and Saturation . An agent ’s payoffs are the difference between the benefits and costs . The benefits are defined based on the following considerations . Two open agents usually can benefit emotionally from a happy conversation . When an open agent meets a shy agent , they may benefit less from their conversation . Finally , two shy agents might gain little in the end . In addition , after two agents have been talking for a while , they may gradually lose interest , and gain less emotionally as time goes by . For agent ai and aj , they can achieve Fi × Fj × αm−1 emotional dollars per minute from a conversation , where α ∈ ( 0 , 1 ) is called the saturation factor to represent the loss of interest , and m is the number of minutes for which they have been talking .
For an m minutes long conversation , the total benefits are defined as benef its =
=
Fi × Fj × Fi × Fj × 1 − αm 1 − α
( 1 + α + α2 + + αm−1 )
The costs are the expenses of phone calls , which include Cini and Cpm . Cini is the cost to initiate a phone call , and Cpm is the per minute fee . The total costs for an m minutes call will be Cini + m × Cpm , so our utility function is defined as ( 8 ) payof f s = benef its − Cini − m × Cpm and each agent starts and maintains a conversation until the payoffs by equation 8 reach the maximum value or the agent has used all his money .
Expected Payoffs on Strangers . At first , each agent is given an initial capital which is enough to make one call only . Since none of the agents have ever talked before , for agent ai , he first uniformly calls a stranger aj , and keeps the conversation until either the payoffs by equation 8 begin to decrease or he spends all his money in the call ( ai.capital <= 0 ) . When the call is finished , ai and aj will achieve the payoffs Pj from the conversation . A link is built between ai and aj with weight 1 , and ai will remember the payoffs Pj earned by talking to aj . Because aj was first a stranger to ai before they met , ai also updates his expected payoffs from talking to strangers as :
Sexp =
( 9 )
Pi 1 + S
1 2
3 4 5 6
7 8
1 2
3 4 5
6 7
8 9 10 11
12
1 2
3 4 5 6
7 8 9 10 11 12
13
14
Procedure Talk2Strangers(ai ) Input : current agent ai total ← 0 if N ( ai ) = ∅ and ai finds the most profitable agent he never talks to from the recommendations then
( 7 ) else aj ← the most profitable agent aj ←GetRandom(A ) while ai.capital ≥ Cini + Cpm and ai.Sexp ≥ 0 do maximize payof f s with constraint ai.capital ≥ 0 by equation 8 add aj to N ( ai ) , add ai to N ( aj ) aj .capital ← aj .capital + payof f s total ← total + payof f s update ai.Sexp and aj .Sexp by equation 9 ai.capital ← ai.capital + total
Procedure Talk2Partners(ai ) Input : current agent ai total ← 0 prioritize N ( ai ) according to the descending order of the remembered payoffs for k ← 1 to |N ( ai)| do Pk ← ai ’s remembered payoffs from ak if Pk ≥ ai.Sexp then maximize payof f s with constraint ai.capital ≥ 0 by equation 8 increase the weight on the link between ai and ak by 1 aj .capital ← aj .capital + payof f s total ← total + payof f s else
Talk2Strangers(ai ) break if ai.capital ≤ 0 then break ai.capital ← ai.capital + total where S is the total number of times talking to strangers , and Pi is the payoffs achieved at each time . Sexp is initialized to 0 in the beginning . In each round of the game , agent ai is only allowed to call aj for one time . If ai still has some money left ( note that the payoffs earned in the current round can only be used in the next round ) , he will continue to interact with other strangers .
Recommendations : Once agent ai has some partners , he will first prioritize his partners according to the remembered payoffs , and talk to them respectively . If the payoffs of the currently chosen partner is less than ai ’s expected payoffs from strangers ( Sexp ≥ 0 ) , ai will stop talking to partners and choose to call strangers again . He first asks his partners for recommendations . Every partner will tell ai how much money he actually earned by talking to his own partners last time . ai can then pick the most profitable agent out of the partners of his partners . If all the recommended agents are already his partners , ai will uniformly choose a stranger from the rest .
5.2 Model Validation
How accurate is our model ? Our goal here is to show that our model is able to generate degree , weight and clique distributions that mimic a real graph like our communication networks . Notice that we only want to show qualitative match of the properties . Exact fitting is outside the scope of this paper . We decided to test our model with respect to all the usual patterns , and specifically the degree distribution , weight distribution , as well as the snapshot power law . We also want to qualitatively check against our newly discovered clique related patterns , the CDPL , CPL , and the TWL . We simulated the model 35 times for 100,000 nodes , with Cini = 0.1 , Cpm = 0.4 and α = 09 Figure 10 shows the results of these checkpoints . The top row is the actual graph GS1 T 1 , and the bottom row is a synthetic graph , generated by our PaC model . Figure 10(a)∼(c ) show the old patterns , and Figure 10(d)∼(f ) illustrate the new ones .
( a)PDF of #Partners
( b)PDF of #Calls
( c ) SPL
( d ) CPL
( e ) CDPL
( f ) TWL
Figure 10 : Qualitative comparison between the real graph ( top row ) and our synthetic graph ( bottom row ) . PaC gives skewed distributions like the real ones .
Figure 11 : PDF of Connected Component Size . The sizes of the connected components in GS1 T 1 ( the left ) and in the synthetic graph ( the right ) follow the power law distribution .
Figure 12 : The ratio of partners ( left ) , and calls ( right ) between two different snapshots of PaC follow the lognormal distribution . The parabolic line is fitted in red .
Moreover , in Figure 11 , we see that except for the giant connected component which is an isolated point distant from the rest , the size distribution of the connected components conforms to a power law . The exponents take values within the range observed in real world networks with a least square fit of R2 > 095 In all cases , notice that PaC gives skewed distributions that are remarkably close to the real ones .
5.3 Model Analysis
From earlier research [ 24][31 ] , we understand how heavytailed distributions such as power law , lognormal and DPLN could arise for the degree distribution and the node weight distribution . According to Mitzenmacher [ 24 ] , lognormal distributions can be naturally generated by multiplicative processes . For a biological example , at each step j , an organism may grow or shrink by a certain percentage accordj ing to a random variable Fj . If Xj denotes the current size of the organism , Xj = FjXj−1 where Fj is independent of k=1 ln Fk if Fk , 1 ≤ k ≤ j , Xj−1 . Consider ln Xj = ln X0 + are independent lognormal distributions , then Xj is always lognormal . If Fk are not lognormal , but are independent and identically distributed with finite mean and variance , by Central Limit Theorem , k=1 ln Fk converges to a normal distribution , and Xj will asymptotically approach a lognormal distribution [ 24 ] . If Xj is lower bounded by a minimum value , then the distribution will become a power law . If we j sample the series from X0 to Xj by a geometrically distributed random time k , we will have a geometric mixture of lognormal distributions . This will turn out to be a DPLN distribution with two power laws at both tails [ 24 ] .
XTj XTi
Following the PowerTrack method in [ 31 ] , we analyze empirically the generative process of our PaC model by taking two snapshots GTi and GTj at time step Ti and Tj with j − i ≥ 1 . Among the common agents between GTi and GTj , we calculate the ratio , where Xt represents either the degree or the weight for each node . In Figure 12 , the distributions of the ratio for both of the degree and weight appear to be parabolic in logarithmic scales . This provides good evidence that a lognormal multiplicative process is involved in the temporal evolution of our model . Another important issue is that we also need to test the independence between partners and their ratios , and the same for the calls . Here , the correlation coefficients , which are necessary but not sufficient for independence[31 ] , are very small : 0.02 and 0.04 for partners and calls respectively . Finally , in our model , for each round of the game , every agent has the probability Pl to stay or leave the game , which essentially results in a geometric lifetime . Therefore , although we do not explicitly assume any prior distribution about the ratio ( the File Model in [ 24 ] explicitly assumes a lognormal distribution for Fk ) , the PaC model is still able to mimic the DPLN degree distribution and the node weight distribution which are iden
10010110210−5100#PartnersPDFGS1T110010210410−5100#CallsPDFGS1T110010110210310−510−410−310−210−1100#Maximal CliquesPDFGS1T1slope = −1.78100101102103100101102103#PartnersAverage #Maximal CliquesGS1T1slope=1.87012340123456MidWeightMaxWeightGS1T1 slope = 1.510010110210−5100#PartnersPDFSynthetic10010210410−5100#CallsPDFSynthetic10010110210310−510−410−310−210−1100#Maximal CliquesPDFSyntheticslope = −2.33100101102103100101102103#PartnersAverage #Maximal CliquesSyntheticslope=1.35012340123456MidWeightMaxWeightSynthetic slope = 1.310010510−410−310−210−1100Component SizePDFGS1T1slope= −3.4010010510−410−310−210−1100Component SziePDFSyntheticslope= −2.7210−110010110210−410−310−210−1100Ratio of Partners during Ti and TjPDF dataLN(035,052)10−110010110210310−410−310−210−1100Ratio of Calls during Ti and TjPDF dataLN(047,071 ) tical with the real social networks . Moreover , for each agent , asking for recommendation from his neighbors is actually favorable to forming triangles . In the extreme case , if node vi is recommended by all his di neighbors in a single round of the game , vi will participate in at most di(di − 1)/2 triangles with exponent 2 . Because triangle is the base case and could be included in larger maximal cliques , the power law exponent for CDPL is usually less than 2 .
By comparing with the existing graph generators , we see that preferential attachment guided models usually ignore the weight information , and only generate the giant connected component [ 22 ] . The butterfly [ 22 ] model can reproduce all the connected components , however it does not include the weight either . In contrast , our model is able to reproduce the networks that have not only the patterns holding in un weighted networks , but also the patterns followed by the weighted networks .
6 . CONCLUSION
The main contributions are : ( a ) we found surprising patterns that cliques follow , like the CDPL and CPL ; ( b ) we observed the weights on the edges of triangles followed powerlaws TWL ; ( c ) the discovered patterns are stable and persistent in several , diverse , real social networks , and finally ( d ) we propose the first utility driven graph generator for weighted time evolving networks .
The ( anonymized ) datasets had over one million records , spanning several months , and over various ( anonymized ) services . Thanks to our new patterns , we discovered several outliers . Closer inspection showed that they indeed had very suspicious behaviors . Further investigation was impossible , due to privacy issues .
Moreover , our PaC model stands out from the rest , because ( a ) it does not use randomness ( using a utility function instead ) ( b ) it only uses local information ( c ) it still generates graphs that follow all the old and new patterns . Based on its utility function of PaC , we can explore what is the impact of , say , lower prices , on the shape of the network , as well as several other ’what if’ questions .
Acknowledgments This material is based upon work supported by the National Science Foundation ( NSF ) , Grants No . IIS 0705359 and CNS 0721736 . Any opinions , findings , and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the NSF or other funding parties . The authors would like to thank Charlotte Yano and Mary McGlohon for valuable comments , and Qi Ye for preprocessing the datasets .
7 . REFERENCES [ 1 ] C . C . Aggarwal and P . S . Yu . Outlier detection with uncertain data . In SDM , pages 483–493 , 2008 .
[ 2 ] S . Albers , S . Eilts , E . Even Dar , Y . Mansour , and L . Roditty .
On nash equilibria for a network creation game . In SODA , pages 89–98 , 2006 .
[ 3 ] R . Albert and A L Barabasi . Statistical mechanics of complex networks . Reviews of Modern Physics , 74:47 , 2002 .
[ 4 ] B . Wu and D . B . Davison Identifying link farm spam pages . In
WWW 2005 , pages 820–829 , 2005 .
[ 5 ] A . L . Barabasi and R . Albert . Emergence of scaling in random networks . Science , 286(5439):509–512 , October 1999 .
[ 6 ] Z . Bi , C . Faloutsos , and F . Korn . The ” DGX ” distribution for mining massive , skewed data . SIGKDD 2001 , pages 17–26
[ 7 ] F . Cazals and C . Karande . Reporting maximal cliques : new insights into an old problem . Research Report , http://cgalinriafr/Publications/2005/CK05b , ( 5615 ) , 2005 .
[ 8 ] D . Chakrabarti and C . Faloutsos . Graph mining : Laws , generators , and algorithms . ACM Comput . Surv . , 38(1 ) , 2006 . [ 9 ] V . Chandola , A . Banerjee , and V . Kumar . Anomaly detection :
A survey . To Appear in ACM Computing Survey .
[ 10 ] L N David and K . Jon . The link prediction problem for social networks . Journal of the American Society for Information Science and Technology , 58(7):1019–1031 , 2007 .
[ 11 ] E . D . Demaine , M . Hajiaghayi , H . Mahini , and
M . Zadimoghaddam . The price of anarchy in network creation games . In PODC , pages 292–298 , 2007 .
[ 12 ] N . Du , B . Wu , and B . Wang . A parallel algorithm for enumerating all maximal cliques in complex networks . In ICDM2006 Mining Complex Data Workshop , pages 320–324 . [ 13 ] Z . Elena , K . Aleksander , and G . Lise . Trusting spam reporters :
A reporter based reputation system for email filtering . ACM Trans . Inf . Syst . , 27(1 ) , 2008 .
[ 14 ] P . Erdos and A . Renyi . On the evolution of random graphs .
Publ . Math . Inst . Hungary . Acad . Sci . , 5:17–61 , 1960 .
[ 15 ] E . Even Dar , M . J . Kearns , and S . Suri . A network formation game for bipartite exchange economies . In SODA , pages 697–706 , 2007 .
[ 16 ] A . Fabrikant , A . Luthra , E . N . Maneva , C . H . Papadimitriou , and S . Shenker . On a network creation game . In PODC , pages 347–351 , 2003 .
[ 17 ] J . Leskovec , L . Backstorm , R . Kumar , and A . Tomkins
Microscopic evolution of social networks . In SIGKDD 2008 , pages 462–470 .
[ 18 ] Y . Koren . Tutorial on recent progress in collaborative filtering .
In RecSys 2008 .
[ 19 ] N . Laoutaris , L . J . Poplawski , R . Rajaraman , R . Sundaram , and S H Teng . Bounded budget connection games or how to make friends and influence people on a budget . CoRR , 2008 . [ 20 ] J G Lee , J . Han , and X . Li . Trajectory outlier detection : A partition and detect framework . In ICDE 2008 , pages 140–149 . [ 21 ] J . Leskovec , J . Kleinberg , and C . Faloutsos . Graphs over time : densification laws , shrinking diameters and possible explanations . In SIGKDD 2005 , pages 177–187
[ 22 ] M . McGlohon , L . Akoglu , and C . Faloutsos . Weighted graphs and disconnected components : patterns and a generator . In SIGKDD 2008 .
[ 23 ] W . Michael and H . Mattord . Principles of Information
Secuirty . Thomson , Canada .
[ 24 ] M . Mitzenmacher . Dynamic models for file sizes and double pareto distributions . 2002 .
[ 25 ] A . A . Nanavati , S . Gurumurthy , G . Das , D . Chakraborty , K . Dasgupta , S . Mukherjea , and A . Joshi . In CIKM 2006 .
[ 26 ] J . F . Nash . Non cooperative games . Annals of Mathematics ,
54 , 286 295 , 1951 .
[ 27 ] M . E . J . Newman . Power laws , pareto distributions and zipf ’s law . May 2006 .
[ 28 ] J P Onnela , J . Saram¨aki , J . Hyv¨onen , G . Szab´o , A . M . de Menezes , K . Kaski , A L Barab´asi , and J . Kert´esz . Analysis of a large scale weighted network of one to one human communication . New J . Phys . , 9(6):179 , 2007 .
[ 29 ] J . P . Onnela , J . Saramaki , J . Hyvonen , G . Szabo , D . Lazer , K . Kaski , J . Kertesz , and A . L . Barabasi . Structure and tie strengths in mobile communication networks . PNAS , 104(18):7332–7336 , May 2007 .
[ 30 ] J . Pei , D . Jiang , and A . Zhang . On mining cross graph quasi cliques . In SIGKDD 2006 , pages 228–237 .
[ 31 ] W . Reed and M . Jorgensen . The double pareto lognormal distribution a new parametric model for size distribution . 2004 .
[ 32 ] M . Seshadri , S . Machiraju , A . Sridharan , J . Bolot ,
C . Faloutsos , and J . Leskove . In SIGKDD 2008 . [ 33 ] J . Sun , H . Qu , D . Chakrabarti , and C . Faloutsos .
Neighborhood formation and anomaly detection in bipartite graphs . In ICDM , pages 418–425 , 2005 .
[ 34 ] S . Wasserman and K . Faust . Social Network Analysis .
Cambridge University Press , Cambridge , 1994 .
[ 35 ] D . Watts . Small Worlds:The Dynamics of Networks between
Order and Randomness . Princeton University Press , 1999 .
[ 36 ] D . Watts and S . Strogatz . Collective dynamics of small world networks . Nature , 393(6684):440–442 , June 1998 .
[ 37 ] D . J . Watts and S . H . Strogatz . Collective dynamics of
’s mall world’ networks . Nature , 393(6684):440–442 , June 1998 .
