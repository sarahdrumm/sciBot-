Social Influence Analysis in Large scale Networks
Jie Tang
Dept . of Computer Science Tsinghua University , China jietang@tsinghuaeducn
Jimeng Sun
IBM TJ Watson Research jimeng@usibmcom
Center , USA
Chi Wang and Zi Yang Dept . of Computer Science Tsinghua University , China sonicive@gmail.com yz@kegcstsinghuaeducn
ABSTRACT In large social networks , nodes ( users , entities ) are influenced by others for various reasons . For example , the colleagues have strong influence on one ’s work , while the friends have strong influence on one ’s daily life . How to differentiate the social influences from different angles(topics ) ? How to quantify the strength of those social influences ? How to estimate the model on real large networks ?
To address these fundamental questions , we propose Topical Affin ity Propagation ( TAP ) to model the topic level social influence on large networks . In particular , TAP can take results of any topic modeling and the existing network structure to perform topic level influence propagation . With the help of the influence analysis , we present several important applications on real data sets such as 1 ) what are the representative nodes on a given topic ? 2 ) how to identify the social influences of neighboring nodes on a particular node ? To scale to real large networks , TAP is designed with efficient distributed learning algorithms that is implemented and tested under the Map Reduce framework . We further present the common characteristics of distributed learning algorithms for Map Reduce . Finally , we demonstrate the effectiveness and efficiency of TAP on real large data sets .
Categories and Subject Descriptors H33 [ Information Search and Retrieval ] : Text Mining ; H28 [ Database Management ] : Database Applications
General Terms Algorithms , Experimentation
Keywords Social Influence Analysis , Topical Affinity Propagation , Large scale Network , Social Networks
1 .
INTRODUCTION
With the emergence and rapid proliferation of social applications and media , such as instant messaging ( eg , IRC , AIM , MSN , Jabber , Skype ) , sharing sites ( eg , Flickr , Picassa , YouTube , Plaxo ) , blogs ( eg , Blogger , WordPress , LiveJournal ) , wikis ( eg , Wikipedia , PBWiki ) , microblogs ( eg , Twitter , Jaiku ) , social networks ( eg , MySpace , Facebook , Ning ) , collaboration networks ( eg , DBLP ) to mention a few , there is little doubt that social influence is becoming a prevalent , complex and subtle force that governs the dynamics of all social networks . Therefore , there is a clear need for methods and techniques to analyze and quantify the social influences .
Social network analysis often focus on macro level models such as degree distributions , diameter , clustering coefficient , communities , small world effect , preferential attachment , etc ; work in this area includes [ 1 , 11 , 19 , 23 ] . Recently , social influence study has started to attract more attention due to many important applications . However , most of the works on this area present qualitative findings about social influences[14 , 16 ] . In this paper , we focus on measuring the strength of topic level social influence quantitatively . With the proposed social influence analysis , many important questions can be answered such as 1 ) what are the representative nodes on a given topic ? 2 ) how to identify topic level experts and their social influence to a particular node ? 3 ) how to quickly connect to a particular node through strong social ties ? Motivating Application
Several theories in sociology [ 14 , 16 ] show that the effect of the social influence from different angles ( topics ) may be different . For example , in research community , such influences are well known . Most researchers are influenced by others in terms of collaboration and citations . The most important information in the research community are 1 ) co author networks , which capture the social dynamics of the community , 2 ) their publications , which imply the topic distribution ( interests ) of the authors . The key question is how to quantify the influence among researchers by leveraging these two pieces .
In Figure 1 , the left figure illustrates the input : a co author network of 7 researchers , and the topic distribution of each researcher . For example , George has the same probability ( .5 ) on both topics , “ data mining ” and “ database ” ; The right figure shows the output of our social influence analysis : two social influence graphs , one for each topic , where the arrows indicate the direction and strength . We see , Ada is the key person on “ data mining ” , while Eve is the key person on “ database ” . Thus , the goal is how to effectively and efficiently obtain the social influence graphs for real large networks . Challenges and Contributions
The challenges of computing social influence graphs are the fol lowing :
• Multi aspect . Social influences are associated with different topics . Eg , A can have high influence to B on a particular topic , but B may have a higher influence to A on another topic . It is important to be able to differentiate those influences from multiple aspects .
Figure 1 : Social influence analysis illustration using the co author network .
• Node specific . Social influences are not a global measure of importance of nodes , but an importance measure on links between nodes .
• Scalability . Real social networks are getting bigger with thouIt is important to develop the sands or millions of nodes . method that can scale well to real large data sets .
To address the above challenges , we propose Topical Affinity Propagation ( TAP ) to model the topic level social influence on large networks . In particular , TAP takes 1 ) the results of any topic modeling such as a predefined topic ontology or topic clusters based on pLSI [ 15 ] and LDA [ 3 ] and 2 ) the existing network structure to perform topic level influence propagation . More formally , given a social network G = ( V , E ) and a topic model on the nodes V , we compute topic level social influence graphs Gz = ( Vz , Ez ) for all topic 1 ≤ z ≤ T . The key features of TAP are the following :
• TAP provides topical influence graphs that quantitatively mea sure the influence on a fine grain level ;
• The influence graphs from TAP can be used to support other applications such as finding representative nodes or constructing the influential subgraphs ;
• An efficient distributed learning algorithm is developed for TAP based on the Map Reduce framework in order to scale to real large networks .
The rest of the paper is organized as follows : Section 2 formally formulates the problem ; Section 3 explains the proposed approach . Section 4 presents experimental results that validate the computational efficiency of our methodology . Finally , Section 5 discusses related work and Section 6 concludes .
2 . OVERVIEW
In this section , we present the problem formulation and the intu ition of our approach . 2.1 Problem Formulation
The goal of social influence analysis is to derive the topic level social influences based on the input network and topic distribution on each node . First we introduce some terminology , and then define the social influence analysis problem .
Topic distribution : In social networks , a user usually has interests on multiple topics . Formally , each node v ∈ V is associated with a vector θv ∈ RT of T dimensional topic distribution ( z θvz = 1 ) . Each element θvz is the probability(importance ) of the node on topic z .
Topic based social influences : Social influence from node s to t denoted as µst is a numerical weight associated with the edge est . In most cases , the social influence score is asymmetric , ie , µst = µts . Furthermore , the social influence from node s to t will vary on different topics .
Thus based on the above concepts , we can define the tasks of topic based social influence analysis . Given a social network G = ( V , E ) and a topic distribution for each node , the goal is to find the topic level influence scores on each edge .
Problem 1 . Given 1 ) a network G = ( V , E ) , where V is the set of nodes ( users , entities ) and E is the set of directed/undirected edges , 2 ) T dimensional topic distribution θv ∈ RT for all node v in V , how to find the topic level influence network Gz = ( Vz , Ez ) for all topics 1 ≤ z ≤ T ? Here Vz is a subset of nodes that are related to topic z and Ez is the set of pair wise weighted influence relations over Vz , each edge is the form of a triplet ( vs , vt , µz st ) ( or shortly ( est , µz st) ) , where the edge is from node vs to node vt with the weight µz st .
Our formulation of topic based social influence analysis is quite different from existing works on social network analysis . For social influence analysis , [ 2 ] and [ 21 ] propose methods to qualitatively measure the existence of influence . [ 6 ] studies the correlation between social similarity and influence . The existing methods mainly focus on qualitative identification of the existence of influence , but do not provide a quantitative measure of the influential strength . 2.2 Our Approach
The social influence analysis problem poses a unique set of chal lenges :
First , how to leverage both node specific topic distribution and network structure to quantify social influence ? In another word , a user ’s influence on others not only depends on their own topic distribution , but also relies on what kinds of social relationships they have with others . The goal is to design a unified approach to utilize both the local attributes ( topic distribution ) and the global structure ( network information ) for social influence analysis .
AdaFrankEveDavidCarolBobGeorgeInput : coauthor networkAdaFrankEveDavidCarolGeorgeSocial influence anlaysis i1 i2Topic distributiong(v1,y1,z) i1 i2TopicdistributionNode factor functionf ( yi,yj , z)Edge factor functionrzazOutput : topic based social influencesTopic 1:Data miningTopic 2 : DatabaseTopics:BobOutputAdaFrankEveBobGeorgeTopic 1:Data miningAdaFrankEveDavidGeorgeTopic 2:Database . . . Second , how to scale the proposed analysis to a real large social network ? For example , the academic community of Computer Science has more than 1 million researchers and more than 10 million coauthor relations ; Facebook has more than 50 millions users and hundreds of millions of different social ties . How to efficiently identify the topic based influential strength for each social tie is really a challenging problem .
Next we discuss the data input and the main intuition of the pro posed method . Data Input :
Two inputs are required to our social influence analysis : 1 ) net works and 2 ) topic distribution on all nodes .
The first input is the network backbone obtained by any social networks , such as online social networks like Facebook and MySpace .
The second input is the topic distribution for all nodes . In general , the topic information can be obtained in many different ways . For example , in a social network , one can use the predefined categories as the topic information , or use user assigned tags as the topic information . In addition , we can use statistical topic modeling [ 3 , 15 , 18 ] to automatically extract topics from the social networking data . In this paper , we use the topic modeling approach to initialize the topic distribution of each node . Topical Affinity Propagation ( TAP ) :
Based on the input network and topic distribution on the nodes , we formalize the social influence problem in a topical factor graph model and propose a topical affinity propagation on the factor graph to automatically identify the topic specific social influence .
Our main idea is to leverage an affinity propagation at the topiclevel for social influence identification . The approach is based on the theory of factor graph [ 17 ] , in which the observation data are cohesive on both local attributes and relationships . In our setting , the node corresponds to the observation data in the factor graph and the social relationship corresponds to edge between the observation data in the graph . Finally , we propose two different propagation rules : one based on message passing on graphical models , the other one is a parallel update rule that is suitable for Map Reduce framework .
3 . TOPICAL AFFINITY PROPAGATION
The goal of topic based social influence analysis is to capture the following information : nodes’ topic distributions , similarity between nodes , and network structure . In addition , the approach has to be able to scale up to a large scale network . Following this thread , we first propose a Topical Factor Graph ( TFG ) model to incorporate all the information into a unified probabilistic model . Second , we propose Topical Affinity Propagation ( TAP ) for model learning . Third , we discuss how to do distributed learning in the Map Reduce framework . Finally , we illustrate several applications based on the results of social influence analysis . 3.1 Topical Factor Graph ( TFG ) Model
Now we formally define the proposed TFG model . i=1 and a set of hidden vectors {yi}N
Variables The TFG model has the following components : a set of observed variables {vi}N i=1 , which corresponds to the N nodes in the input network . Notations are summarized in table 1 . The hidden vector yi ∈ {1 , . . . , N}T models the topic level influences from other nodes to node vi . Each element yz i , taking the value from the set {1 , . . . , N} , represents the node that has the highest probability to influence node vi on topic z . For example , Figure 2 shows a simple example of an TFG . The observed data consists of four nodes {v1 , . . . , v4} , which have cor
SYMBOL DESCRIPTION
Table 1 : Notations .
N M T V E vi yz i yi θz i est wz st µz st number of nodes in the social network number of edges in the social network number of topics the set of nodes in the social network the set of edges a single node node vi ’s representative on topic z the hidden vector of representatives for all topics on node vi the probability for topic z to be generated by the node vi an edge connecting node vs and node vt the similarity weight of the edge est wrt topic z the social influence of node vs on node vt wrt topic z responding hidden vectors Y = {y1 , . . . , y4} . The edges between the hidden nodes indicate the four social relationships in the original network ( aka the edges of the input network ) . Feature Functions There are three kinds of feature functions :
• Node feature function g(vi , yi , z ) is a feature function de fined on node vi specific to topic z .
• Edge feature function f ( yi , yj , z ) is a feature function de fined on the edge of the input network specific to topic z .
• Global feature function h(y1 , . . . , yN , k , z ) is a feature function defined on all nodes of the input network wrt topic z .
Basically , node feature function g describes local information on nodes , edge feature function f describes dependencies between nodes via the edge on the graph model , and global feature function captures constraints defined on the network .
In this work , we define the node feature function g as : g(vi , yi , z ) = wz iyz i j∈N B(i)(wz ij +wz ji ) j∈N B(i ) wz ji j∈N B(i)(wz ij +wz ji ) i = i yz yz i = i
( 1 ) ij = θz where N B(i ) represents the indices of the neighboring nodes of node vi ; wz j αij reflects the topical similarity or interaction strength between vi and vj , with θz j denoting the importance of node j to topic z , and αij denoting the weight of the edge eij . αij can be defined by different ways . For example , in a coauthor network , αij can be defined as the number of papers coauthored by vi and vj . The above definition of the node feature function has the following intuition : if node vi has a high similarity/weight with node vyi , then vyi may have a high influence on node vi ; or if node vi is trusted by other users , ie other users take him as an high influential node on them , then it must also “ trust ” himself highly ( taking himself as a most influential user on him ) .
As for the edge feature function , we define a binary feature function , ie , f ( yi , yj , z ) = 1 if and only if there is an edge eij between node vi and node vj , otherwise 0 . We also define a global edge feature function h on all nodes , ie : i = k for all i = k
0 1 k = k and yz if yz otherwise . h(y1 , . . . , yN , k , z ) = ( 2 ) Intuitively , h(· ) constrains the model to bias towards the “ true ” representative nodes , More specially , a representative node on topic z must be the representative of itself on topic z , ie , yz k = k . And it must be a representative of at least another node vi , ie , ∃yz i = k , i = k .

( cid:189 ) node vi remains idle until messages have arrived on all but one of the edges incident on the node vi . Once these messages have arrived , node vi is able to compute a message to be sent onto the one remaining edge to its neighbor . After sending out a message , node vi returns to the idle state , waiting for a “ return message ” to arrive from the edge . Once this message has arrived , the node is able to compute and send messages to each of neighborhood nodes . This process runs iteratively until convergence .
However , traditional sum product algorithm cannot be directly applied for multiple topics . We first consider a basic extension of the sum product algorithm : topical sum product . The algorithm iteratively updates a vector of messages m between variable nodes and factor ( ie feature function ) nodes . Hence , two update rules can be defined respectively for a topic specific message sent from variable node to factor node and for a topic specific message sent from factor node to variable node . mf→y(y , z ) mf→y(y , z
)(τ zz
) f∼y\f
∼{y} z=z
f ( Y , z )
τzz
∼{y} z=z f∼y\f
f ( Y , z y∼f\y
) my→f ( y
, z ) y∼f\y

 ( 4 )
) my→f ( y
, z my→f ( y , z ) = mf→y(y , z ) =
+ where
• f ∼ y\f represents f is a neighbor node of variable y on the factor graph except factor f ;
• Y is a subset of hidden variables that feature function f is defined on ; for example , a feature f ( yi , yj ) is defined on edge eij , then we have Y = {yi , yj} ; ∼ {y} represents all variables in Y except y ;
∼{y} actually corresponds to a marginal function
• the sum for y on topic z ;
• and coefficient τ represents the correlation between topics , which can be defined in many different ways . In this work we , for simplicity , assume that topics are independent . That is , τzz = 1 when z = z and τzz = 0 when z = z . In the following , we will propose two new learning algorithms , which are also based this independent assumption .
New Learning Algorithm However , the sum product algorithm requires that each node need wait for all( but one ) message to arrive , thus the algorithm can only run in a sequential mode . This results in a high complexity of O(N 4 × T ) in each iteration . To deal with this problem , we propose an affinity propagation algorithm , which converts the message passing rules into equivalent update rules passing message directly between nodes rather than on the factor graph . The algorithm is summarized in Algorithm 1 . In the algorithm , we first use logarithm to transform sum product into max sum , and introduce two sets of variables {rz z=1 and {az z=1 for each edge eij . The new update rules for the variables are as follows : ( Derivation is omitted for brevity . ) ij}T ij}T rz ij = bz az jj = max ij − max k∈N B(j ) ik + az
{bz min {rz k∈N B(j ) jj , 0} , − min {rz ik} kj , 0} jj , 0} kj , 0} ) , i ∈ N B(j ) ij = min(max {rz az − k∈N B(j)\{i} min {rz max
( 5 )
( 6 )
( 7 )
Figure 2 : Graphical representation of the topical factor graph model . {v1 , . . . , v4} are observable nodes in the social network ; {y1 , . . . , y4} are hidden vectors defined on all nodes , with each element representing which node has the highest probability to influence the corresponding node ; g( . ) represents a feature function defined on a node , f ( . ) represents a feature function defined on an edge ; and h( . ) represents a global feature function defined for each node , ie k ∈ {1 , . . . , N} .
Joint Distribution Next , a factor graph model is constructed based on this formulation . Typically , we hope that a model can best fit ( reconstruct ) the observation data , which is usually represented by maximizing the likelihood of the observation . Thus we can define the objective likelihood function as :
N k=1
T z=1
T ekl∈E z=1
1 Z
P ( v , Y ) =
N
T i=1 z=1 h(y1 , . . . , yN , k , z ) g(vi , yi , z ) f ( yk , yl , z )
( 3 ) where v = [ v1 , . . . , vN ] and Y = [ y1 , . . . , yN ] corresponds to all observed and hidden variables , respectively ; g and f are the node and edge feature functions ; h is the global feature function ; Z is a normalizing factor .
The factor graph in Figure 2 describes this factorization . Each black box corresponds to a term in the factorization , and it is connected to the variables on which the term depends .
Based on this formulation , the task of social influence is cast as identifying which node has the highest probability to influence another node on a specific topic along with the edge . That is , to maximize the likelihood function P ( v , Y ) . One parameter configuration is shown in Figure 2 . On topic 1 , both node v1 and node v3 are strongly influenced by node v2 , while node v2 is mainly influenced by node v4 . On topic 2 , the situation is different . Almost all nodes are influenced by node v1 , where node v4 is indirectly influenced by node v1 via the node v2 . 3.2 Basic TAP Learning Baseline : Sum Product To train the TFG model , we can take Eq 3 as the objective function to find the parameter configuration that maximizes the objective function . While it is intractable to find the exact solution to Eq 3 , approximate inference algorithms such as sum product algorithm[17 ] , can be used to infer the variables y .
In sum product algorithm , messages are passed between nodes and functions . Message passing is initiated at the leaves . Each y1v1g(v1,y1,z)y2v2y3v3y4v4f(y1,y3,z)f(y2,y4 , z)y11=2y12=1Observation data : nodesTFG modelf(y1,y2,z)f(y2,y3,z)g(v2,y2,z)g(v3,y3,z)g(v4,y4,z)#Topic : T=2y21=4y22=1y31=2y32=1y41=4y42=2h(y1,y2 , … , yN , k , z ) where N B(j ) denotes the neighboring nodes of node j , rz influence message sent from node i to node j and az ence message sent from node j to node i , initiated by 0 , and bz the logarithm of the normalized feature function ij is the ij is the influij is k∈N B(i)∪{i} g(vi , yi , z)|yz g(vi , yi , z)|yz i =j i =k bz ij = log
( 8 )
The introduced variables r and a have the following nice explanation . Message az ij reflects , from the perspective of node vj , how likely node vj thinks he/she influences on node vi with respect to topic z , while message rz ij reflects , from the perspective of node vi , how likely node vi agrees that node vj influence on him/her with respect to topic z . Finally , we can define the social influence score based on the two variables r and a using a sigmoid function :
µz st =
1 1 + e−(rz ts+az ts )
( 9 )
The score µz t = s , thus the maximization of P ( v , Y , z ) can be obtained by yz st actually reflects the maximum of P ( v , Y , z ) for yz t = arg s∈N B(t)∪{t} µz max st
( 10 )
Input : G = ( V , E ) and topic distributions {θv}v∈V Output : topic level social influence graphs {Gz = ( Vz , Ez)}T Calculate the node feature function g(vi , yi , z ) ; Calculate bz Initialize all {rz repeat ij according to Eq 8 ; ij} ← 0 ; z=1 end Generate Gz = ( Vz , Ez ) for every topic z according to {µz st} ;
Algorithm 1 : The new TAP learning algorithm .
Finally , according to the obtained influence scores {µz st} and the topic distribution {θv} , we can easily generate the topic level social influence graphs . Specifically , for each topic z , we first filter out irrelevant nodes , ie , nodes that have a lower probability than a predefined threshold . An alternative way is to keep only a fixed number ( eg , 1,000 ) of nodes for each topic based social influence graph . ( This filtering process can be also taken as a preprocessing step of our approach , which is the way we conducted our experiments . ) Then , for a pair of nodes ( vs , vt ) that has an edge in the original network G , we create two directed edges between the two nodes and respectively assign the social influence scores µz st and ts . Finally , we obtain a directed social influence graph Gz for the µz topic z . The new algorithm reduces the complexity of each iteration from O(N 4 × T ) in the sum product algorithm to O(M × T ) . More importantly , the new update rules can be easily parallelized .
1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 1.10 1.11 1.12 1.13 1.14 1.15 1.16 1.17 1.18 1.19 1.20 foreach edge topic pair ( eij , z ) do ij according to Eq 5 ;
Update rz end foreach node topic pair ( vj , z ) do jj according to Eq 6 ;
Update az end foreach edge topic pair ( eij , z ) do ij according to Eq 7 ;
Update az until convergence ; foreach node vt do end end foreach neighboring node s ∈ N B(t ) ∪ {t} do
Compute µz st according to Eq 9 ;
3.3 Distributed TAP Learning
As a social network may contain millions of users and hundreds of millions of social ties between users , it is impractical to learn a TFG from such a huge data using a single machine . To address this challenge , we deploy the learning task on a distributed system under the map reduce programming model [ 9 ] .
Map Reduce is a programming model for distributed processing of large data sets . In the map stage , each machine ( called a process node ) receives a subset of data as input and produces a set of intermediate key/value pairs . In the reduce stage , each process node merges all intermediate values associated with the same intermediate key and outputs the final computation results . Users specify a map function that processes a key/value pair to generate a set of intermediate key/value pairs , and a reduce function that merges all intermediate values associated with the same intermediate key .
In our affinity propagation process , we first partition the large social network graph into subgraphs and distribute each subgraph to a process node . In each subgraph , there are two kinds of nodes : internal nodes and marginal nodes . Internal nodes are those all of whose neighbors are inside the very subgraph ; marginal nodes have neighbors in other subgraphs . For every subgraph G , all internal nodes and edges between them construct the closed graph ¯G . The marginal nodes can be viewed as “ the supporting information ” for updating the rules . For easy explanation , we consider the distributed learning algorithm on a single topic and thus the map stage and the reduce stage can be defined as follows .
In the map stage , each process node scans the closed graph ¯G of the assigned subgraph G . Note that every edge eij has two values az ij and rij . Thus , the map function is defined as for every key/value pair eij/aij , it issues an intermediate key/value pair ei∗/(bij + aij ) ; and for key/value pair eij/rij , it issues an intermediate key/value pair e∗j/rij .
In the reduce stage , each process node collects all values associated with an intermediate key ei∗ to generate new ri∗ according to Eq ( 5 ) , and all intermediate values associated with the same key e∗j to generate new a∗j according to Eqs . ( 6 ) and ( 7 ) . Thus , the one time map reduce process corresponds to one iteration in our affinity propagation algorithm . 3.4 Model Application
The social influence graphs by TAP can help with many applications . Here we illustrate one application on expert identification , ie , to identify representative nodes from social networks on a specific topic .
Here we present 3 methods for expert identification : 1 ) PageRank+LanguageModeling ( PR ) , 2 ) PageRank with global Influence ( PRI ) and 3 ) PageRank with topic based influence ( TPRI ) . Baseline : PR One baseline method is to combine the language model and PageRank [ 24 ] . Language model is to estimate the relevance of a candidate with the query and PageRank is to estimate the authority of the candidate . There are different combination methods . The simplest combination method is to multiply or sum the PageRank ranking score and the language model relevance score . Proposed 1 : PRI In PRI , we replace the transition probability in PageRank with the influence score . Thus we have
1 r[v ] = β r[v]p(v|v )
( 11 ) In traditional PageRank algorithm , p(v|v ) is simply the value of one divides the number of outlinks of node v . Here , we consider the influence score . Specifically we define vv
|V | + ( 1 − β ) v:v→v z µz p(v|v ) = vj :v→vj z µz vvj
Proposed 2 : TPRI In the second extension , we introduce , for each node v , a vector of ranking scores r[v , z ] , each of which is specific to topic z . Random walk is performed along with the coauthor relationship between authors within the same topic . Thus the topicbased ranking score is defined as : |V | p(zk|v ) + ( 1 − β )
( 12 ) where p(z|v ) is the probability of topic z generated by node v and it is obtained from the topic model ; p(v|v , z ) represents the probability of node v influencing node v on topic z ; we define it as r[v , z]p(v|v , z ) r[v , z ] = β v:v→v
1 p(v|v
, z ) =
µz vv vj :v→vj
µz vvj
4 . EXPERIMENTAL RESULTS
In this section , we present various experiments to evaluate the efficiency and effectiveness of the proposed approach . All data sets , codes , and tools to visualize the generated influence graphs are publicly available at http://arnetminerorg/lab datasets/soinf/ 4.1 Experimental Setup
411 Data Sets We perform our experiments on three real world data sets : two homogeneous networks and one heterogeneous network . The homogeneous networks are academic coauthor network ( shortly Coauthor ) and paper citation network ( shortly Citation ) . Both are extracted from academic search system Arnetminer1 . The coauthor data set consists of 640,134 authors and 1,554,643 coauthor relations , while the citation data set contains 2,329,760 papers and 12,710,347 citations between these papers . Topic distributions of authors and papers are discovered using a statistical topic modeling approach , Author Conference Topic ( ACT ) model [ 25 ] . The ACT approach automatically extracts 200 topics and assigns an authorspecific topic distribution to each author and a paper specific topic distribution to each paper .
The other heterogeneous network is a film director actor writer network ( shortly Film ) , which is crawled from Wikipedia under the category of “ English language films ” 2 . In total , there are 18,518 films , 7,211 directors , 10,128 actors , and 9,784 writers . There are 142,426 relationships between the heterogeneous nodes in the dataset . The relationship types include : film director , film actor , film writer , and other relationships between actors , directors , and writers . The first three types of relationships are extracted from the “ infobox ” on the films’ Wiki pages . All the other types of people relationships are created as follows : if one people ( including actors , directors , and writers ) appears on another people ’s page , then a directed relationship is created between them . Topic distributions of the heterogeneous network is initialized using the category information defined on the Wikipedia page . More specifically , we take 10 categories with the highest occurring times as the topics . The 10 categories are : “ American film actors ” , “ American television actors ” , “ Black and white films ” , “ Drama films ” , “ Comedy films ” , “ British films ” , “ American film directors ” , “ Independent films ” , “ American screenwriters ” , and “ American stage actors ” . As for the topic distribution of each node in the Film network , we first calculate how likely a node vi belong to a category 1http://arnetminer.org 2http://enwikipediaorg/wiki/Category : English language_films
( topic ) z , ie p(vi|z ) , according to 1|Vz| , where |Vz| is the number of nodes in the category ( topic ) z . Thus , for each node , we will obtain a set {p(vi|z)}T z=1 of likelihood for each node . Then we calculate the topic distribution {p(z|vi)}T z=1 according to the Bayesian rule p(z|vi ) ∝ p(z)p(vi|z ) , where p(z ) is the probability of the category ( topic ) .
412 Evaluation Measures For quantitatively evaluate our method , we consider three per formance metrics :
• CPU time . It is the execution elapsed time of the computa tion . This determines how efficient our method is .
• Case study . We use several case studies to demonstrate how effective our method can identify the topic based social influence graphs .
• Application improvement . We apply the identified topicbased social influence to help expert finding , an important application in social network . This will demonstrate how the quantitative measurement of the social influence can benefit the other social networking application .
The basic learning algorithm is implemented using MATLAB 2007b and all experiments with it are performed on a Server running Windows 2003 with two Dual Core Intel Xeon processors ( 3.0 GHz ) and 8GB memory . The distributed learning algorithm is implemented under the Map Reduce programming model using the Hadoop platform3 . We perform the distributed train on 6 computer nodes ( 24 CPU cores ) with AMD processors ( 2.3GHz ) and 48GB memory in total . We set the maximum number of iterations as 100 and the threshold for the change of r and a to 1e − 3 . The algorithm can quickly converge after 7 10 iterations in most of the times . In all experiments , for generating each of the topic based social influence graphs , we only keep 1,000 nodes that have the highest probabilities p(v|z ) . 4.2 Scalability Performance
We evaluate the efficiency of our approach on the three data sets .
We also compare our approach with the sum product algorithm .
Table 2 lists the CPU time required on the three data sets with the following observations : Sum Product vs TAP The new TAP approach is much faster than the traditional sum product algorithm , which even cannot complete on the citation data set . Basic vs Distributed TAP The distributed TAP can typically achieve a significant reduction of the CPU time on the large scale network . For example , on the citation data set , we obtain a speedup 15X . While on a moderate scaled network ( the coauthor data set ) , the speedup of the distributed TAP is limited , only 36 On a relative smaller network ( the Film data set ) , the distributed learning underperforms the basic TAP learning algorithm , which is due to the communication overhead of the Map Reduce framework . Distributed Scalability We further conduct a scalability experiment with our distributed TAP . We evaluate the speedup of the distributed learning algorithm on the 6 computer nodes using the citation data set with different sizes . It can be seen from Figure 3 ( a ) that when the size of the data set increase to nearly one million edges , the distributed learning starts to show a good parallel efficiency ( speedup>3 ) . This confirms that distributed TAP like many distributed learning algorithms is good on large scale data sets .
3http://hadoopapacheorg/
Table 2 : Scalability performance of different methods on real data sets . >10hr means that the algorithm did not terminate when the algorithm runs more than 10 hours .
Film 1.8 hr 57s 148s
Methods
Citation Coauthor
Sum Product
Basic TAP Learning
Distributed TAP Learning
N/A >10hr 39.33m
>10hr 369s 104s
( a ) Dataset size vs . speedup
( b ) #Computer nodes vs . speedup
Table 3 : Speedup results .
Using our large citation data set , we also perform speedup experiments on a Hadoop platform using 1 , 2 , 4 , 6 computer nodes ( since we did not have access to a large number of computer nodes ) . The speedup , shown in 3 ( b ) , show reasonable parallel efficiency , with a > 4× speedup using 6 computer nodes . 4.3 Qualitative Case Study i=1
Now we demonstrate the effectiveness of TAP of representative nodes identification on the Coauthor and Citation data sets .
Table 4 shows representative nodes ( authors and papers ) found by our algorithm on different topics from the coauthor data set and the citation data set . The representative score of each node is the probability of the node influencing the other nodes on this topic . The probability is calculated by . We can see some interesting results . For example , some papers ( eg , “ FaCT and iFaCT ” ) that do have have a high citation number might be selected as the representative nodes . This is because our algorithm can identify the influences between papers , thus can differentiate the citations of the theoretical background of a paper and an odd citation in the reference .
N j∈N B(i)∪{j} µij j∈N B(i)∪{i} µij
Table 5 shows four representative authors and researchers who are mostly influenced by them . Table 6 shows two representative papers and papers that are mostly influence by the two papers . Some other method eg , the similarity based baseline method using cosine metric , can be also used to estimate the influence according to the similarity score . Such a method was previously used for analyzing the social influence in online communities [ 6 ] . Comparing with the similarity based baseline method , our method has several distinct advantages : First , such a method can only measure the similarity between nodes , but cannot tell which node has a stronger influence on the other one . Second , the method cannot tell which nodes have the highest influences in the network , which our approach naturally has the capacity to do this . This provides many immediate applications , for example , expert finding . 4.4 Quantitative Case Study
Now we conduct quantitatively evaluation of the effectiveness of the topic based social influence analysis through case study . Recall the goal of expert finding is to identify persons with some expertise or experience on a specific topic ( query ) q . We define the baseline
Table 7 : Performance of expert finding with different approaches . method as the combination [ 24 ] of the language model P ( q|v ) and PageRank r[v ] .
We use an academic data set used in [ 24 ] [ 25 ] for the experiments . Specifically , the data set contains 14 , 134 authors , 10 , 716 papers , and 1 , 434 conferences . Four grade scores ( 3 , 2 , 1 , and 0 ) are manually labeled to represent definite expertise , expertise , marginal expertise , and no expertise . Using this data , we create a coauthor network . The topic model for each author is still obtained using the statistical topic modeling approach [ 25 ] . With the topic models , we apply the proposed TAP approach to the coauthor network to identify the topic based influences .
With the learned topic based influence scores , we define two extensions to the PageRank method : PageRank with Influence ( PRI ) and PageRank with topic based influence ( TPRI ) . Details of the extension is described in Section 34 For expert finding , we can further combine the extended PageRank model with the relevance model , for example the language model by P ( q|v)r[v ] or a topicz p(q|z)p(z|v)r[v , z ] , where r[v ] and based relevance model by r[v , z ] are obtained respectively from PRI and TPRI ; p(q|z ) , p(z|v ) can be obtained from the statistical topic model [ 24 ] .
We evaluate the performance of different methods in terms of Precision@5 ( P@5 ) , P@10 , P@20 , R precision ( R Pre ) , and mean average precision ( MAP ) [ 4 , 7 ] . Figure 7 shows the result of expert finding with different approaches . We see that the topic based social influences discovered by the TAP approach can indeed improve the accuracy of expert finding , which confirms the effectiveness of the proposed approach for topic based social influence analysis .
5 . RELATED WORK 5.1 Social Network and Influence
Much effort has been made for social network analysis and a large number of work has been done . For example , methods are proposed for identifying cohesive subgraphs within a network where cohesive subgraphs are defined as “ subsets of actors among whom there are relatively strong , direct , intense , frequent , or positive ties ” [ 26 ] . Quite a few metrics have been defined to characterize a social network , such as betweenness , closeness , centrality , centralization , etc . A common application of the social network analysis is Web community discovery . For example , Flake et al . [ 12 ] propose a method based on maximum flow/minmum cut to identify Web communities . As for social influence analysis , [ 2 , 21 ] propose methods to qualitatively measure the existence of influence . [ 6 ] studies the correlation between social similarity and influence . Other similar
0170K540K1M17M012345671234561152253354455556PerfectOur methodP@5P@10P@20R−PreMAPPRPRITPRI(%)020406080100 Table 4 : Representative nodes discovered by our algorithm on the Coauthor data set and the Citation data set .
Dataset
Author
Topic
Data Mining
Machine Learning
Database System
Information Retrieval
Web Services
Semantic Web
Bayesian Network
Data Mining
Citation
Machine Learning
Database System
Web Services
Web Mining
Semantic Web
Representative Nodes Heikki Mannila , Philip S . Yu , Dimitrios Gunopulos , Jiawei Han , Christos Faloutsos , Bing Liu , Vipin Kumar , Tom M . Mitchell , Wei Wang , Qiang Yang , Xindong Wu , Jeffrey Xu Yu , Osmar R . Zaiane Pat Langley , Alex Waibel , Trevor Darrell , C . Lee Giles , Terrence J . Sejnowski , Samy Bengio , Daphne Koller , Luc De Raedt , Vasant Honavar , Floriana Esposito , Bernhard Scholkopf Gerhard Weikum , John Mylopoulos , Michael Stonebraker , Barbara Pernici , Philip S . Yu , Sharad Mehrotra , Wei Sun , V . S . Subrahmanian , Alejandro P . Buchmann , Kian Lee Tan , Jiawei Han Gerard Salton , W . Bruce Croft , Ricardo A . Baeza Yates , James Allan , Yi Zhang , Mounia Lalmas , Zheng Chen , Ophir Frieder , Alan F . Smeaton , Rong Jin Yan Wang , Liang jie Zhang , Schahram Dustdar , Jian Yang , Fabio Casati , Wei Xu , Zakaria Maamar , Ying Li , Xin Zhang , Boualem Benatallah , Boualem Benatallah Wolfgang Nejdl , Daniel Schwabe , Steffen Staab , Mark A . Musen , Andrew Tomkins , Juliana Freire , Carole A . Goble , James A . Hendler , Rudi Studer , Enrico Motta Daphne Koller , Paul R . Cohen , Floriana Esposito , Henri Prade , Michael I . Jordan , Didier Dubois , David Heckerman , Philippe Smets Fast Algorithms for Mining Association Rules in Large Databases , Using Segmented Right Deep Trees for the Execution of Pipelined Hash Joins , Web Usage Mining : Discovery and Applications of Usage Patterns from Web Data , Discovery of MultipleLevel Association Rules from Large Databases , Interleaving a Join Sequence with Semijoins in Distributed Query Processing Object Recognition with Gradient Based Learning , Correctness of Local Probability Propagation in Graphical Models with Loops , A Learning Theorem for Networks at Detailed Stochastic Equilibrium , The Power of Amnesia : Learning Probabilistic Automata with Variable Memory Length , A Unifying Review of Linear Gaussian Models Mediators in the Architecture of Future Information Systems , Database Techniques for the World Wide Web : A Survey , The R* Tree : An Efficient and Robust Access Method for Points and Rectangles , Fast Algorithms for Mining Association Rules in Large Databases The Web Service Modeling Framework WSMF , Interval Timed Coloured Petri Nets and their Analysis , The design and implementation of real time schedulers in RED linux , The Self Serv Environment for Web Services Composition Web Usage Mining : Discovery and Applications of Usage Patterns from Web Data , Fast Algorithms for Mining Association Rules in Large Databases , The OO Binary Relationship Model : A Truly Object Oriented Conceptual Model , Distributions of Surfers’ Paths Through the World Wide Web : Empirical Characterizations , Improving Fault Tolerance and Supporting Partial Writes in Structured Coterie Protocols for Replicated Objects FaCT and iFaCT , The GRAIL concept modelling language for medical terminology , Semantic Integration of Semistructured and Structured Data Sources , Description of the RACER System and its Applications , DL Lite : Practical Reasoning for Rich Dls
Table 5 : Example of influence analysis from the coauthor data set . There are two representative authors and example list of researchers who are mostly influenced by them on topic “ data mining ” , and their corresponding influenced order on topic “ database ” and “ machine learning ” .
Topic : Data Mining
Topic : Database
Topic : Machine Learning
Jiawei Han David Clutter Hasan M . Jamil
K . P . Unnikrishnan
Ramasamy Uthurusamy
Shiwei Tang
Heikki Mannila Arianna Gallo
Marcel Holsheimer Robert Gwadera
Vladimir Estivill Castro
Mika Klemettinen
Jiawei Han David Clutter Shiwei Tang
Hasan M . Jamil
Ramasamy Uthurusamy
K . P . Unnikrishnan
Heikki Mannila
Jiawei Han
Heikki Mannila
Vladimir Estivill Castro
Marcel Holsheimer Robert Gwadera Mika Klemettinen
Arianna Gallo
Hasan M . Jamil
K . P . Unnikrishnan
Shiwei Tang
Ramasamy Uthurusamy
David Clutter
Vladimir Estivill Castro
Marcel Holsheimer Mika Klemettinen Robert Gwadera Arianna Gallo work can be referred to [ 10 ] . To the best of our knowledge , no previous work has been conducted for quantitatively measuring the topic level social influence on large scale networks .
For the networking data , graphical probabilistic models are often employed to describe the dependencies between observation data . Markov random field [ 22 ] , factor graph [ 17 ] , Restricted Boltzmann Machine(RBM ) [ 27 ] , and many others are widely used graphical models . One relevant work is [ 13 ] , which proposes an affinity propagation algorithm for clustering by passing messages between data points . The algorithm tries to identify exemplars among data points and forms clusters of data points around these exemplars .
In this paper , we propose a Topical Factor Graph ( TFG ) model , for quantitatively analyzing the topic based social influences . Compared with the existing work , the TFG can incorporate the correlation between topics . We propose a very efficient algorithm for learning the TFG model . In particular , a distributed learning algorithm has been implemented under the Map reduce programming model .
5.2 Large scale Mining
As data grows , data mining and machine learning applications also start to embrace the Map Reduce paradigm , eg , news personalization with Map Reduce EM algorithm [ 8 ] , Map Reduce of several machine learning algorithms on multicore architecture [ 5 ] .
Recently Papadimitriou and Sun [ 20 ] illustrates a mining framework on Map Reduce along with a case study using co clustering .
6 . CONCLUSION AND FUTURE WORK
In this paper , we study a novel problem of topic based social influence analysis . We propose a Topical Affinity Propagation ( TAP ) approach to describe the problem using a graphical probabilistic model . To deal with the efficient problem , we present a new algorithm for training the TFG model . A distributed learning algorithm has been implemented under the Map reduce programming model . Experimental results on three different types of data sets demonstrate that the proposed approach can effectively discover the topicbased social influences . The distributed learning algorithm also has a good scalability performance . We apply the proposed approach to expert finding . Experiments show that the discovered topic based influences by the proposed approach can improve the performance of expert finding .
The general problem of network influence analysis represents an new and interesting research direction in social network mining . There are many potential future directions of this work . One interesting issue is to extend the TFG model so that it can learn topic distributions and social influences together . Another issue is to design the TAP approach for ( semi )supervised learning . Users may provide feedbacks to the analysis system . How to make use of the
Table 6 : Example of influence analysis results on topic “ data mining ” from the citation data set . There are two representative papers and example paper lists that are mostly influenced by them .
Fast Algorithms for Mining Association Rules in Large Databases Mining Large Itemsets for Association Rules A New Framework For Itemset Generation Efficient Mining of Partial Periodic Patterns in Time Series Database A New Method for Similarity Indexing of Market Basket Data A General Incremental Technique for Maintaining Discovered Association Rules
Web Usage Mining : Discovery and Applications of Usage Patterns from Web Data Mining Web Site?s Clusters from Link Topology and Site Hierarchy Predictive Algorithms for Browser Support of Habitual User Activities on the Web A Fine Grained Heuristic to Capture Web Navigation Patterns A Road Map to More Effective Web Personalization : Integrating Domain Knowledge with Web Usage Mining useful supervised information to improve the analysis quality is an interesting problem . Another potential issue is to apply the proposed approach to other applications ( eg , community discovery ) to further validate its effectiveness .
7 . *ACKNOWLEDGMENTS
The work is supported by the Natural Science Foundation of China ( No . 60703059 ) , Chinese National Key Foundation Research ( No . 2007CB310803 ) , National High tech R&D Program ( No . 2009AA01Z138 ) , and Chinese Young Faculty Research Fund ( No . 20070003093 ) .
8 . REFERENCES [ 1 ] R . Albert and A . L . Barabasi . Statistical mechanics of complex networks . Reviews of Modern Physics , 74(1 ) , 2002 . [ 2 ] A . Anagnostopoulos , R . Kumar , and M . Mahdian . Influence and correlation in social networks . In Proceeding of the 14th ACM SIGKDD international conference on Knowledge discovery and data mining ( KDD’08 ) , pages 7–15 , 2008 .
[ 3 ] D . M . Blei , A . Y . Ng , and M . I . Jordan . Latent dirichlet allocation . Journal of Machine Learning Research , 3:993–1022 , 2003 .
[ 4 ] C . Buckley and E . M . Voorhees . Retrieval evaluation with incomplete information . In SIGIR’04 , pages 25–32 , 2004 .
[ 5 ] C T Chu , S . K . Kim , Y A Lin , Y . Yu , G . R . Bradski , A . Y . Ng , and K . Olukotun . Map Reduce for machine learning on multicore . In Proceedings of the 18th Neural Information Processing Systems ( NIPS’06 ) , 2006 .
[ 6 ] D . Crandall , D . Cosley , D . Huttenlocher , J . Kleinberg , and
S . Suri . Feedback effects between similarity and social influence in online communities . In Proceeding of the 14th ACM SIGKDD international conference on Knowledge discovery and data mining ( KDD’08 ) , pages 160–168 , 2008 . [ 7 ] N . Craswell , A . P . de Vries , and I . Soboroff . Overview of the trec 2005 enterprise track . In TREC 2005 Conference Notebook , pages 199–205 , 2005 .
[ 8 ] A . Das , M . Datar , A . Garg , and S . Rajaram . Google news personalization : Scalable online collaborative filtering . In Proceeding of the 16th international conference on World Wide Web ( WWW’07 ) , 2007 .
[ 9 ] J . Dean and S . Ghemawat . Mapreduce : Simplified data processing on large clusters . In Proceedings of the 6th conference on Symposium on Opearting Systems Design & Implementation ( OSDI’04 ) , pages 10–10 , 2004 .
[ 10 ] Y . Dourisboure , F . Geraci , and M . Pellegrini . Extraction and classification of dense communities in the web . In WWW’07 , pages 461–470 , 2007 .
[ 11 ] M . Faloutsos , P . Faloutsos , and C . Faloutsos . On power law relationships of the internet topology . In SIGCOMM , pages 251–262 , New York , NY , USA , 1999 . ACM .
[ 12 ] G . W . Flake , S . Lawrence , and C . L . Giles . Efficient identification of web communities . In Proceedings of the sixth ACM SIGKDD international conference on Knowledge discovery and data mining ( KDD’00 ) , pages 150–160 , 2000 .
[ 13 ] B . J . Frey and D . Dueck . Mixture modeling by affinity propagation . In Proceedings of the 18th Neural Information Processing Systems ( NIPS’06 ) , pages 379–386 , 2006 .
[ 14 ] M . Granovetter . The strength of weak ties . American Journal of Sociology , 78(6):1360–1380 , 1973 .
[ 15 ] T . Hofmann . Probabilistic latent semantic indexing . In Proceedings of the 22nd International Conference on Research and Development in Information Retrieval ( SIGIR’99 ) , pages 50–57 , 1999 .
[ 16 ] D . Krackhardt . The Strength of Strong ties : the importance of philos in networks and organization in Book of Nitin Nohria and Robert G . Eccles ( Ed. ) , Networks and Organizations . Harvard Business School Press , Boston , MA , 1992 .
[ 17 ] F . R . Kschischang , S . Member , B . J . Frey , and H . andrea
Loeliger . Factor graphs and the sum product algorithm . IEEE Transactions on Information Theory , 47:498–519 , 2001 .
[ 18 ] Q . Mei , D . Cai , D . Zhang , and C . Zhai . Topic modeling with network regularization . In Proceedings of the 17th International World Wide Web Conference ( WWW’08 ) , pages 101–110 , 2008 .
[ 19 ] M . E . J . Newman . The structure and function of complex networks . SIAM Reviews , 45 , 2003 .
[ 20 ] S . Papadimitriou and J . Sun . Disco : Distributed co clustering with map reduce . In Proceedings of IEEE International Conference on Data Mining ( ICDM’08 ) , 2008 .
[ 21 ] P . Singla and M . Richardson . Yes , there is a correlation : from social networks to personal behavior on the web . In Proceeding of the 17th international conference on World Wide Web ( WWW’08 ) , pages 655–664 , 2008 .
[ 22 ] P . Smolensky . Information processing in dynamical systems : foundations of harmony theory . pages 194–281 , 1986 . [ 23 ] S . H . Strogatz . Exploring complex networks . Nature ,
410:268–276 , 2003 .
[ 24 ] J . Tang , R . Jin , and J . Zhang . A topic modeling approach and its integration into the random walk framework for academic search . In Proceedings of IEEE International Conference on Data Mining ( ICDM’08 ) , pages 1055–1060 , 2008 .
[ 25 ] J . Tang , J . Zhang , L . Yao , J . Li , L . Zhang , and Z . Su .
Arnetminer : Extraction and mining of academic social networks . In Proceedings of the 14th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining ( SIGKDD’08 ) , pages 990–998 , 2008 .
[ 26 ] S . Wasserman and K . Faust . Social Network Analysis :
Methods and Applications . Cambridge : Cambridge University Press , 1994 .
[ 27 ] M . Welling and G . E . Hinton . A new learning algorithm for mean field boltzmann machines . In Proceedings of International Conference on Artificial Neural Network ( ICANN’01 ) , pages 351–357 , 2001 .
