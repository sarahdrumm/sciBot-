Modeling the Dynamics of Composite Social Networks
Erheng Zhong† , Wei Fan‡ , Yin Zhu† , Qiang Yang†‡ †Hong Kong University of Science and Technology , Hong Kong
‡Huawei Noah ’s Ark Lab , Hong Kong
{ezhong,yinz,qyang}@cseusthk , davidfanwei@huaweicom
ABSTRACT Modeling the dynamics of online social networks over time not only helps us understand the evolution of network structures and user behaviors , but also improves the performance of other analysis tasks , such as link prediction and community detection . Nowadays , users engage in multiple networks and form a “ composite social network ” by considering common users as the bridge . State of the art network dynamics analysis is performed in isolation for individual networks , but users’ interactions in one network can influence their behaviors in other networks , and in an individual network , different types of user interactions also affect each other . Without considering the influences across networks , one may not be able to model the dynamics in a given network correctly due to the lack of information . In this paper , we study the problem of modeling the dynamics of composite networks , where the evolution processes of different networks are jointly considered . However , due to the difference in network properties , simply merging multiple networks into a single one is not ideal because individual evolution patterns may be ignored and network differences may bring negative impacts . The proposed solution is a nonparametric Bayesian model , which models each user ’s common latent features to extract the cross network influences , and use network specific factors to describe different networks’ evolution patterns . Empirical studies on large scale dynamic composite social networks demonstrate that the proposed approach improves the performance of link prediction over several state of the art baselines and unfolds the network evolution accurately .
Categories and Subject Descriptors H28 [ Database Management ] : Database Applications − Data Mining
Keywords Social Network Analysis , Transfer Learning
1 .
INTRODUCTION
With the growth of online social media , social network analysis has attracted much research interest with a broad range of applications . As an important research topic , modeling the dynamics of social networks can help people understand the evolution of network structures , eg , the community evolution , the change of network statistics , eg , diameter and clustering coefficient , and the shifting of users’ preferences , etc . In addition , considering the dynamic properties helps improve the performance of other tasks , such as link prediction [ 16 ] and community detection [ 14 ] . One important observation is that nowadays people join multiple networks for different applications . For example , users may use Facebook to connect with their friends but follow celebrities on Twitter . In addition , even in an individual network , users may have different interactions , such as “ Forward ( RT ) ” and “ Mention ( @ ) ” on Twitter to share instant information . Consequently , by considering shared users , who can be identified by their unified IDs , as the bridges , different relationships or networks of interactions are nested together as composite networks [ 19 ] .
Most existing research works only study the dynamics of individual networks and do not consider their intra network correlations , but in practice , different networks can be highly correlated . As shown in Figure 1(g ) , the ratio of common links between Tencent ’s Instant Messaging and Microblog networks ( QQ vs . Tencent Weibo ) is much higher than the one between two random graphs ( 0.143 vs . 0.007 respectively ) . In reality , individual networks reflect only partial aspects of users’ social activities , thus the information captured by individual networks may be incomplete . For example , one user builds more links on Linkedin and interact less with her friends on Facebook when she just graduates . If we model the dynamics in each network independently , we cannot infer the graduation activity correctly , as people have different reasons to be inactive on Facebook and use Linkedin when they just want to change jobs . Consequently , we may fail to model this user ’s social dynamics , eg , her social interactions on Facebook in the future , without knowing the fact of graduation . In addition , the reasons that cause the network to change can come from other networks . Two users without any common neighbors may follow each other on Twitter as they are familiar on Facebook , and one user may mention someone as she has forwarded many tweets of the user . Without considering the cross network knowledge , one cannot correctly model these network dynamics . Furthermore , the data in an individual network may be very sparse , as users may have limited interactions when a net
937 ( a ) Weibo(2011/05 )
( b ) Weibo(2011/08 )
( c ) QQ(2011/05 )
( d ) QQ(2011/08 )
( e ) Community(2011/05 )
Common User Pairs
Composite Random
0.2
0.15
0.1
0.05 o i t a R
0
2011/06
2011/07 Month
2011/08 i s r o b h g e N w e n f o r e b m u N
80
60
40
20
0 0
Degree vs . New Links
QQ Weibo
50 150 Number of Degrees
100
200
( f ) Community(2011/08 )
( g ) Common Links
( h ) Degree Effects
( i ) Network Combination
Figure 1 : Network Illustration . ( a)∼(b ) and ( c)∼(d ) indicate the different numbers of communities and community memberships over time , where color indicates community and size presets community membership . ( a)∼(c ) and ( b)∼(d ) indicate the differences of community structures across networks . ( e ) and ( f ) indicate the different community relation strength over time . ( g ) presents the ratio of common links across networks , where the ratio is much higher than that between two random graphs , implying individual networks influence each other . ( h ) illustrates the correlation between the number of node degrees and the number of new links generated by the users . ( i ) illustrates the shortage of simply combining networks . work is just beginning to form . Data sparsity makes models overfit the rare observations and thus have poor generality . Modeling the dynamics of composite networks collectively can lead to more accurate and comprehensive results , and help understand the interactions across different networks . However , simply considering these nested networks as a single one does not work either , as different networks have different properties . Firstly , different networks reflect users’ different social interests . Users in different networks may have overlapped but different social circles , as shown in Figure 1(i ) , where one user belongs to different communities in different networks . Secondly , different networks have different levels of density . For example , Network A is denser than Network B . Simply merging may bring unnecessary and even harmful knowledge to each individual network . For example , if we combine networks A and B , the network structure in Network B is hidden and we cannot discover users’ social interests in Network B anymore . In addition , different types of networks have their own growth patterns , eg , different shrinkage ratios of diameters , degree distributions , etc . For example , the average number of users’ neighbors in Weibo network is much higher than instant messaging network ( QQ ) . As shown in Figure 1(a)∼(d ) , communities in Weibo are larger than those in QQ and the evolution process in QQ is more stable .
To solve the aforementioned problems , we propose a nonparametric Bayesian model which integrates network evolution over composite social networks directly . On one hand , it utilizes an adaptive and time dependent prior for each user to denote different users’ latent interests that decide users’ community memberships globally . Since this prior is related to all nested networks and thus it can be considered as a bridge to capture the cross network dynamics . On the other hand , it introduces temporal network specific factors to encode growth patterns in each individual network , which adjusts users’ concrete time evolving community memberships . These two priors are combined together to generate a hybrid prior and build dynamic mixed membership models in each individual network , where users’ community memberships as well as the community relations are exploited to generate links between them .
Table 1 : Definition of notations i=1 t=1
Data
Notation Description Sequence of Composite Networks User set of G t Link set of G Dirichlet and Multinomial distributions
Group Notation G = {G t}T U = {ui}N Et = ∪{Et i} . Dir(· ) , Mult(· ) Bern(· ) , Beta(· ) Bernoulli and Beta distributions Gam(· ) , N(· ) π , v , x and ω γ , λu , λd and λ K t d
Gamma and Gaussian distributions Latent variables Hyperparameters Number of communities at time t
Model i=1
To allow community structures vary over time and across networks , we use a nonparametric generative process for mixed memberships with the hybrid prior . A state space model is applied on the top to model the cross network dynamics . Specifically , users’ latent interests , network specific factors and community relations are changing over time . As time evolves , the observations of one network at a given time stamp can be encoded in users’ latent interests and affect the structures of other networks in the next time stamp , while the network specific factors and community relations allow every individual networks to have own growth patterns . t}T t , Gt i , Et t=1 , where G i = ( Ui , Et
Problem Formulation The notations are summarized in Table 1 . We consider a sequence of composite networks , denoted by {G i )} . t = {Gt i=1 is the composite network observed at time t . In each G i is the i th individual network , Ui is the user set of Gt i is the user relationship of Ui at time t and . is the number of single networks . We define the complete user set as U and the link set at time t as Et , where U = ∪{Ui} . i=1 = {uj}N j=1 and Et = ∪{Et i=1 . We assume the set of nodes U is constant . Although new nodes can join networks and existing nodes can leave networks , we can still include these nodes in U but consider them to be inactive . The goal is to construct the composite network at time T + 1 given the network sequence {G i = {et ij}M t j=1} . t}T t=1 . i
2 .
INFINITE TIME EVOLVING COMPOSITE NETWORK MODELING
We propose a novel nonparametric Bayesian model , Infinite Time evolving Composite Network Models ( ITCom ) , to cap
938 ture the dynamics of composite social networks . In the following , we firstly describe the foundation of ITCom , Mixed Membership Stochastic Blockmodels ( MMSB ) [ 1 ] , and then present the details of three extensions : infinite , dynamic and knowledge transfer . Finally , we propose an efficient Sequential Monte Carlo ( SMC ) method to infer the latent variables and construct ITCom . To help understand the motivation of the proposed model , we visualize two sub networks from Tencent . These networks contain users who are 2 hops away from the first author of the paper , as well as their relationships in Tencent ’s instant messaging network QQ and Weibo network , as shown in Figure 1 . 2.1 Background of MMSB As a foundation of ITCom , MMSB assumes that each user ui ∈ U possesses a latent mixture of K roles , which determine the membership of K communities in the network G . We denote this role mixture as a normalized K × 1 vector πi . In MMSB , these vectors are drawn from some priors p(π ) , such as Dirichlet distribution [ 1 ] and Logistic Normal distribution [ 6 ] . MMSB generates a K × K community relation matrix B , which represents the probability of having a connection from a user in a community to another user in another community . Given the vector πi of each user ui , the network edge eij is generated stochastically as follows : • For each pair of users ( ui , uj ) ∈ E in the network G :
– Draw indicator for ui , zij ∼ Mult(πi ) – Draw indicator for uj , zji ∼ Mult(πj ) – Sample the link , eij ∼ Bern(zT ij Bzji ) where zij and zji are two K×1 unit indicator vectors for the sender ui and the receiver uj respectively . As MMSB only models static and individual networks with fixed number of communities , as follows , we evolve MMSB step by step to model the dynamics of composite networks based on evidences and observations from real world social networks . 2.2 Infinite Modeling
In reality , with the evolution of networks , communities can come and go . For example , in social networks , eg , Facebook , a set of users can form a community when they join the same school and get familiar with each other ; in social media , eg , Twitter , a discussion group may dismiss when a hot topic is out of date . An example can be found in Figure 1(a ) and ( b ) , where the number of communities as well as the community sizes are different over time in Tencent Weibo . Different from previous research works [ 6 , 4 ] , which keep the community structure unchanged in different time stamps , ITCom allows communities to vary over time and determines the number of communities automatically . Inspired by Chinese Restaurant Process [ 2 ] and its successful applications on topic models [ 3 ] and MMSB [ 18 ] , we introduce a stick breaking prior on each πi to let k=1 πik = 1 . The construction process is as follows :
.∞
πik = vikΠk−1 j=1 ( 1 − vij )
( 1 ) where vij is the latent factor that needs to be estimated . This process can be understood as follows . Let πi1 = vi1 and 1 − πi1 be the remainder of the stick after chopping off the length vi1 . To calculate the length πi2 , draw vi2 randomly and chop off this fraction of the remainder of the stick , giving πi2 = vi2(1 − vi2 ) . This process is repeated and thus vik is the fraction to chop off from the stick ’s remainder , and πik as 1−.K is the length of the stick that was chopped off . Thus , the probability to generate a community K +1 can be calculated k=1 πik . In addition , vik evolves over time , and thus a community k can die if vik becomes too small for each user ui . To avoid overfitting and incorporate domain knowledge , we apply a logistic normal prior on vi . Formally , we have i ∼ N(μ , λ−1I ) vi =
1
1 + exp(− i )
( 2 ) where μ is the mean of all i and λ is used to control the precision . As stated below , the logistic normal prior allows us to incorporate global , network specific and time dependent knowledge naturally by adjusting μ over time and networks . 2.3 Knowledge Transfer Across Networks
Common knowledge can be transferred by overlapping users across individual networks while each individual network contains specific factors . For example , Facebook reflects users’ friendship in daily life , while Twitter is more about users’ interests on daily news . But at the same time , the same users in different individual networks can also have similar neighbors as they have similar interests over different dimensions like friendship , movies , etc . This phenomenon can be formulated as : different individual networks in a composite network may have different community structures , and each user follows community memberships over different networks while keeps some intrinsic features unchanged . One example can be found in Figure 1(a ) , ( c ) and ( g ) , where QQ and Weibo networks have different community structures and users’ community memberships but share many common links . To model these observations , we decompose vi into two parts , one representing each user ’s latent features and the other reflecting network specific factors . Let xi ∈ R1×D denote the latent features of user ui and ωd ∈ RD×Kd denote the network specific factors of the dth individual network , where Kd is the corresponding number of communities . xi encodes each user ’s latent interests while ωd maps users’ latent interests to network dependent communities . For each user ui in Gd , we set μdi = xiωd . Thus , cross network influence can be captured by xi while network dependent properties can be described by ωd . To avoid overfitting , we assign Gaussian priors to xi and ωd , the generation process of πd d I ) di ∼ N(xiωd , λ−1I ) πdik = vdikΠk−1
1+exp(− di ) .=1 ( 1 − vdi . ) k = 1 . . . Kd
ωd ∼ N(0 , λ−1 i is as follows : xi ∼ N(0 , λ−1 vdi = u I ) 1
The number of communities is network dependent and the communities with the same index in different networks are not necessary identical . This is consistent with the realworld data in Figure 1 , where the number of communities and community sizes of QQ and Weibo are different . 2.4 Dynamic Modeling
One important property of social networks is its dynamics , where communities can come into being and phase out , users’ community membership can change , and users can form and deform links . Examples can be found in Figure 1 : ( e ) and ( f ) show the different community structures and their relation strengths over time ; ( a ) and ( b ) present the different community memberships over time ; ( h ) shows that the levels of users’ activities to generate links are closely related
939 2.5 Model Summary
We now put all the pieces together and give the full generative process of ITCom as follows . The graphical model in one time stamp can be found in Figure 2 . d ∈ G : Sample ω0
• For each user ui ∈ U : Sample x0 • For each network G0 • Set each n0 • From t = 1 to T u I ) d ∼ N(0 , λ−1 i ∼ N(0 , λ−1 ij0 = 0 and n0 ij1 = 0 d I ) d ∼ N(ωt−1 d
, λ−1 d I ) d1 ) i ∼ N(xt−1 i
, σ2 uI ) d0 , γ1 + ˜γt
– For each network Gt d : d feature matrix ωt d ∼ Beta(γ0 + ˜γt
– For each user ui ∈ U :
∗ Draw a D×Kt ∗ Draw Bt ∗ Draw a D latent feature vector xt ∗ Set sparsity parameter ρd ∗ For each network Gt d : ) , t 1+exp(− t dik = vt di : πt – For each pair ( ui , uj ) ∈ Et di ∼ N(xt dikΠk−1 d in Gt d :
· vt · Draw πt di = i = di
1 exp(βdnd i )
Nd d , λ−1I ) iωt
.=1 ( 1 − vt di . )
∗ Draw indicator for ui , zt ∗ Draw indicator for uj , zt ∗ Sample the link , et dij ∼ Mult(πt id ) dji ∼ Mult(πt jd ) dij Bt dij ∼ Bern(ρd i ρd j zt dzt dji )
2.6 Model Building
Given observed links for some or all node pairs , we employ a Sequential Monte Carlo ( SMC ) method to draw samples from the latent variables’ posterior distribution and a Maximum a posteriori ( MAP ) method to estimate the hyperparameters . SMC incrementally runs a fast batch sampling method over the data at epoch t given the state at earlier epochs . As the priors and posteriors are not conjugate , we divide the inference process into three phrases to reduce the computational cost . It firstly samples the community assignments of every links by assuming the community membership π is given , then infers users’ membership over communities , and finally estimates the hierarchical priors .
Sampling Community Assignments Due to the challenge of infinite number of communities , we employ retrospective sampling [ 15 ] to approximate the true infinite model . Let γt d1 , and then the pairwise community assignments in the d th network at time t can be written as d1 , Et p(zt d ) ∝ p(Et d1 = γd1 + ˜γt d0 = γ0 + ˜γt d0 and γt d|πt d0 , γt d , γt fi d|zt p(Et ' k,k . d0 , γt d , Bt d , γt d|zt d0 + γt B(γt B(γt d1)p(zt d)dp(Bt d1 + nt d0 + γt d1 ) d|πt d ) d|γt d0 , γt d1)p(zt ' d,k,k . ) d|πt d ) '
πt dik
πt djk . ui uj
=
∝
. k Γ(ωk ) fi
Γ( k ωk ) and nt where B(ω ) = d,k,k . denotes the total number of pairwise community assignments between community k and kfi at time t in the d th network . As the conjugate property between Beta and Multinomial distributions , Bt d can be marginalized . The posterior of community assignments can be defined as p(zt dij = k , zt
( nt,¬(i,j ) d,k,k.,0 dji = kfi|πt + γt nt,¬(i,j ) d,k,k.,0 d0 , γt d , γt d0)1−yt + γt d1 , zt dij ( nt,¬(i,j ) d,k,k.,1 d0 + nt,¬(i,j ) d,k,k.,1
+ γt d1)yt dij
+ γt d1 d,¬(i,j ) , Ed )
( 6 )
Figure 2 : The Graphical Representation of ITCom . Blue nodes indicate observed variables , greens present hyper pri ors , reds mean variables in last time stamp and grays indicate latent variables need to be inferred . to their degrees , which evolve over time as well . In mixed membership models , these can be manipulated by changing the community compatibility B and users’ community memberships π , and varying the number of users’ links in different time stamps respectively . Firstly , with the shifting of users’ interests , the connection between different communities changes over time . Considering that older interactions have relatively smaller impacts , we use exponential decay to modify the priors of B . Let nt ij1 denote the times that users build links between the i th and the j th communities at time t and nt ij0 denote the number of user pairs that do not interact with each other but select the i th and j th communities at time t . With a kernel parameter κ , we have t−1 . h=1 fi
' h − t κ t−1 . h=1 fi
' h − t κ
˜γt ij0 = exp nh ij0
˜γt ij1 = exp nh ij1
( 3 ) ij0 , γ1 + ˜γt
Then the generation of the community compatibility matrix at time t is Bt ∼ Beta(γ0 + ˜γt ij1 ) . Note that γ0 and γ1 here enforce that the connection between new and existing communities can appear as time goes by . Secondly , users’ community memberships shift over time as well . This can be understood from two aspects : ( 1 ) . users’ latent interests xi change over time and ( 2 ) . the mapping from latent interests to communities changes with the evolution of community structures . Motivated by state space models for series data , we let d ∼ N(ωt−1 ωt i ∼ N(xt−1 xt
, λ−1
, λ−1 u I )
( 4 ) d I ) d i i δ ) , where nd
That means , users’ latent interests as well as the interestcommunity mapping at time t are shifted from those in the last time stamp . Finally , users’ activity levels can be very different in different time stamps . According to the study in [ 10 ] , the probability that one user generates one link with time gap δ is δ−αd exp(−βdnd i is the number of degrees of user ui in the network Gd , and αd and βd are two network dependent parameters . In other words , in unit time , the expected number of interactions for user ui is exp(βdnd i ) . Instead of setting the number of interactions explicitly , we introduce a sparsity parameter ρd to characterize the source of interaction , where Nd is the number of users in Gd . Then , we down weight the probability of successful interaction as exp(βdnd i ) i =
Nd ij ∼ Bern(ρd ed i ρd j zT ij Bdzji )
( 5 )
Note that the number of node degree varies over time , thus ρd i changes with time as well .
∝ ˜πt dik ˜πt djk .
940 dij , where yt where zt d,¬(i,j ) denotes the set of community assignments without two assignments over the link between ui and uj , and nt d,k,k.,y represents the total number of links in type y with ( k , kfi ) as the participating communities in the dIn addition , yt th network at time t . dij denotes the sign of the link et dij = 1 represents that ui and uj are linked at time t and yt dij = 0 represents that ui and uj will not build a link between each other . Importantly , assuming the number of current communities is K , if 1 ≤ k ≤ K then ˜πt dik and nt,d,¬(i,j ) k,k.,0 = 0 . Eq ( 6 ) represents the posterior probability of selecting community k if k ≤ K but represents the aggregate posterior probability of the infinite “ tail ” of communities with indexes greater than K if k > K . dik = 1−.K dik = πt = nt,d,¬(i,j ) k,k.,1 dik ; otherwise ˜πt k=1 πt
Sampling the Parameter v Given the community assignments , we employ the Metropolis Hastings algorithm to sample v for community memberships independently . Given users’ latent features x and network factors ω , to sample a new community activation v∗ di for each user ui in the d th di , A(v∗ network , we define the accept ratio of v∗ fi π∗ K' A(v∗ di , vdi ) , as 'Ddik
' p(zt
( 7 )
= dij|v∗ di)p(zt dij|vdi)p(zt dji|v∗ di ) dji|vdi ) di , vdi ) = dik πdik p(zt uj k=1 where Ddik denotes the total number of indicators attached to user ui assigned to community k in the network Gd . Then , di|xiωd , λ−1I ) and at each time , we sample v∗ accept it with probability min di from ∼ N(v∗ di , vdi ) , 1 ff A(v∗
Sampling x and ω Given v , for each time stamp t , we can infer the hierarchical priors : ωt d for each network and xt i for each user ui . To find the optimal values , we first define the union distribution over v and priors as d , λ−1I ) .' p(vt , ωt , xt ) = di|xt
.'
N'
N'
N(vt iωt
( 8 ) d=1 i=1
.
N(xt i|xt−1 i
, λ−1 u I )
N(ωt d|ωt−1 d
, λ−1 d I ) i=1 i = 0 and ω0 where x0 the log of likelihood with respect to ωt as zero , we obtain the sampling equations as ( λdI + xtT xt)−1xtT vt + ωt−1 d = 0 . By calculating the derivatives of d and xt and set them d=1 ff d ∼ N ωt ff xt ∼ N vtωtT
d ( λuI +
ωtT d ωt d
, λ−1 d I d)−1 + xt−1 , λ−1 u I
( 9 )
( 10 ) where xt is a N × D matrix , each row of which is xt i . d
Parameter Estimation As follows , we propose a maximum a posteriori ( MAP ) method to estimate the hyperparameters , including λ , λu and λd . To avoid overfitting , we place Gamma priors so that their prior distributions are conjugate with the likelihoods . For λ , we have
.'
N' p(λ|v , x , ω , a , b ) T' ff ∝ Gam λ|a , b ff λ| 1 ∝ Gam 2 t=1 d=1
N T )K + a , ff di|xt vt .
N i=1 1 2 k,t,d,i d , λ−1I iωt dik − [ xt ( vt iωt
( 11 ) d]k)2 + b ff Similarly , we obtain the sampling equations for λu and λd : λu| 1 p(λu|x , au , bu)∝Gam ( 12 ) 2 ff p(λd|ω , ad , bd)∝Gam λd| 1 2
. .
N T D + au ,
T )K + ad , dk + bd if + bu
( 13 )
ωt2 xt2 f,t,i
1 2
1 2 k,t,d
Framework We put all the components above into an SMC framework . Firstly , we set priors as arbitrary values , then initialize the latent variables and finally sample the community assignments . Consequently , it alternatively updates community assignments , community memberships , priors and hyperparameters in each round of inference :
• Update community assignments using Eq ( 6 ) • Update community activations v using Eq ( 7 ) • Update network specific priors ω using Eq ( 9 ) • Update user priors x using Eq ( 10 ) • Update hyperparameters using Eq ( 11 ) , ( 12 ) and ( 13 ) This process is repeated until convergence . Besides , the sparsity ratio ρ can be estimated independently by maximizing likelihood [ 10 ] . To avoid overfitting and reduce the computational cost , we update latent variables periodically . Specifically , we update v every 5 iterations , both λ and x every 10 iterations , and hyperparameters every 20 iterations . In addition , as in most real world datasets , we observe only positive links . For each user , we randomly sample other users who are more than two hops away and build negative links to the current user . The number of negative links is kept in the same order to that of positive links .
Time Complexity At each iteration , SMC needs to look up all M links in nested networks to pick community assignments and then update v with time O(T .N KD ) where N is the number of users . Metropolis Hastings sampler spends O(T N D ) on updating x and O(T .K ) on updating ω . Consequently , the updating of hyperparameters takes O(T .N K ) . Typically , T .K , T N D and T .N K are much smaller than T .N KD . Thus , with I iterations , the whole complexity is O(I(M K + T .N KD ) ) which linearly increases with the number of links M and users N . Following the similar idea in [ 19 ] , that partitions data into multiple machines for parallel computing and then combines pieces of results , the inference process can be implemented on Map/Reduce straight forward to cope with large datasets efficiently .
3 . EXPERIMENTS
We evaluate ITCom , on eight large scale datasets from Tencent , Sina Weibo1 , Xiaonei , Facebook/Twitter2 , Github3 , Stackoverflow4 and Epinion5 . Most datasets can be downloaded from the URLs in footnote and the pre processed Stackoverflow dataset is also available6 . The tasks include ( 1 ) link prediction , that predicts who will interact with each other in a given time stamp , and ( 2 ) macro evolution , which predicts changes of networks’ statistics , eg , clustering coefficients and degree distribution , etc . We adopt Mean Average Precision ( MAP ) as the evaluation criterion . It measures how well the algorithm ranks new links above non existing links . We set D = 5 , κ = 1 and other hyperparameters as 10 The number of iterations is 1000 .
In the link prediction task , we compare ITCom with Mixed Membership Stochastic Blockmodels ( MMSB ) [ 1 ] , dynamic MMSB ( dMMSB ) [ 6 ] , Nonparametric Metadata Dependent Relational Model ( NMDR ) [ 9 ] , dynamic Infinite Relational Model ( dIRM ) [ 8 ] and Tensor Factorization ( TF ) [ 7 ] .
1
2
3
4
5
6 http://wwwwise2012csucyaccy/challengehtml http://socialnetworksmpi swsorg http://wwwgithubarchiveorg/ http://metastackoverflowcom/ http://konectuni koblenzde/networks/epinions http://wwwcseusthk/~ezhong/dataset/sozip
941 Table 2 : Summary of Data Characteristics
Starting time
#T
Collections
Tencent Epinion Facebook Xiaonei Twitter
Sina Weibo
Github
StackOverflow ( SO )
#User ∼ 1M ∼ 0.1M ∼ 0.06M ∼ 0.5M ∼ 0.3M ∼ 6M ∼ 0.05M ∼ 0.8M
#Relations/Interactions
∼ 110M ∼ 0.8M ∼ 1.8M ∼ 32M ∼ 0.9M ∼ 320M ∼ 1M ∼ 33M
Tencent
Epinion
2011/05 2001/01 2006/09 2012/04 2009/09 2009/12 2012/03 2008/11
Types of Relations/Interactions Instant Messaging ( QQ ) , Microblog Following ( MB )
12 weeks 32 months Trust , Distrust 25 months 28 weeks 13 months 25 months 43 weeks 43 months Answering , Commenting , Voting
Link , Wall Posting Recording , Browsing , Chat , Friends Application Forwarding , Mention Forwarding , Mention Following , Collaborating mb qq
12
8 mb qq
0
−5
−10
) g o l ( e g a t n e c r e P
−15 0
2
4
10 Num of Degrees ( log )
6
8
) g o l ( e g a t n e c r e P
0
−5
−10
−15 0
( a ) Tencent
Twitter mention forward
2 Num of Degrees ( log )
4
6
( e ) Twitter
Tencent s e e r g e D f o m u N g v A
250
200
150
100
50
0 0
2
4
6
8
10
12
14
Time Stamps
( i ) Tencent
Twitter mention forward s e e r g e D f o m u N g v A
10
12
2
0
2
4
6
8
Time Stamps
3
2.8
2.6
2.4
2.2 s e e r g e D f o m u N g v A trust distrust
2 Num of Degrees ( log )
4
6
8
( b ) Epinion
Weibo mention forward
) g o l ( e g a t n e c r e P
0
−5
−10
−15 0
0
−5
−10
) g o l ( e g a t n e c r e P
Facebook
0
−5
−10
) g o l ( e g a t n e c r e P links wall
−15 0
1
2
3
4
5
6
7
Num of Degrees ( log )
( c ) Facebook
Github follow member
0
−5
−10
) g o l ( e g a t n e c r e P
−15 0
2
4
6
8
Num of Degrees ( log )
10
12
−15 0
2
4
6
8
Num of Degrees ( log )
( f ) Weibo
Epinion
( g ) Github
Facebook
10
12 links wall
5 s e e r g e D f o m u N g v A trust distrust
5
10 20 Time Stamps
15
25
30
( j ) Epinion
Weibo mention forward
12
10
8
6
4 0
40
30
20
10
0 0
2
4 8 Time Stamps
6
10
12
25
20
15
10 s e e r g e D f o m u N g v A
5
0 0
5
4
3
2
1 0 s e e r g e D f o m u N g v A
10
15
Time Stamps
20
25
0 0
5
10 Time Stamps
15
20
25
( k ) Facebook
Github follow member s e e r g e D f o m u N g v A
10
20
Time Stamps
30
40
( l ) Xiaonei
StackOverflow answer comment vote
10
20
Time Stamps
30
40
35
30
25
20
15
10
5 0
) g o l ( e g a t n e c r e P
0
−2
−4
−6
−8
−10
−12
−14 0
) g o l ( e g a t n e c r e P
0
−5
−10
−15 0
Xiaonei
2
4
6
Num of Degrees ( log ) friend record chat browsing
8
10
( d ) Xiaonei
StackOverflow answer comment vote
2 8 Num of Degrees ( log )
4
6
10
( h ) StackOverflow
Xiaonei friend record chat browsing
200
150
100
50 s e e r g e D f o m u N g v A
( m ) Twitter Figure 3 : Degree Distribution ( (a)∼(h ) ) and Density Evolution ( (i)∼(p ) )
( o ) Github
( n ) Weibo
( p ) StackOverflow
MMSB is the basic baseline , dMMSB is a dynamic extension of MMSB , NMDR is a nonparametric extension of MMSB , dIRM is a dynamic and nonparametric extension of MMSB , and TF models multiple relations and time factors together but it does not model the network differences and in it the number of communities is fixed . For MMSB , dMMSB and TF , we set the number of communities K as 50 while NMDR , dIRM and ITCom can determine K automatically . We set other parameters as the default values in original papers . For macro evolution , we introduce the Microscopic Evolution ( ME ) model [ 10 ] as the baseline . 3.1 Dataset Description
Each dataset contains a composite network , where each composite network contains multiple individual networks . According to different link types , these datasets can be classified as relational networks , eg , Tencent and Epinion , and interaction networks ( the remaining six datasets ) , where user pairs in relational networks are distinct but users in interaction networks can interact with each other multiple times . Specifically , Tencent collection contains an instant messaging network ( QQ ) and a Weibo network ( MB ) . In Epinion , people can build trust or distrust relations with others . Facebook collection captures users’ friendships and wall posting actions . In Xiaonei collection , users can leave records , visit friends’ homepages , chat with friends , and send friends applications . For Twitter and Sina Weibo , people can forward ( RT ) and mention ( @ ) others’ tweets . In Github , users follow each other as well as being collaborators in different projects . In Stackoverflow , people can answer others’ questions , comment on others’ answers and vote others’ posts . Their statistics can be found in Table 2 . Their degree distributions in the last time stamp and density evolutions are plotted in Figure 3 . Although the degree distributions all follow the power low distribution and networks become denser as time evolves , different individual networks in each collection have similar but different properties . It also implies that simply merging networks does not work , where networks’ specific patterns can be hidden . In summary , these datasets come from different applications with different scales and time lengths . The correlations between individual networks in different datasets are very different . For example , forwarding and mention may have highly positive correlation while trust and distrust relations are strongly negative correlated . This variety property makes the experiments convinced . To crawl data , we employ random walk based sampling method to select sub networks in Tencent and Xiaonei networks and extract relational knowledge from whole public data dumps of other datasets . In each dataset , users in different individual networks can be identified by unified user identity , such as the QQ number in the Tencent collection . In the link prediction task , the networks at the previous T − 1 time stamps are considered as the model input and the output is the prediction at time T . To simulate the evolution process , we consider the network series {Gt}T /2 t=1 and evolve it from t = T /2 , . . . , T . 3.2 Interaction/Friendship Prediction
Table 3 summarizes the MAP of all baselines in the link prediction task . ITCom consistently outperforms other baselines on MAP in all networks except Tencent ’s Microblog against TF . The MAP of ITCom is at least 0.02 higher than
942 ) g o l ( e g a t n e c r e P
−2
−4
−6
−8
−10
−12
−14 0
2
4
6
Num of Degrees ( log )
( a ) QQ
Tencent−qq
0
−2
−4
−6
−8
True ME ITCom
−10 0
2
4
6
Num of Degrees ( log ) i
) g o l ( t n e c i f f e o C g n i r e t s u C l
( e ) QQ
True ME ITCom
8
10
) g o l ( e g a t n e c r e P
−2
−4
−6
−8
−10
−12
−14 0
2
4 10 Num of Degrees ( log )
6
8
True ME ITCom
12
14
) g o l ( e g a t n e c r e P
0
−2
−4
−6
−8
−10
−12 0
2
4
6
Num of Degrees ( log )
( b ) Microblog
Tencent−mb
( c ) Trust
Epinion−trust
0
−2
−4
True ME ITCom
) g o l ( t i n e c i f f
) g o l ( t i n e c i f f e o C
−6
8
10
−8 0
2
4 10 Num of Degrees ( log )
6
8 e o C
12
14
0
−1
−2
−3
−4
−5
−6 0
True ME ITCom
True ME ITCom
8
10
) g o l ( e g a t n e c r e P
0
−2
−4
−6
−8
−10
−12 0
−2
−4
−6
−8
) g o l ( t i n e c i f f e o C
2
Num of Degrees ( log )
4
6
( d ) Distrust
Epinion−distrust
8
True ME ITCom
Networks
Tencent
Epinion
Facebook
Xiaonei
Twitter
Weibo
Github
SO
QQ MB Trust
Distrust
Link Wall
Record
Browsing
Chat Friend
Forwarding
Mention
Forwarding
Mention Following
Collaborating
Answering
Commenting
Voting
Table 3 : Performance Comparisons on MAP MMSB MMSB C dMMSB dMMSB C NMDR NMDR C 0.5097 0.2154 0.7235 0.7020 0.7298 0.6873 0.5112 0.2038 0.2813 0.3490 0.6945 0.7538 0.5562 0.6652 0.7447 0.8136 0.8416 0.7715 0.8000
0.5034 0.2151 0.6937 0.6738 0.7372 0.6773 0.5290 0.2070 0.2661 0.4092 0.7003 0.7450 0.5563 0.6653 0.7522 0.8181 0.8476 0.7769 0.7987
0.5131 0.2473 0.7251 0.6996 0.7330 0.6927 0.5196 0.2098 0.3003 0.3874 0.7082 0.7694 0.5831 0.6781 0.7649 0.8377 0.8426 0.8138 0.8117
0.5055 0.2293 0.7010 0.6829 0.7339 0.6954 0.5211 0.2131 0.2969 0.4095 0.7043 0.7701 0.5836 0.6801 0.7649 0.8237 0.8442 0.8149 0.8117
0.5211 0.2397 0.7112 0.6864 0.7376 0.6956 0.5211 0.2125 0.2977 0.3968 0.7033 0.7743 0.5819 0.6817 0.7661 0.8188 0.8589 0.8259 0.8141
0.5135 0.2255 0.7282 0.7151 0.7360 0.6981 0.5219 0.2140 0.3010 0.3206 0.7204 0.7799 0.5876 0.6775 0.7662 0.8228 0.8493 0.8298 0.8152 dIRM dIRM C 0.5127 0.5132 0.2339 0.2337 0.7005 0.7205 0.6937 0.6945 0.7345 0.7337 0.6972 0.6975 0.5196 0.5193 0.2185 0.2186 0.2965 0.2960 0.4171 0.3788 0.7131 0.7218 0.7728 0.7716 0.5915 0.5913 0.6834 0.6834 0.7609 0.7685 0.8162 0.8272 0.8539 0.8539 0.8136 0.8144 0.8129 0.8130
Tencent−qq
Tencent−mb
Epinion−trust
Epinion−distrust
ITCom 0.5599 0.2549 0.7375 0.7116 0.7469 0.7029 0.5477 0.2477 0.3306 0.4535 0.7361 0.8059 0.6233 0.7222 0.7991 0.8387 0.8715 0.8384 0.8220
TF
0.5241 0.2551 0.7300 0.7001 0.7358 0.6963 0.5191 0.2188 0.2960 0.4119 0.7135 0.7756 0.5933 0.6826 0.7627 0.8270 0.8597 0.8280 0.8152
True ME ITCom
Figure 4 : Network Evolution on Degree Distribution ( (a)∼(d ) ) and Clustering Coefficient ( (e)∼(h ) )
( f ) Microblog
( g ) Trust
( h ) Distrust
2
4
6
Num of Degrees ( log )
8
10
−10 0
2
Num of Degrees ( log )
4
6
8
MMSB . If we overlook the model differences , ITCom on average achieves 0.042 , 0.028 , 0.027 , 0.026 and 0.021 higher MAP as compared to MMSB , dMMSB , NMDR , dIRM and TF respectively . The better performance of ITCom over baselines with one individual network can be ascribed to the fact that , ITCom considers more knowledge from auxiliary networks and captures more aspects of users’ interests . Due to the data sparseness , not all users’ interests can be reflected by one individual network . Thus some knowledge will be missed if only one network is considered . On the other hand , although models with simply combined network , such as MMSB C , exploit knowledge from multiple networks to improve accuracies , they do not consider network differences , ie , users actually make different friends in different networks . Thus , they may introduce unnecessary regularization from unrelated networks . However , ITCom adaptively captures the cross network influence and keeps the networkspecific growth patterns , hence solves the above problems .
We have other interesting discoveries . First , comparing the performance of other baselines and MMSB , infinite and dynamic modeling can help improve the prediction precision . Second , due to the network differences , combining knowledge may not always be helpful . For example , the performance on the combined networks degrades as the trust and distrust relations are different across networks , thus , simply combined different networks bring negative impacts . Thirdly , the prediction precisions in Github and Stackoverflow are higher than in other networks . The reason is that , users in Github and Stackoverflow are programmers , who may have more consistent interaction patterns . Last but not the least , network influence is not symmetrical . For example , in Xiaonei collection , the improvement in friends application network is higher than that in other networks , as friends ap plications are much fewer than other interactions but others are highly dependent on friends application . 3.3 Network Evolution
Figure 4 summarizes the evolution results of ME and ITCom in Tencent and Epinion networks on degree distribution and clustering coefficient . Both networks are relational networks which are suitable for the settings of ME , and thus the comparison is fair . Overall , the performance of ME and ITCom are close on the evolution of degree distribution in the last time stamp . They approximate the true distribution of networks well in both collections . Nonetheless , on the Tencent dataset , ITCom performs slightly better than ME . The reason is that ME models network evolution anonymously , that ignores users’ personalities . When a network is large , the estimated distribution from a set of anonymous users is stable . However , when data is insufficient , estimation may overfit the rare observations . On the other hand , ITCom models users’ activities in person and hence provides more accurate modeling . In addition , ITCom collectively exploits knowledge from two networks , where knowledge in different networks can regularize the evolution process in each individual network and thus alleviate the overfitting issue . The performances of ME and ITCom on clustering coefficient are similar as well . But for long tail users , eg , whose number of neighbors is less than 10 , the estimation of ITCom is more accurate than ME . That ascribes to the fact that ITCom considers more knowledge from multiple networks . 3.4 Performance Analysis
We perform extended experiments on the Tencent dataset to answer three questions : ( 1 ) . does ITCom capture the network differences and reflect specific growth patterns ? ( 2 ) . how do the model parameters affect the performance of IT
943 P A M
0.7
0.6
0.5
0.4
0.3
0.2
Effectiveness of D
Effectiveness of κ mb qq
20
40
60
D
80
100
P A M
0.7
0.6
0.5
0.4
0.3
0.2 mb qq
2
4
6
κ
8
10
P A M
0.7
0.6
0.5
0.4
0.3
0.2 0
Different User Correspondence
MMSB−mb ITCom−mb MMSB−qq ITCom−qq
0.2
0.4
Correspondence Ratio
0.6
0.8
1
( a ) Community Relations
( b ) D
( c ) κ Figure 5 : Performance Analysis
( d ) Correspondence
Computational Time
80
60
40
20
) c e S
( e m T i
MMSB−C dMMSB−C NMDR−C dIRM−C ITCom
0 x 107
Convergence d o o h i l i e k L − g o L
−0.5
−1
−1.5
0 0.1
0.2
0.4
0.6
Proportion
0.8
1
−2 0
200
400
600
Num of Iterations
QQ MB
800
1000
( a ) Time Cost
( b ) Convergence
Figure 6 : Efficiency Analysis
Component Analysis − QQ
Component Analysis − MB
0.6
0.58
0.56
0.54
0.52
P A M
MMSB Com TCom ICom ITCom
0.5 0
1
2
3
Algorithm
4
5
6
0.35
0.3
P A M
0.25
0.2
0.15 0
MMSB Com TCom ICom ITCom
1
2
3
Algorithm
4
5
6
( a ) QQ ( b ) Weibo Figure 7 : Component Analysis
Com ? ( 3 ) . what is the effectiveness of corresponding ratio among individual networks ? ( 4 ) . what is the effectiveness of each component in ITCom ?
We plot the community relation matrices of QQ and Weibo in Figure 5(a ) , where nodes are communities and the thickness of edges represent the relational strength between communities . Obviously , the number of communities and community relations are different ( 43 in QQ vs . 33 in Weibo ) . Communities in Weibo are more centralized while those in QQ are more diverse . This is consistent with real applications , as people on Weibo follow others based on interests while people on QQ may interact with only close friends . This suggests that different networks have different community structures and ITCom can capture this difference .
We analyze the effects to change the number of features D ( 5 to 100 ) . The results are illustrated in Figure 5(b ) . The performance of ITCom is not sensitive to the number of D but decreases with very large D . The reason is that D denotes the representation complexity of each user . Thus , if D exceeds a threshold ( eg , 50 ) , the model is too complex and results in overfitting . At this point , it is less helpful to improve the model performance by increasing D . In practice , D can be tuned through cross validation techniques . For κ , we vary it from 1 to 10 , the results are shown in Figure 5(c ) . The performance of ITCom drops down slightly with larger κ but it is not sensitive nonetheless .
As many people may only use parts of online services , ie , they may exist in one individual network but not in all networks , we test the effect of the correspondence ratio between different individual social networks , eg , the number of users who exist in both networks . Figure 5(d ) presents the results with different ratios between the QQ and MB networks . ITCom ’s performance becomes worse if fewer correspondences are provided across networks . In addition , it outperforms MMSB consistently if there are corresponding users , implying that ITCom successfully uses the overlapping users as bridges to capture cross network influences .
To test the effectiveness of each component , ie , composite , infinite and dynamic in ITCom , we perform experiments on the Tencent dataset by removing specific components in ITCom and produce three baselines . Com considers only composite network knowledge but fixes the number of com
3.5 Efficiency Analysis munities and ignores the temporal information , ICom is the same as ITCom but ignores the temporal information and TCom fixes the number of communities . As shown in Figure 7 , the composite modeling contributes most improvements while the infinite and dynamic extensions improve the model performance further .
As analyzed in the end of Section 2.6 , the computational time of ITCom increases linearly with the number of interactions between users . In addition , the computational time is closely related to the convergence property of the inference algorithm . We evaluate these empirically as shown in Figure 6 . Figure 6(a ) illustrates the computational time of MMSB C , dMMSB C , NMDR C , dIRM C and ITCom on the Tencent dataset , with different ratio of links . We observe that the computational time increases linearly with larger data size . For our experimental setting , every round of inference takes about 45 seconds in our computer , of which memory is 16G and CPU is 32Gz ITCom not only has better prediction performance as shown in Table 3 , but also has similar time cost with dIRM C and dMMSB C . Figure 6(b ) shows the convergence property of ITCom . Clearly , ITCom becomes convergent after about 400 iterations . Combining with the time cost of each round , the inference algorithm of ITCom takes about five hours to build a model .
4 . RELATED WORKS
Social Network Analysis [ 5 ] has drawn much research interest , ranging from link prediction [ 12 ] , community detection [ 11 ] , to social influence [ 17 ] . Several works have been proposed to handle social networks with multiple relations , such as tensor factorization [ 7 ] . However , these works treat each type of relationship as equally important and do not consider network differences . In previous research [ 19 ] , we introduced the concept of composite social networks . Based on the property that different social networks reflect different aspects of users’ interests , we introduced a hierarchical Bayesian model to predict users’ behaviors by exploiting knowledge in different individual networks adaptively .
Network Dynamics As social networks change over time , studying network dynamics and evolution is also an important topic . Network dynamics focuses on the microscopic changes of networks , such as the links generated by specific users , etc . For example , Nguyen et al . proposed a twostep framework to trace the evolution of overlapped network communities in dynamic mobile networks [ 14 ] . On the other hand , network evolution aims to describe the change of macroscopic network properties , such as diameter , clustering coefficients , etc . For example , Leskovec et al . proposed a simulation method to construct networks step by step depending on parameters estimated by maximal likelihood methods [ 10 ] . However , these existing works studied only one network but did not consider the influences across networks . Besides , previous research works mostly deal with one
944 aspect , dynamics or evolution , but the proposed model can handle both simultaneously .
Mixed Membership Models Recently , mixed membership models have been demonstrated to be effective to model relational data , such as MMSB [ 1 ] . The main idea is to represent each entity as a mixed membership vector over communities or topics . Recently , MMSB has been extended from two aspects : dynamic [ 6 , 8 , 4 ] and nonparametric [ 18 ] , in order to model dynamical data and release the constraints on the number of communities . In addition , auxiliary data are also considered to improve the model performance [ 9 ] . Cross domain collaborative filtering is introduced [ 13 ] , where hierarchical Bayesian models are proposed to solve multiple domain user personalization . However , it is applied on static user item interaction networks .
5 . CONCLUSION
In this paper , we studied a new problem on dynamics analysis of composite social networks . We defined a composite social network as a set of nested individual networks , where users and links in different individual networks overlap . The dynamical process of each individual network can influence each other while keeping specific evolution patterns . To model this co evolution process , we proposed a nonparametric Bayesian model , ITCom , by capturing crossnetwork influences adaptively . The main idea is to model users’ latent interests , which carry the common knowledge embedded in multiple networks and use network specific factors to describe the network dependent growth patterns on community structures . These two kinds of knowledge are then encoded as a hybrid prior for a dynamic mixed membership model to generate the links between users in each time stamp . To allow communities vary over time and networks , we construct nonparametric models . Unlike prior works , the proposed model can capture the microscopic and macroscopic aspects of network dynamics , including the links of each specific user and the global changes of networks properties . The proposed model is flexible in that , it can be extended to any number of networks and the number of communities can be determined automatically . We conducted large scale empirical studies on eight real world network collections , where ITCom outperforms several state of the art baselines on link prediction by as high as 0.11 on MAP efficiently and estimates the evolution of degree distribution and clustering coefficient accurately .
Future Works In this paper , the proposed model require the users across networks to be identical . We propose to relax this restriction in the future . Besides modeling the network dynamics and predicting users’ behaviors [ 19 ] , the rich data embedded in composite social networks can benefit many other applications . Firstly , users’ characteristics and their interactions can be exploited to build an accurate user distance measure . In addition , by considering multiple networks together , common patterns can be extracted from users’ behaviors/interactions and these patterns can be used to infer their characteristics .
Acknowledgement We thank the support of Hong Kong CERG Projects 621211 and 620812 .
References
[ 1 ] E . M . Airoldi , D . M . Blei , S . E . Fienberg , and E . P . Xing . Mixed membership stochastic blockmodels . J . Mach . Learn . Res . , 9:1981–2014 , 2008 .
[ 2 ] D . M . Blei , T . L . Griffiths , and M . I . Jordan . The nested chinese restaurant process and bayesian nonparametric inference of topic hierarchies . J . ACM , 57(2):7:1–7:30 , 2010 .
[ 3 ] D . M . Blei , T . L . Griffiths , M . I . Jordan , and J . B . Tenenbaum . Hierarchical topic models and the nested chinese restaurant process . In Advances in Neural Information Processing Systems 16 . MIT Press , 2004 .
[ 4 ] Y S Cho , G . V . Steeg , and A . Galstyan . Co evolution of selection and influence in social networks . In W . Burgard and D . Roth , editors , Proceedings of the Twenty Fifth AAAI Conference on Artificial Intelligence , AAAI 2011 , San Francisco , California , USA . AAAI Press , 2011 .
[ 5 ] N . Du , H . Wang , and C . Faloutsos . Analysis of large multi modal social networks : patterns and a generator . In Proceedings of the 2010 European Conference on Machine learning and knowledge discovery in databases : Part I , ECML PKDD’10 , pages 393– 408 , Berlin , Heidelberg , 2010 . Springer Verlag .
[ 6 ] W . Fu , L . Song , and E . P . Xing . Dynamic mixed membership In Proceedings of the 26th blockmodel for evolving networks . Annual International Conference on Machine Learning , ICML ’09 , pages 329–336 , New York , NY , USA , 2009 . ACM .
[ 7 ] S . Gao , L . Denoyer , and P . Gallinari . Probabilistic latent tensor factorization model for link pattern prediction in multi relational networks . CoRR , abs/1204.2588 , 2012 .
[ 8 ] K . Ishiguro , T . Iwata , N . Ueda , and J . Tenenbaum . Dynamic infinite relational model for time varying relational data analysis . In J . Lafferty , C . K . I . Williams , J . Shawe Taylor , R . Zemel , and A . Culotta , editors , Advances in Neural Information Processing Systems 23 , pages 919–927 . MIT Press , 2010 .
[ 9 ] D . I . Kim , M . Hughes , and E . Sudderth . The nonparametric metadata dependent relational model . In J . Langford and J . Pineau , editors , Proceedings of the 29th International Conference on Machine Learning ( ICML 12 ) , ICML ’12 , pages 1559–1566 , New York , NY , USA , 2012 . Omnipress .
[ 10 ] J . Leskovec , L . Backstrom , R . Kumar , and A . Tomkins . Microscopic evolution of social networks . In Proceedings of the 14th ACM SIGKDD international conference on Knowledge discovery and data mining , KDD ’08 , pages 462–470 , New York , NY , USA , 2008 . ACM .
[ 11 ] J . Leskovec , K . J . Lang , and M . Mahoney . Empirical comparison of algorithms for network community detection . In Proceedings of the 19th International Conference on World Wide Web , WWW ’10 , pages 631–640 , New York , NY , USA , 2010 . ACM .
[ 12 ] D . Liben Nowell and J . Kleinberg . The link prediction problem In Proceedings of the 12th International for social networks . Conference on Information and Knowledge Management , CIKM ’03 , pages 556–559 , New York , NY , USA , 2003 . ACM .
[ 13 ] Y . Low , D . Agarwal , and A . J . Smola . Multiple domain user personalization . In Proceedings of the 17th ACM SIGKDD International Conference on Knowledge discovery and data mining , KDD ’11 , pages 123–131 , New York , NY , USA , 2011 . ACM .
[ 14 ] N . P . Nguyen , T . N . Dinh , S . Tokala , and M . T . Thai . Overlapping communities in dynamic networks : their detection and mobile applications . In Proceedings of the 17th annual international conference on Mobile computing and networking , MobiCom ’11 , pages 85–96 , New York , NY , USA , 2011 . ACM .
[ 15 ] O . Papaspiliopoulos and G . O . Roberts . Retrospective Markov chain Monte Carlo methods for Dirichlet process hierarchical models . Biometrika , 95:169–186 , 2008 .
[ 16 ] T . Tylenda , R . Angelova , and S . Bedathur . Towards time aware link prediction in evolving social networks . In Proceedings of the 3rd Workshop on Social Network Mining and Analysis , SNAKDD ’09 , pages 9:1–9:10 , New York , NY , USA , 2009 . ACM .
[ 17 ] R . Xiang , J . Neville , and M . Rogati . Modeling relationship strength in online social networks . In Proceedings of the 19th International Conference on World Wide Web , WWW ’10 , pages 981–990 , New York , NY , USA , 2010 . ACM .
[ 18 ] Z . Xu , V . Tresp , K . Yu , and H P Kriegel . Infinite hidden relational models . In Proceedings of the Twenty Second Conference Annual Conference on Uncertainty in Artificial Intelligence ( UAI 06 ) , pages 544–551 , Arlington , Virginia , 2006 . AUAI Press .
[ 19 ] E . Zhong , W . Fan , J . Wang , L . Xiao , and Y . Li . Comsoc : adaptive transfer of user behaviors over composite social network . In Proceedings of the 18th ACM SIGKDD international conference on Knowledge discovery and data mining , KDD ’12 , pages 696–704 , New York , NY , USA , 2012 . ACM .
945
