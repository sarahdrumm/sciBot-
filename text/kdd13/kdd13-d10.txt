A Time Dependent Enhanced Support Vector Machine For
Time Series Regression
Goce Ristanoski
NICTA Victoria Laboratory The University of Melbourne
Melbourne , Australia gristanoski@student unimelbeduau
Wei Liu
NICTA ATP Laboratory
The University of Melbourne
Melbourne , Australia weiliu@nictacomau
James Bailey
NICTA Victoria Laboratory The University of Melbourne
Melbourne , Australia baileyj@unimelbeduau
ABSTRACT Support Vector Machines ( SVMs ) are a leading tool in machine learning and have been used with considerable success for the task of time series forecasting . However , a key challenge when using SVMs for time series is the question of how to deeply integrate time elements into the learning process . To address this challenge , we investigated the distribution of errors in the forecasts delivered by standard SVMs . Once we identified the samples that produced the largest errors , we observed their correlation with distribution shifts that occur in the time series . This motivated us to propose a time dependent loss function which allows the inclusion of the information about the distribution shifts in the series directly into the SVM learning process . We present experimental results which indicate that using a time dependent loss function is highly promising , reducing the overall variance of the errors , as well as delivering more accurate predictions .
Categories and Subject Descriptors H28 [ Information Systems ] : Database Application
Data Mining
Keywords Time Series , Support Vector Machine , Loss Function .
1 .
INTRODUCTION
Time series prediction is a classic machine learning task . In our setting , a set of univariate training samples x1 , . . . , xn ordered in time are provided and the task is to learn a model for predicting future values . We will consider a regression setting , where all sample values are continuous . A typical approach for learning involves using the most recent n values of the series xn , xn−1 , xn−2 , . . . x1 , to learn a model to forecast the future t values of the series : xn+1 , xn+2 , . . . xn+t . A series can range from very frequent measurements(stock market values taken at a 5 minutes interval ) to less frequent and may span a larger period of time(quarterly or yearly reports ) .
Depending on the value of t and the nature of the time series being learned , we can differentiate between short term forecasting , which concentrates on forecasting the very next samples following in the time series when they can be confidently described by only using the last samples without any additional knowledge or external variables influence ; intermediate term forecasting which attempts to forecast beyond the very next samples ; and long term forecasting , which besides using a quantitative model requires qualitative analysis and expert opinion . In the time series investigated in this paper , we focus on short term to intermediate term forecasting .
Many machine learning models have been used for time series prediction , such as Linear Regression , Robust Regression , Gaussian Processes , Neural Networks and Markov models . Support Vector Machines have been used with considerable success for time series forecasting and are often able to outperform other methods . However , they may still learn sub optimal models , in the presence of challenging aspects such as nonstationarity and volatility , noise , distribution changes and shifts .
Developing a clean and simple way to incorporate the time element into the learning process for SVM regression is the focus of our work . Our approach is based on the following key insight : across the samples , there is a correlation between the magnitude of the prediction error and the magnitude of the distribution shift(Figure 1 ) . The samples where high prediction error occurs , tend to be samples where a large amount of shift in the series has occurred ( and vice versa ) . Based on this simple observation , we propose a time sensitive loss function that modifies the learning process to target the samples with large distribution shift , in order to reduce their prediction error . The resulting SVM is not only able to produce more accurate forecasts , but also produce forecasts which are more stable and have lower variance in error . Our main contributions in this paper are as follows :
• We analyse the nature of predicted errors and discover that the error often arises due to samples which are not outliers , but which contain with important information about the dynamics of the series .
• We show the correlation between samples with large prediction error and samples with distribution shift , thus identifying an opportunity for an effective methodology of targeting these samples .
• We introduce a time dependent loss function that incorporates this distribution shift information in the form of a time sensitive loss into the SVM regression learning process .
2 . RELATED WORK
We categorise related work into two sub areas : methods for time series prediction and methods for detecting change in time series .
2.1 Machine learning methods for time series analysis
Extensive research in the area of machine learning models for time series analysis has been conducted in recent years [ 1 , 14 ] . Hidden Markov Models [ 13 ] and Artificial Neural Networks [ 17 , 11 ] have been adapted to use additional information from the time series in their learning . Linear Regression , and its advanced version Robust Regression offer interpretable models with satisfactory performance [ 19 ] . Clustering has proven to be very beneficial as well [ 9 , 12 ] . Feature selection process [ 30 ] , Independent Component Analysis [ 8 ] , time series segmentation [ 28 ] and motif discovery [ 25 , 20 ] are other popular methods for time series analysis .
On the econometric side , models for time series analysis , such as the Autoregressive Integrated Moving Average ( ARIMA ) models have been proposed and balance complexity with performance . A large variety of more complex extensions also exist , such as the ( General ) AutoRegressive Conditional Heteroskedasticity ( (G)ARCH ) [ 2 ] . A possible drawback of these approaches is that significant user insight and domain knowledge may be required to achieve good results and their performance may not be as strong when used ‘out of the box’ .
Support Vector Machines have been widely used in practice due to their generally strong performance , and much research has been conducted to further improve them in several directions , including time series analysis . Use of SVMs has been investigated for non stationary time series modelling [ 5 ] and volatile series analysis [ 31 ] . A modification of SVMs that uses dynamic parameters for the purpose of time series datasets analysis and forecasting has also been suggested [ 3 ] .
2.2 Distribution shift and event detection
The temporal continuity of the samples in time series datasets is an important aspect and a core analysis task is detection of distribution changes or shifts in the series . These changes or shifts that occur over time in the series have been extensively researched ( eg [ 22 , 4 , 18 , 15 ] ) in order to discover the effect of all the events whose information is concealed in the series [ 16 ] , especially ones classified as anomalies [ 23 , 7 ] or noise , which can complicate the learning process .
3 . TIME DEPENDENT LOSS FUNCTION
We propose an algorithm that has two phases : ( 1 ) detection of large error producing samples in the series , and ( 2 ) targeted minimization of the loss at the large error producing samples by using a time dependent loss function . We explain each phase in turn .
3.1 Large error producing sample detection
It is well known that distribution change or shift within a time series can influence and complicate the learning process . We next make a crucial observation about distribution shift and the forecasted error using standard SVM , which is a core motivation in our later development .
Figure 1 : Delta values ( △x2 t = ( xt − xt−1)2 ) and squared errors for “ Boing stock market value ” and “ Annual water usage in New York ” time series test samples , forecasted using standard polynomial SVM . We can observe an almost linear correlation between the delta values and squared errors , but also we notice that most of the errors are clustered around the close to zero values , and a few stand out in error size as the delta values increase .
Consider Figure 1 . For two separate datasets an SVM regression model has been trained and then evaluated using test data ( each sample at time t is forecasted based on the past four time series values ) . For each test sample , the squared error is shown on the y axis and the x axis shows the amount of “ shift ” ( △x2 t = ( xt − xt−1)2 ) undergone by the sample ( the difference in water usage compared to the previous sample , or the difference in stock value compared to the previous sample ) .
We observe that there is strong correlation between magnitude of prediction error and magnitude of shift ( Pearson correlation coefficient : Boing stock market value series = 0.99 ; Annual water usage in New York series = 098 ) In particular , the samples for which the squared prediction error is high , are samples for which high distribution shift has occurred .
We can also observe a Pareto like principle seems to operate for the prediction error : 80 % of the error originates from roughly 20 % of the samples . This is highlighted in Figure 2 , where for each dataset the test samples are sorted according to prediction error . The trends in Figures 1 and 2 are also similar for samples from the training set .
This suggests the following strategy : if we additionally target the samples with high distribution shift in the learning process , can this produce a model with overall lower prediction error ?
In order to attempt this , we need a formal test for whether a sample is a “ high distribution shift sample ” . We choose to do this by analysing the mean and standard deviation of the features describing it , which correspond to the past samples in the time series . For a given sample xt at time t and dimensionality d(number of past values used to forecast the sample ) , let md be the calculated mean of the d preceding samples ( xt−p , xt−d+1xt−1 ) and let sd be the calculated standard deviation . We define the range md ± k ∗ sd as the range in which we expect to find the value of the sample at
• Level Shift Outliers ( LSO ) are the type of outlier when there is a sudden extreme change in the distribution of the process and the change is permanent [ 27 ] . This means that until time ts , the output is explained as yt= wxt + b , and from that point onwards(for t ≥ ts ) as yt = wxt+b+M ( t ) , where M ( t ) is a process(stationary or non stationary ) that caused the level shift . This means the change in the process is significant enough to build a separate model from that point onwards , as these changes occur with a high intensity and less frequently , unlike the distribution shift which is a more continuous process with mild changes that do not require the need from more than one model .
One potential approach might be to remove high distribution shift samples from the time series altogether , for example if we classify the high distribution shift samples as AO or IO . This would not necessarily help , since it would mean that the samples immediately following the AO/IO sample , which have similar distribution , would then likely be labelled as AO/IO samples as well and the problem would remain . Also , removal might result in important information being lost to the training process .
If we consider that case of LSO , we have several methods of dealing with the level shift : if the number of shifts is very small , even an ARIMA model can be adopted , if it satisfies the accuracy criteria of the users . Another approach would be to see if the set of samples is cohesive enough to be learned by using one model or we should keep removing from the samples until we have no more distribution shifts . This will result in removing most of the samples in the series . This conclusion is confirmed the analysis of the occurrence of the distribution shift through the series which we conducted for several datasets , shown in Table 1 . In the analysis , each time series dataset has been divided into quarters and the number of distribution shift samples per quarter was counted . The continuous occurrence of distribution shifts , which is rather uniform , further confirms the difference with LSO .
Table 1 : Placement of the distribution shift samples detected in the training sets per quarter , in % . We can observe that on average each quarter has around 25 % of the detected distribution shift samples of the training set .
Dataset Apple Coke Johnson & Johnson Earthquakes Employment Average
Q1 27.4 35.9 36.5 6.7 25.4 26.4
Q2 30.2 20.3 21.8 26.7 23.6 24.5
Q3 22.6 22.4 18.9 13.3 25.5 20.5
Q4 19.8 21.4 22.8 53.3 25.5 28.6
A more analytical approach would be to model the new process M ( t ) starting from ts , for example yt = wxt + b + w1J1(t)xt , where J1(t ) = 0 , for t < ts , J1(t ) = 1 , for t ≥ ts . The starting position of the level shift at ts for J is determined by using conditional probability of ts being a level shift point , along with the forecasted error at time ts if we use the all the previous samples in order to build a model . It is apparent that in the case of j level shifts detected , the final model has the form of yt = wxt + b + wiJi(t)xt , j
Pi=1
Figure 2 : Ordered squared values of the errors for “ Boing stock market value ” and “ Annual water usage in New York ” time series test sets forecasted using standard polynomial SVM . time t if the sample at time t is not in this range , it can be considered as a ( high ) distribution shift sample . k here is a parameter that needs to be chosen . Formally , distribution shift for xt is calculated as : xt ( xt ∈ [ md − k ∗ sd , md + k ∗ sd ] , xt /∈ [ md − k ∗ sd , md + k ∗ sd ] , true false
( 1 )
As mentioned , by applying Equation 1 and using the intuition from Figure 1 , we expect the set of samples for which the high distribution shift test is true , to substantially overlap with the set of samples which have high prediction error when ( standard ) SVM regression is used . Of importance here , is choice of value for the parameter k . We set d equal to the dataset ’s dimensionality . As k→∞ , no samples will be labelled as distribution shift samples . Our initial experiments indicate a value of k=2 is a good default choice . We will discuss this issue further in the experiments section .
3.2 Outliers vs distribution shift
The set of high prediction error samples might at first be considered as a set of outliers , if we neglect the observation that it is also a set of high distribution shift samples as well . Outlier detection is not an unknown problem in the time series forecasting area [ 24 ] , and the same can be said for discovering distribution changes and shifts [ 27 , 6 ] . However , understanding the nature of the large error in high prediction error samples and determining the correlation with high distribution shift samples is crucial to whether or not we should treat these samples as outliers . Looking at the types of outlier that these samples might be classified as , we can comment on the difference between them :
• Additive Outliers ( AO ) are a type of outliers that affect only single observation [ 27 ] . AO is an outlier in which the observation clearly differs from the surrounding samples . In the case of high distribution shift samples , there exists some difference in the distribution with the preceding samples , but not with the following samples .
• Innovation Outliers ( IO ) are a type of outlier that affect the subsequent samples , starting from the position where the outlier is introduced [ 27 ] . We observed the following samples were similar to the high distribution shift sample , and were not affected by the outlier as they follow similar distribution and did not produce large errors , so we cannot classify them as IO . where Ji(t ) = 0 , for t < ti , Ji(t ) = 1 , for t ≥ ti , ti being the point in time the i th level shift is detected . Even for low values of j this model is likely to become complex and difficult to interpret .
Instead , the intuition behind our approach will be to change the loss function used in SVM regression , to place special emphasis on distribution shift samples and their immediate successors . The distribution shift is not treated as an outlier , but instead , as useful information that we can incorporate into an enhanced SVM regression algorithm . Details are described next .
3.3 SVM Regression time dependent empiri cal loss
Let us consider the class of machine learning methods that address the learning process as finding the minimum of the regularized risk function . Given n training samples ( xi,yi ) ( i=1 , , n ) , xi ∈ Rd is the feature vector of the i–th training sample , d is number of features , and yi ∈ R is the value we are trying to predict , the regularized risk function will have the form of :
L(w∗ ) = argminw φwT w + Remp(w )
( 2 ) with w as the weight vector , φ is a positive parameter that determines the influence of the structural error in Equation 2 , and Remp(w ) = 1 i=1 l(xi , yi , w ) is the loss function with l(xi,yi,w ) as a measure of the distance between a true label yi and the predicted label from the forecasting done using w . The goal is now to minimize the loss function L(w∗ ) , and for Support Vector Regression , this has the form of n Pn subject to
L(w∗ ) =
1 2
|| w ||2 +C n
Xi=1
( ξ+ i + ξ− i )
( 3 )
( hw , xii + b + ǫ + ξ+ ≥ yi hw , xii + b − ǫ − ξ− ≤ yi
( 4 ) with b being the bias term , ξ+ i as slack variables to tolerate infeasible constraints in the optimization problem(for soft margin SVM ) , C is a constant that determines the trade off between the slack variable penalty and the size of the margin , and ǫ being the tolerated level of error . i and ξ−
The Support Vector Regression empirical loss for a sample xi with output yi is l1(xi,yi,w)=max(0 , |wT xi–yi|–ǫ ) , as shown in Table 2 . Each sample contribution to the loss is independent from the other samples contribution , and all the samples are considered to be of same importance in terms of information they possess .
The learning framework we aim to develop should be capable of reducing the difference in error at selected samples . The samples we focus on are samples where a distribution shift is detected , as these samples are expected to be largeerror producing samples . An example is shown in Figure 3 , which displays some large spikes in prediction error ( and these coincide with high distribution shift ) . Instead , we would prefer smoother variation in prediction error across time ( shown by the dotted line ) . Some expected benefits of reducing ( smoothing ) the difference in error for successive predictions are :
• Reduced impact of the distribution shift reflected as a sudden increase of the error models that produce
Figure 3 : Actual price for American Express stock market shares , with the forecasted error ( from SVM ) and preferred forecasted error ( what we would prefer to achieve ) . The peaks in error size occur at samples where a distribution shift can be visually observed(samples 4 6 ) and these errors contribute significantly more to the overall error that the error being produced by the other samples forecasts . volatile errors are not suitable in scenarios where some form of cost might be associated with our prediction , or the presence of an uncertain factor may undermine the model decision .
• Reduced variance of the overall errors Tighter confidence intervals for our predictions provides more confidence in the use of those predictions .
• Avoiding misclassification of samples as outliers A sample producing large error can be easily considered an outlier , so in the case of a distribution shift sample , preventing the removal of these samples ensures we have retained useful information .
A naive strategy to achieve smoothness in prediction error would be to create a loss function where higher penalty is given to samples with high distribution shift . This would be unlikely to work since a distribution shift is behaviour that is abnormal with respect to the preceding time window . Hence the features ( samples from the preceding time window ) used to describe the distribution shift sample will likely not contain any information that could be used to predict the distribution shift .
Instead , our strategy is to create a loss function which minimises the difference in prediction error for each distribution shift sample and its immediately following sample . We know from the preceding discussion , that for standard SVM regression the prediction error for a distribution shift sample is likely to be high and the prediction error for its immediately following sample is likely be low ( since this following sample is not a distribution shift sample ) . By reducing the variation in prediction error between these successive samples , we expect a smoother variation in prediction error as time increases . We call this type of loss time dependent empirical loss .
More formally , for a given sample xi and the previous sample xi−1 , the time dependent loss function
Table 2 : Support Vector Regression and Time Dependent Support Vector Regression empirical loss and its derivative
Support Vector Regression Time Dependent Support Vector Regression
Empirical loss l1(xi,yi,w ) max(0 , |wT xi – yi| – ǫ ) Derivative l′
1(xi,yi,w ) sign(wT xi–yi ) if |wT xi–yi| > ǫ ; otherwise 0 0 for all samples
Time Dependent loss l2(xi,yi,w,xi− 1,yi− 1 ) Derivative l′ 2(xi,yi,w,xi− 1,yi− 1 )
0 for all samples max(0 , |wT xi – yi| – ǫ ) sign(wT xi – yi ) if |wT xi – yi| > ǫ ; otherwise 0 max ( 0 , |(wT xi – yi ) – ( wT xi− 1 – yi− 1)| ǫt ) for distribution shift samples ; otherwise 0 sign((wT xi–yi)–(wT xi− 1–yi− 1 ) ) if |(wT xi–yi)–(wT xi− 1 – yi− 1)| > ǫt for distribution shift samples , otherwise 0 l2(xi , yi , w , xi−1 , yi−1 ) is
( | ( wT xi − yi ) − ( wT xi−1 − yi−1 ) |
0 xi−1is dist . shift otherwise
( 5 ) where it can be seen that if xi−1 is not a distribution shift sample , then no loss is incurred . Otherwise , the loss is equal to the amount of difference between the prediction error for xi and the prediction error for xi−1 . We can further incorporate a tolerable error term ǫt to yield a soft time dependent loss . This is shown in Table 2 . By linearly combining our time dependent loss function with the standard loss function for SVM regression , we formulate a new type of SVM , which we henceforth refer to as TiSe SVM ( time sensitive SVM ) . Observe that if no samples are classified as distribution shift samples , then a TiSE SVM is exactly the same as SVM . Using the definitions from Table 2 , the modified empirical loss and regularized risk function for TiSE SVM have the form
RT iSe emp ( w ) =
1 n n
Xi=1
( l1(xi , yi , w ) + λ ∗ l2(xi , yi , w , xi−1 , yi−1 ) )
L(w∗ ) = argminw φwT w + RT iSe emp ( w )
The λ parameter is a regularization parameter that determines the extent to which we want to minimize the timedependent loss function . Larger values of λ will result in the time dependent loss function having more influence in the overall error . We investigate the effect of this parameter in the experimental section , in order to determine values suitable for our experimental work .
3.4 SVM Regression time dependent loss op timization
The new SVM regression which incorporates the time dependent loss will now have the following form :
LT iSe(w∗ ) =
1 2
||w||2 + C1 n
Xi=1 subject to
( ξ+ i + ξ− i ) + C2 n
Xi=2
( ζ + i + ζ − i ) i ≥ yi i ≤ yi hw , xii + b + ǫ + ξ+ hw , xii + b − ǫ − ξ− ( hw , xii − yi ) − ( hw , xi−1i − yi−1 ) + ǫt + ζ + ( hw , xii − yi ) − ( hw , xi−1i − yi−1 ) − ǫt − ζ − ξ+ i , ξ− i ≥ 0 i , ζ + i , ζ − i ≥ 0 i ≤ 0
 
( 6 )
( 7 )
( 8 )
( 9 )
LP =C1
−
− n n
Xi=1 Xi=1 Xi=1 Xi=2 Xi=2 Xi=2 n n n
− λ
− λ
− λ n n
( β+
Xi=1 Xi=2 Xi,j=1 Xi,j=2 Xi=1,j=2
λ2 n n
− λ
−
−
1 2
1 2
− λ where ǫt is the allowed value of the differences in the time sensitive error , and ζ + and ζ − are slack variables for the time sensitive loss . In order to solve this , we introduce Lagrange multipliers α+ i ≥ 0 for all i , β+ i , β− i ≥ 0 and µ− for i = 2 . . . n : i ≥ 0 , µ+ i ≥ 0 , α− i and η− i i , η+ n n
( ξ+ i + ξ− i ) + C2
( ζ + i + ζ − i ) +
1 2
||w||2
( µ+ i ξ+ i + µ− i ξ− i ) −
α+ i ( ǫ + ξ+ i − yi + hw , xii + b )
Xi=2 Xi=1 n i ( ǫ + ξ− α− i + yi − hw , xii − b )
( η+ i ζ + i + η− i ζ − i )
β+ i ( (hw , xii − yi ) − ( hw , xi−1i − yi−1 ) + ǫt + ζ + )
β− i ( −(hw , xii − yi ) + ( hw , xi−1i − yi−1 ) + ǫt + ζ − )
( 10 )
Differentiating with respect to w , b , ξ+ i and ζ − setting the derivatives to 0 , we will get the dual form : i , ζ + i , ξ− i and n n
LD =
( α+ i − α− i )yi + λ
( β+ i − β− i )yi n
Xi=2 Xi=1 i − β− i )yi−1 − ǫ
( α+ i + α− i ) − λǫt
( β+ i + β− i ) n
Xi=2
( α+ i − α− i )(α+ j − α− j )xixj
( β+ i − β− i )(β+ j − β− j )(xixj − 2xixj−1 + xi−1xj−1 )
( α+ i − α− i )(β+ j − β− j )(xixj − xixj−1 )
( 11 )
This form allows for a Quadratic Programming to be applied in order to find w and b . Also , it can be noticed that if we need to move to a higher dimensionality space x → ψ(x ) , such that a kernel function exists k(xixj ) = ψ(xi)ψ(xj ) , we can do so as LD can be kernelized .
3.5 Quadratic mean for simultaneous loss op timisation
We are proposing simultaneous minimization of the errors for all samples ( loss function l1 ) and differences of errors for selected samples ( loss function l2 ) . It is because of this reason that we are expecting the trade off between these two losses to produce a model with smaller variance in the error , but which might incur an increase in the overall error . For this reason we investigate an alternative method using the quadratic mean , for adding our time dependent loss , aiming to reduce any impact on the overall error .
The quadratic mean has been successfully applied in the case of imbalanced data to simultaneously optimize the loss of two non overlapping groups of samples [ 21 ] . The quadratic mean is a lower bound for the arithmetic mean , and the quadratic mean of two quantities implicitly considers the difference ( variance ) between their values , as well as their sum . Here we use it to combine two different loss functions calculated over all the samples , with the objective of ensuring that both loss functions are minimized while still minimizing the overall loss as well . The final quadratic empirical loss RT iSe−Q ( w ) and regularized risk function will emp have the form of
RT iSe−Q emp
( w ) =s ( Pn i=1 l1(i))2 + λ(Pn
1 + λ i=2 l2(i))2
( 12 )
L(w∗ ) = argminw φwT w + RT iSe−Q emp
( w )
( 13 ) with l1(i)=l1(xi,yi,w ) , l2(i)=l2(xi,yi,w,xi− 1,yi− 1 ) as shown in Table 2 . This new time dependent loss for SVM is a quadratic mean version of our time series SVM , named TiSeQ SVM . Both l1 and l2 are convex functions , and quadratic mean has the feature of producing the resulting function as a convex function .
The quadratic mean time dependent loss function has been derived in Primal form , so for both linear and quadratic mean time dependent loss function versions , a linear optimization method , such as the bundle method [ 26 ] , is an effective way to optimize our new time dependent loss function : by calculating the subgradients of the empirical loss and time dependent loss , we can iteratively update w in a direction that minimizes the quadratic mean loss presented at Equation 12 .
4 . EXPERIMENTS AND RESULTS
Evaluation of the performance in terms of error reduction and error variance reduction of TiSe SVM and TiSe Q SVM was the main target of the experimental work we conducted . To achieve this goal in the experiments both real datasets and synthetic datasets were used . We tested 35 time series datasets obtained from [ 29 ] and [ 10 ] , consisting of stock market values , chemical and physics phenomenon measurements .
We also created a set of 5 different versions of a synthetic dataset with different levels of added distribution shift : 1 distribution shift free dataset , 2 datasets with distribution shift added to random 10 % of all the samples , and 2 more with distribution shift added to 25 % of the samples . The sizes of all the datasets are between 100 and 600 samples , divided on training set and test set of around 10 15 % , resulting in our forecasting task being classified as short to intermediate term forecasting .
The effect of the regularization parameters φ and λ was investigated by dividing the training set of several datasets into initial training and validation sets . We tested with values of λ in the in the range of 0.001 to 0.01 for TiSe SVM and 0.01 rising to 0.2 for TiSe Q ( Figure 4 ) , and with φ in the range of 1E 6 to 1E 3(increasing the range was terminated when no continuous improvements in results were made ) . A greater range of values for λ was chosen for TiSe Q as we wished to investigate the effect of the quadratic mean and the limit to which we can minimize the time dependent loss without affecting the minimization of the empirical loss in a negative way .
Our initial investigation was conducted on several datasets by splitting the training set into initial training set ( the first 95 % of the samples ) and validation set(last 5 % of the samples ) . The results of the ranges of values for φ and λ indicated that values of φ=5E 6 , λ = 0.005 for TiSe SVM and λ = 0.05 for TiSe Q SVM were good defaults for all of the files , and these values were used in all of the experiments . Using different values for each dataset testing would be a better approach when conducting work on individual datasets , but as with any new method , some form of good default values of the parameters , if such exist , needed to be determined .
We adopted the same approach with initial training and validation set and testing over a range of values for determining the best parameters for the baseline methods as well . The final values which produced best performance on the validation sets are presented later in the description of each method accordingly .
Figure 4 : Standard deviation of the forecasted error for different choices of lambda for TiSe and TiSe Q for validation sets of several datasets . Starting with λ=0 , adding the time dependent loss in the minimization process leads to lower standard deviation , but as λ increases , the minimization of the empirical loss is reduced to the extent that the forecasted errors are becoming large and volatile again .
With regard to the value for the parameter k ( which is used to classify whether a sample has undergone distribution shift ) , we use a value of 2 in all our experiments , testing for high distribution shift in the range of md ± 2 ∗ sd . A specific example of varying k is shown in Figure 5 for the “ Walt Disney market values ” dataset .
4.1 Testing and results
Comparison of TiSe SVM(φ = 1 , ǫ=0.001 , k=2 , λ=0.005 , ǫt=1E 8 ) and TiSe Q SVM(φ = 1 , ǫ=0.001 , k=2 , λ=0.05 , ǫt=1E 8 ) with 6 methods was conducted in order to evaluate the effect of the TiSe SVM and TiSe Q SVM methodology : ARIMA(3,0,1 ) , Neural Network ( NN , learning rate=0.3 ,
Table 3 : Root Mean Square Error ( RMSE ) , Error Reduction ( ER , in % ) and Error Standard Deviation Reduction(SDR , in % ) of TiSe and TiSe Q compared to SVM . Both TiSe and TiSe Q achieved significant SDR reduction , though RMSE increased in several cases for TiSe . In bold is the method with the lowest RMSE .
RMSE
ER(in % )
SDR(in % )
ARIMA NN Dataset 24E3 Imports 1.627 Starbucks 1.853 Amazon.com 0.11 British Airways 12.25 Apple Fedex 1.276 Johnson & Johnson 0.556 1986 Chocolate 0.858 Ford 19.25 IBM 7.205 Boeing Auto registrations 106.9 98 Earth ’s rotations Radioactivity 10.79 Simulated sample 5 7.659 1.283 Island Pacific McDonalds 1.854 Simulated sample 4 13.051 Water usage American Express Microsoft Walt Disney AUD/USD exch . Hewlett Packard Colgate Plamolive Earthquakes Tree Intel Coke Temp . anomalies Siemens Ebay Employment Rhine Chemical process Robberies Simulated sample 2 12.2 Airline passengers 120 Simulated sample 3 12.008 Simulated sample 1 11.98 Wilcoxon matched psranked p value
14E4 1.029 1.641 0.129 6.1 1.183 0.369 1842 0.324 6.68 3.934 106.4 16.22 12.17 8.235 1.1 1.045 2.549 47.72 0.65 0.828 1.161 0.018 0.724 0.569 8.02 0.215 0.885 0.335 15.27 2.846 0.583 2.29 194 0.234 84.45 1.61 64.6 2.564 1.607 1E 6 2E 7
79.55 2.253 0.932 3.199 0.0684 1.865 1.745 8.8 0.242 2.67 0.995 19.628 3.039 1.7 3.29 239 0.364 95.17
9.9E 8 5.4E 8
KNN 16E3 1.43 2.66 0.139 16.98 1.745 0.361 1852 0.391 9.97 7.14 104.6 51.31 11.5 8.21 1.39 3.08 6.68 39.52 0.849 0.859 3.35 0.033 0.9 0.635 8 0.203 1.35 0.529 18.35 7.04 0.945 4.28 187 0.295 91.86 6.43 98.99 4.78 6.46 5.2E 7 3.7E 8
SVM 130E3 0.705 0.623 0.126 2.169 0.725 0.357 1701 0.251 7.425 1.235 104.2 15.39 11.499 6.309 0.967 0.662 1.973 18.6 0.709 0.252 0.552 0.0175 0.664 0.519 6.176 0.183 0.932 0.302 14.834 1.861 0.443 0.54 179 0.221 70.92 1.866 58.196 2.054 1.972 0.003 6.8E 7
RBF 129E3 0.855 0.863 0.12 4.558 0.89 0.404 1880 0.27 11.66 2.39 109.2 46.28 10.96 7.17 1.48 0.84 4.1 44.26 0.956 0.375 0.87 0.029 0.94 0.696 7.29 0.182 1.06 0.388 13.98 2.53 0.516 1.56 192 0.28 87 3.74 105.4 4.5 3.9 3.4E 6 7.3E 7
RR 132E3 0.705 0.625 0.129 2.302 0.73 0.352 1697 0.255 7.577 1.274 100.9 14.74 12.015 6.449 0.997 0.668 2.162 19.66 0.679 0.243 0.542 0.0167 0.64 0.504 5.976 0.187 0.912 0.295 14.996 1.831 0.446 0.53 179 0.231 70.06 1.807 49.529 1.965 1.769 0.006 5.5E 8
TiSe 133E3 0.738 0.631 0.132 2.105 0.731 0.341 1544 0.261 7.294 1.285 102.2 14.49 11.698 6.153 0.932 0.649 1.962 18.28 0.697 0.245 0.518 0.0165 0.619 0.605 5.85 0.176 0.906 0.281 13.952 1.768 0.44 0.53 191 0.203 61.97 1.638 49.384 1.581 1.528 base 0.0002
TiSe Q TiSe 130E3 2.39 4.68 0.698 1.28 0.614 4.76 0.124 2.95 2.133 0.83 0.711 0.346 4.48 9.24 1646 3.98 0.242 1.76 7.145 4.05 1.185 99.99 1.91 5.85 14.74 1.73 10.912 2.47 5.978 3.62 0.916 1.96 0.627 1.862 0.56 1.72 17.55 1.69 0.668 2.78 0.237 6.16 0.518 0.0164 5.71 6.78 0.619 16.5 0.483 5.28 5.738 3.83 0.17 2.79 0.856 0.277 6.95 5.95 13.596 5.00 1.704 0.68 0.404 1.85 0.49 161 6.70 8.14 0.197 12.62 62.42 12.22 1.631 15.14 48.081 23.03 1.554 1.446 22.52 Average(in % ) 0.0002 base 3.47
TiSe Q TiSe 0.18 16.45 1.51 0.99 2.67 1.44 5.26 1.59 4.95 1.66 12.69 1.93 3.08 11.51 35.56 3.25 5.19 3.59 6.52 3.77 18.18 4.05 4.07 6.42 4.98 4.22 13.22 5.10 7.93 5.25 21.13 5.27 6.73 5.29 5.63 14.36 6.92 5.65 52.2 5.78 9.76 5.95 15.36 6.16 6.29 13.71 5.88 6.78 21.23 6.94 13.28 7.09 17.46 7.10 6.64 8.15 8.28 45.45 36.08 8.35 16.75 8.44 7.14 8.80 43.14 9.26 10.06 14.84 10.14 10.86 22.65 11.99 18.03 12.59 34.76 17.38 39.05 24.34 26.67 43.28 Average(in % ) 17.23
TiSe Q 13.7 34.55 34.67 5.26 26.43 15.38 25.03 22.69 29.2 14.77 20.59 17.96 13.4 23.92 15.74 17.31 28.66 7.87 29.58 57.44 15.4 35.51 33.7 14.02 28.87 14.79 34.92 25.17 42.86 18.88 38.27 15.04 45.71 45.9 10.64 45.17 31.87 40.33 38.92 42.21
26.81
7.07 momentum=0.2 ) , K Nearest Neighbour(KNN , k=4 ) , Polynomial Support Vector Machines ( SVM , φ = 1 , C=1 , ǫ=0.001 , ξ= ξ ∗=0.001 ) , RBF Support Vector Machines(RBF , γ = 0.01 ) and Robust ( Huber M estimator ) Regression(RR ) . We choose the Root Mean Square Error(RMSE ) as a performance metric to give us an evaluation on how the new timedependent loss function affected the overall error , and we also calculated the percentage Error Reduction ( ER ) and Error Standard Deviation Reduction(SDR ) achieved by TiSe SVM and TiSe Q SVM when compared to the Polynomial SVM :
ER = ( 1 −
RMSE of TiSe/TiSe Q SVM RMSE of Polynomial SVM
) ∗ 100 .
SDR = ( 1 −
Standard Dev . of TiSe/TiSe Q SVM Standard Dev . of Polynomial SVM
) ∗ 100 .
4.2 Prediction loss reduction
Presented in Table 3 are the Root Mean Squared Values for all methods , the Error Reduction(ER ) and Error Standard Deviation Reduction(SDR ) , in percentage , of the TiSe SVM and TiSe Q SVM models compared to SVM . The results are ordered by the Error Reduction of TiSe Q SVM . As the datasets used were from different scientific areas and with values of different magnitude , we used the Wilcoxon Matched Pairs Signed Ranks test , a non parametric test to determine whether the differences between the methods were statistically significant . We can observe that the TiSe SVM method performed significantly better than the ARIMA , Neural Network and K Nearest Neighbour models , and still produced statistically significant better performance than Robust Regression and both SVM Regression models , though in few cases a small increase of the RMSE was registered . However , the results show even better performance for the TiSe Q SVM version of our time dependent SVM , with only
Figure 5 : The error achieved for different values of k , “ Walt Disney stock market series ” . For k =0 , all the samples are considered as distribution shift samples , we minimize differences of errors already very small , yielding no improvement . As k increases , the minimization of differences in errors at selected samples is visible , and for large enough values of k , no samples are included in the time dependent loss , equating to standard SVM . one sample showing an increase in the RMSE value , indicating the quadratic mean was an appropriate choice in the attempt to minimize additional errors without trading of the overall error .
As the purpose of our time dependent loss function is to additionally minimize the large errors at distribution shift samples , an overview of the errors , particularly the variance or standard deviation , can indicate which model produces a better quality error , with more stability and less volatility . We looked into standard deviations of the errors for SVM , TiSe SVM and TiSe Q SVM . We found that the desired goal of producing substantially lower variance error was accomplished to a satisfactory level : on average 17.23 % reduction in the error standard deviation(Table 3 ) for TiSe SVM , and TiSe Q SVM delivered even better performance 26.81 % reduction in the error standard deviation .
Figure 6 : The forecast errors for a ) Tree dataset and b ) Ebay stock market values dataset . We can observe that both TiSe SVM and TiSe Q SVM reduced the peaks in the error , with TiSe Q SVM producing the most significant reduction . of the error . As can be seen from Figure 6 , presenting the forecasts for the Tree dataset and Ebay stock market values dataset , the peak regions have been targeted and additional minimization of the error was achieved . Though TiSe managed to achieve sufficient minimization of the targeted errors , TiSe Q performed better , leading to the conclusion that the quadratic mean was a suitable choice for simultaneous optimization of both overall error and error variance/standard deviation .
5 . CONCLUSION AND FUTURE WORK
Time series forecasting is a challenging prediction problem , and SVM regression is a very popular and widely used method . However , it can be susceptible to large prediction errors in time series when distribution shifts occur frequently during the series .
In this paper , we have proposed a novel time dependent loss function to enhance SVM regression , by minimizing the difference in errors for selected successive pairs of samples , based on consideration of distribution shift characteristics . We combined our time dependent loss function with the loss function for standard SVM regression , and optimized the two objectives simultaneously . Not only we were able to achieve large reductions in the variance of prediction error , but our method also achieved substantial reductions in root mean squared error as well .
Interesting future work could include extending the timedependent loss function to consider the difference in error across sequences of three or more samples ( rather than only two ) , as well as deriving the primal form of the quadratic mean , so that Quadratic Programming can be applied , and possibly allow for Kernel functions to be used for the quadratic mean as well .
6 . REFERENCES
[ 1 ] Z . Abraham and P . N . Tan . An integrated framework for simultaneous classification and regression of time series data . In Proceedings of SIAM SDM , pages 653–664 , Columbus , Ohio , 2010 .
[ 2 ] B . Awartani and V . Corradi . Predicting the volatility of the s&p 500 stock index via garch models : the role of asymmetries . International Journal of Forecasting , 21(1):167–183 , 2005 .
[ 3 ] L . Cao and F . E . H . Tay . Support vector machine with adaptive parameters in financial time series forecasting . IEEE Transactions on Neural Networks , 14(6):1506–1518 , 2003 .
[ 4 ] V . Chandola and R . R . Vatsavai . A gaussian process based online change detection algorithm for monitoring periodic time series . In Proceedings of SDM , 2011 .
[ 5 ] M . W . Chang , C . J . Lin , and R . Weng . Analysis of nonstationary time series using support vector machines . Pattern Recognition with Support Vector Machines , 2388:160–170 , 2002 .
Not only did our models result in keeping the overall error low , but they also successfully targeted the distribution shift sample errors , causing the peaks in forecast errors to reduce significantly , leading to a decrease in the variance
[ 6 ] C . Chen and G . Tiao . Random level shift time series models , arima approximations , and level shift detection . Journal of Business & Economic Statistics , 8(1):83–97 , 1990 .
[ 7 ] H . Cheng , P . N . Tan , C . Potter , and S . Klooster .
[ 20 ] Y . Li , J . Lin , and T . Oates . Visualizing
Detection and characterization of anomalies in multivariate time series . In Proceedings of SDM , 2009 . variable length time series motifs . In SIAM Conference on Data Mining ( SDM ) , 2012 .
[ 8 ] Y . Cheung and L . Xu . Independent component
[ 21 ] W . Liu and S . Chawla . A quadratic mean based ordering in ica time series analysis . Neurocomputing , 41(1 4):145–154 , 2001 . supervised learning model for managing data skewness . In Eleventh SDM , pages 188–198 , 2011 .
[ 9 ] B . R . Dai , J . W . Huang , M . Y . Yeh , and M . S . Chen .
Adaptive clustering for multiple evolving streams . IEEE Transactions on Knowledge & Data Engineering , 18(9):1166–1180 , 2006 .
[ 22 ] X . Liu , X . Wu , H . Wang , R . Zhang , J . Bailey , and K . Ramamohanarao . Mining distribution change in stock order streams . In IEEE ICDE , pages 105–108 , 2010 .
[ 10 ] DataMarket . http://datamarket.com/ , 2011 .
[ 23 ] Y . Liu , M . T . Bahadori , and H . Li . Sparse GEV :
[ 11 ] R . Drossu and Z . Obradovic . Rapid design of neural networks for time series prediction . IEEE Computational Science And Engineering , 3(2 ) , 1996 .
[ 12 ] S . Dzeroski , V . Gjorgjioski , I . Slavkov , and J . Struyf . Analysis of time series data with predictive clustering trees . Knowledge Discovery in Inductive Databases , 4747 , 2007 .
[ 13 ] C . Freudenthaler , S . Rendle and L . Schmidt Thieme . Factorizing markov models for categorical time series prediction . In Proceedings of ICNAAM , pages 405–409 , 2011 .
[ 14 ] A . W . Fu , E . Keogh , L . Y . Lau , C . A .
Ratanamahatana , and R . Wong . Scaling and time warping in time series querying . VLDB Journal , 17(4):899–921 , 2008 .
[ 15 ] S . Greco , M . Ruffolo , and A . Tagarelli . Effective and efficient similarity search in time series . In Proceedings of the 15th ACM CIKM , pages 808 – 809 , 2006 .
[ 16 ] Q . He , K . Chang , and E . P . Lim . Analyzing feature trajectories for event detection . In Proceedings of the 30th Annual ACM SIGIR , pages 207–214 , 2007 .
[ 17 ] K . Huarng and T . H . Yu . The application of neural networks to forecast fuzzy time series . Physica A : Statistical Mechanics and its Applications , 363(2):481–491 , 2006 .
[ 18 ] Y . Kawahara and M . Sugiyama . Change point detection in time series data by direct density ratio estimation . In Proceedings of SDM , 2009 .
[ 19 ] N . Khoa and S . Chawla . Robust outlier detection using commute time and eigenspace embedding . Advances in Knowledge Discovery and Data Mining , 6119:422–434 , 2010 .
Sparse latent space model for multivariate extreme value time series modelling . In Proceedings of ICML , 2012 .
[ 24 ] A . D . McQuarrie and C . L . Tsai . Outlier detections in autoregressive models . Journal of Computational and Graphical Statistics , 12(12):450–471 , 2003 .
[ 25 ] A . Mueen and E . Keogh . Online discovery and maintenance of time series motifs . In Proceedings of the 16th ACM SIGKDD , pages 1089–1098 , 2010 .
[ 26 ] C . H . Teo , S . V . N . Vishwanthan , A . J . Smola , and
Q . V . Le . Bundle methods for regularized risk minimization . Journal of Machine Learning Research , 11:311–365 , 2010 .
[ 27 ] R . S . Tsay . Outliers , level shifts , and variance changes in time series . Journal of forecasting , 7(1):1–20 , 1988 .
[ 28 ] V . S . Tseng , C . H . Chen , P . C . Huang , and T . P . Hong . Cluster based genetic segmentation of time series with dwt . Pattern Recognition Letters , 30(13):1190–1197 , 2009 .
[ 29 ] Wessa . http://wwwwessanet/stocksdatawasp , 2011 .
[ 30 ] Z . Xing , J . Pei , P . S . Yu , and K . Wang . Extracting interpretable features for early classification on time series . In Proceedings of SDM , 2011 .
[ 31 ] H . Yang , L . Chan , and I . King . Support vector machine regression for volatile stock market prediction . Intelligent Data Engineering and Automated Learning IDEAL , 2412:391–396 , 2002 .
