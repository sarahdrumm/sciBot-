Detection of Emerging Space›Time Clusters
Daniel B . Neill , Andrew W . Moore , Maheshkumar Sabhnani , Kenny Daniel
School of Computer Science Carnegie Mellon University
5000 Forbes Avenue Pittsburgh , PA 15213 fneill , awm , sabhnani , kfdg@cscmuedu
ABSTRACT We propose a new class of spatio temporal cluster detection methods designed for the rapid detection of emerging space time clusters . We focus on the motivating application of prospective disease surveillance : detecting space time clusters of disease cases resulting from an emerging disease outbreak . Automatic , real time detection of outbreaks can enable rapid epidemiological response , potentially reducing rates of morbidity and mortality . Building on the prior work on spatial and space time scan statistics , our methods combine time series analysis ( to determine how many cases we expect to observe for a given spatial region in a given time interval ) with new ( cid:147)emerging cluster(cid:148 ) space time scan statistics ( to decide whether an observed increase in cases in a region is significant ) , enabling fast and accurate detection of emerging outbreaks . We evaluate these methods on two types of simulated outbreaks : aerosol release of inhalational anthrax ( eg from a bioterrorist attack ) and FLOO ( (cid:147)Fictional Linear Onset Outbreak(cid:148) ) , injected into actual baseline data ( Emergency Department records and over thecounter drug sales data from Allegheny County ) . We demonstrate that our methods are successful in rapidly detecting both outbreak types while keeping the number of false positives low , and show that our new ( cid:147)emerging cluster(cid:148 ) scan statistics consistently outperform the standard ( cid:147)persistent cluster(cid:148 ) scan statistics approach .
Categories and Subject Descriptors H28 [ Database Management ] : Database Apps Data Mining
General Terms Algorithms
Keywords Cluster detection , space time scan statistics , biosurveillance
1 .
INTRODUCTION
In many data mining applications , we are faced with the task of detecting clusters : regions of space where some quantity is signi . cantly higher than expected . For example , our goal may be to detect clusters of disease cases , which may be indicative of a naturally occurring disease epidemic ( eg infiuenza ) , a bioterrorist attack ( eg anthrax release ) , or an environmental hazard ( eg radiation leak ) . In medical imaging , we may attempt to detect tumors or other hazardous growths ; in neuroscience , we may be interested in detecting spatial patterns of brain activity ( measured by fMRI activation ) that correspond to various cognitive tasks . [ 11 ] discusses many other applications of cluster detection , including mining astronomical data ( identifying clusters of stars or galaxies ) and military reconnaissance ( monitoring strength and activity of enemy forces ) . In all of these applications , we have two main goals : to pinpoint the location , shape , and size of each potential cluster , and to determine ( by statistical signi.cance testing ) whether each potential cluster is likely to be a ( cid:147)true(cid:148 ) cluster or simply a chance occurrence . While most of the prior work on cluster detection is purely spatial in nature ( eg [ 1 , 10 , 6] ) , it is clear from the above list of applications that time is an essential component of most cluster detection problems . We are often interested in clusters which are emerging in time : for example , a growing tumor , an outbreak of disease , or an increase in troop activity . In some applications , the time dimension can be dealt with easily , either by applying some purely spatial cluster detection method at each time step , or by treating time as another spatial dimension and thus applying spatial cluster detection in a d +1 dimensional space ( d spatial dimensions , plus time ) . The disadvantage of the .rst approach is that by only examining one day of data at a time , we may fail to detect more slowly emerging clusters . The disadvantage of the second approach is that we may detect less relevant clusters : those clusters that have persisted for a long time , rather than those that are newly emerging .
To improve on these methods , it is helpful to consider the guiding question , ( cid:147)How is time , as a dimension , different from space?(cid:148 ) We argue that there are three important distinctions which require us to treat spatio temporal cluster detection differently from spatial cluster detection . First , time ( unlike space ) has an important point of reference : the present . We often care only about those space time clusters that are still ( cid:147)active(cid:148 ) at the present time , and in these cases we should use a prospective method ( searching for clusters which end at the present time ) rather than a retrospective method ( searching for clusters which end at or before the present time ) . Second , in the spatial cluster detection framework , we typically assume that we have some baseline denominator data such as a census population ( for epidemiology ) , and that the expected count ( eg number of disease cases ) is proportional to this baseline . In the spatio temporal framework , we are generally not provided with explicit denominator data ; instead , we infer the expected values of the most recent days’ counts from the time series of past counts . Finally , and most interestingly , time has an explicit direction or ( cid:147)ar row,(cid:148 ) proceeding from the past , through the present , to the future . We are generally interested in clusters which emerge over time : for example , a disease epidemic may start with only a few reported cases , then increase in magnitude either gradually or rapidly . One major focus of this paper is developing statistical methods which are more appropriate for detecting such emerging clusters .
We focus here on the motivating application of prospective disease surveillance : detecting space time clusters of disease cases resulting from an emerging disease outbreak . In this application , we perform surveillance on a daily ( or even hourly ) basis , with the goal of .nding emerging epidemics as quickly as possible . By detecting epidemics rapidly and automatically , we hope to allow more rapid epidemiological response ( eg distribution of vaccines , public health warnings ) , potentially reducing the rates of mortality and morbidity from an outbreak . In this application , we are given the number of disease cases of some given type ( eg respiratory ) in each spatial location ( eg zip code ) on each day . More precisely , since we cannot measure the actual number of cases , we instead rely on related observable quantities such as the number of respiratory Emergency Department visits , or sales of over thecounter cough and cold medication , in a given spatial location on a given day . We must then detect those increases that are indicative of emerging outbreaks , as close to the start of the outbreak as possible , while keeping the number of false positives low .
2 . THE MODEL
In the general case , we have data collected at a set of discrete time steps t = 1 : : :T ( where time T represents the present ) at a set of discrete spatial locations si . For each si at each time step t , we are given a count ct i , and our goal is to .nd if there is any region S ( set of locations si ) and time interval ( t = tmin : : :tmax ) for which the counts are signi.cantly higher than expected . Thus we must .rst decide on the set of spatial regions S , and the time intervals tmin : : :tmax , that we are interested in searching . In the scan statistics framework discussed below , we typically search over the set of all spatial regions of some given shape , and variable size . For simplicity , we assume here ( as in [ 18 ] ) that the spatial locations si are aggregated to a uniform , two dimensional , N . N grid G , and we search over the set of all axis aligned rectangular regions S G.1 This allows us to detect both compact and elongated clusters , which is important since disease clusters may be elongated due to dispersal of pathogens by wind , water , or other factors . For prospective surveillance , as is our focus here , we care only about those clusters which are still present at the current time T , and thus we search over time intervals with tmax = T ; if we were performing a retrospective analysis , on the other hand , we would search over all tmax T . We must also choose the size of the ( cid:147)temporal window(cid:148 ) W : we assume that we are only interested in detecting clusters that have emerged within the last W days ( and are still present ) , and thus we search over time intervals tmin : : :T for all T ,W < tmin T . i Po(lt i ) with some unknown parameter lt
In the disease detection framework , we assume that the count ( number of cases ) in each spatial region si on each day t is Poisson distributed , ct i . Thus our method consists of two parts : time series analysis for calculating the expected number of cases ( or ( cid:147)baseline(cid:148 ) ) bt i ] for each spatial region on each day , and space time scan statistics for determining whether the actual numbers of cases ct i in some region S are signi.cantly higher than expected ( given bt i ) in the last W days . The choice of temporal window size W impacts both parts of our method : we calculate the baselines bt i for the ( cid:147)current(cid:148 ) days 1Non axis aligned rectangles can be detected by examining multiple rotations of the data , as in [ 18 ] . i = E[ct
T ,W < t T by time series analysis , based on the ( cid:147)past(cid:148 ) days 1 t T ,W , and then determine whether there are any emerging space time clusters in the last W days . In addition to the temporal window size , three other considerations may impact the performance of our method : the type of space time scan statistic used , the level on which the data is aggregated , and the method of time series analysis . We discuss these considerations in detail below .
3 . SPACE›TIME SCAN STATISTICS
One of the most important statistical tools for cluster detection is the spatial scan statistic [ 15 , 10 , 11 ] . This method searches over a given set of spatial regions , .nding those regions which maximize a likelihood ratio statistic and thus are most likely to be generated under the alternative hypothesis of clustering rather than under the null hypothesis of no clustering . Randomization testing is used to compute the p value of each detected region , correctly adjusting for multiple hypothesis testing , and thus we can both identify potential clusters and determine whether they are signicant The standard spatial scan algorithm [ 11 ] has two primary drawbacks : it is extremely computationally intensive , making it infeasible to use for massive real world datasets , and only compact ( circular ) clusters are detected . In prior work , we have addressed both of these problems by proposing the ( cid:147)fast spatial scan(cid:148 ) algorithm [ 18 , 19 ] , which can rapidly search for elongated clusters ( hyper rectangles ) in large multi dimensional datasets . As noted above , we choose here to search over rectangular regions , using a space time variant of the fast spatial scan as necessary to speed up our search .
In its original formulation [ 15 , 10 ] , the spatial scan statistic does not take time into account . Instead , it assumes a single count ci ( eg number of disease cases ) for each spatial location si , as well as a given baseline bi ( eg at risk population ) . Then the goal of the scan statistic is to .nd regions where the rate ( or expected ratio of count to baseline ) is higher inside the region than outside . The statistic used for this is the likelihood ratio D(S ) = Pr(Data j H1(S ) ) , where Pr(Data j H0 ) the null hypothesis H0 represents no clustering , and each alternative hypothesis H1(S ) represents clustering in some region S . More precisely , under H0 we assume a uniform disease rate qall , such that ci Po(qallbi ) for all locations si . Under H1(S ) , we assume that ci Po(qinbi ) for all locations si 2 S , and ci Po(qoutbi ) for all locations si 2 G ,S , for some constants qin > qout . From this , we can derive an expression for D(S ) using the maximum likelihood estiBall,Call , mates of qin , qout , and qall : D(S ) = Cin if Cin Bout , and D(S ) = 1 otherwise , where ( cid:147)in,(cid:148 ) ( cid:147)out,(cid:148 ) and ( cid:147)all(cid:148 ) Bin are the sums of counts and baselines for S , G , S , and G respectively . Then the most signi.cant spatial region S is the one with the highest score D(S ) ; we denote this region by Sfi , and its score by Dfi . Once we have found this region by searching over the space of possible regions S , we must still determine its statistical significance , ie whether Sfi is a signi.cant spatial cluster . To adjust correctly for multiple hypothesis testing , we .nd the region ’s pvalue by randomization : we randomly create a large number R of replica grids under the null hypothesis ci Po(qallbi ) , and .nd the highest scoring region and its score for each replica grid . Then the p value can be computed as Rbeat +1 R+1 , where Rbeat is the number of replica grids with Dfi higher than the original grid . If this p value is less than some constant a ( here a = :05 ) , we can conclude that the discovered region is unlikely to have occurred by chance , and is thus a signi.cant spatial cluster ; we can then search for secondary clusters . Otherwise , no signi.cant clusters exist .
BoutCout Call
BinCin Cout
> Cout
The formulation of the scan statistic that we use here is somewhat different , because we are interested not in detecting regions with higher rates inside than outside , but regions with higher counts than expected . Let us assume that baselines bi represent the expected values of each count ci ; we discuss how to obtain these baselines below . Then we wish to test the null hypothesis H0 : all counts ci are generated by ci Po(bi ) , against the set of alternative hypotheses H1(S ) : for spatial locations si 2 S , all counts ci are generated by ci Po(qbi ) , for some constant q > 1 , and for all other spatial locations si 2 G , S , all counts ci Po(bi ) . We then compute the likelihood ratio : Pr(Data j H1(S ) ) Pr(Data j H0 ) maxq1 ( cid:213)si2S Pr(ci Po(qbi ) )
D(S ) =
=
= maxq1 ( cid:213)si2S(qbi)cie,qbi
( cid:213)si2S bci i e,bi
=
( cid:213)si2S Pr(ci Po(bi ) ) maxq1 qCine,qBin e,Bin
Bin , we obBinCin eBin,Cin , if Cin > Bin , and D(S ) = 1 otherwise .
Using the maximum likelihood estimate q = max1 ; Cin tain D(S ) = Cin As before , we search over all spatial regions S to .nd the highest scoring region Sfi . Then the statistical signi.cance ( p value ) of Sfi can be found by randomization testing as before , where the replica grids are generated under the null hypothesis ci Po(bi ) . 3.1 The 1›day space›time scan statistic
To extend this spatial scan statistic to the prospective space time case , the simplest method is to use a 1 day temporal window ( W = 1 ) , searching for clusters on only the present day t = T . Thus we wish to know whether there is any spatial region S with higher than expected counts on day T , given the actual counts cT i and expected counts bT for each spatial location si . To do so , we compare the i null hypothesis H0 : cT i Po(bT i ) for all si , to the set of alternative i Po(qbT hypotheses H1(S ) : cT i ) for all si 2 S , for some constant q > 1 , and cT i Po(bT i ) elsewhere . Thus the statistic takes the same form as the purely spatial scan statistic , and we obtain : D(S ) = BC C eB,C , if C > B , and D(S ) = 1 otherwise , where C = ( cid:229)si2S cT i and B = ( cid:229)si2S bT i denote the total count and total baseline of region S on time step T . Again , we search over all spatial regions S to .nd the highest scoring region Sfi and its score Dfi . To compute the p value , we perform randomization testing as before , where each replica grid has counts cT i ) and all other counts ct 3.2 Multi›day space›time scan statistics i ( t 6= T ) copied from the original grid . i generated from Po(bT
While the 1 day prospective space time scan statistic is very useful for detecting rapidly growing outbreaks , it may have dif.culty detecting more slowly growing outbreaks , as noted above . For the multi day prospective space time scan statistics , we have some temporal window W > 1 , and must determine whether any outbreaks have emerged within the most recent W days ( and are still present ) . In other words , we wish to .nd whether there is any spatial region S with higher than expected counts on days tmin : : :T , for some T , W < tmin T . To do so , we .rst compute the expected counts bt i for each spatial location si on each day T , W < t T ; we discuss how the baselines bt i are calculated in the following section . We then search over all spatial regions S G , and all allowable values of tmin , .nding the highest value of the spatio temporal score function D(S;tmin ) . The calculation of this function depends on whether we are searching for ( cid:147)persistent(cid:148 ) or ( cid:147)emerging(cid:148 ) clusters , as we discuss below . In any case , once we have found the highest scoring region ( Sfi;tfi min ) and its score Dfi , we can compute the p value of this region by performing randomization testing as before , where each replica grid i and the actual counts ct has counts ct other counts ct i generated from Po(bt i copied from the original grid . i ) for T , W < t T , and all
Now we must consider how to compute the function D(S;tmin ) . The standard method for computing the space time scan statistic , proposed for the retrospective case by [ 13 ] and for the prospective case by [ 12 ] , builds on the Kulldorff spatial scan statistic [ 10 ] given above . As in the purely spatial scan , this method assumes that baselines bt i are given in advance ( eg population in each location for each time interval ) , and that counts ct i are generated from Poisson distributions with means proportional to bt i . Then the goal is to .nd space time clusters ( S;tmin ) where the rate ( ratio of count to baseline ) is signi.cantly higher inside the region than outside . As in the purely spatial case , this can be adapted to our framework , in which the goal is to .nd space time clusters where the observed counts i are higher than the expected counts bt ct i . For the ( cid:147)persistent cluster(cid:148 ) case , we maintain the other major assumption of the standard model : that the multiplicative increase in counts ( (cid:147)relative risk(cid:148 ) ) in an affected region remains constant through the temporal duration of the cluster . For the ( cid:147)emerging cluster(cid:148 ) case , we instead make the assumption that the relative risk increases monotonically through the cluster ’s duration . It is also possible to assume a parametric form for the increase in relative risk over time ( eg exponential or linear increase ) , and we consider such statistics in [ 17 ] . 3.3 Persistent clusters
The test for persistent clusters assumes that the relative risk of a cluster remains constant over time ; as a result , the score function is very similar to the 1 day statistic , with sums taken over the entire duration of a cluster rather than only a single day .
As noted above , we must search over all spatial regions S and all values of tmin ( where T ,W < tmin T ) , .nding the maximum score D(S;tmin ) . For a given region S and value tmin , we compare the null hypothesis H0 : ct i ) for all spatial locations si and all T ,W < t T , to the alternative hypothesis H1(S;tmin ) : ct i Po(qbt i ) for si 2 S and t = tmin : : :T , for some constant q > 1 , and ct i Po(bt i ) elsewhere . Thus we can compute the likelihood ratio : i e,qbt i Po(bt maxq1 ( cid:213)Pr(ct i Po(qbt i ) ) i
= maxq1 ( cid:213)(qbt i)ct
( cid:213)(bt i)ct i e,bt i
D(S;tmin ) =
( cid:213)Pr(ct i Po(bt i ) ) e,B qCe,qB i and total baseline ( cid:229)si2S ( cid:229)tmintT bt where the products are taken over si 2 S and tmin t T . This , where C and B are the total count simpli.es to maxq1 ( cid:229)si2S ( cid:229)tmintT ct i respectively . B , Finally , using the maximum likelihood estimate q = max1 ; C BC we obtain D(S;tmin ) = C eB,C if C > B , and D = 1 otherwise . 3.4 Emerging clusters
While the space time scan statistic for persistent clusters assumes that relative risk of a cluster remains constant through its duration , this is typically not true in disease surveillance . When a disease outbreak occurs , the disease rate will typically rise continually over the duration of the outbreak until the outbreak reaches its peak , at which point it will level off or decrease . Our main goal in the epidemiological domain is to detect emerging outbreaks ( ie those that have not yet reached their peak ) , so we focus on .nding clusters where the relative risk is monotonically increasing over the duration of the cluster . Again , we must search over all spatial regions S and all values of tmin ( where T ,W < tmin T ) , .nding the maximum score D(S;tmin ) . For a given region S and value tmin , we compare the null hypothesis H0 : ct i ) for all spatial locations si and all T ,W < t T , to the alternative hypothesis H1(S;tmin ) : i Po(qtbt ct i ) for si 2 S and t = tmin : : :T , for some monotoni i Po(bt cally increasing sequence of constants 1 qtmin : : : qT , and i Po(bt ct i ) elsewhere . Thus we can compute the likelihood ratio :
D(S;tmin ) = max1qtmin :::qT ( cid:213)Pr(ct i Po(bt
( cid:213)Pr(ct i Po(qtbt i ) ) i ) )
= max1qtmin :::qT ( cid:213)(qtbt i)ct i e,qtbt i
( cid:213)(bt i)ct i e,bt i e,B t e,qt Bt where the products are taken over si 2 S and tmin t T . This simpli.es to , where Ct and Bt are the total count ( cid:229)si2S ct i on day t , and B is the total baseline ( cid:229)si2S ( cid:229)tmintT bt max1qtmin :::qT ( cid:213)qCt i and the total baseline ( cid:229)si2S bt
Now , we must maximize the numerator subject to the constraints on the qt . To do so , let E = E1 : : :Ep be a partitioning of tmin : : :T into sets of consecutive integers , such that for all t1;t2 2 E j , qt1 = qt2 = Q j , and for all E j1 and E j2 , where j1 < j2 , Q j1 < Q j2 . In other words , the E j de.ne a partitioning of tmin : : :T into time periods where the relative risk is constant . Note that the qt are uniquely de.ned by the partitions E j and the rates Q j . We can then write : i as above .
D(S;tmin ) = maxE1:::Ep maxQ1:::Qp ( cid:213)E j,Q j Cj e,Q jB j e,B where B j = ( cid:229)si2S ( cid:229)t2E j bt i and C j = ( cid:229)si2S ( cid:229)t2E j ct i .
In [ 17 ] , we prove that this expression is maximized when Q j =
Cj B j for all j . This allows us to simplify the expression to :
D(S;tmin ) = eB,C max
E1:::Ep(cid:213 )
E j
B jCj Cj
Then the question is how to choose the optimal partitioning E = fE jg , and in [ 17 ] we present the following algorithm . This method uses a stack data structure , where each element of the stack represents a partition E j by a 5 tuple ,tstart ;tend;Cj;B j;Q j . The algorithm starts by pushingT;T;CT ;BT ;max1 ; CT BT onto the stack . Then for each t , from T , 1 down to tmin , we do the following : temp = ( t , t , C_t , B_t , max(1 , C_t / B_t ) ) while ( temp.Q >= stacktopQ ) temp2 = stack.pop temp = ( temp.start , temp2.end , tempC+temp2C , temp.B + temp2.B , max(1 , ( tempC+temp2C ) / ( tempB+temp2B) ) ) stack.push(temp )
As we prove in [ 17 ] , this ( cid:147)step method(cid:148 ) produces the unique optimal partitioning E and rates Q , and thus the values of qt that maximize the score subject to the monotonicity constraints above .
4 .
INFERRING BASELINE VALUES
In order to infer the baselines bt i for the ( cid:147)current(cid:148 ) days T ,W < t T , we must consider two distinct questions : on what level to aggregate the data for time series analysis , and what method of time series analysis to use . We consider three different levels of spatial aggregation , which we term ( cid:147)building aggregated time series(cid:148 ) ( BATS ) , ( cid:147)cell aggregated time series(cid:148 ) ( CATS ) , and ( cid:147)regionaggregated time series(cid:148 ) ( RATS ) respectively . For the BATS method , we consider the time series for each spatial location independently ; for example , we may have a separate time series for each store or hospital , or counts may be already aggregated at some level ( eg zip code ) . For each of these locations si , we independently compute the baselines bt i ( T ,W < t T ) from the past counts ct i ( 1 t T ,W ) , using one of the time series analysis methods below . Then whenever we calculate D(S;tmin ) for a region , we use i and counts ct the baselines bt i for each location in the region . The CATS method .rst computes the aggregate count ct i for each cell of the grid si 2 G on each day t , by summing counts of all spatial locations in that cell . Then the baselines bt i are computed independently for each grid cell si 2 G , and whenever we calculate D(S;tmin ) for a region , it is the cell counts and baselines that we use to compute the score . Finally , the RATS method , whenever it searches a region S , aggregates the time series of counts Ct ( S ) ( cid:147)on the fiy(cid:148 ) by summing counts of all spatial locations in that region , computes baselines Bt ( S ) for the ( cid:147)current(cid:148 ) days T ,W < t T , and applies the score function D(S;tmin ) to the resulting counts and baselines .
Randomization testing must also be performed differently for each of the three levels of aggregation . To generate a replica grid for BATS , we independently draw a count for each spatial location si for each current day t , using its baseline bt i . To generate a replica grid for CATS , we independently draw a count for each cell of the grid si 2 G for each current day t , using the cell baseline bt i . Finally , randomization testing for RATS is somewhat more dif.cult than for the other methods , since we must produce cell counts from a correlated distribution . Various sampling methods can be used to do this , but this makes randomization extremely computationally expensive ; see [ 17 ] for more details .
4.1 Time series analysis methods i = E[ct
For a given location , cell , or region si , our goal is to estimate the expected values of the ( cid:147)current(cid:148 ) counts , bt i ] , T ,W < t T , from the time series of ( cid:147)past(cid:148 ) counts ct i , 1 t T ,W . A variety of methods are possible , depending on how we wish to deal with three questions : day of week effects , seasonal trends , and bias . Many epidemiological quantities ( for example , OTC drug sales ) exhibit strong day of week and seasonal trends . Here we consider three methods of dealing with day of week effects : we can ignore them , stratify by day of week ( ie perform a separate time series calculation for each day of the week ) , or adjust for day of week . To adjust for day of week , we assume that the observed count on a given day is the product of an ( cid:147)actual(cid:148 ) count and a constant dependent on the day of week . Thus we compute the proportion of counts bi on each day of the week ( i = 1 : : :7 ) . Then we transform each past day ’s observed count by dividing by 7bi , do a single time series calculation on the transformed past counts to predict the transformed current counts , and .nally multiply by 7bi to obtain the predicted count for each current day . By adjusting instead of stratifying , more data is used to predict each day ’s count ( potentially reducing the variance of our estimates ) , but the success of this approach depends on the assumption of a constant and multiplicative day of week effect .
We also consider three methods of adjusting for seasonal trends : to use only the most recent counts ( eg the past four weeks ) for prediction , to use all counts but weight the most recent counts more ( as is done in our exponentially weighted moving average and exponentially weighted linear regression methods ) , and to use regression techniques to extrapolate seasonal trends to the current data . Finally , we consider both methods which attempt to give an unbiased estimate of the current count ( eg mean of past counts ) , and methods which attempt to give a positively biased estimate of the current count ( eg maximum of past counts ) . As we show , the unbiased methods typically have better detection power , but the biased methods have the advantage of reducing the number of false positives to a more manageable level ( see Section 75 )
Here we consider a total of 10 time series analysis methods , including ( cid:147)all max(cid:148 ) ( bt i = maximum count of last 28 days ) , ( cid:147)all mean(cid:148 ) ( bt i = maximum count of same day of week , 1 4 weeks ago ) , ( cid:147)strat mean(cid:148 ) ( bt i = mean count of same day of week , 1 4 weeks ago ) , two exponen i = mean count of last 28 days ) , ( cid:147)strat max(cid:148 ) ( bt i ( cid:229)i ct i ( cid:229)t ( cid:229)i ct i tially weighted moving average methods ( (cid:147)strat EWMA(cid:148 ) strati.ed by day of week , ( cid:147)adj EWMA(cid:148 ) adjusted for day of week ) , and two exponentially weighted linear regression methods ( (cid:147)strat EWLR(cid:148 ) strati.ed by day of week , ( cid:147)adj EWLR(cid:148 ) adjusted for day of week ) . Our .nal two methods are inspired by the recent work of Kulldorff et al . [ 14 ] on the ( cid:147)space time permutation scan statistic,(cid:148 ) so we call them ( cid:147)strat Kull(cid:148 ) ( strati.ed by day of week ) and ( cid:147)all Kull(cid:148 ) ( ignoring day of week effects ) . In this framework , the baseline bt i is computed as ( cid:229)t ct , ie space and time are assumed to be independent , so the expected fraction of all cases occurring in location si on day t can be computed as the product of the fraction of all cases occurring in location si and the fraction of all cases occurring on day t . The problem with this method is that the current day ’s counts are used for prediction of the current day ’s expected counts . As a result , if there is a cluster on the current day , the baselines for the current day will also be higher , reducing our power to detect the cluster . Nevertheless , the strat Kull and all Kull methods do extremely well when detecting localized clusters ( where the increase in counts is noticeable for a small region , but the region is small enough that the total count for the day is essentially unaffected ) .
We also note an interesting interaction between the level of aggregation and the method of time series analysis . If the expected counts bt i ( T ,W < t T ) are calculated as a linear combination of past counts ct i ( 1 t T ,W ) , and the weights for each past day t are constant from location to location , then we will calculate the same baselines ( and thus , the same scores ) regardless of whether we aggregate on the building , cell , or region level . This turns our to be true for most of the methods we investigate : all mean , strat mean , strat EWMA , strat EWLR , all Kull , and strat Kull . On the other hand , if we choose different weights for each location ( as is the case when we adjust for day of week , as in adj EWMA and adj EWLR ) , we will calculate different baselines ( and thus , different scores ) depending on our level of aggregation . Finally , we have very different results for the ( cid:147)max(cid:148 ) methods ( strat max and all max ) depending on the level of aggregation , because the maximum is not a linear operator . Since the sum of the maximum counts of each location ( (cid:229)si2S maxt ct i ) is higher than the maximum of the sum ( maxt ( cid:229)si2S ct i ) , we always expect BATS to predict the highest baselines , and RATS to predict the lowest baselines . For the results given below , we only distinguish between BATS , CATS , and RATS aggregation for those methods where the distinction is relevant ( all max , strat max , adj EWMA , and adj EWLR ) .
5 . RELATED WORK
In general , spatio temporal methods can be divided into three classes : spatial modeling techniques such as ( cid:147)disease mapping,(cid:148 ) where observed values are spatially smoothed to infer the distribution of values in space time [ 4 , 3 ] ; tests for a general tendency of the data to cluster [ 9 , 16 ] ; and tests which attempt to infer the location of clusters [ 13 , 12 , 14 ] . We focus on the latter class of methods , since these are the only methods which allow us to both answer whether any signi.cant clusters exist , and if so , identify these clusters . Three spatio temporal cluster detection approaches have been proposed by Kulldorff et al . : the retrospective and prospective space time scan statistics [ 13 , 12 ] , and the space time permutation scan statistic [ 14 ] . The .rst two approaches attempt to detect persistent clusters , assuming that baselines are given based on census population estimates . The retrospective statistic searches over all space time intervals , while the prospective statistic searches over those intervals ending at the present time . As noted above , these formulations make sense for the case of explicitly given denominator data , and counts proportional to these baselines ( eg we expect a population of 10000 to have twice as many cases as a population of 5000 , but do not know how many cases we expect to see ) . They are not appropriate for the case where we infer the expected values of counts from the time series of past counts ( eg based on past data , we expect to see 40 cases in the .rst population and 15 cases in the second ) . Even if accurate denominator data is provided , the retrospective and prospective statistics may pick up purely spatial clusters resulting from spatial variation in the underlying rate ( eg different parts of the country have different disease rates ) , or purely temporal clusters based on temporal fiuctuations in rate ( seasonal effects or long term trends ) , and thus the detected clusters tend to be less useful for prospective detection of emerging outbreaks .
The recently proposed ( cid:147)space time permutation scan statistic(cid:148 ) [ 14 ] attempts to remedy these problems ; like the present work , it allows baseline data to be inferred from the time series of past counts . As noted above , baselines are calculated by assuming that cases are independently distributed in space and time , and a variant of the test for persistent clusters is used ( searching for regions with higher rate inside than outside ) . Then randomization testing is done by permuting the dates and locations of cases . This method focuses on detecting space time interaction , and explicitly avoids detecting purely spatial or purely temporal clusters . The disadvantages of this are twofold . First , it loses power to detect spatially large clusters , because ( as noted above ) the current day ’s counts are used to estimate what the current day ’s counts should be . In the most extreme case , a spatially uniform multiplicative increase in disease rate over the entire search area would be completely ignored by this method , and thus it is unsafe to use for surveillance except in combination with other methods . The second disadvantage is that if the count decreases in one spatial region and remains constant elsewhere , this is detected as a spatio temporal cluster . This results in false positives in cases where stores in one area are closed and stores in a different area remain open : the open stores are fiagged as a cluster even if their counts have actually decreased .
Several other spatio temporal cluster detection methods have also been proposed . Iyengar [ 8 ] searches over ( cid:147)truncated rectangular pyramid(cid:148 ) shapes in space time , thus allowing detection of clusters which move and grow or shrink over time ; the disadvantage is that this much larger set of possible space time regions can only be searched approximately . Assuncao et al [ 2 ] assume a spatiotemporal Poisson point process : the exact location of each point in time and space is given , rather than aggregating points to discrete locations and intervals . A test statistic similar to the space time permutation scan statistic is derived , assuming a Poisson intensity function that is separable in space and time .
6 . COMPUTATIONAL CONSIDERATIONS We begin by making two important observations . First , for any of the time series analysis methods given above , the baselines bt i ( T , W < t T ) can be inferred from the past counts ct i ( 1 t T ,W ) in O(T ) . Second , we can compute the score function D(S;tmin ) , for a given spatial region S and for all T ,W < tmin T , in total time O(W ) , regardless of whether the persistent or emerging scan statistic is used . This is obvious for the persistent statistic since we can simply proceed backward in time , adding the cumulative count Ct and cumulative baseline Bt for each day t , and recomputing the score . ( We can accumulate these counts and baselines in O(W ) by using the ( cid:147)cumulative counts(cid:148 ) trick discussed in [ 18 ] for each of the W current days . ) The O(W ) complexity is less obvious for the emerging statistic , since adding any new day t may result in up to O(W ) pops from the stack . But each day is pushed onto the stack at most once , and thus the total number of pops for the W days is at most W , giving total complexity O(W ) , not O(W 2 ) .
For the BATS method , our computation may be divided into three steps : .rst , we compute baselines for each spatial location , requiring total time O(NsT ) , where Ns is the number of locations . Second , we aggregate ( cid:147)current(cid:148 ) store baselines and counts to the grid , requiring time O(N2W ) where N is the grid size . Third , we search over all spatio temporal regions ( S;tmin ) : for each such region , we must compute the aggregate counts and baselines , and apply the score function D . As noted above , we can do this in O(W ) per region , but since a naive search requires us to examine all O(N4 ) gridded rectangular regions , the total search time is O(N4W ) , bringing the total complexity to O(NsT + N4W ) . For CATS , we .rst aggregate all store baselines and counts to the grid , requiring time O(NsT + N2T ) . Then we calculate baselines for each of the N2 grid cells , requiring total time O(N2T ) . Finally , we search over all spatio temporal regions ; as in BATS , this requires time O(N4W ) , bringing the total complexity to O(NsT + N2T + N4W ) . For RATS , we .rst aggregate all store baselines and counts to the grid ( as in CATS ) , requiring time O(NsT + N2T ) . Then for each of the N4 regions we search , we must calculate the baselines for ( cid:147)current(cid:148 ) days on the fiy , requiring time O(T ) , and compute the score function using the counts and baselines for current days , requiring time O(W ) . Thus the total complexity is O(NsT + N4T ) . For large grid sizes N , the O(N4 ) complexity of searching over all spatial regions makes a naive search over all such regions computationally infeasible . However , we can apply the fast spatial scan of [ 18 , 19 ] , allowing us to .nd the highest scoring region and its pvalue while searching only a small fraction of possible regions . In the purely spatial case , the fast spatial scan works by using a multiresolution , branch and bound search to prune sets of regions that can be proven to have lower scores than the best region score found so far . We can easily extend this method to the space time case : given a spatial region S , we must upper bound the scores D(S0;tmin ) for all regions S0 S and T ,W < tmin T . The simplest way of doing so is to compute separate bounds on baselines and counts of S0 for each time step t , using the methods given in [ 18 ] , then use these bounds to compute an upper bound on the score . It might also be possible to achieve tighter bounds ( and thus , better pruning ) by enforcing consistency constraints across multiple days , ie ensuring that S0 has the same spatial dimensions on each time step .
7 . RESULTS
We evaluated our methods on two types of simulated outbreaks , injected into real Emergency Department and over the counter drug sale data for Allegheny County , PA.2 First , we considered aerosol releases of inhalational anthrax ( eg from a bioterrorist attack ) , produced by the BARD ( (cid:147)Bayesian Aerosol Release Detector(cid:148 ) ) simulator of Hogan et al . [ 7 ] . The BARD simulator takes in a ( cid:147)baseline dataset(cid:148 ) consisting of one year ’s worth of Emergency Department records , and the quantity of anthrax released . It then produces multiple simulated attacks , each with a random attack location and environmental conditions ( eg wind direction ) , and uses a Bayesian network model to determine the number of spores inhaled by members of the affected population , the resulting number and severity of anthrax cases , and the resulting number of respiratory Emergency Department cases on each day of the outbreak in each affected zip code . Each simulated outbreak can then be injected into the baseline ED dataset , and our methods’ detection performance can be evaluated using the testing framework below .
2All data was aggregated to the zip code level to ensure anonymity , giving 88 distinct spatial locations ( zip code centroids ) . The ED data contained an average of 40 respiratory cases/day , while the OTC data averaged 4000 sales of cough and cold medication/day .
Second , we considered a ( cid:147)Fictional Linear Onset Outbreak(cid:148 ) ( or ( cid:147)FLOO(cid:148) ) , with a linear increase in cases over the duration of the outbreak . A FLOO outbreak is a simple simulated outbreak de.ned by a set of zip codes , a duration Tf loo , and a value D . The FLOO simulator then produces an outbreak lasting Tf loo days , with tD respiratory cases in each of the zip codes on day t , 0 < t Tf loo=2 , and Tf looD=2 cases on day t , Tf loo=2 t < Tf loo . Thus we have an outbreak where the number of cases ramps up linearly for some period of time , then levels off . While this is clearly a less realistic model than the BARD simulated anthrax attack , it does have several advantages . It allows us to precisely control the parameters of the outbreak curve ( number of cases on each day ) , allowing us to test the effects of these parameters on our methods’ detection performance . Also , it allows us to perform experiments using overthe counter drug sale data as well as Emergency Department data , while the BARD simulator only simulates ED cases .
We now discuss our basic semi synthetic testing framework , followed by a discussion of the performance of our methods on each of the three main experiments ( anthrax outbreaks in ED data , FLOO outbreaks in ED data , and FLOO outbreaks in OTC data ) .
7.1 Semi›synthetic testing
Our basic goal in the semi synthetic testing framework is to evaluate detection performance : what proportion of outbreaks a method can detect , and how long it takes to detect these outbreaks . Clearly these numbers are dependent on how often the method is allowed to ( cid:147)sound the alarm,(cid:148 ) and thus we have a tradeoff between sensitivity ( ie ability to detect true outbreaks ) and detection time on the one hand , and speci.city ( ie frequency of false positives ) on the other . More precisely , our semi synthetic framework consists of the following components . First , given one year of baseline data ( assumed to contain no outbreaks ) , we run the space time scan statistic for each day of the last nine months of the year ( the .rst three months are used to provide baseline data only ; no outbreaks in this time are considered ) . We thus obtain the highest scoring region Sfi , and its score Dfi = D(Sfi ) , for each of these days . Then for each ( cid:147)attack(cid:148 ) that we wish to test , we do the following . First , we inject that outbreak into the data , incrementing the number of cases as above . Then for each day of the attack , we compute the highest scoring relevant region Sfi and its score Dfi , where a relevant region is de.ned as one which contains the centroid of all the cases injected that day . The reason that we only allow the algorithm to search over relevant regions is because we do not want to reward it for triggering an alarm and pinpointing a region which has nothing to do with the outbreak . We then compute , for each day t = 0 : : :Toutbreak ( where Toutbreak is the length of the attack ) , the fraction of baseline days ( excluding the attacked interval ) with scores higher than the maximum score of all relevant regions on days 0 to t . This is the proportion of false positives we would have to accept in order to have detected that outbreak by day t . By repeating this procedure on a number of outbreaks , we can obtain summary statistics about the detection performance of each method : we compute its averaged AMOC curve [ 5 ] ( average proportion of false positives needed for detection on day t of an outbreak ) , and for a .xed level of false positives ( eg 1 false positive/month ) , we compute the proportion of outbreaks detected and the average number of days to detection . Note that this basic framework does not perform randomization testing , but only compares scores of attack and baseline days . There are several disadvantages to this method : .rst , since the baselines bt i for each day are different , the distribution of scores for each day ’s replica grids will be different , and thus the highest scoring regions may not correspond exactly to those with the lowest p values . A second disadvantage is that it does not tell us how to perform cal ibration : setting threshold p values in order to obtain a .xed false positive rate in real data . This is discussed in more detail below .
We tested a total of 150 methods : each combination of the three aggregation levels ( BATS , CATS , RATS ) , .ve space time scan statistics ( 1 day , 3 day emerging , 3 day persistent , 7 day emerging , 7day persistent ) and the ten methods of time series analysis listed above . We compared these methods against two simple ( cid:147)straw men(cid:148 ) : a purely spatial scan statistic ( assuming uniform underlying at risk population , and thus setting the baseline of a region proportional to its area ) , and a purely temporal scan statistic ( analyzing the single time series formed by aggregating together all spatial locations , using 1 day all mean ) . Since both the ED and OTC datasets were relatively small in spatial extent ( containing only records from Allegheny County ) , we used a small grid ( N = 16 , maximum cluster size = 8 ) , and thus it was not necessary to use the fast spatial scan . For larger datasets , such as nationwide OTC data , a much larger grid size ( eg N = 256 ) is necessary to achieve adequate spatial resolution , and thus the fast spatial scan will be an important component of our nationwide disease surveillance system .
For each outbreak type , we compared the detection performance of our methods to the two straw men , and also determined which of our methods was most successful ( Table 1 ) . Performance was evaluated based on detection rate ( proportion of outbreaks detected ) at 1 false positive/month , with ties broken based on average number of days to detect ; we list both the performance of our ( cid:147)best(cid:148 ) spatio temporal method according to this criterion , as well as a representative ( cid:147)median(cid:148 ) method ( ie the 75th best method out of 150 ) . We compare the methods in more detail in Table 2 , giving each method ’s average number of days to detection at 1 false positive/month , assuming that undetected outbreaks were detected on day Toutbreak . For each of the .ve scan statistics , we report performance assuming its best combination of time series analysis method and aggregation level ; for each of the ten time series analysis methods , we report performance assuming its best scan statistic . Level of aggregation only made a signi.cant difference for the all max and strat max methods , so we report these results separately for BATS , CATS , and RATS . For each outbreak , we also construct AMOC curves of the ( cid:147)best,(cid:148 ) ( cid:147)median,(cid:148 ) purely temporal , and purely spatial methods ; we present three of these curves ( one for each outbreak type ) in Figure 1 . We also discuss each outbreak type in more detail below .
7.2 Anthrax outbreaks , ED data
For the anthrax outbreaks , we began with real baseline data for respiratory Emergency Department visits in Allegheny County in 2002 . We used this data to simulate epidemics using BARD at two different levels of anthrax release : 0.125 ( high ) and 0.015625 ( low ) . For each release amount , 60 simulated epidemics were created . Separately for the high and low levels , we tested all methods , forming an average AMOC curve for each over all simulated epidemics , and measuring detection rate and average days to detect .
For the high release dataset , all of the methods tested were able to rapidly detect all 60 outbreaks . For a .xed false positive rate of 1/month , every method detected all outbreaks ( 100 % detection rate ) , with average time to detection ranging from 1.6 to 2.067 days . The top method ( 1.6 days to detect ) was the 1 day statistic using all mean , and half of all methods detected in 1.8 days or fewer . Since the average delay from release to the .rst reported case was 1.18 days , these times were close to ideal detection performance . All methods except all max outperformed the purely temporal scan statistic ( 100 % detection rate , 1.9 days to detect ) , and all methods outperformed the purely spatial scan statistic ( 100 % detection rate , 2.317 days to detect ) . For this dataset , there was very little differ ence between the best and worst performing methods , and thus it is hard to draw de.nitive conclusions . Nevertheless , we observed that shorter temporal windows performed better ( 1 day was best , 7day was worst ) , and there were no signi.cant differences between emerging and persistent scan statistics . Looking at the outbreak curve for this epidemic , it is clear why this is the case : all outbreaks have huge spikes in the number of cases starting on day 1 or 2 , so there is no advantage to having a longer window ; and since there is essentially no ( cid:147)ramp up(cid:148 ) in the number of cases ( just the large spike , at which point the outbreak is obvious to any method ) there is no advantage to the emerging over persistent statistics . For time series analysis , the all mean method performed best , followed by adj EWMA . This result is somewhat surprising , suggesting that the ED baseline data has very little day of week or seasonal trends . Results on the low release dataset were similar , except for two differences resulting from the amount of release . First , 7 of the 60 outbreaks were missed by all of our methods ; these outbreaks consisted of a very small number of cases ( less than 5 in total ) , and as a result there was essentially no signal to detect . The other 53 outbreaks typically produced a large and obvious spike in the number of cases ( again , with very little ramp up prior to the spike ) , though the delay between release and spike was longer on average ( 2.6 days from release to .rst reported case ) . Again , the 1 day window was best , though the 3 day statistics performed almost as well , and again all mean and adj EWMA were the top two methods . Our spatio temporal methods again outperformed the straw men , requiring 3.679 days to detect ( best ) and 3.906 days to detect ( median ) at 1 false positive/month . This was substantially better than the purely temporal and purely spatial methods , which required 4.250 days and 5.094 days respectively .
7.3 FLOO outbreaks , ED data
For the FLOO ED outbreaks , we again began with the 2002 Allegheny County ED dataset . We injected three types of FLOO attacks , assuming that only zip code 15213 ( Pittsburgh ) was affected : ( D = 4;Tf loo = 14 ) , ( D = 2;Tf loo = 20 ) , and ( D = 1;Tf loo = 20 ) . Thus the .rst attack has the fastest growing outbreak curve ( 4t cases on day t ) , and the third has the slowest growing outbreak curve ( t cases on day t ) . For each outbreak type , we simulated outbreaks for all possible start dates in April December 2002 , and computed each method ’s average performance over all such outbreaks . All the spatio temporal methods were able to detect all injected outbreaks at a rate of 1 false positive/month ; not surprisingly , median number of days to detect increased from 2.076 for the fastest growing outbreak , to 5.066 for the slowest growing outbreak . All of these detection times were more than one full day faster than the purely spatial and purely temporal methods , with one exception ( 0.22 days faster than purely spatial for D = 4 ) . Again , the all mean method performed well ( 1 day all mean was the winner for D = 4 , with a detection time of 1.748 days ) , as did adj EWMA and strat EWMA ( 3 day emerging strat EWMA was the winner for D = 2 and D = 1 , with detection times of 2.898 and 4.484 days respectively ) . Our most interesting result was the effect of the temporal window size W : for the fastest growing outbreak , the 1 day method detected outbreaks 0.2 days faster than the 3 day and 7 day methods , but for the slowest growing outbreak , both 3day and 7 day methods detected outbreaks a full day faster than the 1 day method . Emerging methods outperformed persistent methods for approximately 80 % of our trials , though the difference in detection time was typically fairly small ( 002 010 days , depending on the time series analysis method ) . We also observed that higher aggregation typically performed better for the all max and strat max methods ( ie RATS performed best , and BATS worst ) .
AMOC curves for FLOO ED ( 1,20 )
AMOC curves for BARD ( .015625 )
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1 e t a r e v i t i s o p e s a F l
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1 e t a r e v i t i s o p e s a F l
AMOC curves for FLOO OTC ( 20,20 ) t e a r l e v i t i s o p e s a F
0
0
1
2
3
4 6 Days to detect outbreak
5
7
8
9
10
0
0
2
4
6
8 12 Days to detect outbreak
10
14
16
18
20
0
0
2
4
6
8 12 Days to detect outbreak
10
14
16
18
20
BARD ( 0.015625 )
FLOO ED ( 1,20 )
FLOO OTC ( 20,20 )
Figure 1 : AMOC curves for three of the eight datasets . The four curves are for the best spatio temporal method ( 2 ) , the median spatio temporal method ( ffi ) , the purely temporal method ( fi ) , and the purely spatial method ( + ) . Note that the purely temporal method , unlike the others , is not required to pinpoint the region location , so its AMOC will be lower at the start of an attack ( before there are a suf.cient number of cases to detect ) ; this is purely a function of the testing methodology , and does not imply better performance .
Table 1 : Summary of performance . Detection rate and average days to detect , 1 false positive/month , all datasets . best median temporal spatial dataset
BARD ( 0.125 )
BARD ( 0.015625 ) FLOO ED ( 1,20 ) FLOO ED ( 2,20 ) FLOO ED ( 4,14 ) FLOO OTC ( 20,20 ) FLOO OTC ( 40,14 ) FLOO OTC ( all1,14 ) rate 1.000 0.883 1.000 1.000 1.000 1.000 1.000 0.475 days 1.600 3.679 4.484 2.898 1.748 3.891 2.319 5.424 rate 1.000 0.883 1.000 1.000 1.000 0.595 0.981 0.179 days 1.800 3.906 5.066 3.211 2.076 7.621 4.609 3.340 rate 1.000 0.867 0.988 1.000 1.000 0.315 0.240 0.274 days 1.900 4.250 6.119 4.551 3.103 7.358 4.667 5.000 rate 1.000 0.883 1.000 1.000 1.000 0.260 0.232 0.213 days 2.317 5.094 7.289 4.074 2.290 8.910 6.082 6.036 best method
1 day , all mean 1 day , all mean
3 day emerging , strat EWMA 3 day emerging , strat EWMA
1 day , all mean 1 day , strat Kull 1 day , strat Kull 1 day , strat EWLR
Table 2 : Comparison of methods . Average days to detect , 1 false positive/month , all datasets .
FLOO ED FLOO ED FLOO ED FLOO OTC FLOO OTC FLOO OTC
BARD
( 0.015625 ) method 1 day
3 day persistent 3 day emerging 7 day persistent 7 day emerging all max BATS all max CATS all max RATS all mean strat max BATS strat max CATS strat max RATS strat mean strat EWMA adj EWMA strat EWLR adj EWLR all Kull strat Kull
BARD ( 0.125 ) 1.60 1.75 1.75 1.80 1.77 1.98 1.97 1.72 1.60 1.87 1.87 1.73 1.75 1.75 1.68 1.83 1.75 1.80 1.75
4.53 4.58 4.55 4.67 4.67 5.03 4.92 4.65 4.53 4.83 4.82 4.68 4.63 4.58 4.55 4.82 4.67 4.65 4.68
( 1,20 ) 5.62 4.53 4.48 4.73 4.71 6.34 5.75 5.06 4.79 5.25 5.25 5.20 4.68 4.48 4.65 5.17 5.24 4.69 4.53
( 2,20 ) 3.05 2.93 2.90 3.06 3.09 3.61 3.18 3.32 3.04 3.38 3.23 3.21 3.04 2.90 2.92 3.42 3.12 2.96 2.92
( 4,14 ) 1.75 1.94 1.92 2.01 2.00 2.16 2.03 2.03 1.75 2.17 2.10 2.08 1.99 1.92 1.89 2.29 2.03 1.95 1.94
( 20,20 ) 3.89 4.02 3.96 4.35 4.29 6.58 6.58 10.15 15.34 7.11 7.21 12.34 15.92 16.88 16.58 10.84 10.19 4.25 3.89
( 40,14 ) 2.32 2.61 2.53 2.83 2.78 3.30 3.46 5.11 6.67 3.69 3.75 4.57 6.46 11.49 7.56 5.23 4.36 2.59 2.32
( all1,14 )
9.92 11.61 11.57 11.89 11.73 10.80 10.80 11.02 11.78 11.73 11.82 11.54 11.67 12.19 11.84 9.92 10.78 11.63 10.89
7.4 FLOO outbreaks , OTC data
For the FLOO OTC outbreaks , we began with one year ’s worth of data for retail sales of over the counter cough and cold medication in Allegheny County , collected from 2/13/04 2/12/05 . We injected three types of FLOO attacks : for the .rst two , we again assumed that only zip code 15213 was affected , but ( since the overall numbers of OTC sales were much higher than the overall numbers of ED visits ) we injected larger numbers of counts , ( D = 40;Tf loo = 14 ) and ( D = 20;Tf loo = 20 ) . For the third attack , we assumed that all zip codes in Allegheny County were affected , using ( D = 1;Tf loo = 14 ) for each . For each outbreak type , we simulated outbreaks for all possible start dates over the last nine months of our data , and computed each method ’s average performance over all such outbreaks . Our .rst observation was that these attacks were substantially harder to detect than in the ED data : for the two localized attacks , our median methods only detected 98.1 % and 59.5 % of outbreaks for the faster growing ( D = 40 ) and slower growing ( D = 20 ) outbreaks respectively . It appears that the main reason for this was the dif.culty in accurately predicting the OTC counts for the baseline days , as we observed huge differences in performance between the various time series analysis methods . The data contained signi.cant seasonal and day of week trends , as well as other irregularities ( eg large spikes in sales in single stores , probably resulting from promotions ) , and most of our methods were not entirely successful in accounting for these ; nevertheless , they performed much better than the purely spatial and purely temporal methods , which only detected 23 32 % of these outbreaks . Our second observation was that the strat Kull method performed remarkably well in predicting the localized outbreaks , detecting with 100 % accuracy in 2.32 and 3.89 days for D = 40 and D = 20 respectively ; strat Kull and all Kull detected the D = 20 outbreaks over two days faster than any other methods . This suggests that those methods were able to predict baselines for the non attack days much more accurately than any of the other time series analysis methods : using the current day ’s counts to predict the current day ’s baselines allows accurate adjustment for seasonal trends , and if the attack is suf.ciently localized , only slightly reduces detection power . Clearly it would be better to have a method which correctly predicts the trends without using the current day ’s counts , but none of the methods discussed here were able to do this . For the non localized attack ( cases added to every zip code ) , the power of strat Kull was substantially reduced , and it was only able to detect 36 % of outbreaks , while our best performing method ( strat EWLR ) detected 48 % . And this is far from the worst case for strat Kull : since different zip codes have different average sales , adding the same number of counts to each creates a large amount of spacetime interaction . If we had instead multiplied counts in each zip code by the same factor , strat Kull would have no power to detect this . We also note that the 1 day statistics performed best for all three outbreak types on the OTC data , though the 3 day emerging statistics performed almost as well . Again , emerging methods consistently outperformed persistent methods , and the difference in detection time was larger than on the ED data ( typically 005 020 days ) . Finally , we note that the lower levels of aggregation ( BATS and CATS ) outperformed RATS for the ( cid:147)max(cid:148 ) methods ; this is the opposite result from what we observed on the ED data .
Based on these confiicting results , it is dif.cult to recommend a single method for use on all datasets and outbreak types . As shown above , the optimal temporal window size depends on how fast the number of cases increases , with longer temporal windows appropriate for more slowly growing outbreaks . The optimal temporal window is also affected by our desired tradeoff between number of false positives and detection time : a lower acceptable false positive rate ( and thus , longer acceptable detection time ) increases the optimal window size . For example , for the FLOO ED ( 1,20 ) outbreak , the 3 day emerging statistic has the fastest time to detection at a rate of 1 false positive/month , while the 7 day emerging statistic has the fastest time to detection at a rate of 1 false positive/year . As noted above , the emerging statistics consistently outperform the corresponding persistent statistics , and while the amount of difference is not that large ( 002 020 days across all outbreaks and methods ) , even slightly earlier detection may make a substantial difference in the ef.cacy of outbreak response . It appears that the 3 day emerging statistic is a reasonable compromise solution , at least for the set of outbreaks tested . It may also be a good idea to run emerging statistics with different window sizes in parallel , for better detection of both fast growing and slow growing outbreaks ; optimal combination of detectors is an interesting and open research question . It is clear that the best time series analysis method depends on the characteristics of the dataset , as well as whether the outbreak is spatially localized or occupies a large spatial region : the strat Kull method is excellent for localized outbreaks , but should be used only in parallel with another method that can detect largescale outbreaks . For datasets with little seasonal trend , such as the ED data used here , very simple mean and moving average methods are suf.cient , but it is still an open question to .nd a method which can accurately predict baseline counts for OTC data without using the current day ’s counts to predict the current day ’s expectations .
7.5 Calibration
As noted above , our testing framework simply compares scores of the highest scoring regions on each day , and computes AMOC curves ; no randomization testing is done , and thus we do not actually compute the p value of discovered regions . Because our detection performance is high , it is clear that the attacked regions would have lower p values than the highest scoring regions on nonattacked days . But this does not answer the question of calibration : at what threshold p value should we trigger an alarm ? If nonattacked days were actually generated under the null hypothesis , we could choose some level a and be guaranteed that we will only trigger false alarms that proportion of the time ( eg once every 20 days for a = :05 ) . However , our null hypothesis , that each count ct i is generated by a Poisson distribution with mean bt i , is clearly false , i is only an estimate of what we expect ct since bt i to be , assuming that no outbreak is present . If this estimate were unbiased and exactly precise ( zero variance ) , then we would achieve a false positive rate of a . In practice , however , this estimate can be both biased and highly imprecise . For any method of calculating baselines that is approximately unbiased , but has non zero variance ( ie all of our time series analysis methods except all max and strat max ) , we expect the proportion of false positives to be greater than a , since the scan statistic picks out any regions where bt i is an underestimate of ct i . The all max and strat max methods , on the other hand , are conservatively biased ( predicting values of bt i which overestimate ct i on average ) but also have non zero variances ; thus they may result in proportions of false positives either higher or lower than a . To examine the calibration of our methods , we calculated the p value for each day in both the ED and OTC datasets ( with no injected attacks ) . We used a 3 day emerging scan statistic , BATS aggregation , with four different time series analysis methods : two unbiased methods ( adj EWLR and all mean ) and two conservative methods ( all max and strat max ) . R = 100 randomizations were performed , and we counted the proportion of false positives at a = 0:01 and a = 0:05 for each method on each dataset . See Table 3 for results . As expected , we observe a large number of false positives in both datasets for the unbiased methods . For the OTC dataset , we also
Table 3 : Proportion of false positives .
ED dataset
OTC dataset method adj EWLR all mean strat max all max a = :01 a = :05 a = :01 a = :05 0.808 0.171 0.840 0.091 0.344 0.000 0.000 0.072
0.725 0.789 0.275 0.058
0.393 0.240 0.025 0.000 have high false positive rates even for the conservative methods . What conclusions can we draw from this ? Because of the variance in our predictions , the baseline data , especially the OTC data , is not .t well by the null hypothesis . Nevertheless , the likelihood ratio statistic ( which serves as a sort of distance away from the null hypothesis ) is very successful at distinguishing between attacks and non attacked days . So how can we calibrate the statistic ? One option would be to use an unbiased method with a much lower threshold a , but the problem with this is that it would require a huge number of randomizations to determine whether the p value is less than a . Another option would be to use a conservative method , but the problem is that these methods not only record fewer false positives , but also are less able to detect a true positive . In fact , as our results above demonstrate , the conservative methods typically have much less power to distinguish attacks from non attacked days for a given level of false positives , so this is clearly not a good idea . A better option is to trigger alarms for a given threshold on the score rather than on the p value , with that threshold learned from previous data ( eg the year of ED and OTC data used here ) . An even better solution might be to account for the uncertainty of our baseline estimates bt i , as discussed below , and thus make our null hypothesis more accurately describe the real data .
8 . CONCLUSIONS i are generated from the estimated values bt
We have presented a new class of space time scan statistics designed for the rapid detection of emerging clusters , and demonstrated that these methods are highly successful on the task of rapidly and accurately detecting emerging disease epidemics . We are currently working to extend this framework in a number of ways . Perhaps the most important of these extensions is to account for the imprecision in our baseline estimates bt i , using methods of time series analysis which not only predict the expected values of the ( cid:147)current(cid:148 ) counts but also estimate the variance in these estimates . Our current dif.culty is that we are testing the null hypothesis that all counts ct i , but since these values are only estimates , the null hypothesis is clearly false . As a result , as we demonstrated in the previous section , the standard randomization testing framework results in large numbers of false positives , ie on most non attack days we still observe a pvalue less than 005 The combination of time series methods which account for imprecision of estimates , and scan statistics which use distributions that can account for mean and variance separately ( eg Gaussian or negative binomial distributions ) should allow us to correct these problems . This will also make the distinction between building aggregated , cell aggregated , and region aggregated time series methods more relevant , as the variance computations will be very different depending on the level of aggregation . A second ( and related ) extension is accounting for factors such as overdispersion and spatial correlation between neighboring counts . Our current methods assume that each spatial location , cell , or region has an independent time series of counts , and thus infer baselines independently for each such time series . When we extend the model to distributions that model mean and variance separately , we should be able to calculate correlations between time series of neighboring spatial locations , and adjust for these correlations .
Finally , we are in the process of applying our spatio temporal scan statistics to nationwide over the counter drug sales , searching for emerging disease outbreaks on a daily basis . Scaling up the system to national data creates both computational issues ( the use of the fast spatial scan is essential for searching large grids ) as well as statistical issues ( dealing with irregularities in the data , such as missing data , and increased sales resulting from product promotions ) . We are currently working with state and local public health of.cials to ensure that the clusters we report correspond to relevant potential outbreaks , thus rapidly and accurately identifying emerging outbreaks while keeping the number of false positives low .
9 . REFERENCES [ 1 ] R . Agrawal , J . Gehrke , D . Gunopulus , and P . Raghavan . Automatic subspace clustering of high dimensional data for data mining applications . In Proc . ACM SIGMOD Intl . Conf . on Mgmt . of Data , pages 94(cid:150)105 , 1998 .
[ 2 ] R . Assuncao , A . Tavares , and M . Kulldorff . An early warning system for space time cluster detection . Technical report , 2004 .
[ 3 ] J . Besag , J . York , and A . Mollie . Bayesian image restoration with two applications in spatial statistics . Ann . Inst . Statist . Math . , 43:1(cid:150)59 , 1991 .
[ 4 ] D . Clayton and J . Kaldor . Empirical bayes estimates of age standardized relative risks for use in disease mapping . Biometrics , 43:671(cid:150)681 , 1987 .
[ 5 ] T . Fawcett and F . Provost . Activity monitoring : noticing interesting changes in behavior . In Proc . 5th Intl . Conf . on Knowledge Discovery and Data Mining , 1999 .
[ 6 ] J . Friedman and N . Fisher . Bump hunting in high dimensional data .
Statistics and Computing , 9(2):1(cid:150)20 , 1999 .
[ 7 ] W . Hogan , G . Cooper , M . Wagner , and G . Wallstrom . A bayesian anthrax aerosol release detector . Technical report , RODS Laboratory , 2004 .
[ 8 ] V . Iyengar . On detecting space time clusters . In Proc . 10th ACM SIGKDD Conf . on Knowledge Discovery and Data Mining , pages 587(cid:150)592 , 2004 .
[ 9 ] E . Knox . The detection of space time interactions . Applied Statistics ,
13:25(cid:150)29 , 1964 .
[ 10 ] M . Kulldorff . A spatial scan statistic . Communications in Statistics :
Theory and Methods , 26(6):1481(cid:150)1496 , 1997 .
[ 11 ] M . Kulldorff . Spatial scan statistics : models , calculations , and applications . In J . Glaz and N . Balakrishnan , editors , Scan Statistics and Applications , pages 303(cid:150)322 . Birkhauser , 1999 .
[ 12 ] M . Kulldorff . Prospective time periodic geographical disease surveillance using a scan statistic . Journal of the Royal Statistical Society A , 164:61(cid:150)72 , 2001 .
[ 13 ] M . Kulldorff , W . Athas , E . Feuer , B . Miller , and C . Key . Evaluating cluster alarms : a space time scan statistic and cluster alarms in los alamos . American Journal of Public Health , 88:1377(cid:150)1380 , 1998 .
[ 14 ] M . Kulldorff , R . Heffernan , J . Hartman , R . Assuncao , and
F . Mostashari . A space time permutation scan statistic for the early detection of disease outbreaks . PLoS Medicine , 2005 , in press .
[ 15 ] M . Kulldorff and N . Nagarwalla . Spatial disease clusters : detection and inference . Statistics in Medicine , 14:799(cid:150)810 , 1995 .
[ 16 ] N . Mantel . The detection of cancer clustering and the generalized regression approach . Cancer Research , 27:209(cid:150)220 , 1967 .
[ 17 ] D . B . Neill and A . W . Moore . Detecting space time clusters : prior work and new directions . Technical report , Carnegie Mellon University , 2004 .
[ 18 ] D . B . Neill and A . W . Moore . Rapid detection of signi.cant spatial clusters . In Proc . 10th ACM SIGKDD Conf . on Knowledge Discovery and Data Mining , pages 256(cid:150)265 , 2004 .
[ 19 ] D . B . Neill , A . W . Moore , F . Pereira , and T . Mitchell . Detecting signi.cant multidimensional spatial clusters . In Advances in Neural Information Processing Systems 17 , pages 969(cid:150)976 , 2005 .
