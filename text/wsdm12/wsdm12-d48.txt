When Will It Happen ? — Relationship Prediction in
Heterogeneous Information Networks∗
Yizhou Sun††
Jiawei Han† Charu C . Aggarwal‡
Nitesh V . Chawla§
† University of Illinois at Urbana Champaign , Urbana , IL , USA
‡ IBM T . J . Watson Research Center , Yorktown Heights , NY , USA
§ University of Notre Dame , Notre Dame , IN , USA †{sun22 , hanj}@illinois.edu ‡charu@usibmcom §nchawla@nd.edu
ABSTRACT Link prediction , ie , predicting links or interactions between objects in a network , is an important task in network analysis . Although the problem has attracted much attention recently , there are several challenges that have not been addressed so far . First , most existing studies focus only on link prediction in homogeneous networks , where all objects and links belong to the same type . However , in the real world , heterogeneous networks that consist of multi typed objects and relationships are ubiquitous . Second , most current studies only concern the problem of whether a link will appear in the future but seldom pay attention to the problem of when it will happen . In this paper , we address both issues and study the problem of predicting when a certain relationship will happen in the scenario of heterogeneous networks . First , we extend the link prediction problem to the relationship prediction problem , by systematically defining both the target relation and the topological features , using a meta path based approach . Then , we directly model the distribution of relationship building time with the use of the extracted topological features . The experiments on citation relationship prediction between authors on the DBLP network demonstrate the effectiveness of our methodology .
Categories and Subject Descriptors H.4 [ Information Systems Applications ] : Miscellaneous
General Terms Algorithms ∗
The work was supported in part by the US Army Research Laboratory under Cooperative Agreement No . W911NF 092 0053 ( NS CTA ) , MIAS , a DHS IDS Center for Multimodal Information Access and Synthesis at UIUC , US National Science Foundation grants IIS 0905215 , and US Air Force Office of Scientific Research MURI award FA9550 08 1 0265 . † The work was partially performed during Yizhou Sun ’s em ployment at IBM T . J . Watson Research Center .
1 .
INTRODUCTION
Owing to the popularity of Web and social networks , link prediction , ie , predicting the emergence of links in a network in the future based on certain historical network information , has been a hot topic in recent years . Its applications range from social networks to biological networks , as it addresses the fundamental question of whether a link will form between two nodes in the future . Most of the existing link prediction methods [ 12 , 7 , 21 , 13 , 10 ] are designed for homogeneous networks , in which only one type of objects exists in the network . For example , friendship networks and coauthor networks belong to homogeneous networks . However , most of the networks in the real world are heterogeneous , where multiple types of objects and links exist . For example , a movie network contains information about types of movies , actors , users , and comments , with links from types of view/viewed , post/posted , comment on/commented on , and so on . Other examples of heterogeneous networks include those extracted from social websites , such as YouTube , Flickr , and Delicious . A few studies [ 19 ] have worked on the problem of link prediction in heterogeneous networks , based on the observations of the attributes of the objects . However , the attribute values of objects are usually difficult to fully obtain in reality . For example , user profiles in the movie network is usually incomplete or unreliable .
The heterogeneity of objects and links makes it difficult to use well known topological concepts in homogeneous networks for algorithmic design . For example , the number of the common neighbors is frequently used as a feature for link prediction in homogeneous networks . However , in heterogeneous networks , the neighbors of an object could come from different types , and the number of shared neighbors is not able to fully represent this heterogeneity . On the other hand , the focus of traditional link prediction tasks is on the fact about whether a link will happen in the future , eg , whether two people will become friends . However , in many applications , it may be more interesting to predict when the link will be built . Examples include : “ what is the probability that two authors will co write a paper within 5 years ? ” , and “ by when will a user in Netflix rent the movie Avatar with 80 % probability ? ” .
In this paper , we propose the problem of predicting the relationship building time between two objects , based on the topological structure in a heterogeneous network . Different from link prediction which predicts whether a link should exist between two homogeneous typed objects , relationship prediction predicts whether or when a relationship between two objects will be built , based on the relationships among heterogeneous typed objects . We first introduce our framework of relationship prediction in heterogeneous information networks , including the concepts of the target relation and topological features encoded in a meta path [ 17 ] . Then , a generalized linear model ( GLM ) [ 5 ] based supervised framework is proposed to model the relationship building time . In this framework , the building time for relationships are treated as independent random variables with different observations and their expectation is modeled as a function of a linear predictor of the extracted topological features . We propose and compare models with different distribution assumptions for relationship building time , where the parameters for each model are learned separately .
We apply our methodology to predict citation relationship between authors in DBLP , a heterogeneous bibliographic network . The results show that our methodology can indeed handle the task of relationship prediction in heterogeneous networks , and detect the critical topological features in determining the timing of relationship building . By taking the relationship building time into consideration , one can obtain not only the relationship building probabilities within time constrains , but also richer information about the relationship building time , such as median , mean , and quantile intervals . The contributions of this paper are as follows : • We extend the link prediction problem in homogeneous networks to relationship prediction in heterogeneous networks , by systematically defining the target relation and topological features in heterogeneous networks ;
• We extend the traditional prediction problem from “ whether it will happen ” to “ when it will happen ” , and directly model the relationship building time as a function of topological features ; and
• Experiments on citation relationship prediction in the DBLP bibliographic network have validated our methodology .
The remaining of the paper is organized as follows . We introduce the concepts on heterogeneous information networks and define the task of relationship building time prediction in Section 2 . Methods for design and calculation of topological features for relationship prediction are developed in Section 3 . Relationship building time modeling is worked out in Section 4 . We report our experiments in Section 5 , discuss related work and other issues in Sections 6 , and conclude the study in Section 7 .
2 . PROBLEM DEFINITION
In this section , we introduce the concepts related to heterogeneous information networks and define the relationship building time prediction task . 2.1 Heterogeneous Information Network
A heterogeneous information network is a network containing multiple types of objects and links , which is defined as a directed graph G = ( V , E ) with a type mapping function φ : V → A and a link mapping function ψ : E → R . Each object v ∈ V belongs to one particular type φ(v ) ∈ A , and each link e ∈ E belongs to a particular link type or relation ψ(e ) ∈ R . Notice that , if a relation exists between two types A and B , denoted as A R B , the reverse relation −1 holds naturally for BR −1A . In most cases , R and its R
Venue
1 p h u lis b lis b u hp
Paper cite/cite 1
Term m ention m ention 1 w rite 1 w rite
Author
Figure 1 : Schema for DBLP Bibliographic Network reverse relation R the same and R is symmetric .
−1 are not equal , unless the two types are
Further , in order to describe a heterogeneous network at the meta level , we use the concept of network schema following [ 17 ] . Let G = ( V , E ) be a heterogeneous network with type mapping φ : V → A and relation mapping ψ : E → R , the network schema of G is a directed graph with nodes from object types A and edges from relation types R , denoted as TG = ( A,R ) .
Here we give one example of heterogeneous networks , in its network namely the DBLP bibliographic network , schema form . Example 3.1 ( DBLP bibliographic network . ) The DBLP bibliographic network integrated with citation relationships between papers , which is provided by [ 18 ] , consists of rich information about publications . The network contains 4 types of objects , namely papers , authors , terms , and venues ( conferences or journals ) . Links exist between authors and papers by the relation of “ write ” and “ written by ” −1 ) , between papers and terms by “ men(denoted as write −1 ) , between tion ” and “ mentioned by ” ( denoted as mention venues and papers by “ publish ” and “ published by ” ( denoted −1 ) , and between papers by “ cite ” and “ cited by ” as publish −1 ) . Its network schema is summarized in ( denoted as cite Fig 1 .
For abbreviation , we use the first capital letters to denote these object types , namely P for papers , A for authors , T for terms , and V for venues . 2.2 Target Relation
Given a heterogeneous network , we generalize the link prediction task to relationship prediction , which is to predict whether two objects will build a relationship following a certain target relation in the future . Notice that target relationships between objects are instances of the target relation . For example , we say that Jim and Mike have built a co author relationship , if they follow a co author relation . The target relation can be either a relation in R or a composite relation concatenated from existing relations . For example , the co author relation on author set is not defined in our original DBLP network schema , but can be defined through concatenation of two relations “ write ” and −1 ” , namely two authors ai and aj are co authors , if “ write and only if ai has authored a paper p that is also authored by aj .
Formally , we use the concept of meta path [ 17 , 16 ] defined over the network schema to describe the general relations that can be derived from the network . A meta path is
R1−→ A2
R2−→ . . . a path defined on the graph of network schema TG = ( A,R ) , Rl−→ Al+1 , and is denoted in the form of A1 which defines a composite relation R = R1 ◦ R2 ◦ . . . ◦ Rl over type A1 and Al+1 , where ◦ denotes the composition operator . For example , in the DBLP network , the co author relation can be described using the meta path write−1−→ A , and is short for A − P − A if there A is no ambiguity for either the meaning or order of the relations . Another example is A − P → P − A , which is short write−1−→ A , and describes the citation for A relation between authors . write−→ P write−→ P cite−→ P
From the topological view , a target relationship is a path instance following the meta path that defines the target relation . In real cases , the relationship building between two objects can be affected by many factors . In this paper , we are particularly interested in how topological structures in heterogeneous networks affect the relationship building . For example , for the co authorship prediction , we want to know what kind of connections between two authors in the historical network can help build new co author relationship in the future . We show that topological features in heterogeneous networks can be defined systematically using meta paths , which is covered in Section 3 . 2.3 Relationship Building Time Prediction
In addition , in this paper we aim at predicting the relationship building time between objects , which differs from the traditional link prediction problem in another aspect . Examples of relationship building time prediction tasks include predicting when two users will be friends in Delicious network ; predicting when an author will publish papers in a conference in DBLP network ; and predicting when a user will review a movie in IMDB network . Generally , given a target relation ffA , B between two types A ∈ A and B ∈ A , a history interval T0 = [ t0 , t1 ) , we want to use the topological features extracted from the aggregated network in time period T0 , to predict the relationship building time t ( t ≥ t1 ) in the future .
Following the seminal work of link prediction in homogeneous networks [ 12 ] , we are interested in predicting the generation of new relationships rather than existing ones . Taking the co authorship prediction as an example , we are interested in predicting the first time of relationship building between two authors who have never co authored before rather than predicting how many times the existing coauthors will co author again in the future .
3 . TOPOLOGICAL FEATURES IN HET
EROGENEOUS NETWORKS
In this section , we study how to systematically define the topological features in heterogeneous networks . Topological features are also called structural features , which are extracted connectivity properties for pairs of objects in the networks . Topological feature based link prediction aims at inferring the future connectivity by the current connectivity of the network , namely , using the topology of the network itself to infer the evolution of the network .
There are some frequently used topological features defined in homogeneous networks , such as common neighbors , preferential attachment [ 2 , 14 ] , katzβ [ 9 ] , Adamic/Adar [ 1 ] , and PropFlow [ 13 ] . Most of these features are either neighbor based or path based . Recently , frequent graph patterns are proposed as another topological feature in detecting the link formation rules [ 4 , 11 ] , which can be used for link prediction . However , most of these features are based on homogeneous networks . As there are multi typed objects and multi typed relations in heterogeneous networks , the neighbors of an object could belong to multiple types of objects , and the paths between two objects could follow different meta paths and indicate different relations . For example , for the paths between two authors , it may follow the meta paths A − P → P − A , A − P − V − P − A , A − P − T − P − A and so on . Thus , we need to design a more sophisticated strategy to generate topological features in heterogeneous networks .
To design the topological features in the heterogeneous networks , we first define the topology using the concept of meta path , and then define measures to quantify the specific topology . 3.1 Meta Path Based Topology
As introduced in Section 2 , a meta path is a path defined over a network schema , and denotes a composite relation over a heterogeneous network . Each meta path defines a unique topology between objects , and can be used to define the topological features with different semantic meanings . In [ 16 ] , a case study of meta path preparation for co authorship prediction is given . In this section , we give a general framework in preparing reasonable meta path based topological features for the target relation . In general , for a target relation RT = ffA , B , any metapaths starting with type A and ending with type B other than the target relation itself can be used as the topological features . These meta paths can be obtained by traversing on the network schema , for example , using BFS ( breadthfirst search ) . In particular , we are considering three forms of relations as topological features :
1 . ARsimART B , where Rsim is a similarity relation defined between type A and RT is the target relation . The intuition is that if ai in type A is similar to many ak ’s in type A that have relationships with bj in type B , then ai is likely to build a relationship with bj in the future .
2 . ART BRsimB , where RT is the target relation , and Rsim is a similarity relation between type B . The intuition is that if ai in type A has relationships with many bk ’s in type B that are similar to bj in type B , then ai is likely to build a relationship with bj in the future .
3 . AR1CR2B , where R1 is some relation between A and C and R2 is some relation between C and B . The intuition is that if ai in type A has relationships with many ck ’s in type C that have relationships with bj in type B , then ai is likely to build a relationship with bj in the future . Notice that the previous two forms are special cases of this one , which can be viewed as triangle connectivity property . Also , ARsimA is another special case of this type .
For topological features , we confine similarity relations Rsim and other partial relations R1 and R2 to those that can be derived from the network using meta paths . Moreover , we only consider similarity relations that are symmetric . Taking the author citation relation , which is defined as A− P → P − A , as the target relation , we consider 6 author
Table 1 : Meta Paths Denoting Similarity Relations between Authors Meta path Semantic meaning of the relation A − P − A ai and aj are co authors A − P − A − P − A ai and aj have the same co authors A − P − V − P − A ai and aj have publications in the same venues A − P − T − P − A ai and aj write the same terms A − P → P ← P − A ai and aj cite the same papers A − P ← P → P − A ai and aj are cited by the same papers author similarity relations defined in Table 1 . For each similarity relation , we can concatenate the target relation in its left side or in its right side . We then have 12 topology features with the form ARsimART B and ART BRsimB in total . Besides , we can consider the concatenation of “ authorcites paper ” relation ( A − P → P ) and “ paper cites author ” relation ( P → P − A ) , as well as all the 6 similarity relations listed in Table 1 , in the form of AR1CR2B . Now we have 19 topological features in total .
For each type of the meta paths , we illustrate a concrete example to show the possible relationship building in Figure In Figure 2(a ) , authors a1 and a2 are similar , as they 2 . publish papers containing similar terms , and a2 cites papers published by a3 . In the future , a1 is likely to cite papers published by a3 as well , since she may follow the behavior of her fellows . In Figure 2(b ) , author a1 cites a2 , and a2 and a3 are cited by common papers together ( p5 , p6 , p7 ) . Then a1 is likely to cite a3 in the future , as she may cite authors similar to a2 . In Figure 2(c ) , a1 and a2 publish in the same venue , then a1 is likely to cite a2 in the future as they may share similar interests if publishing in the same conference . By varying the similarity relations and partial relations , we are able to generate other topological features in arbitrary heterogeneous networks . 3.2 Quantify the Topology Features
Once the topologies defined by meta paths are determined , the next stage is to propose measures on these metapaths . We can use the count of the path instances , random walk based measures , and others to define the measures between any two objects given the meta path . For similarity relations , say A − P − T − P − A , we can treat each term as a 2 hop neighbor of authors and use weighted count or cosine similarity to measure the similarity between two authors . More discussion of measures defined on meta paths can be found in [ 17 ] and [ 16 ] .
In this paper , without loss of generality , we use the count of path instances as the default measure . Thus , each metapath corresponds to a measure matrix . For a single relation in R ∈ R , the measure matrix is just the adjacency matrix of the sub network extracted by R . Given a composite relation , the measure matrix can be calculated by the matrix multiplication of the partial relations .
In Figure 2(a ) , the count of path instances between a1 and a3 following the given meta path is 2 , which are : 1 . a1 − p1 − t1 − p2 − a2 − p3 → p4 − a3 ; 2 . a1 − p1 − t2 − p2 − a2 − p3 → p4 − a3 .
In Figure 2(b ) , the count of path instances between a1 and a4 following the given meta path is 3 , which are :
1 . a1 − p1 → p2 − a2 − p3 ← p5 → p4 − a4 ; 2 . a1 − p1 → p2 − a2 − p3 ← p6 → p4 − a4 ; 3 . a1 − p1 → p2 − a2 − p2 ← p7 → p4 − a4 . In Figure 2(c ) , the count of path instances between a1 and a3 following the given meta path is 1 , which is : 1 . a1 − p1 − v1 − p2 − a3 . Measures for different meta paths have different scales . For example , longer meta paths usually have more path instances due to the adjacency matrix multiplication . We will normalize the measure using Z score for each meta path . 3.3 Discussions on Meta Path based Feature
Preparation
How to prepare the meta path based features is an import issue from a feature engineering point of view . This can be done systematically as well . Note that each meta path is a path defined on the graph of network schema . For A R B type of meta paths , we need to find a path starting from type A and ending with type B . We can use graph traverse algorithms such as BFS ( breadth first search ) to enumerate all the possible meta paths starting from A and ending with B with a length constraint . In particular , if we require ARsimA be a symmetric meta path between type A to denote a similarity relation , we can confine the meta path as a round trip path on the network schema . For example , A−P ← P → P −A is a round trip meta path , which comes back from one type in a reverse manner , while A−P → P−A is not a round trip path .
4 . MODELING RELATIONSHIP BUILD
ING TIME
So far , we have provided a systematic way to define the topological features in heterogeneous networks , which is a large space defined over topology × measure .
In this section , we propose the generalized linear modelbased prediction model , which directly model the relationship building time as a function of topological features , and provide methods to learn the coefficients of each topological feature , under different assumptions for relationship building time distributions . After that , we introduce how to use the learned model to make inferences . 4.1 Overview
We model the relationship building time prediction probIn the training lem in a supervised learning framework . stage , we first collect the topological features xi in the history interval T0 = [ t0 , t1 ) for each sampled object pair ffai , bi , where φ(ai ) = A and φ(bi ) = B . Then , we record their relative first relationship building time yi = ti − t1 , if ti is in the future training interval T1 = [ t1 , t2 ) ; record the building time yi ≥ t2 − t1 , if no new relationship has been observed in T1 . Note that in the training stage , we are only given limited time to observe whether and when two objects will build their relationship , it is very possible that two objects build their relationship after t2 , which needs careful handling in the training model . A generalized linear model ( GLM ) based relationship building time model is introduced in Section 4 , and the goal is to learn the best coefficients associated with each topological feature that maximize the a1 p1 t1 t2 p2 a2 p3 p4 a3 a1 p5 p1 t1 t2 p2 a2 p3 p4 a3
( a ) Meta Path Type ARsimARTB : A ( cid:884 ) P ( cid:884 ) T ( cid:884 ) P ( cid:884 ) A ( cid:884 ) P ( cid:1111)fi(cid:87)fi(cid:884 ) A a1 p1 p2 a2 p3 p5 p6 p7 p4 a4 a1 p8 p1 p2 a2 p3 p4 a4 p5 p6 p7
( b ) Meta Path Type ARTBRsimB : A ( cid:884 ) P ( cid:1111 ) P ( cid:884 ) A ( cid:884 ) P ( cid:1110 ) P ( cid:1111)fi(cid:87)fi(cid:884 ) A a1 p1 v1 p2 a3 a1 p3 p1 v1 p2 a3
( c ) Meta Path Type AR1CR2B : A ( cid:884 ) P ( cid:884 ) C ( cid:884 ) P ( cid:884 ) A
Figure 2 : Feature Meta Path Illustration for Author Citation Relationship Prediction current observations of the relationship building time . In the test stage , we apply the learned coefficients of the topological features to the test pairs , and compare the predicted relationship building time with the ground truth .
Different from the existing link prediction task , in the training stage , we are collecting relationship building time yi for each training pair , which is a variable ranging from 0 to ∞ , rather than a binary value denoting whether a link exists future interval or not . Similarly , in the test stage , we are predicting the relationship building time yi for test pairs that range from 0 to ∞ , rather than predicting whether the link exists or not in the given future interval . 4.2 The Relationship Building Time Predic tion Model
We first introduce the generalized linear model [ 5 ] as a general framework to solve the relationship building time prediction problem . Then we propose several reasonable distributions for the relationship building time , and use generalized linear model to build the connection between the observed building time and the observed topological features , under different distribution assumptions . We provide the methods to learn the model as well as the model inference in Section 4.3 and 44 421 The Generalized Linear Model Framework The main idea of generalized linear model ( GLM ) [ 5 ] is to model the expectation of a dependent random variable Y , E(Y ) , as some function ( “ link function ” ) of the linear combination of features , ie , Xβ , where X is the observed feature vector , and β is the coefficient vector . Then the goal is to learn β according to the training data set using maximum likelihood estimation . Under different distribution assumptions for Y , usually from the exponential family , E(Y ) has different forms of parameter set , and the link functions are with different forms too . Note that the most frequently used Least Square regression and logistic regression are special cases of GLM , where Y follows Gaussian distribution and Bernoulli distribution respectively . Suppose we have n training pairs for the target relation ffA , B . We denote each labeled pair as ri = ffai , bi , and yi as the observed relative relationship building time in the future interval . We denote Xi as the d dimensional topological feature vector extracted for ai and bi in the historical interval plus a constant dimension . 422 Distributions for Relationship Building Time The first issue of the prediction model is to select a suitable distribution for the relationship building time . Intuitively , a relationship building between two objects can be treated as an event , and we are interested in when this event will happen . Let Y be the relationship building time relative to the beginning of the future interval ( yi = ti − t1 ) , and let T be the length of future training interval . For training pairs , Y has the observations in [ 0 , T ) ∪ {T +} in a continuous case , and {0 , 1 , 2 , . . . , T − 1 , T +} in a discrete case , where y = T + means no event happens within the future training interval ; for testing pairs , Y has the observations in [ 0 , ∞ ] in a continuous case , and nonnegative integers in a discrete case . In this paper , we consider three types of distributions for relationship building time , namely exponential , Weibull and geometric distribution . For each of the distribution assumptions over yi , we set up the models separately .
The first distribution is exponential distribution , which is the most frequently used distribution in modeling waiting time for an event . The probability density function of an exponential distribution is : exp{− y θ
}
1 θ fY ( y ) =
( 1 ) where y ≥ 0 , and θ > 0 is the parameter denoting the mean waiting time for the event . The cumulative distribution function is :
FY ( y ) = P r(Y ≤ y ) = 1 − exp{− y θ
}
( 2 )
The second distribution is Weibull distribution , which is a generalized version of exponential distribution and is another standard way to model the waiting time of an event . The probability density function of a Weibull distribution is : fY ( y ) =
λyλ−1 θλ exp{−(
λ}
) y θ
( 3 ) where y ≥ 0 , and θ > 0 and λ > 0 are two parameters related to mean waiting time for the event and hazard of happening of the event along with the time . λ is also called the shape parameter , as it affects the shape of probability function . When λ > 1 , it indicates an increasing happening rate along the time ( if an event does not happen at an early time , it is getting higher probability to happen at later time ) ; and when λ < 1 , it indicates a decreasing happening rate along the time ( if an event does not happen at an early time , it is getting less possible in happening in later time ) . Notice that when λ = 1 , Weibull distribution becomes exponential distribution with mean waiting time as θ , and the happening rate does not change along the time . The cumulative distribution function is :
FY ( y ) = P r(Y ≤ y ) = 1 − exp{−(
λ} y θ
)
( 4 )
The third distribution is the geometric distribution , which is a distribution that models how many times of failures it needs to take before the first time success . As in our case , the time of failure is the discrete time that we need to wait before a relationship is built . The probability mass function of a geometric distribution is : P r(Y = k ) = ( 1 − p )
( 5 ) p k where k = 0 , 1 , 2 , . . . , and p is the probability of the occurrence of the event at each discrete time . The cumulative distribution function is :
P r(Y ≤ k ) = 1 − ( 1 − p ) k+1
( 6 )
In our case , each relationship building is an independent event , and each relationship building time Yi is an independent random variable , following the same distribution family , but with different parameters . With the distribution assumptions , we build relationship building time prediction models in the following . 423 Model under Exponential and Weibull Distri bution
Notice that , as exponential distribution is a special case of Weibull distribution ( with λ = 1 ) , we only discuss prediction model with Weibull distribution .
In this case , we assume relationship building time Yi for each training pair is independent of each other , following the same Weibull distribution family with the same shape parameter λ , but with different mean waiting time parameters θi . Namely , we assume that different relationships for the target relation share the same trend of hazard happening along with the time , but with different expectation in building time . Under this assumption , the expectation for each random variable Yi , E(Yi ) = θiΓ(1 + 1 λ ) . We then use the link function E(Yi ) = exp{−Xiβ}Γ(1 + 1 is log θi = −β0 − .d λ ) , that j=1 Xi,jβj = −Xiβ , where β0 is the constant term .
Then we can write the log likelihood function :
( fY ( yi|θi , λ)I{yi<T} + P ( yi ≥ T|θi , λ)I{yi≥T} ) nfi log L = i=1 where I{yi<T} and I{yi≥T} are indicator functions , which equals to 1 if the predicate holds , otherwise 0 . It is easy to see that the log likelihood function includes two parts : if yi is observed in the future interval , we use its real density in the function ; otherwise , we are only able to use the probability of yi ≥ T in the function . By plugging in log θi = −Xiβ , we can get the log likelihood with parameters β and λ :
LLW ( β , λ ) = nfi i=1
I{yi<T} log
λyλ−1 e−λXiβ i
− nfi
( i=1 yi e−Xiβ )
λ
( 7 )
We refer this model as Weibull model .
424 Model under Geometric Distribution In this case , we assume relationship building time Yi for each training pair is independent of each other , following the same geometric distribution family , but with different success probability pi . Under this assumption , the expectation for each random variable Yi , E(Yi ) = 1−pi . We then let E(Yi ) = exp{−Xiβ} , namely , log 1−pi log likelihood function is then : pi = −Xiβ . The pi
LLG(β ) nfi
=
= i=1 nfi i=1
( P r(Yi = yi)I{yi <T } + P ( yi ≥ T )I{yi≥T } ) ' − I{yi<T }(−Xiβ ) + ( yi + 1)(−Xiβ − log(e−Xi β ff
+ 1 ) )
( 8 )
We refer this model as geometric model . 4.3 Model Learning
The learning of the models is becoming an optimization problem , which aims at finding ˆβ and other parameters ( eg , ˆλ in the Weibull model ) that maximize the log likelihood . As there are no closed form solutions for Eq 7 and Eq 8 , we use standard Newton Raphson method to derive the update formulas , which are based on the first derivative and second derivative ( Hessian matrix ) of the log likelihood function . The learning algorithms for Weibull model and geometric model are introduced as below .
431 The Learning Algorithm for Weibull Model For Weibull model , there are two sets of parameters , namely , the coefficients for each topological feature β and the shape parameter λ . An iterative algorithm is proposed to solve this model , where β and λ are updated alternatively . Initially , we set λ(0 ) = 1 , and at the t th iteration , β and λ are updated using the Newton Raphson method : • Updating β with λ = λ(t ) by setting β(t+1 ) = maxβ LLW ( β , λ(t) ) , where β(t+1 ) is derived using an inner iteration of Newton Raphson method : β(tfi
) − [ H LLW ( β(tfi
−1∇LLW ( β(tfi
+1 ) = β(tfi
) , λ(t) ) ]
) , λ(t ) )
' where t is the inner iteration number , H denotes the Hessian matrix and ∇ denotes the first derivative of function LLW for β .
• Updating λ with β = β(t+1 ) by setting λ(t+1 ) = maxλ LLW ( β(t+1 ) , λ ) , where λt+1 is derived using another inner iteration of Newton Raphson method : λ(tfi
) − [ H LLW ( β(t+1 ) , λ(tfi
−1∇LLW ( β(t+1 ) , λ(tfi
+1 ) = λ(tfi
) ) ]
) )
' where t is the inner iteration number , H denotes the Hessian matrix and ∇ denotes the first derivative of function LLW for λ .
Please refer to Appendix A for the concrete formulas for Hessian matrices and first derivatives for β and λ . Note that , as for discrete time we may observe 0 for yi ’s , which will cause ill condition of the log likelihood . Therefore , we will add a small time gap δy to all yi ’s in the training period and extract the gap in the test period . 432 The Learning Algorithm for Geometric Model For geometric model , there is only one set of parameters β , and we directly use Newton Raphson method to optimize the objective function LLG :
β(t+1 ) = β(t ) − [ H LLG(β(t) ) ]
−1∇LLG(β(t ) ) where t is the iteration number , H denotes the Hessian matrix and ∇ denotes the first derivative of function LLG for β .
Please refer to Appendix B for the concrete formulas for
Hessian matrix and first derivative for β . 4.4 Model Inference
Once the parameters such as β and λ are learned from the training data set through MLE , we can apply the model to the test pairs of objects , as long as their topological features in the historical network are given . Let the learned parameter values be ˆβ and ˆλ for β and λ , and let the topological feature vector for the test pairs be Xtest ( with constant 1 as the first dimension ) , we now consider three types of questions people may be interested in for the new relationship building time , and provide the solutions in the following .
1 . Whether a new relationship between two test objects will be built within t years ? This question is equal to the query for the probability P r(ytest ≤ t ) , which can be evaluated by plugging in the MLE estimators to derive the distribution parameters . Notice that for traditional link prediction tasks , t should be the same as the length of training interval . For our task , t can be any nonnegative values . For Weibull model , we have :
( 9 )
( 10 )
ˆθtest = exp{−Xtest ˆβ} P r(ytest ≤ t ) = 1 − exp{−(
ˆλ} ) t
ˆθtest
For geometric model , we have :
1 exp {−Xtest ˆβ} + 1
ˆptest = P r(ytest ≤ t ) = 1 − ( 1 − ˆptest)t+1
2 . What is the average relationship building time for two test objects ? This is simply the query for E(Ytest ) . Using the same estimators for ˆθtest and ˆptest as above , we can have the estimator for E(Ytest ) as E(Ytest ) = ˆθtestΓ(1 + 1 ˆλ ) for Weibull model , where Γ(· ) is the Gamma function , and E(Ytest ) = 1− ˆptest for geometric model .
ˆptest
3 . The quantile : by when a relationship will be built with a probability α ? This is equal to query for the solution of FY ( ytest ) = α , and we can get answers as ytest = ˆθtest(− log(1 − α ) ) 1 ˆλ − 1 , 0} for Weibull model , and ytest = max{ log(1−α ) log(1− ˆptest ) for geometric model . When α = 0.5 , the quantile is just the median .
5 . EXPERIMENTS
In this section , we apply our methodology on DBLP bibliographic network , and select the target relation as the author citation relationship ( A − P → P − A ) . The goal is to study the effectiveness of our time involved relationship prediction model in the heterogeneous network scenario . 5.1 The Dataset
We select a subset of authors in the DBLP bibliographic network , who published more than 5 papers in top conferences in four areas1 that are related to data mining between year 1996 and 2000 ( T0 = [ 1996 , 2000] ) . The total number of the author set is 2721 . Then we sampled 7000 pairs of authors in the form of ffai , aj that ai did not cite aj in T0 , but have citation relationship between year 2001 and 2009 ( T1 = [ 2001 , 2009 ] and T = 9 ) as positive samples ; and we sampled another 7000 pairs of authors that have no citation relationship during either T0 or T1 . The citation relationship is defined if ai cites papers written by aj published before year 2000 . Notice that , we have this time constraint for papers as we want to infer citation relationship via the historical network . 19 topological features introduced in Sec 3 are calculated for each year in T0 and then aggregated together . The first ( relative ) time of the citation relationship is recorded for each pair of authors ; and if there is no citation relationship between them in T1 , the time is recorded as a value bigger than 9 . 5.2 Experimental Setting
In order to show the power of using time involved model in relationship prediction , we use logistic regression [ 15 ] ( denoted as logistic ) that is frequently used in binary link prediction tasks as the baseline . Notice that , the output of the logistic regression is a probability denoting whether a relationship will be built in T1 for each test pair . In our models , the output is the parameter set for the distribution of the relationship building time , from which we can infer much more information rather than a simple probability . We denote our models with different distribution assumptions as GLM geo , GLM exp , and GLM weib respectively .
To compare the four models , we use two sets of measures to evaluate the effectiveness of each model . First , we measure the effectiveness according to the predicted probability for each relationship . We define the accuracy of the relationship prediction as the ratio between the number of correctly predicted relationship ( under the cut off 0.5 ) and the total number of the test pairs . Also , another frequently used measure AUC ( the area under ROC curve ) [ 3 ] is used to compare the accuracy .
Second , we directly compare the predicted time with the ground truth , among our proposed models . Mean absolute error ( MAE ) that is the mean of the absolute error between predicted relationship building time and the ground truth is used . Also , we use the ratio of the relationships that occur in some confidence interval derived from the models as another measure to test the accuracy of the predicted time . Notice that , relationships yet to happen are not considered in these two measures .
1Data Mining : KDD , PKDD , ICDM , SDM , PAKDD ; Database : SIGMOD Conference , VLDB , ICDE , PODS , EDBT ; Information Retrieval : SIGIR , ECIR , ACL , WWW , CIKM ; and Machine Learning : NIPS , ICML , ECML , AAAI , IJCAI .
Table 2 : Relationship Prediction Accuracy Comparison
T = 1
T = 5
Acc .
AUC
Acc .
Table 5 : MAE of Predicted Time with the Ground Truth
T train = 5 , T test = 9
T train = 9 , T test = 9 logistic
GLM geo GLM exp GLM weib
0.9312 0.9310 0.9304 0.9304
0.7356 0.7037 0.7262 0.7273
0.7097 0.6909 0.6922 0.6915
0.8083 0.8021 0.7917 0.7917
GLM geo GLM exp GLM weib
4.9883 2.7774 3.1025
4.7219 3.0685 3.1692
T = 9
AUC
AUC 0.7751 0.7758 0.7680 0.7680
Acc . 0.6995 0.6659 0.7096 0.7031
All the results in this section are the average results using
10 fold cross validation . 5.3 Prediction Power Study
We now compare our time involved models with the base line logistic regression , using the first set of measures .
1
( with the length T train ) and test stage T test
First , we vary the future interval used in the training stage T train ( with the 1 length T test ) but force them the same ( T = T train = T test ) , and compare the predicted probability of the relationship building within time T ( P r(ytest ) < T ) for test pairs . The results are summarized in Table 2 . From the results , we can see that logistic regression has the best overall performance in predicting the probability of relationship building , when the training future interval equals to the test future interval . Next , we test the generality power for different models , namely , when the training future interval is not equal to the test future interval ( T train fl= T test ) . On one hand , we may want to know the probability of relationship building within each year in the training interval ( T test < T train ) ; on the other hand , we may want to infer longer term probability given a short term training interval ( T test > T train ) . We show the two cases in Table 3 and Table 4 . Notice that , since logistic regression can only output the probability when T test = T train , we use the same predicted probability for different test intervals . In Table 3 , we fix the training interval with length T train = 9 , namely , T train = [ 2001 , 2009 ] , and vary the test intervals with length from 1 to 4 . We can see that when T test is small , time involved models can give much better prediction accuracy , especially in terms of the measure accuracy . In other words , time involved models carry more information in telling the probability of relationship building in finer time periods . In Table 4 , we fix the test interval with length T test = 9 and vary the training intervals with length from 2 to 5 . We can see that , time involved models can better utilize the short term training than logistic regression , and output better prediction results for longer term relationship building behavior . It is interesting to notice that by using the measure AUC , which does not require users to specify a cut off value in the predicted probabilities , the performance of logistic regression is still comparable with other models . This is due to AUC only uses the ranking order of the predicted values , while accuracy requires that the absolute values of the predicted probabilities are also correct .
1
In all , for time involved model , it contains more information and can answer different questions and with strong generalization power . Logistic regression can only answer the question of whether a link will happen or not , given a fixed time interval , and the experiments show that it has the strength in answering this certain type of question . However , if we are asking more , it fails in most of the scenarios . 5.4 Time Prediction Accuracy Study
We now evaluate the predicted time using different time involved models . Here , we use the predicted median time as the predicted time . Table 5 shows the MAE between the predicted median time and the ground truth under different training and test intervals . It turns out that GLM exp has the lowest error . Also , both GLM exp and GLM weib perform even better using shorter interval as training , whereas GLM geo has the opposite behavior , that is , longer term of training leads to better performance . Notice that , we only calculate the error for the positive relationships happened in the test interval .
In Table 6 , we infer different confidence intervals from the predicted relationship building time distribution , and test the ratio of the true relationship in different confidence intervals . A confidence interval ( range ) rather than a simple value , say the median time , can give users a better view of the relationship building time . It is shown that GLM exp and GLM weib has a higher ratio of giving correct confidence intervals for the true relationship building time , especially when using a small confidence interval . This is very useful in practice as they can give tight bound estimations . 5.5 Case Studies
1
To better understand the output of our model , we now show a case study of citation relationship between “ Philip is trained by S . Yu ” and other candidates . The model GLM weib using a training interval of 9 years ( T train = [ 2001 , 2009] ) , with the learned parameter λ = 0.9331 , slightly less than 1 , which means the citation relationship has a higher hazard happening at an earlier time . The ground truth of the citation building time , and the predicted median , mean , 25 % quantile and 75 % quantile for several test pairs are shown in Table 7 . It can be seen that the predicted median and confidence interval are very suggestive for predicting the true citation relationship building time . For those authors whose predicted being cited time is significantly different from the ground truth , in depth studies may be needed . For example David Maier is a prolific researcher in database area , and by intuition as well as suggested by the model , Philip should cite him . However , the ground truth says otherwise . Furthermore , this function can be used to recommend authors to any author in DBLP for citation purpose .
For the above model , the learned top 4 most important topological features with the highest coefficients are : 1 . A − P − T − P − A , namely , if two authors are very similar in terms of writing similar topics , they tend to cite each other ; 2 . A − P ← P → P − A , namely , if two authors are very similar in terms of being frequently co cited by the common papers , they tend to cite each other ; 3 . A − P − A − P → P − A , namely , an author tends to cite the 4 . A − P − T − P − A − P → P − A , namely , if two authors are similar in terms writing similar topics , they tend to cite the same authors . authors that are frequently cited by her co authors ;
These topological features provide insightful knowledge for people in understanding the citation relationship building .
Table 3 : Prediction Generalization Power Comparison : T test < T train and T train = 9
T test = 4
T test = 1
T test = 2
T test = 3
Accuracy
AUC
Accuracy
AUC
Accuracy
AUC logistic
GLM geo GLM exp GLM weib
0.7106 0.9284 0.9290 0.9287
0.7619 0.7626 0.7553 0.7273
0.7246 0.8436 0.8442 0.8441
0.7535 0.7532 0.7464 0.7452
0.7669 0.7829 0.7821 0.7826
0.7347 0.7657 0.7569 0.7559
Accuracy 0.7349 0.7347 0.7328 0.7334
AUC
0.7731 0.7696 0.7603 0.7597
Table 4 : Prediction Generalization Power Comparison : T test > T train and T test = 9
T train = 2
T train = 3
T train = 4
T train = 5
Accuracy
AUC
Accuracy
AUC
Accuracy
AUC
Accuracy
AUC logistic
GLM geo GLM exp GLM weib
0.5157 0.5942 0.5015 0.7081
0.7810 0.7910 0.7802 0.7816
0.5379 0.6209 0.5214 0.7021
0.7805 0.7926 0.7833 0.7832
0.5599 0.6366 0.6709 0.7002
0.7841 0.7902 0.7841 0.7833
0.5952 0.6522 0.7143 0.7103
0.7896 0.7982 0.7870 0.7862
6 . RELATED WORK
The link prediction problem has been first studied on homogeneous networks . Early works mainly study unsupervised methods [ 1 , 12 ] , namely they propose different similarity measures according to either topological structures of the networks or proximity of object attributes that are consistent with the link appearance in the future . Later , supervised methods that are able to combine different features with different coefficients via training data sets are proposed by different studies [ 7 , 21 , 13 ] . A recent study [ 10 ] has discussed the link prediction problem when the network is not fully observed and thus is modeled in a probabilistic way . A survey in link prediction can be found in [ 6 ] . In this paper , we extend the link prediction problem to the more general heterogeneous networks , by extending link prediction to relationship prediction and exploring the topological features in such scenarios .
Recently , some studies [ 4 , 11 ] propose frequent graph pattern mining based methodology to detect graph evolution rules , which provides some clues for proposing new topological features in the network for link prediction . However , the focus on the two papers are still on homogeneous networks , and they have not considered how different frequent evolution patterns affect the link formation speed yet . That is , this methodology cannot answer the “ when ” problem of link formation .
Another line of study similar to our problem is the link prediction task in relational data [ 15 , 19 ] , as relational data also involves different types of objects and complex relationships between objects . However , these studies have a focus different from our paper . As in [ 15 ] , they study feature selection in a relational environment using relational languages , and feed these features into supervised link prediction models ; for [ 19 ] , their goal is to model the relational data via a probabilistic model . In our paper , we aim at designing a model for relationship building time by systematically exploring the topological features in heterogeneous networks . A novel meta path based similarity measure called PathSim is proposed in [ 17 ] , which also defines the framework of similarity measure in a heterogeneous network scenario . In [ 16 ] , the authors study the relationship prediction problem using co authorship prediction as a case study in the heterogeneous network . However , they have not systematically study the relationship prediction in a general case and they are only focus on the “ whether ” problem rather than the “ when ” problem . In this paper , we build a framework for general relationship prediction in heterogeneous networks by systematically extracting meta path based topological features , and study when the relationship will happen in the future .
The general setting of link prediction task is set by LibenNowell and Kleinberg [ 12 ] , which is to predict whether a link between two existing objects will be added to the network during the time interval [ t , t + Δt ] given the snapshot of the network at time t . In other words , the task has not considered the issue when a link will appear in this time interval . Recently , several studies have considered the extension on usage of time . In [ 20 ] , a methodology that assigns weights to events and edges according to their appearing time is proposed , which produces better link prediction accuracy by using more time information in the feature side . In [ 8 ] , a time series model is proposed to predict the frequency of repeated links in networks . In comparison to these studies , our paper focuses on the new relationship prediction and aims at modeling the relationship building time in the future .
In all , in this paper , we extend the traditional link prediction in homogeneous networks into relationship prediction in the more complex heterogeneous networks , and aims at modeling the relationship building time in the future . 7 . CONCLUSIONS AND FUTURE WORK In this paper , we propose a new problem of study relationship building time prediction in heterogeneous networks . This problem on one hand extends the traditional link prediction problem in homogeneous networks into relationship prediction in heterogonous networks ; and on the other hand it extends the traditional “ whether a link will happen in a fixed future interval ” to “ when it will happen . ” We systematically study how to define relationship and how to select topological features in heterogeneous networks , using a meta path based concept . Time involved relationship prediction models are proposed . Experiments have shown the effectiveness of our proposed models .
Predicting relationship building time is still an open problem . It is worth of considering a broader range of target relations in different heterogeneous networks , and propose a systematic methodology of model selection and model comparison . More future work can be done along this line . 8 . REFERENCES [ 1 ] L . A . Adamic and E . Adar . Friends and neighbors on the web . SOCIAL NETWORKS , 25:211–230 , 2001 .
Table 6 : Ratio of the True Relationship Occurring in Different Confidence Intervals : T test = 9
25% 75 %
T train = 9
T train = 5
10% 90 %
T train = 9
T train = 5
0% 80 %
T train = 9
T train = 5
GLM geo GLM exp GLM weib
0.5489 0.7167 0.7278
0.5336 0.7246 0.7314
0.8936 0.8619 0.8680
0.8947 0.8634 0.8686
0.9650 0.9880 0.9884
0.9743 0.9889 0.9896
Table 7 : Case Studies of Relationship Building Time Prediction ai aj
Ling Liu
Philip S . Yu Philip S . Yu Christian S . Jensen Philip S . Yu Philip S . Yu Philip S . Yu Philip S . Yu Philip S . Yu
C . Lee Giles Stefano Ceri David Maier Tong Zhang Rudi Studer
Ground Truth Median 2.2386 2.7840 8.3985 0.5729 2.5675 9.5371 9.7752
1 3 0 0 9+ 9+ 9+
Mean 3.4511 4.2919 12.9474 0.8833 3.9581 14.7028 15.0698
25 % quantile
75 % quantile
0.8549 1.0757 3.2450 0.2214 0.9920 3.6849 3.7769
4.7370 5.8911 17.7717 1.2124 5.4329 20.1811 20.6849
[ 2 ] A . L . Barabasi , H . Jeong , Z . Neda , E . Ravasz ,
A . Schubert , and T . Vicsek . Evolution of the social network of scientific collaborations . arXiv:cond mat/0104162v1 , Apr 2001 .
[ 3 ] A . P . Bradley . The use of the area under the ROC curve in the evaluation of machine learning algorithms . Pattern Recognition , 30(7):1145–1159 , July 1997 .
[ 4 ] B . Bringmann , M . Berlingerio , F . Bonchi , and
A . Gionis . Learning and predicting the evolution of social networks . IEEE Intelligent Systems , 25:26–35 , 2010 .
[ 5 ] A . J . Dobson . An Introduction to Generalized Linear
Models , Second Edition . Chapman & Hall/CRC , November 2001 .
[ 6 ] L . Getoor and C . P . Diehl . Link mining : a survey . SIGKDD Explor . Newsl . , 7:3–12 , December 2005 .
[ 7 ] M . A . Hasan , V . Chaoji , S . Salem , and M . Zaki . Link prediction using supervised learning . In Proc . of SDM ’06 workshop on Link Analysis , Counterterrorism and Security , 2006 .
[ 8 ] Z . Huang and D . K . J . Lin . The time series link prediction problem with applications in communication surveillance . INFORMS J . on Computing , 21:286–303 , April 2009 .
[ 9 ] L . Katz . A new status index derived from sociometric analysis . Psychometrika , 18(1):39 – 43 , 1953 .
[ 10 ] V . Leroy , B . B . Cambazoglu , and F . Bonchi . Cold start link prediction . In KDD ’10 , 2010 .
[ 11 ] C . W k Leung , E P Lim , D . Lo , and J . Weng . Mining interesting link formation rules in social networks . In CIKM ’10 , 2010 .
[ 12 ] D . Liben Nowell and J . Kleinberg . The link prediction problem for social networks . In CIKM ’03 , pages 556–559 , 2003 .
[ 13 ] R . N . Lichtenwalter , J . T . Lussier , and N . V . Chawla .
New perspectives and methods in link prediction . In KDD ’10 , 2010 .
[ 14 ] M . E . J . Newman . Clustering and preferential attachment in growing networks . Physical Review Letters E , 64 , 2001 .
[ 15 ] A . Popescul , R . Popescul , and L . H . Ungar . Statistical relational learning for link prediction . In Proc . of the Workshop on Learning Statistical Models from Relational Data at IJCAI 2003 . , 2003 .
[ 16 ] Y . Sun , R . Barber , M . Gupta , C . C . Aggarwal , and
J . Han . Co author relationship prediction in heterogeneous bibliographic networks . In ASONAM’ 11 , 2011 .
[ 17 ] Y . Sun , J . Han , X . Yan , P . S . Yu , and T . Wu .
Pathsim : Meta path based top k similarity search in heterogeneous information networks . In VLDB’ 11 , 2011 .
[ 18 ] J . Tang , J . Zhang , L . Yao , J . Li , L . Zhang , and Z . Su . Arnetminer : extraction and mining of academic social networks . In KDD ’08 , 2008 .
[ 19 ] B . Taskar , M . fai Wong , P . Abbeel , and D . Koller .
Link prediction in relational data . In NIP ’03 , 2003 . [ 20 ] T . Tylenda , R . Angelova , and S . Bedathur . Towards time aware link prediction in evolving social networks . In Proceedings of the 3rd Workshop on Social Network Mining and Analysis , SNA KDD ’09 , pages 9:1–9:10 , 2009 .
[ 21 ] C . Wang , V . Satuluri , and S . Parthasarathy . Local probabilistic models for link prediction . In ICDM ’07 , pages 322–331 , 2007 .
APPENDIX A . FORMULAS FOR WEIBULL MODEL
• First derivative and Hessian matrix for β :
∇LLW ( β ) = −(−λXfi H LLW ( β ) = −λ2
( I{Y <T } ) + λXfi
( (X . ∗ ( exp{λ(log(Y ) + Xβ)}11×p ) ) exp{λ(log(Y )Xβ)} ) fiX )
• First derivative and second derivative for λ :
∇LLW ( λ ) =
(
I{yi <T }
+ λ(log(yi ) + Xiβ)− ( log(yi ) + Xβ ) exp{λ(log(yi ) + Xiβ)} )
λ
H LLW ( λ ) =
( − I{yi <T }
λ2
− fi fi i i
( log(yi ) + Xiβ ) FOR
B . FORMULAS
MODEL
2 exp{λ(log(yi ) + Xiβ)} )
GEOMETRIC
• First derivative and Hessian matrix for β :
η = exp{−Xβ} fi ∇LLG(β ) = −X H LLG(β ) = −((Y + 1n×1 ) . ∗ η./(η + 1n×1).2
( −(I{Y <T} ) + Y + 1n×1)./(η + 1n×1 ) ))X11×p ) fiX
