How to Win Friends and Influence People , Truthfully :
Influence Maximization Mechanisms for Social Networks
Yaron Singer
Computer Science Division
University of California at Berkeley , CA , 94720 USA yaron@csberkeleyedu
ABSTRACT Throughout the past decade there has been extensive research on algorithmic and data mining techniques for solving the problem of influence maximization in social networks : if one can incentivize a subset of individuals to become early adopters of a new technology , which subset should be selected so that the word of mouth effect in the social network is maximized ? Despite the progress in modeling and techniques , the incomplete information aspect of the problem has been largely overlooked . While data can often provide the network structure and influence patterns may be observable , the inherent cost individuals have to become early adopters is difficult to extract .
In this paper we introduce mechanisms that elicit individuals’ costs while providing constant factor guarantees in some of the most well studied models of influence in social networks . We follow the mechanism design framework which advocates for allocation and payment schemes that incentivize individuals to report their true information . We also performed experiments on the mechanical turk platform , which together with social network data provides experimental evidence that suggests that beyond provable guarantees the framework works well in practice .
1 .
INTRODUCTION
The emergence of online social networks in the past decade has given birth to the study and development of effective techniques for information propagation in social networks . Motivated by marketing applications , a central problem that received considerable attention in this domain is the influence maximization problem , where the goal is to identify a small subset of individuals in a social network that can serve as early adopters of a new technology and trigger a large word of mouth cascade in the network .
The main focus in the study of the influence problem has been on descriptive influence models and efficient optimization machinery . Since the problem is known to be N P hard , there has been substantial focus on characterization of in fluence models and their approximation guarantees ( eg [ 20 , 19 , 27 , 5] ) . To establish better predictive models , a different line of work studies techniques for inferring influence models from observable data and analyzing large scale information cascades ( eg [ 8 , 31 , 11 , 24 , 15 , 14 , 26 , 4] ) .
These developments in algorithmic and data mining techniques focus on identifying influencers and predicting their potential influence in the social network . To execute viral marketing campaigns , however , an important question remains : How do we influence the influencers ?
For concreteness , consider Ticketbuster , a ( fictitious ) online retailer that sells concert tickets and wishes to promote a concert through word of mouth in a social network ( eg Google+ ) . To do this Ticketbuster is willing to provide discounts to individuals who purchase tickets and are willing to announce their purchase to their friends in the social network . Given that it is limited by the total amount of discounts it can offer and that individuals respond differently to incentives , Ticketbuster needs to decide who should be offered a discount for announcing their purchase to their friends , and importantly , how much they should be offered . The above example is an illustration of the kind of problems we wish to address in this work : how to design algorithms for viral marketing campaigns that provide appropriate incentives for individuals to become early adopters1 . The challenge lies in the fact that individuals attribute different costs for becoming early adopters , and our algorithms must somehow be designed to account for this .
The Influence Maximization Model In the influence maximization model , as formalized by Kempe , Kleinberg and Tardos in [ 20 ] we are given a social network graph and an influence function that takes a subset of nodes of initial adopters and returns the expected number of nodes influenced in the graph . Given some parameter k the goal is to find k initial adopters that will maximize the expected number of nodes influenced . This elegant model captures the decisions often made in viral marketing campaigns where a set of consumers is chosen to receive incentives for being early adopters of a technology ( eg receive a product at a discounted price ) , so that their experiences would be advertised by word of mouth through the social network .
The underlying assumption in the influence maximization model is that each node in the graph has some inherent cost
1The term early adopters here is used to generally describe the subset of individuals we are seeking to incentivize in order to create the word of mouth effect . for being an initial adopter2 and that the word of mouth process described by the influence function does not depend on additional incentives . In simple cases one may assume that costs are uniform ( eg the cost for being an initial adopter may simply be the cost of buying the technology at an advertised market price ) , or that the incentives can be rewarding enough to cover any reasonable cost that may be associated with being an initial adopter . In general however , as in the case of our example , costs may be subjective and must be considered in the input to the problem . Challenges of Inferring Incentives Despite the growing availability of personalized data and the emergence of sophisticated machine learning techniques , inferring personal costs is a difficult task : individuals often have subjective costs that heavily depend on various aspects that are difficult to observe like their personal history or opinion .
A reasonable approach may be to estimate an optimal reward value and use this estimate as an offer to individuals . The problem however is that this approach leads to poor results both in theory and in practice . In Appendix A we show that even when given access to individuals’ costs , no mechanism that offers uniform rewards can approximate the optimal solution within a factor better than O( log n log log n ) . In Section 4 we show that such mechanisms perform poorly in practice as well . This implies that even under the strong assumption that costs are known , the influence maximization techniques that use the optimal reward perform poorly .
Finally , we can consider algorithms that pay individuals their costs . However , this na¨ıve approach of paying individuals their reported cost is susceptible to manipulation : individuals may declare higher costs to increase their rewards . A Mechanism Design Approach To address the above challenges , we introduce machinery from mechanism design theory . The theory is based on the idea of designing mechanisms3 that are incentive compatible ( aka truthful ) : mechanisms for which it is provably in each agent ’s best interest to report her true private information , regardless of the other agents’ reports . Thus , by assuming that agents are rational4 , an incentive compatible mechanism extracts the agents’ true information and uses it to identify and reward the subset of initial adopters . Our goal is therefore to design incentive compatible mechanisms that compare favorably against the optimal influence maximization solution .
It is important to emphasize that the growing dependency of web services on user generated data introduces similar challenges to the ones addressed here . We believe that the ideas of incentive based mechanisms will prove useful in other data mining domains as well . 1.1 Our Results
In this paper we introduce incentive compatible mechanisms for the influence maximization problem in some of
2otherwise no incentives would be necessary to become an initial adopter and we can assume that all nodes in the network can adopt the technology . 3A mechanism is simply an algorithm that decides who is allocated and how much they are paid . 4In our case , rationality simply means that an agent wishes to maximize her profit . the most well studied models of influence in social networks . In particular we show constant factor approximation mechanisms 5 for the Coverage , Linear Threshold , Independent Cascades , the Voter and general submodular influence models . To evaluate their practical performance , we provide experimental evidence of the mechanisms’ effectiveness on real data sets . In our experiments we used network data that has almost a million nodes and over 72 million edges , together with a representative cost distribution that was obtained by running a simulated campaign on Amazon ’s Mechanical Turk platform [ 1 ] . 1.2 Related Work
The problem of maximizing influence has been first posed by Domingos and Richardson in [ 8 , 31 ] and has been extensively studied since . In their seminal work [ 20 ] , Kempe , Kleinberg and Tardos characterize some of the main models of influence in terms of their computational approximability . While they show that the optimization problem in many of the models is N P hard , their work identifies important classes of influence models in which the objective function is submodular – a condition that enables providing desirable approximation guarantees . The approximation frontiers of the influence problem in more general models have been further explored in [ 5 , 27 ] .
Incentives in networks have been considered in [ 22 ] where Nash equilibrium payments were suggested for finding information within a social network . In [ 18 ] a game theoretic influence model is suggested , where incentives for adoption in the influence process are considered . Network externalities were considered for pricing mechanisms in [ 17 ] and revenue maximizing auctions in [ 16 ] . There has been recent work on incentives in social network motivated by marketing applications [ 3 , 9 ] , though not the problems studied there are not the influence maximization problem , and the mechanisms are not incentive compatible .
The theoretical work in this paper follows recent work in [ 32 ] , which establishes a theory for designing incentive compatible mechanisms under a budget constraint on payments . The main result shows that for any submodular optimization function , there exists a randomized incentive compatible mechanism with a constant factor approximation guarantee . In this paper we rely on the characterization of payments from this line of work to develop improved mechanisms for the standard models in social networks .
2 . THE MODEL In our model there is a social network that is represented by a graph G = ( N ,E ) and an influence function f : 2N → R≥0 . Given a subset S ⊆ N the value f ( S ) represents the expected number of nodes influenced in the social graph . Each node in the graph represents an agent ai that has a private cost ci ∈ R≥0 of being an initial adopter , and this cost is not known to the mechanism designer . We assume that agents are rational and strategic in a game theoretic sense . That is , given a choice of payments an agent will choose to maximize her profit6 and may misreport her cost to do so .
5Our comparisons follow the strictest benchmarks one can consider : We compare our mechanisms against the computationally unbounded optimal solution that has full information about the agents’ true costs . 6The profit of an agent with cost c that receives payment p
In particular , an agent can become an initial adopter only if the payment it receives is greater or equal to her cost . Given a budget B ≥ 0 our goal is to maximize the influence by paying a subset of agents to be the initial adopters of the technology . A solution to the problem is a subset of agents and a payment vector that describes the payments to each agent in the subset . A mechanism is simply a pair M = ( A , p ) where A is an algorithm and p is a payment rule . We sometimes refer to the algorithm of the mechanism as the allocation rule . The mechanism takes the social network , the influence function , the budget and the agents’ reported costs as input 7 .
Approximation Since the problem is known to be N P hard , as in the case of standard algorithms , we restrict our mechanisms to run in polynomial time , and seek solutions that are provably close as possible to optimal . For α ≥ 1 we say that a mechanism M = ( A , p ) is α approximate if A is an α approximation algorithm : A returns a solution S such that f ( S∗ ) ≤ αf ( S ) , where S∗ is the optimal solution in the full information case ( ie the same benchmark that is used for an algorithm when the costs are known and the payment equals the costs ) .
Incentive Compatible Mechanisms An incentive compatible mechanism is a mechanism in which the algorithm and payment rule are designed in such a way so that each agent maximizes her profit by revealing her true cost . Rather than proving that a mechanism is incentive compatible directly we will rely on a well known characterizations from the literature that will reduce incentive compatibility to a simple condition on the algorithm .
In our setting , where each agent ’s private information is her cost we can use a characterization for incentive compatible mechanisms by Myerson [ 29 ] . According to this characterization , a mechanism is incentive compatible in our setting if and only if it is monotone and uses threshold payments . Informally , this means that as long as other agents do not change their bids , an agent that is selected should remain selected when declaring a lower cost and that her payment is the maximal cost she can declare and remain selected . Formally , given an algorithm A and an agent ai let A(ci , c−i ) be the subset selected by the algorithm when ai declares cost ci and the rest of the agents’ costs are denoted by the vector c−i . The monotonicity rule requires that if ai ∈ A(ci , c−i ) then ai ∈ A(c i < ci . The threshold payment that ensures incentive compatibility is pi = inf {bi : ai /∈ A(bi , c−i)} . i , c−i ) , for any c
To prove that a mechanism is incentive compatible we will therefore show that the algorithm is monotone . An additional difficulty in this setting is showing that the mechanism ’s payments do not exceed the budget . Fortunately , the main component of our mechanisms will be the proportional share allocation rule , for which a result in [ 32 ] gives a characterization of its incentive compatible payments that is simply p − c . 7This is known as a direct revelation mechanism : agents report their information to the mechanisms , and we assume that the social network and the budget are public information to the agents . On Ticketbuster , for example , once completing the purchase an individual would be able to report how much they would like to be rewarded for posting to their Google+ circles . can be immediately translated to a condition on the algorithm . We will therefore use the characterization as a black box and discuss the restrictions the payments impose in the appropriate sections . 3 . MECHANISMS FOR MAX INFLUENCE In this section we present several mechanisms for some of the well studied models of influence in social networks . To simplify the exposition , we begin with the Coverage influence model and later show how the mechanism can be adapted to accommodate other influence models . The Coverage Model In the Coverage model , each agent ai in the network is associated with a subset of nodes Ri and the influence in this model is f ( S ) = |∪i∈S Ri| . The optimization problem is the well known N P hard Max k Cover problem , and it can be easily verified that this influence model is submodular . It is a fundamental model that serves as a basis for many of the well studied submodular influence models .
Intuitively , a good mechanism will select agents that yield high coverage while the incentive compatible payments will not exceed the given budget . The main component of our mechanism achieves this by greedily selecting agents based on their marginal contributions and enforcing an appropriate stopping condition . The greedy selection uses the weighted marginal contribution sorting : an ordering in which at each stage the agent selected is the one that has the maximal weighted contribution given the previously selected agents . That is , under this ordering , the jth agent is : f ( Sj−1 ∪ {ai} ) − f ( Sj−1 ) a ∈ argmaxai∈N ci
( 1 ) where Sj−1 denotes the set of j − 1 agents that have been previously selected by this rule . This is the generalized version of the sorting rule used in the celebrated greedy algorithm for submodular function maximization [ 30 ] , and has beed used to obtain constant factor approximation guarantees in [ 21 , 23 , 25 ] .
To enforce a stopping condition with desirable payment guarantees , after sorting the agents we will consider them them as long as the ratio between their cost and the budget is smaller than the ratio between their marginal contribution and the value of the subset already selected . That is , we consider agent ai that meets the condition : ci ≤ B · f ( Si ) − f ( Si−1 ) f ( Si )
.
( 2 )
This allocation rule , known as proportional share , is the basis for designing mechanisms under a budget [ 32 , 6 , 7 , 12 , 33 ] . Observe that if k agents are selected according to this rule and each selected agent is paid their proportional contribution , the total payments do not exceed our budget : k
B · f ( Si ) − f ( Si+1 ) f ( Si ) − f ( Si+1 ) f ( Si )
· k i=1
· f ( Sk ) = B . i=1
≤ B f ( Sk )
≤ B f ( Sk )
( 3 )
( 4 )
( 5 )
The desirable property of this allocation rule is that for any submodular function , it can be proved that the incentive compatible payments may exceed the agents’ proportional contributions , but not by much . We will further discuss payments after describing the entire mechanism below . Importantly , this allocation rule provides desirable guarantees in terms of approximation as well . We use OP T to denote the optimal solution and denote the agent with maximal value by a∗ . The main idea behind the proof is similar to that in [ 32 ] and compares the proportional allocation rule against the standard greedy algorithm which is known to have a good approximation guarantee . e−1
· i=1 ci and f ( a ) =
Lemma 31 Let Sk be the set that is selected by the algorithm that sorts agents according to their weighted marginal contribution as in ( 1 ) and selects the maximal number of agents that respect the proportional allocation rule as in ( 2 ) using budget B
max{f ( Sk ) , f ( a∗)} .
2 . Then , OP T ≤ , 6e let be the maximal index st B− B −
Proof . Let the agents be sorted as describes above , and i=1 ci ≤ B . For sake of the analysis , consider adding a new agent , a which does not share any friends with the agents in N , declares cost . Observe that the weighted marginal contribution of this agent is identical to that of agent a+1 and that the solution f ( S ∪{a} ) is feasible . Obviously , the optimal solution over all agents in N = N ∪ {a} is an upper bound on the optimal solution over all agents in N . Due to the decreasing marginal utilities property , we are guaranteed that the first agents selected in both N and N are identical . We can therefore analyze our solution over the set of agents N . Over the set N we will denote agent a to be a+1 . submodular function we have that f ( S+1 ) ≥ ( 1− 1 We will use S+1 as a benchmark . Since S+1 is feasible :
In [ 21 ] and its generalization [ 23 ] , it is shown that for any f ( S+1 ) − f ( S ) i=1 ci c+1 ci f ( Si ) − f ( Si−1 ) ci f ( Si ) − f ( Si−1 ) f ( Si ) − f ( Si−1 ) f ( Si ) − f ( Si−1 ) i=k+1
+1 ≤ +1 i=1
= ci ≤ B . e )OP T ( N ) . i=1
Since the agents are sorted according to their weighted marginal contributions , for every i ∈ {k + 1 , . . . , + 1} we have that :
.
( 6 ) ci f ( Si ) − f ( Si−1 )
Putting the above inequalities together we get : i=k+1 f ( Si ) − f ( Si−1 ) f ( S+1 ) − f ( Sk+1 ) f ( Sk+1)−f ( Sk ) ck+1 ck+1
= f ( Sk+1)−f ( Sk ) ck+1
≤ f ( Sk+1 ) − f ( Sk ) +1 · ·(f ( Sk+1)−f ( Sk )
Note that this implies that 2f ( Sk+1 ) > f ( S+1 ) − f ( Sk ) as otherwise ck+1 ≤ B which contradicts the maximality of k . Thus , together with submodularity this f ( Sk+1 )
2
≤ B . implies that : f ( S+1 ) = f ( S+1 ) − f ( Sk ) + f ( Sk )
< 2f ( Sk+1 ) + f ( Sk ) ≤ 2f ( ak+1 ) + 3f ( Sk ) .
)f ( S+1 ) ≤ 6e e − 1
In conclusion , we get :
OP T ≤ ( e e − 1 max{f ( Sk ) , f ( a ∗
)} .
The above lemma suggests that the approximation guarantee of the proportional share allocation rule depends on the selected subset Sk being larger than a∗ . If it were not for incentive constraints , one could simply compare f ( Sk ) and f ( a∗ ) and by selecting the solution that yields the higher In our value , guarantee a constant factor approximation . case however , one can show that this process would violate incentive compatibility . Intuitively , this happens as in some cases the value of the proportional share allocation may increase when agents misreport their costs , and thus allocating based on a direct comparison between the proportional share allocation and a∗ may incentivize agents to lie . To address this , we develop the following methodology . We will compare between a∗ and a solution that is “ close ” to f ( Sk ) which enables preserving incentive compatibility . We will do this by stating the problem as an integer program that has an optimal fractional solution that is provably close to the integral solution of our integer program . Observe that the Coverage optimization problem can be reformulated as the following integer program : max m j=1 zj n xi ≥ zj , i∈Cj i=1 cixi ≤ B , 0 ≤ xi , zj ≤ 1 xi ∈ {0 , 1} j ∈ U j ∈ U , i ∈ N , j ∈ U , i ∈ N
( 7 )
( 8 )
( 9 )
( 10 )
( 11 ) xi i∈Cj j=1 min
1 ,
L(x ) = m where zj are variables representing the agents we wish to cover , xi are the variables representing the agents we can select , and Cj denotes the subset of agents that cover an agent aj ∈ N . In the basic setting zi = xi and Cj is the set of friends of agent aj . For a relaxation we will use with constraints ( 8)–(10 ) and xi ∈ [ 0 , 1 ] which is computable in polynomial time and is a relaxation of the integer program.8 In our mechanism we will compare a∗ and this relaxation to circumvent the problem with incentive compatibility . We will show that the solution of L(x ) is close to f ( Sk ) , which guarantees that comparing a∗ to L(x ) rather than f ( Sk ) does not hurt the solution by more than a constant factor . We will use L(x∗ ) to denote the value of the optimal solution to the relaxation over the subset N− = N \ {a∗} with budget B 2 . After describing the mechanism we show how this is used to maintain incentive compatibility and the approximation guarantee . 3.1
Influence Maximization in Coverage
We can now formally describe the mechanism :
8Observe that under condition ( 11 ) , the relaxation is equivalent to the integer program .
An Approximation Mechanism for Coverage Require : < G = ( N ,E ) , c , B > cj f ( aj ) a∗ ←− argmaxj∈[n]f ( aj ) ; ai ←− argmaxj∈[n ] ; while ci ≤ B
2 · f ( Si)−f ( Si−1 ) 6e2 ai ←− argmaxj∈[n ] Si ←− Si ∪ {ai} ; f ( Si ) if L(x∗ ) > f ( a∗ )
( e−1)2 S ←− Si else do : S ←− {a∗} f ( Si∪{aj})−f ( Si )
; do : cj
Output : S
The mechanism above uses the proportional share algorithm with budget B/2 , and returns the set selected by this algorithm if the value of the relaxation is greater than a factor of f ( a∗ ) . Since it may be possible that the incentive compatible payments will exceed the agents’ proportional contributions and thus violate the budget constraint , we use the algorithm with half of the budget . Using the payment characterization in [ 32 ] it can be shown that that the incentive compatible payments are indeed bounded by a constant factor , which implies that the mechanism does not violate the budget constraint . The proof relies on the results of [ 32 ] and the subsequent improved analysis in [ 6 ] . We defer the proof of the incentive compatible payment bounds to the full version of the paper .
Lemma 32 The mechanism is monotone .
Proof . To see that the mechanism is indeed monotone assume for purpose of contradiction that for a given cost profile c there is an agent ai ∈ S with declared cost ci , that i ≤ ci while the rest of the is not allocated when declaring c agents declare the same cost as in c . Let α = 6e2 If ai = a∗ then it has been selected by the proportional share allocation rule and L(x∗ ) > αf ( a∗ ) . By decreasing her cost the agent will move ahead in the sorting to place j ≤ i , and due to the decreasing marginal contribution property her marginal contribution will only increase . Thus , f ( Sj−1 ∪ {ai})− f ( Sj−1 ) ≥ f ( Si−1 ∪{ai})− f ( S−1 ) and since f is an increasing function f ( Sj−1 ∪ {ai} ) ≤ f ( Si ) . This implies :
( e−1)2 . f ( Si ) − f ( Si−1 ) f ( Sj−1 ∪ {ai} ) − f ( Sj−1 ) f ( Si ) f ( Sj−1 ) ∪ {ai} c i < ci ≤ B
2 ≤ B 2
Consider the nonlinear program relaxations : m m ( 1 − Πi∈Cj ( 1 − xi ) ) i∈Cj min j=1 xi
1 ,
L(x ) =
F ( x ) =
( 12 )
( 13 ) j=1 both with the constraints as that of the integer program , replacing ( 11 ) with xi ∈ [ 0 , 1 ] . Note that both F ( x ) and L(x ) identify with our integer program over integral solutions . The following lemma can be shown directly using the pipage rounding technique in [ 2 ] , and we reserve the proof to the full version of the paper . there exists an integral solution ¯x st L(x∗ ) ≤ ( 2e
Lemma 33 Let x∗ be the optimal solution for L . Then , e−1 )F ( ¯x ) . Using the above lemmas , we can now conclude with our main theorem .
Theorem 34 The mechanism is incentive compatible and guarantees an approximation ratio of
12e2 ( e−1)2 + 2 .
Proof . Incentive compatibility is a direct result of the monotonicity and the threshold payments discussed . Let O(N , B ) denote the optimal solution when using budget B and the set of agents N . Since F is equivalent to our integer program for Coverage over integral solutions , then 2 ) whenever x ∈ {0 , 1} when using budget F ( x ) ≤ O(N− , B 2 over the set of agents N− . From the above lemma we can
B conclude :
∗ f ( a
) ≤ L(x ∗
) ≤ 2e e − 1
O(N− ) ≤ 2e e − 1
O(N ,
B 2
)
∗ f ( a that O(N , B
In a similar way to the proof of Lemma 3.1 we can prove e−1 max{f ( Sk ) , f ( a∗)} , which implies : 2 ) ≤ 3e ) ≤ L(x ) ≤ 6e2
6e2
( e − 1)2 this implies that f ( a∗ ) < f ( Sk ) and from Lemma 3.1 we therefore have that OP T ≤ ( 12e e−1 )f ( Sk ) . Otherwise , we choose a∗ and since x∗ is an fractional solution , we have that O(N− , B max{f ( Sk ) , f ( a ∗
2 ) ≤ L(x∗ ) and thus :
If L(x ) >
( e−1)2
)} .
OP T ≤ 2 · O(N− ,
∗ ) + 2f ( a
B 2
( e − 1)2 + 2
∗ f ( a
)
) ≤ 12e2 and thus ai will meet the proportional share allocation rule . Since L(x∗ ) is the value of the optimal fractional solution , it can only increase when the costs are reduced , and therefore its value will be larger than that of a∗ in this case as well . In case ai = a∗ , then if L(x∗ ) > αf ( a∗ ) , the same arguments apply as in the previous case . Otherwise L(x∗ ) < αf ( a∗ ) , but since all other agents declare the same cost it must be that the value of f ( a∗ ) remains larger . Thus in all cases we get a contradiction .
The argument for showing that the mechanism has a constant factor guarantee depends on showing that L(x∗ ) and the value of the proportional share solution f ( Sk ) are close . and in both cases we obtain the desired bound . 3.2 Submodular Influence Models
In the main models studied in the past , influence is described as a step by step procedure that is governed by some probabilistic interaction rule . The seminal work of [ 20 ] shows that many of the probabilistic influence models considered in the literature are characterized by their submodularity . The two basic diffusion models studied there are the Linear Threshold and Independent Cascades models . The Linear Threshold Model In this model , for each neighbor w a node v associates a w∈N ( v ) bv,w ≤ 1 , and chooses some weight bv,w ≥ 0 where activated at time step t if threshold θv ∈ [ 0 , 1 ] uniformly at random . The node v is w∈Nt(v ) bv,w ≥ θv , where Nt(v ) denotes the neighbors of v that are active at time step t . The Independent Cascades Model Here we assume that each node v is independently influenced by each neighbor w with some probability pv,w . When a node w is activated at some time step t it has a single chance to activate each neighbor v with probability pv,w .
In each realization of the above models , the influence maximization problem becomes equivalent to the problem in the Coverage model . In the Independent Cascades Model , a realization of the probabilities of each interaction creates a graph that deterministically describes the spread of influence . We can therefore construct a reachability graph that describes for each node v the subset of nodes it influences , and the nodes influenced by a subset S is its coverage in the reachability graph . In the Linear Threshold case [ 20 ] show that the model is equivalent to a process in which each node v picks one incoming edge with probability bv,w and does w bv,w which also reduces to the Coverage model . Therefore , for both models , in any realization we can apply the mechanism described for the Coverage model . not pick any edges with probability 1 −
While the Linear Threshold model and the Independent Cascades model capture many of the influence functions considered in the past , there are more general submodular influence functions that are not captured by these models . For such models we can obtain a constant factor approximation mechanism by allowing for randomization:9 Since Lemma 3.1 applies to any submodular function , randomly choosing between the most influential agent and the proportional share allocation , guarantees , in expectation , an incentive compatible constant factor approximation mechanism .
Corollary 35 For any submodular influence function there is a randomized incentive compatible constant factor approximation mechanism . Furthermore , for any realization of the Linear Threshold and Independent Cascades models there is a deterministic constant factor approximation mechanisms that is incentive compatible . The Voter Model In the Voter model , at each time step , each agent is influenced with probability that is proportional to the number of friends that were influenced in the previous time step . This influence model has been extensively covered in the past and recently also by the computer science community [ 28 , 10 ] . More formally , assuming a set of nodes has been activated at step t = 0 , the probability of v to be influenced at time , where Nt−1(v ) denotes step t > 1 is pv,t = the subset of neighbors of v that are influenced at time step t − 1 and N ( v ) denotes the set of neighbors of v .
|{u:u∈Nt−1(v)}|
|N ( v)|
An equivalent formulation of the Voter model can be stated in terms of a random walk on the graph that represents the social network : if u is activated at time step 0 , the probability of some node v in the graph to be activated by u after t
9In general submodular functions may require a description that is exponential in the size of the problem . In such cases we can apply our mechanisms efficiently in the value query model where it is assumed that any subset can be evaluated by an oracle in polynomial time . time steps is equivalent to the probability of a random walk on the graph that starts at v and terminates at u after t steps . To see this observe that if w is activated at step 0 for t = 1 the probability of v to be influenced by its neighbor w 1|N ( v)| , and that the probability of v to be influenced at a is general time step t can be recursively computed .
The random walk process can be computed by associating a transition matrix MG with the graph . In this matrix MG(u , v ) = 1|N ( u)| if v is a neighbor of u and 0 otherwise , and the probability of a random walk that starts at node v and terminates at node u after t steps is M t G(v , u ) . Using this representation we can easily compute the expected number of nodes that terminate at u after t time steps , or equivalently the number of nodes influenced by u : G(v , u ) . Importantly , the matrix formulation implies that we can compute the expected influence of a given subset S additively : ft(u ) = v M t u∈S v ft(S ) =
M t(v , u ) .
B · ft(ai ) j≤i ft(aj )
The linearity allows using variation of the mechanism from
Section 3 with a better approximation guarantee .
Theorem 36 For the Voter Model there is an incentive compatible 4 approximation mechanism .
Proof Sketch . The mechanism is similar to the mechanism for Coverage , except that it uses the entire budget in the proportional allocation rule , and an integer programming relaxation suitable for this linear problem rather than the relaxation used in the previous mechanism . The proportional contribution of an agent ai in this case is : u∈S
( 14 ) v M t and can be efficiently computed by tal marginal contribution of a subset S is
G(v , u ) , and the tov M t(v , u ) . Due to linearity , by case analysis we can prove that an agent that declares a cost that is larger than her proportional contribution will not be allocated . This implies that the incentive compatible payments can be bounded by agents’ proportional contributions , thus allowing us to use the proportional share allocation rule with the entire budget . The approximation guarantee then follows with an analysis similar to the one in Lemma 3.1 that can be used to show that the optimal i=1 f ( ai ) + f ( ak+1 ) + f ( a∗ ) when k agents selected and a∗ is the agent with maximal influence . Similar arguments to those used above can be used to show the mechanism is monotone and incentive compatible . solution is bounded by 2k
4 . EXPERIMENTAL EVALUATION
Given the theoretical guarantees discussed above , we would like to show that our mechanisms also work well in practice . While it may be the case that our mechanisms provide theoretical guarantees in the worst case , it is not obvious a priori that they outperform simpler heuristics on representative instances . Furthermore , as we discussed above , one may argue that mechanisms with differential prices like the ones suggested here , are too complex or alternatively that eliciting costs from individuals is an unnecessary procedure . To examine these questions we performed an experimental evaluation of our mechanisms in different influence models over a large sample of a social network , and compared their performance against other mechanisms . While network data that is representative of real social networks is relatively accessible , the greatest crux in performing this experiment was the lack of knowledge about individuals’ costs for making a recommendation in their social network . To address this , we performed an experiment on Amazon ’s Mechanical Turk platform which enabled us to generate a descriptive cost distribution . 4.1 The MTurk Experiment
To obtain a distribution that is reflective of individuals’ costs to make recommendations in their social network we ran an experiment for a period of three months on Amazon ’s Mechanical Turk platform ( henceforth MTurk)[1 ] . The experiment was presented as a competition for receiving bonus money in exchange for the individual posting a recommendation for a travel agency on their Facebook wall . The workers were explained that a small number of individuals will be selected to advertise a travel agency by posting a message with commercial content in their Facebook page , and that they need to specify how much they want be rewarded and how many friends they have on Facebook . Since a posted message is automatically displayed to an individual ’s friends in Facebook , the reports on rewards in this experiment represent the reported costs we address in this work . We ran the competition with a small budget to enable cost effective data collection . Each worker who participated in the competition was paid , and the workers who won the competition received a bonus reward at least as high as their bid . 10
We ran the experiment for a period of three months . The payments for participating in the experiment varied from $0.05 to $0.50 , and the mean payment was approximately $026 We limited the experiment to workers based in the US with high approval rate ( above 97% ) . The main reason was to increase the likelihood that the worker is an active Facebook user and understands the experiment . Due to individuals’ privacy concerns we did not use verification methods provided by Facebook ( eg Facebook applications ) to establish the workers’ Facebook identities .
In the Human Intelligence Task ( HIT ) the competition details were clearly described in two sentences . An image of an example post that advertises a travel agency was provided and workers were asked to give a value of how much they would like to be rewarded for posting the message on Facebook , as well as to provide the number of friends . The example message displayed had clear commercial content , similar to content generated when users share a message of an online retailer on the Facebook platform . We chose advertising for a travel agency as it is rather generic , and is not likely to introduce significant gender or age biases . The main reason for requesting the number of friends was to enable us to examine a dependency between cost and reported number of friends , which could affect the experiment . We collected over 1 , 178 bids from over 1 , 000 different MTurk workers . In Figure 1 we plot the distribution of reported costs , the distribution of reported friends , the distribution required to complete the task , and a plot of costs vs . reported number influence function f ( S ) =
10Winners were selected by running the mechanism with the i∈S fi , where fi is the reported number of friends of agent ai . The goal in this experiment was not to test the mechanism , but rather receive the workers’ bids .
Figure 1 : Results from the MTurk experiment . of friends .
To avoid biases , we used a single bid from each worker by choosing between bids at random if a user bid more than once . The mean cost that users bid was $9.77 and the median cost was $8 . There were 307 workers who bid the maximal allowed bid ( $20 ) , and 364 who bid below $5 . The mean time to complete the HIT was 32.25 seconds which we consider to be quite low given that workers had never seen the task before .
In our experiment , in order to use the cost distribution generated by MTurk on the sampled Facebook graph , we wanted to verify that there is no correlation between the number of friends and the reported cost . First , we observed that the reported number of friends generated a distribution that is similar to the distribution of friends from crawling Facebook with a BFS search [ 13 ] . This leads us to believe that , in general , workers reported an accurate estimate of their number of friends on Facebook . We assume this is due to the fact that workers were told that if they give a false report on the number of friends they will not be eligible for the reward . The mean number of reported friends was 271.3 , the median was 185 . We then tested to see whether there is any correlation between the number of friends and the reported cost , and found no evidence for such correlation ( corr = 004 ) We see this as support to the methodology in our data simulation , where we take a cost at random from the data gathered in the MTurk experiment and assign it at random to a node from the Facebook sampled graph . We plot the costs as a function of friends in Figure 1 . 4.2 Computational Experiments Network Data To represent the social network we used a graph of 957 , 459 nodes and over 72 million edges which was sampled from the Facebook social graph via random walk [ 13 ] . The average degree of this graph is 95.2 and the median degree is 40 . Influence Models To compare the mechanisms over different influence models we implemented the Coverage , Independent Cascades ,
05101520050100150200250300350costnr . of workersReported Costs050010001500< 2000050100150200friendsnr . of workersReported Nr . of Friends050100150200050100150200time ( seconds)nr . of workersTime on HIT0200400600800< 100005101520friendscostsFriends vs . Costs Avg . costs and the Linear Threshold influence models . The Coverage model was implemented by using each agent ’s friends as its reachable set . In this implementation a node that ’s selected activates all of its friends , and the influence process does not propagate further . In the Independent Cascades model we ran two separate trials with uniform probabilities of an edge being activated . In one trial the probability of an edge being activated was 1 % and in the other trial the probability was 10 % . These choices correspond to the distributions used in [ 20 ] . In the Linear Threshold model we chose weights based on the degree distribution of nodes in the social graph . For each node v the value dv was drawn independently at random from an estimated degree distribution of the social graph . For each of its neighbors w we applied the weight bv,w = d−1 v . Since we used a subgraph of the larger Facebook social graph , we did not have the degrees of all of the nodes in the graph and therefore used the degree distribution of the subgraph as an estimate .
To have comparable reachability sets , we limited the time steps of the influence process to 5 , 10 and 25 steps in the Independent Cascades with probability 10 % , 1 % and the Linear Threshold model , respectively . Limiting the time steps seems to be reasonable in light of experimental evidence ( see eg [ 34 ] , who report that less than 5 % of diffusion processes they studied in Twitter are longer than 5 steps ) .
After applying the influence model on the graph , to simulate the bidding procedure , we randomly selected 5,000 nodes and assigned them costs from the distribution generated using the MTurk data . We ran several iterations with different budgets ranging from $100 to $5000 .
Mechanisms OPS : optimized proportional share mechanism . For the incentive compatible mechanism , we used an optimized version of the mechanisms presented above which allows us to use almost the entire budget in the allocation . Recall that the mechanism presented above uses half the budget , since this way it can ensure the total payments are within budget . Informally , the potential overpayment that imposes the budget reduction is proportional to the effect a selected agent has on the quality of the solution ( see the characterization in [ 32 ] for more details ) . Since the network structure , budget and range of bids are known to the mechanism designer , the budget used in the proportional contribution allocation can be optimized accordingly . This optimization step enabled using almost the entire budget in the allocation rule .
Benchmarks The main purpose of this work is to design mechanisms that address the inherent informational gap that arises when taking costs and incentives into consideration . In light of this , when evaluating the mechanisms on representative data sets , our goal is to compare against alternative solutions that shed light on the implications of taking incentives into consideration . Essentially , we are interested in understanding the implication of our lack of knowledge of the agents’ costs ( we compare the mechanism against the greedy algorithm that has full knowledge of the costs ) and whether knowing agents’ costs is indeed necessary ( we compare against a near optimal uniform price mechanism that is given access to the costs to establish the optimal reward ) . In both cases we conducted theoretical comparisons ( see Corollary 3.5 and Appendix A ) and our goal here is to conduct an empirical comparison .
Figure 2 : Figures of the different mechanisms with budgets ranging from 50 to 500 .
We further discuss alternative mechanisms in Section 5 .
Greedy : algorithmic upper bound . To draw an algorithmic upper bound , we ran the greedy submodular maximization algorithm that accommodates for a budget ( as opposed to a cardinality ) constraint , which is known to work very well both in theory and in practice [ 21 , 25 ] . Of course , the algorithm is not incentive compatible and assumes full knowledge of the agents’ costs .
Uniform price : cost oblivious upper bound . In order to gain insight to whether differential pricing is necessary in practice , we compared against a near optimal uniformprice mechanism . We describe the mechanism in Appendix A . The mechanism provides an O(log n ) approximation guarantee , which is nearly optimal in the class of uniform price mechanisms ( see lower bound in Appendix A ) . It is important to emphasize that this mechanism represents an upper bound on how well influence maximization algorithms can do assuming uniform rewards are sufficient .
Random : lower bound on algorithmic performance . Finally , we also compared against a random assignment mechanism . The mechanism chooses agents at random and pays them their declared cost . We use this mechanisms to describe how well one can do without any algorithmic machinery . Despite its poor theoretical guarantees , our evaluation shows that in practice this lower bound outperforms the uniform price mechanism in some cases . Note that this mechanism is not incentive compatible since it pays agents their bids . This mechanism is algorithmically stronger than its incentive compatible versions . To make the existing mechanism incentive compatible one would need to pay each agent $20 , which gives a uniform price mechanism or alternatively offer random rewards . The random assignment mechanism is an upper bound on both of these mechanisms . 4.3 Results
In Figure 2 we plot the results from the experiments with budgets in the range 50–500 . In the Coverage model , for a small budget the proportional share mechanism is comparable with the greedy algorithm . As the budget increases one can witness the growing gap . Similar behavior is apparent
01002003004005000246810121416x 104budgetactive set sizeCoverage GreedyOPSUniformRandom01002003004005000123456x 104budgetactive set sizeLinear Threshold GreedyOPSUniformRandom01002003004005000246810121416x 104budgetactive set sizeInd . Cascades 1 % GreedyOPSUniformRandom01002003004005000051152x 105budgetactive set sizeInd . Cascades 10 % GreedyOPSUniformRandom the seed graph of 5000 nodes we used , the average degree was 1703 Recall that in this model the number of nodes influenced is the number of friends that is covered by the selected subset . In this experiment , for almost all of the different budgets , the performance of the mechanisms had the same ordering : greedy , proportional share , uniform price and the random assignment . As one may expect the random assignment mechanism follows an almost perfect linear increase in performance as the budget increases . While the proportional share mechanism dominates the uniform price method , the gap is less dramatic in this model .
When comparing against the greedy benchmark , it seems that in this model , as the budget increases , the gap between the two mechanisms grows . The analysis in Lemma 3.1 guarantees that if the contribution of the agent with highest influence is not greater than the rest , the gap between the two mechanisms will converge to a factor of two . Interestingly , this gap is almost achieved when the budget is 5000 . Since the proportional share solution is a subset of the greedy solution , this effect implies that the “ least valuable ” half of the greedy solution is as valuable as the “ most valuable ” half . In the Coverage model on this graph there is little overlap between the nodes’ reachability sets , which can explain this phenomenon . This effect implies that the budget is well exhausted . To test this we applied the same experiment in this model with larger budgets and discovered that the ratios begin to shrink at a budget of about 10000 . In the other influence models , the gap between the greedy and the proportional share mechanisms is relatively small .
5 . DISCUSSION
In this paper we presented mechanisms that incentivize individuals to become early adopters in some of the wellstudied models of influence maximization . The negative results presented here for uniform price mechanisms suggest that differential price mechanisms are necessary .
An alternative to the approach we presented here would be to use posted price mechanisms , where agents are offered take it or leave it offers , and the mechanism can adjust its offers based on their responses . Such mechanisms are by default incentive compatible . The positive results we present here for incentive compatibility can serve as foundations for natural next steps in this direction .
Lastly , the emergence of crowdsourcing and user generated content on the web present challenges that are similar to the ones addressed in this work . Beyond the scope of influence maximization , it seems that incentive based mechanisms can broaden the arsenal of powerful techniques in the data mining realm , and become useful machinery .
6 . ACKNOWLEDGMENTS
The author was supported by the Microsoft Research grad uate student fellowship and the Facebook fellowship .
7 . REFERENCES
[ 1 ] Mechanical turk . In https://wwwmturkcom/ [ 2 ] A . A . Ageev and M . Sviridenko . Pipage rounding : A new method of constructing algorithms with proven performance guarantee . J . Comb . Optim . , 8(3):307–328 , 2004 .
Figure 3 : Figures of the different mechanisms with budgets ranging from 100 to 5000 . when running with larger budgets , as further discussed below . In this model the uniform price mechanism is comparable with the proportional share . Thus , for Coverage it seems that despite its theoretically poor guarantees , the uniform price mechanism seems to be at least a constant fraction from the proportional share and greedy mechanisms . This is mainly due to the fact that the budgets are rather small in comparison to the variance in cost distribution and the marginal value of individuals . Note that in this mechanism in some cases the value in performance decreases while the budget increases . This is due to the fact that at each budget iteration the mechanism uses the given cost distribution to estimate a threshold price , and while the budget may increase , using the value maximizing bin is not optimal .
In the Independent Cascades model , Figure 2 shows experimental evidence of the poor performance of the uniform price mechanism , in sharp contrast to the Coverage model . This shows that in cases where nodes have larger reachability sets , the uniform price mechanism provides poor guarantees that correspond to its theoretical performance . Furthermore , it seems that this mechanism is not a strict improvement over the random assignment one .
The poor performance of the uniform price mechanism can be further observed in the Independent Cascades models with probabilities set to 10 % and the Linear Threshold model in Figure 2 as well as in the experiments with the larger budgets . These results imply that even when one has perfect knowledge about the cost distribution and can extract a near optimal uniform threshold value , the resulting solution will have poor quality not only in theory but also in practice . We consider this to be a strong argument for the use of differential price mechanisms in these settings .
Observe that the proportional share mechanism exhibits a “ step function ” behavior : at certain points it levels off , and continues in a steep ascent . This implies that there are budgets which are exhausted well by the mechanism , and exploring these optimal budget points can be crucial when designing viral marketing campaigns .
In Figure 3 we plot the performance of the different mechIn anisms when the budgets are in the 100–5000 ranges .
01000200030004000500001234x 105budgetactive set sizeCoverage GreedyOPSUniformRandom01000200030004000500001234x 105budgetactive set sizeLinear Threshold GreedyOPSUniformRandom0100020003000400050000051152x 105budgetactive set sizeInd . Cascades 1 % GreedyOPSUniformRandom01000200030004000500001234x 105budgetactive set sizeInd . Cascades 10 % GreedyOPSUniformRandom [ 3 ] D . Arthur , R . Motwani , A . Sharma , and Y . X . 0002 .
Pricing strategies for viral marketing on social networks . In WINE , pages 101–112 , 2009 .
[ 4 ] E . Bakshy , J . M . Hofman , W . A . Mason , and D . J .
Watts . Everyone ’s an influencer : quantifying influence on twitter . In WSDM , 2011 .
[ 5 ] N . Chen . On the approximability of influence in social networks . In SODA , pages 1029–1037 , 2008 .
[ 6 ] N . Chen , N . Gravin , and P . Lu . On the maximization of submodular functions . In Technical Report , pages CMU– CALD– 0 5 – 1 0 3 , 2005 .
[ 24 ] J . Leskovec , L . A . Adamic , and B . A . Huberman . The dynamics of viral marketing . In ACM Conference on Electronic Commerce , pages 228–237 , 2006 .
[ 25 ] J . Leskovec , A . Krause , C . Guestrin , C . Faloutsos , J . M . VanBriesen , and N . S . Glance . Cost effective outbreak detection in networks . In KDD , pages 420–429 , 2007 . approximability of budget feasible mechanisms . 2011 .
[ 26 ] M . Mathioudakis , F . Bonchi , C . Castillo , A . Gionis ,
[ 7 ] S . Dobzinski , C . Papadimitriou , and Y . Singer .
Mechanisms for complement free procurement . In EC , 2011 .
[ 8 ] P . Domingos and M . Richardson . Mining the network value of customers . In KDD , pages 57–66 , 2001 .
[ 9 ] P . D¨utting , M . Henzinger , and I . Weber . How much is your personal recommendation worth ? In WWW , pages 1085–1086 , 2010 .
[ 10 ] E . Even Dar and A . Shapira . A note on maximizing the spread of influence in social networks . Inf . Process . Lett . , 111(4):184–187 , 2011 .
[ 11 ] C . Faloutsos , K . S . McCurley , and A . Tomkins . Fast discovery of connection subgraphs . In KDD , pages 118–127 , 2004 .
[ 12 ] A . Ghosh and A . Roth . Selling privacy at auction . In
ACM Conference on Electronic Commerce , pages 199–208 , 2011 .
[ 13 ] M . Gjoka , M . Kurant , C . T . Butts , and
A . Markopoulou . Walking in Facebook : A Case Study of Unbiased Sampling of OSNs . In Proceedings of IEEE INFOCOM ’10 , San Diego , CA , March 2010 . [ 14 ] M . Gomez Rodriguez , J . Leskovec , and A . Krause .
Inferring networks of diffusion and influence . In KDD , pages 1019–1028 , 2010 .
[ 15 ] A . Goyal , F . Bonchi , and L . V . S . Lakshmanan .
Learning influence probabilities in social networks . In WSDM , pages 241–250 , 2010 .
[ 16 ] N . Haghpanah , N . Immorlica , V . S . Mirrokni , and
K . Munagala . Optimal auctions with positive network externalities . In ACM Conference on Electronic Commerce , pages 11–20 , 2011 .
[ 17 ] J . D . Hartline , V . S . Mirrokni , and M . Sundararajan . Optimal marketing strategies over social networks . In WWW , pages 189–198 , 2008 .
[ 18 ] M . O . Jackson and L . Yariv . Diffusion of behavior and equilibrium properties in network games . American Economic Review , 2007 .
[ 19 ] A . R . Karlin , D . Kempe , and T . Tamir . Beyond VCG :
Frugality of truthful mechanisms . In FOCS , pages 615–626 , 2005 .
[ 20 ] D . Kempe , J . M . Kleinberg , and ´E . Tardos .
Maximizing the spread of influence through a social network . In KDD , pages 137–146 , 2003 .
[ 21 ] S . Khuller , A . Moss , and J . S . Naor . The budgeted maximum coverage problem . Inf . Process . Lett . , 70(1):39–45 , 1999 .
[ 22 ] J . Kleinberg and P . Raghavan . Query incentive networks . In Proc . 46th IEEE Symposium on Foundations of Computer Science , pages 132–141 , 2005 .
[ 23 ] A . Krause and C . Guestrin . A note on the budgeted and A . Ukkonen . Sparsi cation of influence networks . In KDD , 2011 .
[ 27 ] E . Mossel and S . Roch . On the submodularity of influence in social networks . In STOC , pages 128–134 , 2007 .
[ 28 ] E . Mossel and G . Schoenebeck . Reaching consensus on social networks . In ICS , pages 214–229 , 2010 .
[ 29 ] R . Myerson . Optimal auction design . Mathematics of
Operations Research , 6(1 ) , 1981 .
[ 30 ] G . L . Nemhauser , L . A . Wolsey , and M . L . Fisher . An analysis of approximations for maximizing submodular set functions ii . Math . Programming Study 8 , pages 73–87 , 1978 .
[ 31 ] M . Richardson and P . Domingos . Mining knowledge sharing sites for viral marketing . In KDD , pages 61–70 , 2002 .
[ 32 ] Y . Singer . Budget feasible mechanisms . In FOCS , pages 765–774 , 2010 .
[ 33 ] Y . Singer and M . Mittal . Mechanisms for online labor markets . In Workshop on Human Computation , 2011 .
[ 34 ] J . Yang and S . Counts . Predicting the speed , scale , and range of information diffusion in twitter . In ICWSM , 2010 .
APPENDIX A . BOUNDS ON UNIFORM PRICES
Theorem A1 Even for f ( S ) = price mechanism can approximate better than Ω , i∈S f ( ai ) no uniform log n log(log n )
.
Proof . Consider the instance in which ci = f ( ai ) = 1/i for all i ∈ [ n ] and we have a budget of B = log n . For any uniform price mechanism that uses the price p , the solution will include log n/p items . The value from this will be : log n/p log n/p
1/i − 1/p
1/i =
1/i = O(log(log n ) ) i=1/p i=1 i=1
Note that the optimal solution which pays each agent her declared cost has value O(log n ) .
A Near optimal Uniform Price Mechanism . The algorithm divides the agents into bins based on their cost , where an agent i is binned in bin j if her cost is between B/2j and B/2j+1 , and uses the greedy algorithm to find the optimal solution in each bin . The bin that returns the highest value is used as the optimal uniform price . It is easy to show that this algorithm is a O(log n ) approximation .
