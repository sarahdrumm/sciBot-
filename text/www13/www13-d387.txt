Discovering Temporal Hidden Contexts in Web Sessions for User Trail Prediction
Julia Kiseleva , Hoang Thanh Lam ,
Mykola Pechenizkiy
Department of Computer Science Eindhoven University of Technology the Netherlands
{jkiseleva,tlhoang,mpechenizkiy}@tuenl
Toon Calders
Computer & Decision Engineering
Université Libre de Bruxelles
Belguim
ToonCalders@ulbacbe
ABSTRACT In many web information systems such as e shops and information portals , predictive modeling is used to understand user ’s intentions based on their browsing behaviour . User behavior is inherently sensitive to various hidden contexts . It has been shown in different experimental studies that exploitation of contextual information can help in improving prediction performance significantly . It is reasonable to assume that users may change their intents during one web session and that changes are influenced by some external factors such as switch in temporal context eg ‘users want to find information about a specific product’ and after a while ‘they want to buy this product’ . A web session can be represented as a sequence of user ’s actions where actions are ordered by time . The generation of a web session might be influenced by several hidden temporal contexts . Each session can be represented as a concatenation of independent segments , each of which is influenced by one corresponding context . We show how to learn how to apply different predictive models for each segment in this work . We define the problem of discovering temporal hidden contexts in such way that we optimize directly the accuracy of predictive models ( eg users’ trails prediction ) during the process of context acquisition . Our empirical study on a real dataset demonstrates the effectiveness of our method .
Categories and Subject Descriptors I26 [ Artificial Intelligence ] : Learning ; H35 [ Information Storage and Retrieval ] : On line Information Services Web based services
General Terms Algorithms , Measurement , Experimentation
Keywords Temporal Web analytics , Context awareness , Browsing behaviour
1 .
INTRODUCTION
Exploitation of contextual information for predictive modeling has been emerging as an important research topic hav
Copyright is held by the International World Wide Web Conference Committee ( IW3C2 ) . IW3C2 reserves the right to provide a hyperlink to the author ’s site if the Material is used in electronic media . WWW 2013 Companion , May 13–17 , 2013 , Rio de Janeiro , Brazil . ACM 978 1 4503 2038 2/13/05 . ing an exposure in computational advertising [ 6 , 2 ] , recommender systems [ 13 , 1 , 14 ] , web search and other related areas [ 17 ] . In many web applications , explicit contextual information is available along with data . However , hidden contexts can be latent in data and discovering them is a challenging problem . It has been shown that contextual information is useful for predictive analytics such as user ’s trail prediction [ 4 ] . For example , in a weblog of users’ activities on a website , the contextual information such as the user ’s ( current ) location , used device or gender can split users into subgroups sharing similar backgrounds . Users in the same group usually behave in a similar way . Therefore , their intentions are easier to recognize when the predictive models cleverly leverage the available contextual information .
There are several important groups of research questions in context aware predictive analytics related to hidden context discovery , context management and context integration into predictive modeling . We focus on one of the most general questions from the first group : “ How to discover a set of useful hidden contexts from a web session ? ” In particular , we want to show that temporal hidden contexts help to improve users’ trail predictions .
Users usually perform actions in a sequential manner on a website and the set of all actions are given . The goal is to predict the next action each user will perform given historical data about user activities . For instance , in Figure 1 , we present a web session as a sequence of user ’s actions ( a , b , f , d , c , a , a ) ( from the alphabet {a , b , c , d , e , f} ) . We assume that under one context users perform a specific set of actions and when the context is switched to another one , another set of actions are performed . That means a context is defined as an external factor which is associated with a specific set of user actions . For instance , in a web session , there are sets of actions associated with the context like “ search ” while there are other sets of actions associated with the context like “ buying ” .
In the general case , sets of actions belonging to different contexts can be intersect but in this work we only consider a simplified case when all contexts are disjoint . In that specific case , a web session will be split into segments each contains only actions belong to a context . If contexts are discovered in an appropriate way , actions in a segment are homogeneous , thus , it is easier to be predicted . Given the set of all possible actions , this work aims at splitting the set into k disjoint subsets each corresponding to a hidden context such that the local prediction models built for each context make prediction better than the global model built for the whole
1067 t7 t6 t4 t3 t2 t1 t0 a a c d d ddd f f f bb b a a e n i l e m T i
Context 2 ( abc)– Context 2 ( abc)– “ find information ” “ find information ”
Predictive Model 4 Predictive Model 4 ctive M
Context 1 ( def ) – Context 1 ( def ) ff –
“ buy “ buy product ” product ” p
Predictive Model 5 P P Predictive Model 5 ctive M
Context Switch
Figure 1 : An example of temporal hidden contexts that are reoccurring in user ’s trail ( a , b , f , d , c , a , a ) data . We formulate the context discovery process as an optimization problem . Subsequently , we propose a hierarchical clustering algorithm to solve the problem . The experimental results with a real word use case show that our approach is able to discover temporal contexts which allow to improve the prediction performance significantly .
The set of discovered contexts not only helps improve prediction performance but also provides a useful summary about users’ behaviour even when domain experts are not available and data exploration gives only partial knowledge about the data . For example , context Csearch describes a situation when user searches or Crecommend depicts a user behaviour when user follows site recommendation . A good user behaviour summary allows us to make an aware decision on what basic hypothesis to create and how to mine the data .
In summary , our major contributions are : • We formulate the problem of temporal context discov ery as an optimisation problem .
• A hierarchical clustering method is proposed to determine the optimal number of hidden contexts and mine temporal contexts .
• We show a real world use case in which the contexts as we defined them do exist and are useful for prediction .
The roadmap of this paper is as follows . In Section 2 we introduce notation . In Section 3 we formalise the problem of temporal hidden context discovery . We report our experimental results in Section 4 . In Section 5 we discuss related work . Finally we conclude our study in Section 6 .
2 . PRELIMINARIES
Data representation . The general representation of users’ historical behavior is given as a log with web sessions : D = {s1 , s2 , . . . , sn} . Given a set A = {a1 , . . . , am} of event types , an event is a pair ( A , t ) , where A ∈ A is an event type and t is the occurrence time of event . The web session of the user is an ordered sequence of events : s = fi(A1 , t1 ) , ( A2 , t2 ) , . . . ,( An , tn)'
( 1 ) such that Ai ∈ A for all i ∈ [ 1 , n ] and ti ∈ [ ss , se ] , ti < ti+1 for all i ∈ [ 1 , n − 1 ] , where ss , se are integers denoting the starting and ending time of the session . Note that we do not have ti = ti+1 , ie several events cannot occur at the same time . Let denote T = [ ss , se ] as a segment .
In our case the users’ behaviour is categorized by the types of events eg searches , clicks on ads or homepage visits . As a running example , we consider a website containing six possible activities with categorical labels a , b , c , d , e and f . Every user visiting the website produces a sequence of transition activities corresponding to the categories that the user has visited . In this example , D is the set of possible sequences of activities from the categories a , b , c , d , e and f .
Contextual features and categories . Let Θ = {C1 , ×···C i × ··· × CN} be the space of all possible contextual features associated with each segments T of the data instance s ( Equation 1 ) . Where each Ci is a contextual feature and θs is a vector of the contextual features associated with sequence s at time ti . Let M : Θ × D × T ff→ V be a predictive model that maps each test sequence s ∈ D associated with the contextual information θs at time ti ∈ T to the decision space V . Let F ( s , M ( θs , s ) ) : D × V ff→ R be the function evaluates how good a model is . For example , in the case which predicts the next activity which the user will perform , the decision space V is the same as the data instance space , ie V ≡ D . An example of the evaluation function is the number of true predictions made by M over the test instance s . For instance , assume that the model M predicts s = ababc as M ( θs , s ) =ab edc then it makes three true predictions corresponding to the underlined activities , ie F ( s , M ( θs , s ) ) = 3 .
Given a class of predictive model M , we are looking for h small models from M such that a user ’s behaviour is explained better by single model compared to global model . Namely the set of individual models give better evaluation then global model . Let M = {M1 , M2 , . . . , Mh} be a set of individual learning procedures from class M . Let C be a context with n categories : Cat = {Cat1 , Cat2 , . . . , Catn} associated with segment of data instance s ∈ D at time ti . A function G maps contextual feature to categories , eg the contextual feature ‘a user mood’ can be mapped into three different categories such as {good , neutral , bad} . Each contextual category is mapped to a learning model by function H . Each Mi maps each session sequence s ∈ D to decision space V such as Mi : D → V .
The ultimate task in this work is to learn a prediction function to foretell the next users’ actions on the site and F ( s , Mi ) :s × ti × V ff→ R be the evaluation function for model Mi .
The context awareness is the special way to design the learning process that restricts the search space of M by defining in case of explicit context or discovering in case of hidden context the following functions :
1 . The mapping from contextual features to the contex tual categories : G : Θ → Cat ;
2 . The mapping between contextual categories and indi vidual learners : H : Cat → M .
1068 Definition 1
( Temporal Context Awareness ) . The temporal context awareness is a quadruple ( θs , G , H , ti ) .
Web session decomposition . The segmentation Segi is defined separately for each web session si ∈ D by ( k + 1 ) segment boundaries : 1 = b1 < b2 < ··· < bk < bk+1 = ( |si| + 1 ) . The general segmentation for the set of sessions is specified as :
L = {(Seg1 , . . . , Segk)i}|D| i=1 , where Segi is homogenous segment of the session . The probi=1} and ( 2 ) to lem is ( 1 ) to discover a set of h contexts {C h decompose each si ∈ D into k segments and ( 3 ) for each segments Segj and assignment of the context Ci .
( 2 )
3 . MINING TEMPORAL CONTEXTS 3.1 Problem Definition
We assume that the data are generated as follows : the events alphabet A is produced by h contexts . Under one specific context , the web session is generated by the events in that context only . Under that assumption , our goal is to decompose the web session ( 1 ) , which is the sequence of users’ actions on the site , into homogeneous pieces , such that the data in each segment can be described accurately by a temporal context Ci and a simple prediction model Mi . Formally , we have to decompose the event space into clusters each corresponds to a hidden context .
Definition 2
( Events Clustering ) . A clustering of web session events A is E = {E1 , . . . , Eh} , where Ei is a cluster of A and each Ei must satisfy the following properties :
• each cluster is not empty : ∀Ei ∈ E : Ei )= ∅ ; • all clusters are pairwise disjoint : ∀i )= jEi ∩ Ej = ∅ ; • every event belongs to one cluster : ∪iEi = A .
The decomposition of the event space is not arbitrary but aims at maximizing the accuracy of the local models built for every context . Given the original log of sequences D that is randomly divided two disjoint Dtrain , Dvalidation and Dtest . A decomposition of the event space into h clusters uniquely splits each sequence in the data into segments . Let Ttrain = ∪F req(Ci ) ( Segj ∈ Dtrain ) be the set of segments in the training set that corresponds the context Ci . We learn sets of predictive models {Mi}h i=1 based on h sets of sessions segments . We validate our set of models based on Tvalidation = ∪F req(Ci ) ( Segj ∈ Dvalidation ) . And we test ( Segj ∈ Dtest ) . resulted clusters based on Ttest = ∪F req(Ci ) The effectiveness of one learner can be defined as : j=1 j=1 j=1
.
Fci ( Tvalidationi , Mi ) =
F ( aj , Mi )
( 3 ) aj∈Tvalidationi
For a given decomposition E , at the transition point , we always make wrong prediction . Therefore , the effectiveness of a decomposition E can be defined as :
EF ( E ) = h . i=1
Fci ( Tvalidationi , Mi )
( 4 )
The problem of temporal context discovery is defined as an optimization problem where the goal is to find the event space decomposition E such that the prediction performance EF ( E ) is maximized . We evaluate derived E based on the test set Ttest and provide obtained accuracy that is calculate as in Equation 4 . 3.2 Hierarchical clustering
Based on Equation 4 our objective function for the hier archical clustering is :
∗
EF
= arg max
E
EF ( Tvalidation , M ) ) ,
( 5 )
∗ where E is optimal clustering that satisfies Definition 2 .
Algorithm 1 shows the general framework of ‘Temporal Clustering Discovery’ . We start by placing each item in its own cluster ( line 1 ) and building predictive models based on training sets that are related to each cluster ( line 2 ) . For example , we have two clustersE 1 = {a , b , c} and E2 = {d , f , e} and a training set T rain . We split T rain into two parts that are related to each clusters accordingly : fi'ff abcb covered by E1
T rain = acbfi'ff covered by E1 fi 'ff ababba
/
/
/ effi'ff covered by E2 fi'ff ef de
/
/ aafi'ff covered by E1 abfi'ff covered by E2 covered by E1 ef dfi'ff covered by E1 covered by E2
We obtain the following disjoint sets of sub sessions :
T rainE1 = {abc , ab , ac , ab , ab , ab} T rainE2 = {ef d , ef de , ef , ef de , ef}
( 6 )
( 7 )
Next , we build two prediction models : M1 and M2 based on T rainE1 and T rainE1 respectively . Then , we calculate effectiveness of obtained models by applying them on V alidation ( line 3 ) . We decompose the validation session using the same way as in 6 :
V alidation = fi 'ff abcac predict by M1 fi'ff acab predict by M1 abfi'ff
/
/
/ fi'ff ef de predict by M2 fi'ff ef de predict by M2 effi'ff
/ abbafi'ff predict by M1 predict by M2 predict by M1
( 8 )
Then we iteratively detect two clusters which increase the general effectiveness ( line 7 ) of the predictive system and merge them ( line 9 ) . In other words , during each iteration the method tries to increase the general effectiveness ( 4 ) of the system . If a merge increases the system effectiveness , the algorithm keeps it ( line 8 9 ) . We have resulted set of clusters E and set of predictive models {Mk}h k=1 . We return best clusters ( line 12 ) .
The additional benefit of the suggested method is that it produces the “ best ” number of clusters thus discover number of hidden contexts . The general schema of proposed clustering technique is presented also in Figure 2 ( Algorithm 1 ) for our the running example .
1069 Clusters : a b c d e a b d e f d f c
C1 a bc bc bc de de de e adc adc aadc c def def d defdef
C2 f
C3
C4 adc adc
C3 def def
S e s s i o n
L o g a b c b ba e c e f f d a a e a b a a a a c a b e b a b c a c e b b a e f d e f d f d e a f b b a a b e a b c a c e d f a b a e f d f f a b d b e f d d b a
C1
→ {Mi}i=1
6
C2
→ {Mi}i=1
4
C3
→ {Mi}i=1
2
→ M
C4
EF1 EFEE 1
EF2
EF3 FEEEEE F3FF
EF4 EFFEE 4FF
Max MaxMMaxMMaxMaxMaxMaxMMaxMM
•  Clusters • C {a,d,c} { and {d,e,f} •  Number clusters = 2
Algorithm 1 .
4 {Acci}i=1 {{A
Experimental evaluation .
T r a i n
Va lid ati on
T T e e s s t t
Figure 2 : The general schema of proposed hierarchical clustering technique . The process of dividing training , validation and test sets is represented in Equation 6 , Equation 8 and Equation 9 respectively .
Algorithm 1 Temporal contexts discovery ( TCD ) Input : A web session dataset D , train sessions T rain , validation sessions V alidation , test sessions T est , predefined type of predictive model M
Ei , Ej
Output : A clustering of events E =∪h i=1Ei 1 : E ← {{a}|a ∈ A} 2 : M ← buildP redictiveM odels(T rain , E ) ) 3 : EFopt ← argmaxE E(V alidation , M ) 4 : while |E| > 1 do 5 : 6 : Mk ← buildP redictiveM odel(T rain ∩ ( Ei ∪ Ej ) ) 7 : 8 : 9 : 10 : 11 : end while 12 : return E
EFopt ← EF ( V alidation , Mk ) E ← Ei ∪ Ej end if if EF ( V alidation , Mk ) > EFopt then
3.3 Evaluation of hierarchical clustering In order to evaluate obtained clusters we decompose the test set T est according to resultedE = {E1 , E2} as presented in Equation 9 . As an evaluation metric we use accuracy which is presented in Equation 10 . fi'ff bcac predict by M1
T est = fi'ff abab predict by M1 abfi'ff
/
/
/ fi'ff edf e predict by M2 fi 'ff f f df predict by M2 f ddfi'ff
/ bafi'ff predict by M1 predict by M2 predict by M1
( 9 )
Accuracy(E ) = h . i=1
Fci ( Ttesti , Mi )
( 10 )
The general schema of the proposed experimental evaluation is described also in Figure 2 ( Experimental Evaluation ) for either our or the running example .
3.4 Defining Context Awareness
The main reason to introduce the context awareness into the predictive system is to improve the quality of forecast . Our hypothesis is that there are some external forces which change users’ behaviour during a web session . We called these effects temporal contexts . If we can discover these contexts and build local predictive models for each context then we can improve the general effectiveness of the model ( Equation 4 ) . Algorithm 1 for Temporal contexts discovery directly optimizes the general effectiveness ( Equation 5 ) .
Since we aim to ameliorate the quality of the next users’ action prediction and we have web sessions , which are defined as sequences of users’ actions , it is logical to apply the Markovian models [ 8 ] , [ 3 ] ,[10 ] , [ 15 ] . For simplicity of computation we apply first order Markov models because we aim to see the difference between global and local models . If we get improvement for the first order Markov models , then we might have the increase in quality for the variable order Markov models [ 3 ] .
The identified context awareness is :
1 . The mapping from session events ai to the clusters Ej that are the contextual features and the contextual categories respectively : G : ai → Ej . Therefore the mapping G is identified by Algorithm 1 .
2 . The mapping between the clusters Ej and predictive models Mj is H : Ej → Mj . We train Markov models Mj based on T rainEj ( as presented in the Equations 6 7 ) .
Therefore , the temporal context at time ti is quadruple
( ai , G , H , ti ) .
4 . EXPERIMENTAL STUDY
We outline now the experimental methodology we employed to test Temporal Context Discovery algorithm that we presented . The goal of experimental study is to show that introducing of temporal contexts improves predictive accuracy . We first describe the dataset that we used for experiments , and then the design of the experiments .
1070 4.1 Data
&OLFN RQ &RXQWU\ /LQN
%DQQHU &OLFN
( PSW\ VHDUFK UHVXOW
8QLYHUVLW\ 6SRWOLJKW ,PSUHVVLRQ
5HILQH 6HDUFK
4XLFN 6HDUFK
%DVLF 6HDUFK
3URJUDP ,PSUHVVLRQ LQ ODQGLQJ SDJH
)LOH 9LHZ
3URJUDP ,PSUHVVLRQ LQ VHDUFK UHVXOWV
&OLFN RQ 8QLYHUVLW\ /LQN
; QRGH 6XEPLW ,QTXLU\
3URJUDP ,PSUHVVLRQ LQ UHODWHG SURJUDPV
6XEPLW 4XHVWLRQ
8QLYHUVLW\ ,PSUHVVLRQ RQ QHDUE\ XQLYHUVLWLHV
3URJUDP OLQN FOLFN
Figure 3 : A user navigation graph
The anonymized dataset for case study comes from MastersPortaleu The web portal provides information about various study programmes in Europe . It was launched in 2007 . In May 2012 , MastersPortal.eu received over 1.5 million visits ( excluding robots ) and contained over 25.000 study programs .
MastersPortal.eu has a categorisation of actions that a user can perform on website . These actions are used to describe users’ trails . These users’ paths on the website can be transferred into a navigation graph .
Definition 3
( User navigation graph ) . A user navigation graph is a directed and weighted graph G = ( V , E ) , where V is a set of vertices corresponding to all possible user actions A and E are the set of edges ( ai , aj ) . Each edge e of G is associated a weight w(e ) indicating the transition probability between two incident vertices of the edges .
The users’ navigation for the MastersPortal.eu is demonstrated in Figure 3 , where possible values for users’ actions ai are presented . In total we consider sixteen major possible users’ actions A = {a1 , a2 , . . . , a16} as presented in Figure 3 . Different kinds of actions include the following categories : • general type of actions on the site are views , clicks , submissions , impressions , and searches ( quick simple search from homepage , basic when user uses special search page , refined when additional filters are used ) ;
• users can view a study file with additional informa tion ;
• users can click on a banner , or country information link , or a university link , or a program link ;
• users can have feedback from the site through submit : question or inquiry ;
• impressions are refereed to the recommendation ac tions ;
• X node is the action which is out of the categorisation scope .
The data set for the experiment contains all navigation paths of visitors of the website collected during May 2012 . The log data contains about 350.000 anonymized sessions 1 . 4.2 Results
HMM TCD Global M . y c a r u c c A
0.6
0.5
0.4
0.3
0.2
123456789
3 1
4 1
5 1
6 1
2 1 # Clusters/States
0 1
1 1
Figure 4 : Resulted effectiveness
Baseline for temporal context discovery . An alternative approach to analyze the sequential data is a Hidden Markov Model ( HMM ) [ 11 ] . This model observes whatever the data is generated by an unknown process that takes several unobserved states , and different states output different observation .
We have defined context awareness in Section 3.4 which is used in Algorithm 1 . We have implemented “ Temporal contexts discovery ( TCD ) ” that is presented on he Algorithm 1 in order to obtain clusters of users’ activities . Each cluster is associated with a temporal context according to Definition 1 .
We have run 10 times both algorithms : HMM and TCD .
The method was trained and tested based on randomly splited data . The obtained average metrics are presented Figure 4 . It is clear from the plot that TCD outperforms HMM .
1We made this dataset publicly available as a benchmark . Please refer to the section Code and Datasets section at http://wwwwintuenl/~mpechen/projects/capa/
1071 The accuracy of global model “ Global M . ” is depicted as green dot in Figure 4 . The global model equals to TCD when TCD has one cluster . We also show that the set of contextual local models outperforms the global model .
Our objective function for TCD reaches a maximum when number of clusters equals to 7 . Therefore , an average number of elements in the cluster is 23 It happens because users use repetitive states as shown in Equation 11 . si = fi fi ( A1 , t1 ) , . . . ,( Ai , ti ) , . . . ,( A8 , t8 )
'ff
,
Ai = ‘Program impressions in related programs’
. . . , fi 'ff ( A9 , t9 )
A9=‘Click on Banner’
'
( 11 )
Table 1 : The resulted clusters
Id 1
2
3
4
5
6
7 to in
Summary Intensive Search Explore formation related program Start browsing Explore country information Explore search result of
Explore program
Cluster Basic Search , Refine Search , Empty Search Result Program impression in search result , Banner click , Program click , Click on university link
University Spotlight Quick search File view , Click on country link impression ,
Program impressions in search results , University impression on nearby universities Program in landing page , Submit inquiry Submit question , X node
Table 1 presents seven clusters that we discovered in the dataset . We provide a summary for each cluster in the table . Such summary can be used to provide a users’ roadmap on the site . It helps to better understand the user ’s behaviour on the site and to discover existing problems . Like in our example , the cluster “ Intensive Search ” shows that users encounter a problem in order to find information . The cluster 7 looks like an outlier because the action ‘Submit question’ can be made from every page on the site , and we can’t decipher ‘X node’ . It is a good point that algorithm can filter out the noise .
Figure 5 provides some further insights on the interpretability of the obtained clustering . The figure shows the correspondence of available navigation across the website pages and obtained clusters . We intensity of colors correspond to the values of Jaccard index between the page and the cluster . There is some strong relation between the possible actions that users can perform at certain website pages and corresponding clusters ; there are five pages that correspond pretty well to four clusters . We are not interested in cluster ‘Outlier’ , so we do not discuss it :
1 . ‘University page’ corresponds to cluster ‘Explore infor mation related to program’ ;
Pages
Question Submission
Search Result
Program Page
Country Page
Homepage
Inquiry Submission University Page o t d e t l a e r m a r g o r p l e r o p x E n o i t a m r o n f i s r e t s u C l r e i l t u O t r a S t i g n s w o r
B n o i t a m r o n f i y r t n u o c e r o p x E l t l u s e r h c r a e s e r o p x E l i e v s n e h c r a e S t n
I l e r o p x E m a r g o r p
Figure 5 : Visualization of the clusters .
2 . ‘Inquiry submission page’ corresponds to cluster ‘Ex plore country information’ ;
3 . ‘Homepage’ corresponds corresponds to cluster ‘Start
Browsing’ .
This type of analysis might help to improve design of a website . But for our study it serves as an additional evidence that the proposed approach for hidden context discovery is reasonable .
5 . RELATED WORK
Context often has a significant impact on the way humans ( or machines ) act and on how they interpret things ; furthermore , in context switching causes a transformation in the experience that is going to be lived . Predictive Web Analytics’ goal is to foretell users’ interests based on the discovered behaviour patterns and it can be considered as a particular case of a context aware application . Many studies have demonstrated that integrating context awareness into predictive modeling helps to better understand user information needs and improves the effectiveness of ranking [ 5 ] , [ 17 ] , query classification [ 4 ] and recommendations [ 14 ] , [ 1 ] . The first approaches for context aware modeling assumed that contexts were given explicitly and focused on the integration of the this additional data source into the space of predictive features . Later approaches considered algorithmic aspects of using explicit and implicit contextual information for local model selection [ 12 ] selection of instances to learn a model from and to perform model output correction [ 16 ] . Our approach has some meta learning flavor , but unlike the work in [ 12 ] we consider the mapping from contextual features to contextual categories to be known and deterministic and focus on how to discover contexts . That is defined as an optimization problem unlike in [ 12 ] where clustering in performed independently from finding a mapping from contexts to local models .
In machine learning the term ‘contextual’ usually characterizes the features that do not determine or influence the class of an object directly [ 16 ] , [ 19 ] , but improve predictive performance when used together with other predictive fea
1072 tures . Some recent approaches consider how to derive such features . Eg in [ 18 ] feature transformations requiring the resulting contexts to be independent from the class labels have being explored .
User modelling for personalization is a fundamental and challenging problem . For modeling user behavior ( navigation ) on the Web , the use of Markov models [ 15 ] is a reasonable choice as they are compact , simple and based on well establish theory . Several types of Markov models were proposed for modelling user Web data : first order Markov models , hybrid order tree like Markov models [ 10 ] , prediction by partial match forest [ 7 ] , kth order Markov models ( FOMMs ) [ 9 ] , variable order Markov models ( VOMMs ) [ 3 ] that provide the mean to capture both large and small order Markov dependencies .
6 . CONCLUSION AND FUTURE WORK
In this paper , we addressed an important and challenging problem – the discovery of temporal hidden contexts in the web sessions . We formulated it as an optimisation problem and developed a novel method to discover the temporal contexts by decomposing web sessions into non overlapping segments , where each segment would relate to one specific context .
We applied hierarchical clustering to merge the activities of the user navigation graph and thus identify temporal contexts .
We demonstrated with an experimental case study on the real world dataset that the contexts as we defined them do exist in the user navigation graph and are useful for improving the prediction of the next user actions . Indeed , the predictive accuracies of local Markov models that capture the specificity of the users’ behaviour were higher than the accuracies of the global models . Interestingly , the discovered contexts were meaningful and we were able to understand and interpret the resulted clustering .
Our study opens an interesting research direction within the area of mining hidden contexts . The future work would cover the following accepts : testing our method on other datasets , introducing a mechanism for detecting context switching within a web session , considering multidimensional contextual features .
Acknowledgements This research has been partly supported by STW and it is a part of CAPA project . We would like to thank Thijs Putman from MastersPortal.eu for providing the anonymized dataset used in the experimental study and for allowing to make it publicly available .
7 . REFERENCES [ 1 ] G . Adomavicius and A . Tuzhilin . Context aware recommender systems . CARS , 2010 .
[ 2 ] M . Aly , A . Hatch , V . Josifovski , and V . K . Narayanan .
Web scale user modeling for targeting . In WWW , 2012 .
[ 3 ] J . Borges and M . Levene . Evaluating variable length markov chain models for analysis of user web navigation sessions . IEEE Trans . Knowl . Data Eng . ( TKDE ) , 19(4):441–452 , 2007 .
[ 4 ] H . Cao , D . H . Hu , D . Shen , D . Jiang , J T Sun ,
E . Chen , and Q . Yang . Context aware query classification . In SIGIR , 2009 .
[ 5 ] H . Cao , D . Jiang , J . Pei , E . Chen , and H . Li . Towards context aware search by learning a very large variable length hidden markov model from search logs . In WWW , pages 191–200 , 2009 .
[ 6 ] D . Chakrabarti , D . Agarwal , and V . Josifovski .
Contextual advertising by combining relevance with click feedback . In WWW , 2008 .
[ 7 ] X . Chen and X . Zhang . A popularity based prediction model for web prefetching . Computer , 36(6):63–70 , 2003 .
[ 8 ] F . Chierichetti , R . Kumar , P . Raghavan , and
T . Sarl´os . Are web users really markovian ? In WWW , pages 609–618 , 2012 .
[ 9 ] M . Deshpande and G . Karypis . Selective markov models for predicting web page accesses . ACM Trans . Internet Techn . ( TOIT ) , 4((2)):163–184 , 2004 .
[ 10 ] X . Dongshan and S . Junyi . A new markov model for web access prediction . Computing in Science and Engineering , 4(6):34–39 , 2002 .
[ 11 ] S . Hyv¨onen , A . Gionis , and H . Mannila . Recurrent predictive models for sequence recurrent predictive models for sequence segmentation . IDA , pages 195–206 , 2007 .
[ 12 ] O . Mazhelis , I . Zliobaite , and M . Pechenizkiy . Context aware personal route recognition . In T . Elomaa , J . Hollm´en , and H . Mannila , editors , Discovery Science , volume 6926 of Lecture Notes in Computer Science , pages 221–235 . Springer , 2011 .
[ 13 ] C . Palmisano , A . Tuzhilin , and M . Gorgoglione . Using context to improve predictive modeling of customers in personalization applications . IEEE Transactions on Knowledge and Data Engineering ( TKDE ) , 20(11):1535–1549 , November 2008 .
[ 14 ] S . Rendle , Z . Gantner , C . Freudenthaler , and
L . Schmidt Thieme . Fast context aware recommendations with factorization machines . In SIGIR , volume 10 , 2011 .
[ 15 ] R . Sarukkai . Link prediction and path analysis using markov chains . Computer Networks ( CN ) , 33((1 6)):377–386 , 2000 .
[ 16 ] P . Turney . The identification of context sensitive features : A formal definition of context for concept learning . 2002 .
[ 17 ] B . Xiang , D . Jiang , J . Pei , X . Sun , E . Chen , and H . Li . Context aware ranking in web search . In SIGIR , 2010 .
[ 18 ] I . Zliobaite . Identifying hidden contexts in classification . In PAKDD ( 1 ) , volume 6634 of LNCS , pages 277–288 . Springer , 2011 .
[ 19 ] I . Zliobaite , J . Bakker , and M . Pechenizkiy . Beating the baseline prediction in food sales : How intelligent an intelligent predictor is ? Expert Syst . Appl . ( ESWA ) , 39(1):806–815 , 2012 .
1073
