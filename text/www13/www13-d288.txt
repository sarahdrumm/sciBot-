Linked Services Infrastructure : A Single Entry Point for Online Media Related to Any Linked Data Concept
Lyndon Nixon
STI International & Seekda GmbH
Neubaugasse 10/15 , 1070 Vienna , Austria +43 1 2364002 13 lyndonnixon@sti2org the specifications hRESTs[3 ] and MSM2 to generate a RDF based machine processable description of the Web APIs inputs and outputs . Lifting and lowering rulesets ( in XSLT extended by SPARQL based inline queries ) define how a Linked Data URI may be mapped into a request to the Web API , and how the Web API response can be mapped to the LSI's RDF model ( based on W3C Media Ontology ) for a consistent and aggegrated response of relevant media resource descriptions to the client . The REST API allows a single service to be queried ( eg based on its description , such as only services who have content for a particular type of concept ) , a concept to be mapped to media resources by a single service call , or a concept to be mapped to media resources aggegrated from all services called ( based on their relevance to the concept in the query ) .
Above : LSI Web http://productionsti2org/lsi interface to the RESTful API at
Above : video results for the query “ Vienna ” and “ Johan
Sebastian Bach ”
Parameters allow that only image or video content is returned , a limit placed on the amount of media contents in the response , and whether Zemanta3 is used for Named Entity Recognition in the media resource titles and descriptions ( this can reduce the latency in waiting on a response from LSI ) . Named Entity Recognition is used with an optional additional “ context ” parameter : the idea is that aggregating media content on the basis
2 http://iservekmiopenacuk/wiki/indexphp/IServe_vocabulary 3 http://developerzemantacom/
ABSTRACT In this submission , we describe the Linked Services Infrastructure ( LSI ) . It uses Semantic Web Service technology to map individual concepts ( identified by Linked Data URIs ) to sets of online media content aggegrated from heterogeneous Web APIs . It exposes this mapping service in a RESTful API and returns RDF based responses for further processing if desired . The LSI can be used as a general purpose tool for user agents to retrieve different online media resources to illustrate a concept to a user . Categories and Subject Descriptors H33 [ Information Storage and Retrieval ] : Information Search and Retrieval – retrieval models , search process , selection process Keywords Semantic Web Services ; Web APIs ; Linked Media ; Linked Data ; Linked Services ; media retrieval ; media selection in order these URIs we wanted
INTRODUCTION
1 . In the LinkedTV project ( wwwlinkedtveu ) we work on dynamically linking topics in videos to related Web content . For this , we annotate the spatial and temporal parts of the video with concepts , using Linked Data URIs to have an unambiguous identifier for an individual concept linked to online metadata and interlinked with other concepts in the Linked Data graph . From to show humanunderstandable information about each concept in our interactive video player and recognized the limits of visualising RDF triples or extracting the limited text or media links directly existing in the Linked Data ( eg from DBPedia , one could take the textual abstract and the image linked from some concepts via the property foaf:depiction ) . Rather , we desired a service which could flexibly map a Linked Data URI to a set of online media resources which would be aggegrated from various Web APIs . A software agent , such as our interactive video player , can then further process the service response to select which media to show to the user .
TECHNOLOGY USED
2 . Linked Services Infrastructure[1 ] makes use of Semantic Web Service technology developed in the Open University . The iServe1 [ 2 ] platform acts a repository for the descriptions of the Web APIs . These descriptions are themselves semantic , using
1 http://iservekmiopenacuk/ Copyright is held by the author/owner(s ) . WWW 2013 Companion , May 13–17 , 2013 , Rio de Janeiro , Brazil . ACM 978 1 4503 2038 2/13/05 .
7 of a single concept can be very general ( eg “ Vienna ” ) , while the provision of an additional 'contextual' concept ( eg “ Mozart ” ) enables more focused media content responses from the LSI . To determine sets of concepts related to a media item , we extract named entities as Linked Data URIs from the free text metadata of those media items such as their titles , descriptions , or userprovided tags . We work on using the Linked Data graph to map contextual concepts to related concept sets , for example “ classical music ” as the context to a query on “ Vienna ” should return images and videos related to classical music composers and Vienna , eg a video annotated with the concepts “ Vienna + Mozart ” will match a LSI query for “ Vienna + classical music ” , based on the semantic closeness of Mozart to the category of classical music within the DBPedia graph .
DOCUMENTATION FOR THE REST
3 . API The LSI API currently supports the invocation of the following APIs :
Foursquare Venues API Ookaboo API Flickrwrappr API YouTube data API Play.fm API Seekda Hotel API Instagram API Flickr API MediaFinder API
The Linked Service Infrastructure ( LSI ) provides a simple RESTful API for search and invoke Web services . The primary REST method usable for extracting online media resources for a Linked Data URI is “ Find Media Resources ” .
3.1
Find Media Resources
Request URL http://productionsti2org/lsi/api/invoke
HTTP Method
GET or POST
HTTP Request Header
Use the Accept header to specify the required response format , ie adding “ Accept : application/rdf+xml ” to the header of the request , you will get the responses in the format of RDF ; adding “ Accept : text/html ” to the header of the request , you will get the responses in the format of HTML snippets .
Parameters
Type URI
Name lod mediaType String limit Integer Boolean yes or no ner
Example http://dbpedia.org/resource/Vienna all , video , image 10 http://dbpedia.org/resource/Johann_Seba stian_Bach context
String
Supported LOD URIs
The current implementation is tuned to DBPedia concepts while it will make a best effort with any Linked Data URI ( any URI from which RDF based metadata can be found and used ) .
Instances of dbp:Place use geolocation information . Two properties , ie latitude ( wgs84:lat ) and longitude ( wgs84:long ) , will be used to assemble the actual requests to be sent to the endpoints of services All the instances of rdf:resource can be used in a service call using its value of rdfs:label . Note : for multilingual labels , LSI will choose the one in English .
Example
Here is an example for invoking the LSI API via HTTP GET .
Request http://productionsti2org/lsi/api/invoke?lod=http://dbpediaorg/resource/V ienna&mediaType=all&limit=10&ner=yes&context=http://dbpedia.org/res ource/Johann_Sebastian_Bach
Response
The response will be in the format of RDF and conform to the W3C Media Ontology . It contains a set of Media Resource instances with some properties and values according to what can be extracted from the original Web API . There is a mix of media characteristics ( duration of video , dimensions of images ) and conceptual the property hasKeyword ( generated from textual titles and descriptions processed via Named Entity Recognition tools ) . relationships via
CONCLUSIONS
4 . The Linked Services Infrastructure is intended to solve a general problem : bridging the gap between the Web of Data ( made up of abstract concepts and their metadata descriptions ) and the Web of Content ( made up of human understandable media content ) . It is being used in the hyperlinking task of the LinkedTV project in order to provide online media to represent the concepts in video annotations for LinkedTV demos
( cf . http://wwwlinkedtveu/research/linking video to web content/ ) .
8 In Web systems , Linked Data can be very useful for attaching machine processable concepts to internal content , whether for retrieval or organisation of that content . However , when used in visualising information about the content to the user , Linked Data is very limited as a basis . The LSI API can map a Linked Data concept to a set of relevant media items , but it is still a task for developers to integrate the API call within a larger workflow , which necessarily includes a pre processing step ( to extract the Linked Data concepts for input to the LSI ) as well as postprocessing of the response to filter the aggegrated media items to those which will be presented in some form to the user . 5 . This work is supported by the Integrated Project LinkedTV ( wwwlinkedtveu ) funded by the European Commission through the 7th Framework Programme ( FP7 287911 ) . iServe was implemented at the Open University , UK . Linked Services Infrastructure code courtesy of Dong Liu .
ACKNOWLEDGMENTS
REFERENCES
6 . [ 1 ] Pedrinaci , C . and Domingue , J . ( 2010 ) Toward the Next Wave of Services : Linked Services for the Web of Data , Journal of Universal Computer Science . http://oroopenacuk/23073/
[ 2 ] Pedrinaci , C . , Liu , D . , Maleshkova , M . , Lambert , D . , Kopecky , J . and Domingue , J . ( 2010 ) iServe : a Linked Services Publishing Platform , Workshop : Ontology Repositories and Editors for the Semantic Web at 7th Extended Semantic Web Conferencehttp://oroopenacuk/23093/
[ 3 ] Kopecky , J . , Gomadam , K . and Vitvar , T . ( 2008 ) hRESTS : an HTML Microformat for Describing RESTful Web Services , IEEE/WIC/ACM International Conference on Web Intelligence , Sydney , Australia . http://oroopenacuk/24831/
9
