Modeling and Predicting Retweeting Dynamics on
Microblogging Platforms
Shuai Gao gao_shuai@mailsdueducn
Jun Ma majun@sdueducn
Zhumin Chen chenzhumin@sdueducn
School of Computer Science and Technology , Shandong University
ABSTRACT Popularity prediction on microblogging platforms aims to predict the future popularity of a message based on its retweeting dynamics in the early stages . Existing works mainly focus on exploring effective features for prediction , while ignoring the underlying arrival process of retweets . Also , the effect of user activity variation on the retweeting dynamics in the early stages has been neglected . In this paper , we propose an extended reinforced Poisson process model with time mapping process to model the retweeting dynamics and predict the future popularity . The proposed model explicitly characterizes the process through which a message gain its retweets , by capturing a power law temporal relaxation function corresponding to the aging in the ability of the message to attract new retweets and an exponential reinforcement mechanism characterizing the “ richer get richer ” phenomenon . Further , we introduce the notation of weibo time and integrate a time mapping process into the proposed model to eliminate the effect of user activity variation . Extensive experiments on two Weibo datasets , with 10K and 18K messages respectively , well demonstrate the effectiveness of our proposed model in popularity prediction . Categories and Subject Descriptors H33 [ Information Storage and Retrieval ] : Online Information Services—Web based services General Terms Algorithm , Measurement Keywords Popularity Prediction ; Reinforced Poisson Process ; Retweeting Dynamics ; Microblogging Platforms
1 .
INTRODUCTION
In recent years , online social networks ( OSNs ) such as Facebook , Twitter , YouTube etc . , have become increasingly popular for their important roles in information sharing and Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page . Copyrights for components of this work owned by others than ACM must be honored . Abstracting with credit is permitted . To copy otherwise , or republish , to post on servers or to redistribute to lists , requires prior specific permission and/or a fee . Request permissions from Permissions@acmorg WSDM’15 , February 2–6 , 2015 , Shanghai , China . Copyright 2015 ACM 978 1 4503 3317 7/15/02 $1500 http://dxdoiorg/101145/26848222685303 interpersonal communication . The prevalence of OSNs has brought along an enormous and ever growing amount of user generated content ( eg , blogs , videos , photos and messages etc ) Recently , the study of predicting the popularity of user generated content has drawn much attention for its remarkable practical value in numerous applications , including trend forecasting [ 7 , 10 , 17 , 32 ] , understanding the collective human behavior [ 6 , 19 , 31 ] , election prediction [ 28 , 30 ] , movie revenue estimation [ 2 ] and media advertising [ 1 , 15 ] etc . Future popularity of user generated content indicates the intensity with which people would react and hence has the potential to influence the policy decisions .
On microblogging platforms , such as Twitter1 and Weibo2 , messages gain their popularity as being retweeted [ 13 ] . Generally , the popularity prediction problem on microblogging platforms is defined as follows : given a message , predicting its future popularity based on its retweeting dynamics in the early stages , where the popularity of a message is represented by the number of its retweets . To address this problem , considerable efforts have been invested in the past years . In general , current methods fall into the following two main paradigms . One treats the prediction problem as a regression or classification task , making predictions by exploring relevant factors and applying standard regression or classification methods [ 4 , 8 , 11 , 18 ] . These methods have been successful in revealing many explicable and effective factors for prediction . However , there are still numerous factors to be considered and these methods are always based on some assumptions or simplification of major factors . The other one treats the retweeting dynamics as time series , making predictions by fitting these time series into certain class of functions [ 9 , 19 , 31 ] . The drawback of these methods is that they model the retweeting dynamics in a meanfield way by focusing on the average amount of retweets received in a fixed time window , ignoring the underlying arrival process of retweets .
Recently , Shen et al . [ 23 ] proposed a generative probabilistic model using a reinforced Poisson process ( RPP ) to model explicitly the process through which individual items gain their popularity . The model captures three key ingredients of popularity dynamics : ( i ) fitness of an item , characterizing its inherent competitiveness against other items ; ( ii ) a general temporal relaxation function corresponding to the aging in the ability to attract new attention ; ( iii ) a reinforcement mechanism characterizing the well known “ richer get richer ” phenomenon . Despite
1http://twitter.com 2http://weibo.com its remarkable success in modeling the citation dynamics as reported in [ 23 ] , there remains some limitations when applied to model the retweeting dynamics . Firstly , unlike the temporal relaxation function which can be adjusted with respect to specific domain , the reinforcement mechanism in RPP model is fixed to be a linear function of received popularity . However , in this paper , we show that this may not hold true for retweeting dynamics . Moreover , the original RPP model does not consider the effect of user activity variation on the popularity dynamics . Generally , users are more active during the daytime than in the midnight . Hence , considering the number of retweets that a message receives in the first hour after been posted , a message posted during daytime will on average receive more retweets than messages posted during midnight . Neglecting the effect of user activity variation may cause the misinterpretation of the relative interestingness of a given message .
In this paper , we extended the general reinforced Poisson process model and addressed the above deficiencies by introducing a power law temporal relaxation function , an exponential reinforcement function and a time mapping process . Specifically , through analyzing the real data , we found that the temporal relaxation in retweeting dynamics follows a power law distribution instead of a log normal distribution as in [ 23 ] . Further , observing that the reinforcement effect becomes weaker when the popularity of message grows larger , we proposed a reinforcement function with an exponential decay to capture this phenomenon . Moreover , to eliminate the effect of user variation on the retweeting dynamics , we introduced the notation of weibo time and applied a time mapping process to transform the time moments in the retweeting dynamics into weibo time . Putting all these together , we named the proposed model PETM ( a reinforced Poisson process model with Power law relaxation , Exponential reinforcement and Time Mapping process ) . Finally , we provided a detailed description for the modeling , learning and prediction process of the proposed model .
To evaluate the performance of our proposed model , focusing on the popularity prediction task , we conducted extensive experiments on two Weibo datasets , with 10K and 18K messages respectively . The experimental results show that our proposed model outperforms two baseline models , ie , SH model [ 25 ] and ML model [ 21 ] , and achieves a remarkable improvement over the original RPP model with a log normal relaxation function and a linear reinforcement function . Moreover , we show that the prediction performance of a series of RPP models can be significantly improved by integrating the time mapping process . Additionally , we also investigate the inherent characteristics of the parameters of our proposed model .
The novelties and main contributions of this paper are summarized as follows : ffl By analyzing real datasets , we reveal that the temporal relaxation which characterizes the aging of a message in retweeting dynamics follows a power law distribution , and the reinforcement effect declines as the popularity grows which can be captured by a reinforcement function with an exponential decay . ffl We introduce the notation of weibo time and propose a time mapping process to eliminate the effect of user activity variation on the retweeting dynamics . ffl We present an extended reinforced Poisson process model , namely PETM , by integrating a power law temporal relaxation function , an exponential reinforcement function and a time mapping process with the original RPP model . Extensive experiments on two Weibo datasets validate the effectiveness of the proposed model in popularity prediction task .
The rest of this paper is organized as follows . We present a review of related work in Section 2 . The preliminaries including the formal definition of popularity prediction problem and the description of general reinforced Poisson process model are provided in Section 3 . We give a detailed description for the modeling , learning and prediction process of the proposed model in Section 4 . In Section 5 , we describe the datasets , comparison methods and evaluation metrics used in our experiments . The experimental results and discussion are presented in Section 6 . We conclude our paper in Section 7 .
2 . RELATED WORK
Popularity prediction of user generated content has been widely studied in the literature . Recent studies on microblogging platforms include popularity prediction for hashtag ( or trend ) and individual message . Typical solutions include the regression models [ 4 , 12 , 27 ] , classification models [ 8 , 10 , 11 , 18 , 16 ] and time series models [ 19 , 31 , 32 ] . For regression or classification models , previous works mainly focus on exploring effective features for prediction . As an initial effort , Bongwon et al . [ 24 ] examined a number of features that might affect retweetability of tweets and found that content features such as URLs and hashtags have strong relationship with retweetability . Tsur et al . [ 27 ] employed a regression model to predict hashtag frequency on a weekly basis based on 25 week Twitter data . The features used in their experiments are mainly extracted from the hashtag itself . Hong et al . [ 11 ] treated the prediction problem as a classification task and investigated a wide spectrum of features including content features derived from the message , context features ( structural features ) extracted from the underlying user network and temporal features obtained from the observed popularity dynamics . Similar features have also been investigated in [ 18 ] and [ 8 ] . Generally speaking , the context features are more effective than content features , while the prediction performance can be further improved when combing the temporal features . For time series models , Matsubara et al . [ 19 ] proposed SpikeM , which used the self excited Hawkes conditional Poisson process to model the power law relaxation of popularity dynamics . Despite of its promising predictive power , the dependence on exogenous factors and the fixed power law relaxation function limit its generalization ability .
Recently , there have been pioneering data driven analysis of popularity prediction on different kinds of user generated content , eg , news articles [ 3 , 26 ] , YouTube videos [ 1 , 7 , 15 , 21 , 25 ] , diggs in Digg [ 1 , 14 , 25 ] , posts in Facebook [ 5 ] and papers [ 23 , 29 ] etc . Focusing on diggs in Digg and videos in YouTube , Szabo et al . [ 25 ] found a high loglinear correlation existed between the popularity on early days and later days , and presented three regression models for prediction . Following [ 25 ] , Pinto et al . [ 21 ] proposed a multivariate linear regression model which split the training period into several equal intervals , and predicted the future popularity of a video as a linear function of views count in every interval .
The most close research to ours was conducted by Shen et al . [ 23 ] . They proposed the general framework of reinforced Poisson process model and applied the model to predict the future citations of a given paper . Inspired by this study , in this paper , we proposed a extended reinforced Poisson process model to characterize the retweeting dynamics .
3 . PRELIMINARIES 3.1 Problem Statement
0 k
,T m k as the elapsed time from T m k = T m
In this work , we aim to model the retweeting dynamics of a single message in the early stages and use the model to predict its popularity in the future . For a given message m , we use the number of “ retweets ” to measure its popularity . Then , we sort all its retweets according to their post time in ascending order , forming a chain of messages . The post time for the kth retweet is denoted by T m k . Specially , we use T m to denote the post time of the original message . The post time T is measured in Unix timestamp which is a number indicating the seconds which have elapsed since 1970 01 01 00:00:00 , UTC . Further , we define the age of kth retweet tm 0 , which can be calculated by tm 0 . The number of retweets at age t is denoted by N ( t ) . During the modeling and prediction process , following the definition in [ 25 ] , we call reference time Tr the time when we intend to predict the popularity of a message whose age with respect to the post time is Tr . Also , by indicator time Ti we refer to the age the message when we perform the prediction , namely that how long we can observe the retweeting history in order to extrapolate . Generally , we have Ti < Tr . Intuitively , Ti measures the length of the training period for the model . The retweeting dynamics of message m up to Ti is characterized by a set of time moments ftm g(1 k nm ) when each retweet arrives , where nm is the total number of retweets in this training period . Formally , the prediction problem can be described for a message m , given its retweeting dynamics ftm g as : up to the indicator time Ti , predicting its popularity at the reference time Tr . 3.2 Reinforced Poisson Process Model k k
The reinforced Poisson process ( RPP ) model was first proposed in [ 29 , 23 ] to model the stochastic popularity dynamics for items in a complex evolving system . The model captures three key ingredients simultaneously : ( i ) fitness of an item , characterizing its inherent competitiveness against other items ; ( ii ) a general temporal relaxation function corresponding to the aging in the ability to attract new attention ; ( iii ) a reinforcement mechanism characterizing the well known “ richer get richer ” phenomenon . In the following , with respect to the retweeting dynamics on microblogging platforms , we give a more general definition of RPP model . g up to Ti can be modeled as reinforced Poisson process which is characterized by the rate function λm(t , k ) as
Given a message m , its retweeting dynamics ftm k
λm(t , k ) = cmfm(t)rm(k )
( 1 ) where cm is intrinsic attractiveness of the message , fm(t ) is the general temporal relaxation function which characterizes the aging effect , and rm(k ) is the general reinforcement function depicting the “ richer get richer phenomenon ” . Instead of defining rm(k ) to be the number of retweets as in [ 29 , 23 ] , we generalize the reinforcement function to be any piecewise constant function which is defined on number of retweets k , ie , during the time interval between kth and ( k + 1)th retweet , rm(k ) stays unchanged . model . Given the ( k , 1)th retweet arrives at tm probability that the kth retweet arrives at tm k follows cmfm(s)rm(k,1)ds
Next , we describe the modeling process of general RPP k,1 , the
,∫ tm k jtm p1(tm k,1 ) = cmfm(tm k )rm(k , 1)e k k,1 tm
( 2 ) while the probability that no retweet arrives between tm nm and Ti is p0(Tijtm nm ) = e tm nm cmfm(s)rm(nm)ds
( 3 )
,∫ Ti
The RPP model assumes that retweets from different time intervals are statistically independent . Hence by incorporating Equation 2 and Equation 3 , the likelihood of the observing retweeting dynamics ftm k g up to Ti follows k jtm k,1 )
( 4 ) p1(tm nm∏ k=1
By taking logarithm , we can get the log likelihood function ℓ as ℓ = lnL = ln k jtm
)
L = p0(Tijtm nm ) ( p0(Tijtm ( nm∑ nm ) nm∏ k=1 ln fm(tm k,1 ) p1(tm
) k ) + ln rm(k , 1 )
, cmXm
( 5 ) fm(s)rm(nm)ds
( 6 )
= nm ln cm + k=1 fm(s)rm(k , 1)ds +
∫
Ti tm nm where
Xm =
∫ nm∑ tm k k=1 k,1 tm
4 . MODEL
In this section , we first give the specific forms for temporal relaxation function and reinforcement function with respect to retweeting dynamics . Then we describe the hourly variation of user activity and the proposed time mapping process . Lastly , we give a detailed description for the proposed model , including the modeling , learning and prediction process . 4.1 Temporal Relaxation Function
As shown in the rate function ( Equation 1 ) , the retweeting dynamics of a message is controlled by three independent forces , which are difficult to separate from each other . Hence to determine the specific form of temporal relaxation function , we need to control the other factors , isolating the temporal decay . Specifically , we group messages with same fitness c and same reinforcement r(k ) , and look at the time when they were retweeted again . Since we do not know c beforehand , we roughly consider messages which are posted in a fixed time period and receive the same number of retweets in one hour after being posted as having the same fitness . Note that the reinforcement r(k ) is a function of the number of retweets k , by selecting messages with
Figure 1 : Empirical validation of power law decay same retweet number , the reinforcement is also controlled . Therefore we selected messages posted between 10am and 11am with fixed cumulative retweet number N in the first hour after being posted , and tracked the moment when their retweets number changed from N to N + 1 . Then we measured ∆t in minutes , ie , minutes passed when N ! N + 1 took place . Note that all values of ∆t are greater than 60 since the messages have been posted for more than 1 hour before the ( N + 1)th retweet happens . Hence , to illustrate the distribution of ∆t more clearly , we subtract 60 from ∆t given that subtracting a constant from a random variable will not change its distribution . Then we show P ( ∆tjN ) when N is 10 and 20 in Figure 1 . We can easily find that the temporal relaxation function is best approximated by a power law function fm(tk ) = t
,flm k
( γ > 0 )
( 7 )
The power law decay of influence has also been reported in blogs [ 20 ] and videos [ 6 ] . 4.2 Reinforcement Function
In this section , we study the reinforcement mechanism in retweeting dynamics and address the following issues : ( 1 ) whether the reinforcement mechanism exists in retweeting dynamics , ie , whether the previously retweets can trigger more subsequent retweets ? ( 2 ) if the reinforcement mechanism does exist , how to model it ? To answer the first question , we follow the similar method as proposed in [ 22 ] , which is to measure the preferential attachment mechanism from the empirical data , one keeps a constant time window and looks at the growth of degrees as a function of existing degree . Similarly , here in the analysis of retweeting dynamics , we first fix a constant time window , and then measure the number of retweets that a message received before and within this time window . Specifically , given a fixed time window , we use Φ to denote the number of retweets that each message received before this time window , and use ϕ to measure the average number of retweets for each message with Φ retweets received in this time window . In Figure 2 , we show how ϕ varies with Φ when the time window is fixed to be 10:30am–10:45am ( Figure 2(a ) ) and 10:45am–11:00am ( Figure 2(b) ) . Generally speaking , for both examined time window , ϕ is linearly proportional to Φ , ie , ϕ / Φ . The dashed lines correspond to the best linear fitting . This is reasonable since this linearity can lead to a power law message popularity distribution as shown in Figure 4 . In previous literature [ 23 , 29 ] , a simple linear function is used to capture this linear reinforcement
( 8 ) where k 0 and ϵ denotes the effective number of retweets which plays the role of prior belief . The linearly rm(k ) = k + 1 + ϵ
Figure 2 : Empirical validation of reinforcement mechanism
∑
∑ k j=0 1 + ϵ , where in the summation reinforcement function is defined based on the assumption that all retweets ( including the original message ) are created equally . Therefore , we can rewrite Equation 8 as rm(k ) = k j=0 1 each retweet contributes 1 to the reinforcement function as assumed . However , by further examining Figure 2 , we can find that when Φ grows larger , a large amount of ϕ fall below the dashed line , indicating that ϕ grows slower than linearly with Φ . One possible reason for this phenomenon is that the retweets are not created equally and with the number of retweets grows larger , the contribution of the subsequent retweets to the reinforcement function become smaller . Hence , to capture the decay of contribution for each retweet , we assume that the contribution decay follows an exponential distribution , ie , for the jth retweet , the ,ffmj , contribution to the reinforcement function rm(k ) is e where αm > 0 . By adding the contribution of all retweets together , we get the modified reinforcement function as follows j=k∑ rm(k ) = j=0
,ffmj + ϵ = e
ε , e
,ffm(k+1 )
1 , e,ffm
( αm > 0 )
( 9 )
,ffm . Henceforth , we call Equation 9 where ε = 1 + ϵ , ϵe the exponential reinforcement function . 4.3 User Activity and Time Mapping
In this section , we examine another important factor , user activity , which is not considered by the original RPP model . To investigate the hourly variation of user activity , we randomly selected about 10 thousand users from Weibo and crawled all their messages posted between 2013 07 01 00:00:00 and 2013 07 31 23:59:59 , which results in 1.6 millon messages . We first show the average number of messages posted during a given hour as a function of time in Figure 3(a ) . Clearly , we can see that user activity varies over time , namely that users are highly active during daytime and inactive in midnight . Hence , depending on the time of day when messages are posted , the number of initial retweets that messages get will differ greatly , as illustrated in Figure 3(b ) , where we show the average number of retweets that a message receives in the first hour after being posted ( blue curve ) . As can be expected , messages posted at higher active periods of a day will on average receive more retweets in the first hour than messages posted at less active periods . For example , a message posted at 11am can on average get 25 retweets in the first hour , while it will only get 5 retweets if it is posted at 4am . Therefore , if we do not eliminate the effect of user activity variation , we may misinterpret the relative interestingness of a message only based on the observation made in a few hours after it has been posted .
10010110210−310−210−1∆ t ( in minute ) P(∆ t | N = 10)(a)10010110210−310−210−1∆ t ( in minute ) P(∆ t | N = 20)(b)050100150200250300350400050100150200250300350Φ φTime window = [ 10:30am,10:45am)(a)050100150200250300350400050100150200250Φ φTime window = [ 10:45am,11:00am)(b ) To eliminate the effect of user activity variation , we introduce the notation of weibo time , where we measure time not by wall time ( seconds ) , but by the number of messages that users post on Weibo . To map the wall time into weibo time , we first use τ and ˆτ to denote the second in a day , which are measured by wall time and weibo time respectively . Both τ and ˆτ take values in [ 0 , 86400 ) where 86400 is the number of seconds in a day . The difference between them is that τ can only be integer while ˆτ can be decimal . Then through analyzing the dataset , we get the average number of messages posted per second M and in each second M . M is a constant number while M varies with τ . To be clear , we show M as a function of τ in Figure 3(c ) . Obviously , M takes larger value in daytime than in midnight , which can further illustrate the hourly variation of user activity . Now , we can define the mapping function g as fi fi
∑
ˆτ = g(τ ) =
Mj/M j=0 fi
( 10 )
The image of mapping function g(τ ) is shown in Figure 3(d ) ( blue curve ) . Next , for each original timestamp T in dataset , we denote the corresponding mapped timestamp as ˆT . To map from T to ˆT , we first need to transform T into the corresponding second of day τfi by
τfi = mod(T + 8 fi 3600 , 86400 )
( 11 ) where mod(a , b ) returns the modulus after division of a by b and 3600 is the number of seconds in an hour . Since Weibo locates in China , UTC+8 time zone , we need to add 8 fi 3600 to each T before the modulo operation . Lastly , by incorporating Equation 11 and Equation 10 , we can get the mapped timestamp ˆT by
ˆT = T , τfi + ˆτfi = T , τfi + g(τfi )
( 12 )
After timestamp mapping , we show the average number of retweets that a message receives in the first weibo hour after being post in Figure 3(b ) ( red curve ) . As can be seen , the average retweets number slightly changes over the post time , indicating that the mapping from wall time to weibo time can largely mitigate the impact of message ’s post time on its early stage popularity and eliminate the effect of user activity variation . 4.4 Modeling Learning and Prediction
In this section , we describe in detail how to model the retweeting dynamics for a given message under the reinforced Poisson process framework with power law temporal relaxation function ( Section 4.1 ) and exponential reinforcement function ( Section 42 ) Also , we show how to integrate the time mapping process ( Section 4.3 ) into the reinforced Poisson process framework . In the following , we describe the model learning and prediction process step by step , and we start with the input of the model . Input time moments . As defined in Section 3.1 , for a given message m , its retweeting dynamics can be characterized by a set of non decreasing time moments ftm g , where tm k denotes the age of the kth retweet and tm 0 is the age of the original message which is 0 . The drawback of this definition ,flm takes a is that since the temporal relaxation function t power law form , it will be infinity when t = tm 0 = 0 . To fi to all tm avoid this , we manually add a constant value t k . k
Figure 3 : User activity variation and Time mapping
Formally , we redefine tm k as k = T m tm k , T m fi 0 + t
( 13 )
Also , henceforth in the modeling and prediction process , when we refer to indicator time Ti and reference time Tr , their values are Ti + t respectively . and Tr + t fi fi
Further , to integrate the time mapping function into the RPP model , we first need to map the original timestamps fT m g using Equation 12 , and then get tm g into f ˆT m k as k k k = ˆT m tm Here , we use time series ftm fi 0 + t k , ˆT m i g up to Ti as the input of the
( 14 ) modeling process . For ease of calculation of the power law temporal relaxation function , we measure tm k in hours and fi set t = 1 for all the messages . For simplicity and clarity , henceforth we will omit the superscript m which is used to represent message m .
Model Formulation . By substituting the power law temporal relaxation function Equation 7 and the exponential reinforcement function Equation 9 into the general rate ( function Equation 1 , we can get the specific form of rate function for retweeting dynamics as ε , e 1 , e,ff
λ(tk , k ) =
,ff(k+1 )
,fl k
( 15 )
) ct
Then , by substituting Equations 7 and 9 into the general log likelihood function Equation 5 , we can get the loglikelihood for the retweeting dynamics ftkg up to Ti as n∑
(
) ln f ( tk ) + ln r(k , 1 ) n∑
(
, cX ln ( ε , e
,ffk ) , γ ln tk
)
, cX
( 16 )
( 17 )
ℓ = n ln c + k=1
= n ln where c
1 , e,ff + n+1∑
X = k=1 k=1
( t1,fl k
, t1,fl k,1)(ε , e ( 1 , γ)(1 , e,ff )
,ffk )
051015200500100015002000250030003500Time in a day ( in hour)Average number of messages(a)051015204681012141618202224Time in a day ( in hour)Average number of retweets(b ) Wall TimeWeibo Time where
Y = fi fi
( T 1,fl
, t1,fl fi εc α ( 1 , γfi)(1 , e,fffi ) i fi
)
, ( n + 1)α fi , ln ( ε , e
,ff fi
( n+1 ) )
( 27 )
)
5 . EXPERIMENTAL SETUP 5.1 Datasets
Since this paper focuses on modeling the retweeting dynamics and predicting the future popularity of a given message on microblogging platforms , we conducted extensive experiments on two datasets of Weibo messages . Each dataset contains a set of original messages posted during July 1–31 , 2013 . For each message , we recorded the post timestamps for it and all its retweets in one month after been posted . We adopted two different crawling strategies and obtained the following two datasets . ffl Random : To construct the random dataset , we first randomly selected 10,000 seed users and crawled all their original messages posted during July 1–31 2013 . The crawling process produced in total 0.8 million original messages . Then we manually removed messages with more than 20,000 retweets since the crawling process for their retweets is too time consuming . Also , messages with less than 50 retweets are removed since they usually stop receiving more retweets in the first few hours . Thus we randomly selected 10K messages from the rest of the crawled messages to construct the random dataset . In this dataset , the mean and median values for message popularity are 450 and 210 respectively . ffl News : In this dataset , we concentrated on a specific type of message—news . To begin with , we manually selected 25 prestigious news accounts and crawled all their original posts during July 1–31 , 2013 . Similarly with Random dataset , messages with retweets number larger than 20,000 or less than 50 are neglected . The resulting dataset contains in total 18K original messages and its statistics is shown in Table 1 . As can be seen , since the number of followers for all these news account are larger than 1 million , their posted messages on average gain more retweets than these in Random dataset . For News dataset , the mean and median values for message popularity are 529 and 238 respectively .
Since few messages can receive more retweets after been posted for one month , we use the number of retweets that a message gets in the first month since posted to measure its final popularity . We show the distribution of the message final popularity for both datasets in Figure 4 . As can be seen , both distributions follow power law . 5.2 Comparison Methods
To examine the efficiency of our modified RPP models , two variations of RPP model and two widely used regression models were introduced for comparison . Specifically , the comparison methods in our experiments are listed as follows : ffl SH [ 25 ] : the linear regression method for logarithmic popularity , which is proposed by Szabo and Huber
Figure 4 : Popularity distribution
Note that we manually set tn+1 = Ti for the sake of simplification . It does not mean that the ( n + 1)th retweets arrives at Ti . Parameter Estimation . Here , we denote the optimal values for parameters fc , γ , αg as fc fig . For the fitness fi in closed form parameter c , we can get its optimal value c by maximizing the log likelihood function in Equation 16 as
, α
, γ fi fi fi c
= arg max
ℓ = n/X c
( 18 )
For parameters γ and α , the optimal values can be found by maximizing the log likelihood ℓ using the gradient ascent method . The gradients for each parameter are
∂X ∂γ ln tk , c n∑ ,ff
= , n∑ k=1
∂ℓ ∂γ
∂ℓ ∂α
1 , e,ff + (
= , ne n+1∑ n+1∑
( t1,fl
ε , e ,ffk 1 , e,ff k=1
, t1,fl k k=1 where
∂X ∂γ
=
∂X ∂α
=
( 19 )
( 20 ) k
, t1,fl t1,fl k,1 ( 1 , γ)2 ( 21 ) ,ff )
ϵe
,ffk
,ff + ke ε , e,ffk
, c
∂X ∂α k=1 k,1 ln tk,1 , t1,fl t1,fl k
1 , γ ln tk
+ k,1)(ke
,ffk , ( k , 1)e ( 1 , γ)(1 , e,ff)2
,ff(k+1 ) , e
Following the standard gradient ascent method , update rules at the jth iteration are shown in the following equations .
( 22 )
γ(j+1 ) = γ(j ) + β1 ∂ℓ ∂γ α(j+1 ) = α(j ) + β2 ∂ℓ ∂α
( 23 )
( 24 ) where β1 and β2 are the learning rate at each iteration . The algorithm stops when the change in an iteration is small enough . fi fi
, γ and α
Prediction . With the obtained optimal parameters , ie , fi c , we can use the model to predict the expected number of retweets N ( t ) at any given time moment t . Incorporating with the rate function of retweeting dynamics in Equation 15 , we treat the prediction task as the following differential equation dN ( t ) dt
,fl fi t
= c fi ε , e fi
,ff 1 , e,fffi
( N ( t)+1 )
( 25 ) with the boundary condition N ( Ti ) = n . By solving this differential equation , we get the prediction function
N ( t ) = ln(1 + eY ) , Y , ln ε , α fi
( 26 )
/α fi )
(
101102103104105100101102103# Retweets# MessagesRandom(a)101102103104105100101102103# Retweets# MessagesNews(b ) Account Name
# Follower1 # Message
Avg . # Retweet Account Name
A2 9.2 232 653.8 A15 9.4 1922 Avg . # Retweet 143.1 1 # Follower is measured in million .
A1 3.8 1062 113.3 A14 3.7 1843 118.1
# Follower # Message
Table 1 : Statistics of News Dataset
A3 10.8 1164 741.1 A16 3.8 158 772.3
A4 3.3 77
170.0 A17 9.6 178
1479.5
A5 11.1 1373 331.4 A18 0.7 693 42.0
A6 5.1 239 453.8 A19 4.8 1685 410.1
A7 4.2 301 339.4 A20 5.9 1103 362.1
A8 9.2 1246 797.6 A21 16.0 1143 378.9
A9 7.2 1519 315.8 A22 1.4 383 499.8
A10 9.4 672 234.7 A23 20.8 1381 1543.3
A11 5.9 318 323.3 A24 22.2 972
1887.4
A12 6.0 922 380.4 A25 5.6 830 168.7
A13 6.3 577 751.7 man . The SH model is represented by ln N ( Tr ) = a1 ln N ( Ti ) + a0
( 28 ) ffl ML [ 21 ] : the multivariate linear regression model . The training period [ 0 , Ti ] is split equally into p intervals and the number of retweets received in each interval is seen as popularity deltas . The ML model predicts the popularity of a message at Tr as a linear function of p popularity deltas . Here , we set p = 6 . ffl LL [ 23 ] : RPP model with a log normal relaxation function as in Equation 29 and a linear reinforcement function as in Equation 8 . This model has been used to modeling the citation dynamics .
1p 2πσmt
, ( ln t,m )2 e
22 m fm(t ; µm , σm ) =
( 29 ) ffl PL : RPP model with a power law relaxation function as in Equation 7 and a linear reinforcement function as in Equation 8 . ffl PE : RPP model with a power law relaxation function as in Equation 7 and an exponential reinforcement function as in Equation 9 .
Note that we do not employ the LE model , ie RPP model with a log normal relaxation function and an exponential reinforcement function , for comparison since the modeling and prediction process for it is far too complicated to be implemented . Moreover , the input for the RPP models can be with or without the time mapping as in Equation 12 . In order to distinguish them , we add TM to each RPP models’ name . The time mapping version of RPP models applied for comparison consist of LLTM , PLTM and PETM . 5.3 Evaluation Metrics
The same as in [ 23 ] , we use Mean Absolute Percentage Error ( MAPE ) and Accuracy to evaluate the performance of all the prediction models . Let Nm(t ) be the real number of retweets for message m up to time t , and ˆNm(t ) be the predicted number of retweets . The MAPE measures the average deviation between predicted and real popularity over an aggregation of messages . For a dataset of M messages , the MAPE is defined as fifififi fifififi ˆNm(t ) , Nm(t ) M∑ fifififi ζ [ fifififi ˆNm(t ) , Nm(t )
Nm(t ) m=1
Nm(t )
]
M∑
I m=1
( 30 )
( 31 )
The Accuracy measures the fraction of messages correctly predicted for a given error tolerance ζ . It is defined as
M AP E =
1 M
Accuracy =
1 M
Figure 5 : Prediction results for different models where I[X ] is an indicator function which returns 1 if the statement X is true and 0 otherwise . Here , we set the threshold ζ = 0.1 in this paper .
6 . EXPERIMENTAL RESULTS
In this section , we first report extensive experimental results on both Random and News datasets to validate the effectiveness of our proposed PE and PETM models . Then we give detailed analysis of the model parameters . 6.1 Prediction Results
We begin our analysis by comparing the prediction performance of different models on Random and News datasets . Specifically , by fixing the indicator time Ti to be 1 , we evaluate the prediction performance of our proposed PE and PETM models as well as four comparison models including SH , ML , LL and LLTM , with reference time Tr varying from 2 to 24 . The parameter ϵ is set to be 10 for all RPP models . Figure 5 shows the comparison results . Generally speaking , the proposed PETM model can always achieve the best prediction performance for each Tr on both datasets . When removing the time mapping process , the PE model can also show better performance than the other four models on Random dataset as shown in Figure 5(a ) and 5(c ) . However , on News dataset in Figure 5(b ) and 5(d ) , the PE model shows worse performance than the other models except ML model in terms of MAPE when Tr is smaller than 10 , and it begins to show better performance when Tr grows larger . That indicates the PE model can well predict the long term popularity of a given message but it
051015202501015020250303504045Reference time Tr ( in hour)MAPE(a ) RandomSHMLLLLLTMPEPETM0510152025010150202503Reference time Tr ( in hour)MAPE(b ) NewsSHMLLLLLTMPEPETM0510152025010203040506Reference time Tr ( in hour)Accuracy(c ) RandomLLLLTMPEPETM051015202502030405060708Reference time Tr ( in hour)Accuracy(d ) NewsLLLLTMPEPETM Figure 6 : The performance comparison for different RPP models on News dataset with the variation of Ti
First , we examine the prediction performance of different RPP models when Ti varies . For fair comparison , we compare the performance of RPP models with and without the time mapping process separately . As can be seen from Figure 6 , for models without time mapping process , the PE model performs the best on the entire range of Ti , and the PL model shows the worst performance . The same observation can be made for models with time mapping process , except that when Ti = 2 and 3 , the performance of PETM is slightly worse than LLTM . Generally speaking , the superior predictive power of PE models indicates that the retweeting dynamics can be better characterized by integrating the power law temporal decay function with the exponential reinforcement function . Also , we can find that the exponential reinforcement function plays a very important role in PE models since when the reinforcement function is replaced by a linear function , as in PL models , the prediction performance drops significantly .
Then , we examine the effect of Ti on the prediction performance of RPP models . Intuitively , Ti is the length of training period . As shown in Figure 6 , for all RPP models , the MAPE decreases as Ti increases , indicating that increasing the training period can improve the prediction performance for all the models . However , we can also see that the rate at which MAPE declines slows down quickly , eg , the rate of decline for PETM model drops from 26.9 % at Ti = 1 to 10.7 % at Ti = 8 . This means the marginal gain for performance improvement diminishes with the increasing of the training period . This is caused by that the amount of training data added to the model decreases as Ti increases , namely that , when Ti becomes larger , the number of retweets that a message receives in the Tith hour is generally smaller than it receives in the ( Ti , 1)th hour . Though Ti is increased by one hour at each time , the amount of training data does not grow proportionally .
Finally , we examine the effect of time mapping process on the prediction performance of all models . As we can see from Figure 6 , for a fixed Ti , comparing with models without the time mapping , the MAPE drops significantly when adding the time mapping process to each model . This result confirms that the use activity variation can affect the retweeting dynamics and harm the performance of prediction models . By integrating the time mapping process to each prediction model , we can eliminate the effect of use activity variation and improve the prediction performance . Moreover , we observe that when Ti grows larger , the decrease in MAPE becomes more evident for
Figure 7 : Popularity Correlation cannot well capture the early evolution of the retweeting dynamics . Also , by comparing LL and LLTM models with PE and PETM models , we find that the performance of PE models are better than LL models in terms of both measurements on both datasets and the superiority increases with Tr , which means the proposed PE models are more appropriate to model the retweeting dynamics on microblogging platforms . For the other two baseline methods , SH model performs better than LL models in terms of MAPE and ML model shows the worst performance on both datasets . Both of them are regression method and try to capture the correlation between the early popularity and future popularity . The ML model works linearly and the SH model works in a logarithmic manner . As can be seen from Figure 7 , the early popularity and future popularity is logarithmically correlated . That explains why the SH model can yield a moderate MAPE value while the ML model cannot achieve a better prediction performance . However , both of them show poor performance in terms of Accuracy . We do not show the accuracy for these two method since they are all equal to zero when Ti 2 .
Further , we carried out extensive experiments on News dataset to examine the following issues : ( i ) the prediction performance of different RPP models when Ti varies ; ( ii ) the effect of Ti on the prediction performance of RPP models ; ( iii ) the effect of time mapping process on the prediction performance of RPP models . To be specific , we apply a series of RPP models , including LL , PL and PE models , with and without the time mapping process , on News dataset with the indicator time Ti varying from 1 to 8 . Since most messages in dataset stop receiving more retweets after being posted for 24 hours , we fix the reference time Tr to be 24 to check the ability for different models in predicting the popularity of a message . We use MAPE to measure the prediction performance and set the parameter ϵ again to be 10 . The experimental results are shown in Figure 6 .
123456780050101502025Indicator time Ti ( in hour)MAPE LLLLTMPLPLTMPEPETM Table 2 : Effect of prior number of retweets ϵ
Methods1 PE
Parameter
ϵ = 5 ϵ = 10 ϵ = 15 ϵ = 20
LL
0.2324 0.2274 0.2848 0.2928
LLTM 0.2286 0.2230 0.2557 0.2860
0.2109 0.2046 0.2285 0.2510
PETM 0.1944 0.1928 0.2168 0.2399
1 The performance is measured in MAPE .
Figure 8 : Variation of mapped indicator time Ti all models . The reason for this result is that the effect of user activity variation becomes more obvious with the increasing of Ti . To be more clear , in Figure 8 we show the variation of mapped Ti with the posted time of message varying from 1h to 24h . As we can see , the magnitude of change for the mapped Ti becomes larger when Ti increases . For example , the minimum value and maximum value of the mapped Ti are 0.09 and 1.54 when Ti = 1 , while they are 2.00 and 9.65 when Ti = 7 . That means , with the length of training period grows larger , the effect of user activity variation becomes more evident . Hence , the improvement in prediction performance by integrating the time mapping process becomes more obvious . To sum up , the experimental results certify the effectiveness of the proposed time mapping process . 6.2 Analysis of Model Parameters In our proposed PE and PETM models , there are in total four parameters fϵ , c , γ , αg , where ϵ is set manually and the others are derived from the model learning process . In this section , we first examine the effect of parameter ϵ on the prediction performance of the proposed models , and then investigate the inherent characteristics of the learned parameters .
As defined in Section 4.2 , the parameter ϵ is the effective number of retweets which plays the role of prior belief . Here , to examine the effect of ϵ , by fixing Ti = 1 and Tr = 24 , we conducted experiments on News dataset to check the prediction performance of LL , LLTM , PE and PETM models with ϵ = 5 , 10 , 15 , 20 . The results are shown in Table 2 . As can be seen , we can draw the similar conclusion as in [ 23 ] that decreasing ϵ can reduce MAPE for all four models . Since a larger ϵ implies a weaker role of the reinforcement mechanism in RPP models , this result indicates the disparity in retweet numbers is appropriately captured by the reinforcement mechanism . Moreover , we find that if ϵ is too small , eg ϵ = 5 , the MAPE becomes larger again . This result implies that ϵ should not be set too small since it balances the strength in the reinforcement mechanism . Overall speaking , the experimental results certify the importance of reinforcement mechanism in modeling the retweeting dynamics .
Further , taking PETM model on News dataset as an example , we show the distribution of the learned parameters .
Figure 9 : Distributions of model parameters
Figure 9(a ) illustrates the distribution of fitness parameter c . Clearly we can see that c follows roughly a powerlaw distribution , indicating that most of messages share the similar small fitness value , while only a small portion of messages are created to be stronger competitive than others . For the exponent of power law temporal relaxation function , parameter γ , as shown in Figure 9(b ) , most values of γ lie between 2 and 3 . Moreover , we show the distribution of decay factor α in exponential reinforcement function in Figure 9(c ) . Note that , a smaller α indicates a weaker decay in the reinforcement function . When α = 0 , the exponential reinforcement function degenerates into the linear reinforcement function . From Figure 9(c ) we can find that the value of α ranges from 0 to 0.1 , indicating that the decay parameter α takes effect in the reinforcement function .
7 . CONCLUSIONS AND FUTURE WORK In this paper , we proposed an extended reinforced Poisson process model with time mapping process to model the retweeting dynamics and predict the future popularity for messages on microblogging platforms . The proposed model captures a power law temporal relaxation function which corresponds to the aging in the ability of a message to attract new retweets and an exponential reinforcement function which characterizes the “ richer get richer ” phenomenon . Both the temporal relaxation function and the reinforcement function are derived from real data . Further , observing that the hourly variation of user activity can affect the retweeting dynamics in the early stages , we introduced the notation of weibo time and applied a time mapping process to transform the time moments in the retweeting dynamics into weibo
0510152025012345678910Time in a day ( in hour)Mapped Ti ( in hour ) Ti=1Ti=3Ti=5Ti=710010110210−410−310−210−1100cPDF(a)1152253350001002003004005006γPDF(b)0002004006008010001002003004005αPDF(c ) time . To evaluate the effectiveness of our proposed model , we conducted extensive experiments on two Weibo datasets , with 10K and 18K messages respectively . The experimental results show that our proposed model outperforms existing prediction models in popularity prediction problem .
In the future , we will focus on enriching the proposed model by incorporating more relevant factors , eg , structural factors derived from the underlying user network and the content factors extracted from the message itself .
Acknowledgements This work is supported by the National Natural Science Foundation of China ( 61272240 , 61103151 ) , the Doctoral Fund of Ministry of Education of China ( 20110131110028 ) , the Excellent Middle Aged and Youth Scientists of Shandong Province ( BS2012DX017 ) and the Natural Science Foundation of Shandong Province ( ZR2012FM037 ) .
8 . REFERENCES [ 1 ] M . Ahmed , S . Spagna , F . Huici , and S . Niccolini . A peek into the future : predicting the evolution of popularity in user generated content . In WSDM , pages 607–616 , 2013 .
[ 2 ] S . Asur and B . A . Huberman . Predicting the future with social media . In WI IAT , volume 1 , pages 492–499 , 2010 .
[ 3 ] R . Bandari , S . Asur , and B . A . Huberman . The pulse of news in social media : Forecasting popularity . In ICWSM , 2012 .
[ 4 ] P . Bao , H W Shen , J . Huang , and X Q Cheng .
Popularity prediction in microblogging network : a case study on sina weibo . In WWW , pages 177–178 , 2013 .
[ 5 ] J . Cheng , L . Adamic , P . A . Dow , J . M . Kleinberg , and
J . Leskovec . Can cascades be predicted ? In WWW , pages 925–936 , 2014 .
[ 6 ] R . Crane and D . Sornette . Robust dynamic classes revealed by measuring the response function of a social system . PNAS , 105(41):15649–15653 , 2008 . [ 7 ] F . Figueiredo . On the prediction of popularity of trends and hits for user generated videos . In WSDM , pages 741–746 , 2013 .
[ 8 ] S . Gao , J . Ma , and Z . Chen . Effective and effortless features for popularity prediction in microblogging network . In WWW , pages 269–270 , 2014 .
[ 9 ] M . Gomez Rodriguez , J . Leskovec , et al . Modeling information propagation with survival theory . In ICML , pages 666–674 , 2013 .
[ 10 ] M . Gupta , J . Gao , C . Zhai , and J . Han . Predicting future popularity trend of events in microblogging platforms . ASIST , 49(1):1–10 , 2012 .
[ 11 ] L . Hong , O . Dan , and B . D . Davison . Predicting popular messages in twitter . In WWW , pages 57–58 , 2011 .
[ 12 ] A . Kupavskii , L . Ostroumova , A . Umnov , S . Usachev , P . Serdyukov , G . Gusev , and A . Kustarev . Prediction of retweet cascade size over time . In CIKM , pages 2335–2338 , 2012 .
[ 13 ] H . Kwak , C . Lee , H . Park , and S . Moon . What is twitter , a social network or a news media ? In WWW , pages 591–600 , 2010 .
[ 14 ] K . Lerman and T . Hogg . Using a model of social dynamics to predict popularity of news . In WWW , pages 621–630 , 2010 .
[ 15 ] H . Li , X . Ma , F . Wang , J . Liu , and K . Xu . On popularity prediction of videos shared in online social networks . In CIKM , pages 169–178 , 2013 .
[ 16 ] F . M . Lilian Weng and Y Y Ahn . Virality prediction and community structure in social networks . Scientific reports , 3 , 2013 .
[ 17 ] S . Lin , X . Kong , and P . S . Yu . Predicting trends in social networks via dynamic activeness model . In CIKM , pages 1661–1666 , 2013 .
[ 18 ] Z . Ma , A . Sun , and G . Cong . On predicting the popularity of newly emerging hashtags in twitter . JASIST , 2013 .
[ 19 ] Y . Matsubara , Y . Sakurai , B . A . Prakash , L . Li , and
C . Faloutsos . Rise and fall patterns of information diffusion : Model and implications . In KDD , pages 6–14 , 2012 .
[ 20 ] M . McGlohon , J . Leskovec , C . Faloutsos , M . Hurst , and N . Glance . Finding patterns in blog shapes and blog evolution . In ICWSM , 2007 .
[ 21 ] H . Pinto , J . M . Almeida , and M . A . Gon¸calves . Using early view patterns to predict the popularity of youtube videos . In WSDM , pages 365–374 , 2013 .
[ 22 ] S . Redner . Citation statistics from 110 years of physical review . PHYSICS TODAY , 58(6):49–54 , 2005 .
[ 23 ] H W Shen , D . Wang , C . Song , and A L Barab´asi .
Modeling and predicting popularity dynamics via reinforced poisson processes . In AAAI , 2014 .
[ 24 ] B . Suh , L . Hong , P . Pirolli , and E . H . Chi . Want to be retweeted ? large scale analytics on factors impacting retweet in twitter network . In Socialcom , pages 177–184 , 2010 .
[ 25 ] G . Szabo and B . A . Huberman . Predicting the popularity of online content . Commun . ACM , 53:80–88 , 2010 .
[ 26 ] M . Tsagkias , W . Weerkamp , and M . De Rijke .
Predicting the volume of comments on online news stories . In CIKM , pages 1765–1768 , 2009 .
[ 27 ] O . Tsur and A . Rappoport . What ’s in a hashtag ? : content based prediction of the spread of ideas in microblogging communities . In WSDM , pages 643–652 , 2012 .
[ 28 ] A . Tumasjan , T . O . Sprenger , P . G . Sandner , and
I . M . Welpe . Predicting elections with twitter : What 140 characters reveal about political sentiment . ICWSM , 10:178–185 , 2010 .
[ 29 ] D . Wang , C . Song , and A L Barab´asi . Quantifying long term scientific impact . Science , 342(6154):127–132 , 2013 .
[ 30 ] C . Williams and G . Gulati . What is a social network worth ? facebook and vote share in the 2008 presidential primaries . American Political Science Association , 2008 .
[ 31 ] J . Yang and J . Leskovec . Patterns of temporal variation in online media . In WSDM , pages 177–186 , 2011 .
[ 32 ] P . Zhang , X . Wang , and B . Li . On predicting twitter trend : Factors and models . In ASONAM , 2013 .
