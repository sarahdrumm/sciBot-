Realizing Modularized Knowledge Models for
Heterogeneous Application Domains
Klaus Dieter Althoff , Kerstin Bach , and Meike Reichle
Intelligent Information Systems Lab
University of Hildesheim , Hildesheim , Germany {althoff,bach,reichle}@iisuni hildesheimde
ABSTRACT This paper addresses the realization of modularized knowledge models within a heterogeneous application domain using an existing knowledge management tool . The application domain we deal with is travel medicine , which combines medical aspects with geography , climate , holiday activities and associated traveling conditions . In this paper we present the application ’s requirements and show how knowledge models can be developed using an industrial strength application . Furthermore we present the challenges of a knowledge model based on multi case bases whereas each case base represents its own area of expertise . Hence , we introduce our knowledge model for the travel medicine application and exemplify the implementation of typical data types and similarity measures .
1 Introduction
Knowledge based systems provide a technology for covering a topic in a very comprehensive and scalable way . Realizing such systems requires high quality data sources , knowledge models and maintenance techniques . To achieve this , knowledge has to be acquired , analyzed , stored , and retrieved , which challenges a knowledge based system and is crucial for its continuous existence over a longer period of time .
The Collaborative Multi Expert Systems ( CoMES ) approach [ 1 ] describes the concept of knowledge lines1 and how they can be applied when building collaborative Multi Expert Systems and communicate via software agents . In this paper we follow the SEASALT2 architecture [ 2 ] , which is based on the CoMES approach , to develop an intelligent information system for travel medicine in which different aspects of the domain have to be combined . Each knowledge
1 Knowledge Lines use the principle of product lines as it is known from software engineering and apply it to the knowledge in a knowledge based system , thus splitting rather complex knowledge in smaller , reusable units .
2 SEASALT – Sharing Experience using an Agent based System Architecture LayouT . The SEASALT architecture proposes an intelligent information system with several cross linked case bases that are used to store information on different aspects of a complex knowledge domain and are filled with information mined from the online communication of a community of experts .
P . Perner ( Ed. ) : ICDM 2008 , LNAI 5077 , pp . 114–128 , 2008 . c . Springer Verlag Berlin Heidelberg 2008
Realizing Modularized Knowledge Models
115 base for an aspect or topic is based on a case based reasoning ( CBR ) system and , to some degree , provides its expertise like a human expert would do . The combination and collaboration between the individual CBR systems is realized via software agents on top of each CBR system . The application of software agents in CBR systems has been introduced by Plaza [ 3 ] , even though Plaza focused on case bases with the same case format . Our case bases contain information on different topics and we decided to model different topic based case bases , each with an own , individual case format . CBR systems with more than one case base were also used by Leake [ 4 ] , but in their systems the case bases contained similar data and in comparison to our approach the retrieval results of the case bases had to be compared , refined and finally the best result was chosen . Instead , we take each result and use software agents to combine them to a valid solution .
In this paper we introduce the knowledge models of our heterogeneous application domain which are required to cover the field of travel medicine and create prevention information for travelers . Like the most medical information systems ( ie Isabel3 or GIDEON4 ) we also focus on one area of medicine , although travel medicine combines numerous fields of medicine . Furthermore we add non medical but consultation relevant information to the given answer , which again requires different kinds of case bases . This additional information with covers the areas of geography , time and seasons , activities , and medicaments as well as their pharmaceutical ingredients . Each knowledge base can be updated individually , because after an initial model and case base has been implemented , we will integrate our information system in a travel medicine community . The results of discussions and information given in a community will be collected and after its evaluation it will be inserted in the appropriate case base .
Another advantage of using modular case bases to cover a heterogeneous application domain is their maintenance which is much easier than in monolithic case bases [ 5 ] . Also , modular case bases make it easier to include small ” factoids ” ( for instance ” There was a case of yellow fever in Indonesia ” ) that do not represent a full case but are still worth being included .
In the course of this paper we will describe the realization of our knowledge models and illustrate in which way the individual case bases are linked with each other . First of all , in chapter 2 we will introduce the application domain travel medicine including the case bases we have determined . In chapter 3.3 we describe the requirements of the travel medicine domain , especially under the aspect of modularized knowledge bases . We will describe a typical question to the system and its respective answer to explain our concept of shared data types . Furthermore this chapter shows examples of our similarity measures . Chapter 4 contains the description of the implementation of our approach and the software
3 Isabel is a clinical decision support system designed to enhance the quality of diag nosis decision making . home page : http://isabelhealthcare.com/
4 GIDEON is an online application to diagnose infectious diseases and give information on epidemiology , treatment and microbiology . home page : http://wwwgideononlinecom/
116
K D Althoff , K . Bach , and M . Reichle used . Chapter 4 picks up on the requirements of chapter 3.3 and shows the realization of our modular , cross linked knowledge model according to those requirements . The paper closes in chapter 5 with a brief examination of our application project in the context of SEASALT [ 2 ] and CoMES [ 1 ] and finally gives a conclusion and outlook in chapter 6 .
2 Travel Medicine as an Application Domain
Travel medicine is an interdisciplinary speciality concerned with the prevention , management and research of health problems associated with travel , and covers all medical aspects a traveler has to take care of before , during and after a journey . For that reason it covers many medical areas and combines them with further information about the destination , the activities planned and additional conditions which also have to be considered when giving medical advise to a traveler . Travel medicine starts when a person moves from one place to another by any mode of transportation and stops after returning home without diseases or infections . In case a traveler gets sick after a journey a travel medicine consultation might also be required .
The research project presented in this paper is supported by mediScon worldwide , a Germany based company with a team of physicians specialized on travel medicine and TEMOS5 , a tele medical project of the Institute of Aerospace Medicine at the German Aerospace Center DLR6 . Together we will develop docQuery , an intelligent information system on travel medicine which provides relevant information for each traveler about their individual journey . First of all we will focus on prevention work , followed by information provision during a journey and information for diseased returnees .
Since there are currently no sources on medical information on the World Wide Web , that are authorized by physicians and/or experts , we aim at filling this gap by providing trustworthy travel medical information for everybody .
Based on the SEASALT architecture [ 2 ] , we propose building a web community which provides information to travelers and physicians ( non experts in the field of travel medicine ) from experts on travel medicine . docQuery will provide an opportunity to share information and ensure a high information quality because it is maintained by experts . Travelers and experts can visit the website to get the detailed information they need for their journey . A traveler will give docQuery the key data on their journey ( like travel period , destination , age(s ) of traveler(s ) , activities , etc . ) and docQuery will prepare an information leaflet the traveler can take to his or her general practitioner to discuss the planned journey . The leaflet will contain all necessary information to be prepared and provide detailed information if it is required . In the event that docQuery cannot answer the traveler ’s question , the request will be sent to experts who will answer it .
5 TElemedicine for a MObile Society , see http://wwwtemos networkorg 6 http://wwwdlrde/me/
Realizing Modularized Knowledge Models
117
The computation of the answer follows the steps a physician would take during a consultation . Therefore several knowledge bases have to be queried and their answers have to be combined according to the given constraints . We will realize the combination of information using software agents , where each agent represents one domain and provides information of its domain according to the query .
2.1 The docQuery Case Bases The travel medicine domain covers heterogeneous aspects and according to the knowledge containers introduced in [ 6 ] , each area requires a case representation vocabulary , similarity measure , case base and adaptation methods . Our implementation of the following case bases shows , that there are several data types which can be used in more than one case base .
The destination case base contains country characteristics which are important for a visitor , containing vaccination requirements and vaccination preventable infectious diseases , pre travel information on different kinds of diseases which might occur in a certain country or region , as well as hygiene and prevention advise . The destination case base differentiates not only by country , we can also handle regions , continents , etc . Diseases can be assigned to each degree of generalization . The disease case base contains infectious diseases , the major area of travel medicine , and holds information about the disease itself as well as its transmission , the symptoms , the disease pattern , precaution advise , vaccination , prophylaxis advise and/or the treatment . Diseases provided in this case base are derived from the travel related branch of several traditional medical disciplines like tropical medicine , infectious diseases , gastroenterology , internal medicine , paediatrics , geriatrics , obstetrics gynaecology , dermatology , etc . as described in [ 7 ] .
The medicament case base holds information about medicaments such as their ingredients , their field of application , the therapeutic field , the immunogenicity , the efficacy , the dose , possible reverse reactions and its management , contraindications and interdependencies as well as advantages and disadvantages . Medicaments in this case base are related to diseases in the disease and chronic illness case bases ensuring that the docQuery application will provide information for each medicament it suggests .
The activity case base contains advise for travelers who plan to engage in activities that cause particular physiological stress , such as diving , do mountain climbing or sojourns at a high altitude , or who prepare for a long term stay like backpackers or expatriates , as well as miscellaneous travel activities like visiting caves , desert tourism or extreme sports [ 8 ] . Each of those activities requires individual information regarding the traveler ’s physical fitness or the conditions at the destination .
In our model we distinguish between chronic illness and disease because of the fact that chronic illnesses is a part of the travelers’ anamnesis and on the other hand the chronic illnesses’ descriptions vary in the the attributes and concepts we have used for the modeling . This case base contains general information on the illness and characteristics as well the restrictions it imposes on certain activities , medicaments or travel regions .
118
K D Althoff , K . Bach , and M . Reichle
For each destination we provide information about hospitals . For each hospital we will be able to give information about the kind of hospital ( primary , secondary , tertiary care of specialized hospital ) including their facilities . In order to be able to tell a traveler aboard which hospital he or she should consult for his or her needs . docQuery only provides information directly associated with the travelers healthiness . The information resource case base contains further sources provided by other travelers how to get more advise , for example about actual news , weather conditions or customs duty .
In travel medicine not only the prevention of diseases have to be mentioned , we also has to consider the travelers themselves ( children , elderly people , pregnant women , disabled people , etc. ) , the reason for traveling or the way of traveling ( aviation , navy cruise , road traffic , driving , etc ) The associated condition case base provides information on how people do travel and what advise they have to be given .
3 Requirements of the Travel Medicine Domain
3.1 Requests and Responses in docQuery
Typical Request . A traveler will be guided through the request and will be asked several questions by the system ( see Table 1 for the questions and the range of answers ) in order to receive the information necessary for the ” consultation ” . The order of the questions is almost the same a physician would ask and can be divided into two parts : The first three questions only concern the traveler and his or her physical condition , ensuring the patient is able to travel and to identify the first constraints we have to pay attention to when creating an individual sequence of queries . Questions four to seven ask for the traveler ’s destination and the duration of his or her stay . Information on the destination will be required in order to provide the traveler with information about the country , local conditions , and potential dangers . The date of the journey is required to deduce more constraints and define more precisely what kind of infectious diseases have to be considered regarding the season abroad . The duration is needed to find an appropriate way of vaccination and medication , because travelers who only stay for a very short period of time need a different preparation as those who stay for a longer amount of time . Based on the given information a sequence of questions is created and the case bases are queried .
Typical Answer . Based on the given answers in the first step a request strategy is chosen . We use rules to determine the order in which the case bases are queried and create those queries . A typical way to start is to query the destination case base which returns information on vaccinations , stand by medications , behaviour advise , and local diseases . Regarding the given example in Table 1 our case base would return the country information of Indonesia containing standard , obligatory , and risk vaccination information . Listed infectious diseases will be used to query the diseases case base for more information . Each case base
Realizing Modularized Knowledge Models
119
Table 1 . Typical Questions of the docQuery System
No . Question
1 . Type of the traveller(s )
2 . Gender of the traveller(s )
3 . Current/Chronic illness(es ) of the traveller(s )
Range of Answer [ child|teenager| young person| pregnant woman| elderly person ] [ male|female ] [ list of diseases ]
4 . Destination of the journey <destination>
5 . Time/Date of Travel date <from> <to>
Example young person male none
Bali
March 5th , 2008 until March 19th , 2008
6 . Duration
[ no of days/weeks/months ] 2 weeks
7 . Planned Activities during
[ list of activities ] road trip , beach the Journey introduced in Section 2.1 is involved in creating the answer . For the communication and elaboration of the individual results we use software agents ( topic agents according to the SEASALT architecture [ 2 ] ) which perform the request and prepare an answer for each topic . Refining steps are also done by the topic agents until a valid answer can be given .
Table 2 shows the simplified structure of an answer ( column Answer ) with possible content ( column Example ) docQuery gives . The example does not contain the explanation , instead it shows the keywords . Rows 1 and 2 are extracted out of the destination case base . The descriptions of diseases and the constraints for medications are retrieved from the disease case base . In case chronic illnesses have to be considered , the according case base is queried . Both answers are used as constraints when querying the medicament and activities database . For each given information we provide explanations based on the given conditions in both case bases information resource and associated conditions .
3.2 Realization of the Modular , Cross Linked Knowledge Model
As described in [ 5 ] , the maintenance of modularized case bases is more effective than the maintenance of monolithic case bases , a further motivation for multiple case bases is the increase of solution quality , a more selective case addition or the usage of individual cases and their local competence as discussed in [ 4,9 ] .
Each case base requires a vocabulary of its own containing , for example in the destination case base , geographical terms like countries , regions , capitals , etc . as well as medical terms to describe diseases . Both , geographical terms and diseases , can be modeled in taxonomies to define similarities and our knowledge model allows sharing each attribute ensuring a conjoint vocabulary is used . The importance of a shared vocabulary is explained in [ 10 ] . Combined similarity
120
K D Althoff , K . Bach , and M . Reichle
Table 2 . Typical Answers of the docQuery System
No . Answer
Example
1 . Advise for the journey 2 .
Infectious diseases
Destination : Indonesia Vaccination Standard : Diphtheria , Hepatitis A , Measles , Poliomyelitis , Tetanus , Typhoid Fever Vaccination Obligatory : Yellow Fever Vaccination Risk : Cholera , Hepatitis B , Japanese Encephalitis , Rabies
4 .
Information about infectious diseases abroad
AIDS , Malaria
5 . Stand by medication not necessary
6 . Behaviour
Explanation how to avoid Malaria infections Explanation how to avoid mosquito bites Explanation how to travelers diarrhoea ( concerning food , water , etc . ) Explanation how to avoid infections like HIV , Hepatitis
7 . Hospital nearby
List of addresses of tertiary hospitals in Bali
8 .
9 .
Information about possible injuries abroad Information about medicaments if required
10 . Activities bites , stings , wounds
Explanation on Malaria Prophylaxis : Atovaquon&Proguanil ( Malarone ) , Doxycyclin Manahydrat , Mefloquin ( Lariam ) Explanation how to avoid sun burned skin measures in a medical domain have been presented in [ 11 ] as well as [ 12 ] . [ 11 ] combines similarity measures for image segmentation and similarity measures for textual information in order to retrieve cases containing non image and image information . Our approach deals with textual information that has a different semantic . The approach presented in [ 12 ] uses individual similarity measures for two different groups of parameters ( group one describes the clinical stage , gleason score , etc . and group two contains the degree of radiation ) . In comparison to this approach we switch the similarity measure according to the user ’s input .
3.3 Requirements with Respect to Similarities
Combined Similarity Measures . The complexity of the domain also requires some rather advanced similarity measures . For instance in the case of geographic information when planning a journey a similar destination would be one nearby , or a region that is maybe farther away but with comparable features with respect
Realizing Modularized Knowledge Models
121 to climate , hygienic conditions or other associated risks . In order to accommodate this , similarities have to be defined with respect to different criteria and they are combined into a combined similarity measure that takes all possible similarities into account ( see section 4.3 for an example ) .
Contextual Similarities . Another case is the modeling of diseases . They can be modeled in taxonomies but again with regard to different aspects such as incidents ( where has the disease occurred ) , vectors ( animals that carry the disease such as mice , rats or mosquitoes ) , ways of infection ( airborne infection , contact infection , smear infection or infection through exchange of body fluids ) or pathogen ( virus , virusoid , bacteria , prions , worms , fungi etc ) Which aspect really determines a disease ’s similarity in the end depends on the query context . If the traveler is looking for information on prevention , aspects such as incidents , vectors or possible ways of transmission are relevant . If a traveler has already arrived at the destination and is looking for ways to treat an existing or supposed disease the disease ’s pathogen is the determining factor . This makes it necessary to not only be able to combine similarity measures but also to switch between them depending on the query context .
Circular Similarities . Another speciality is the modeling of the concept of time , which requires a circular similarity measure . When dealing with travel medicine we usually consider the month of a journey . The months cannot be modeled as a simple list where each month has a maximal similarity with its neighbors though , since in reality they form a circle . January should be as similar to December as it is to February .
3.4 Requirements with Respect to CBR Tools
Earlier we already introduced our concept of multiple case bases . A tool or system that is used to model the travel medicine domain according to our approach needs to be able to hold several case bases that are isolated from each other and can be queried individually , but also needs to be able to share concepts or data types ( for instance the data types for regions is needed in the destination case base as well as in the diseases case base , for indicating occurrences of a disease ) .
Since we plan to offer docQuery as a freely accessible online source of information , we will have to deal with a high amount of system load which requires high availability , high processing speed as well as scalability . Also , being freely accessible , it may be exposed to possible attempts of misuse which require the system to also be as secure and failsafe as possible in order to keep up the service and protect the system ’s data from tampering or destruction .
We do not expect to find a tool that perfectly fits all of our needs , but instead expect it to be necessary to add self written components integrated into the system , for example the subsequent querying of the individual case bases and the combination of the respective results . In order to be able to freely interact with the tool some kind of programming interface or API is necessary .
122
K D Althoff , K . Bach , and M . Reichle
4 The Empolis Information Access Suite
The empolis Information Access Suite ( e:IAS ) [ 13 ] is being developed by empolis7 a Bertelsmann company . It consists of a server client based knowledge provision component , the Knowledge Server , and a knowledge modeling tool , the Creator . e:IAS uses case based reasoning ( CBR ) as its main underlying methodology . The Knowledge Server is used to query the system ’s case base(s ) and the Creator is used to model the individual case format(s ) , for configuring the processing and possible enrichment of imported data , as well as the actual case retrieval . In research projects empolis allows us to use the e:IAS under research and education license .
4.1 Basic Concepts
The Creator is based on the free eclipse integrated development environment8 adopting its workbench concepts and extending it with different components of its own . Different tools within the Creator , so called Managers , are used to create a model of a respective domain ( ModelManager ) , configure the import of existing data into the model ( DataManager ) and define the workflow of their processing ( PipeManager ) . When modeling a new knowledge domain the domain is represented by an aggregate that includes freely definable attributes of different types . The data types can also be freely defined , by extending predefined basic data types such as text , integers , and floating point numbers . Further on attributes can be defined as a set of instances of a particular data type , or as a compound type , including atomic data types .
Data types can be constrained or specialized for instance by defining ranges or a fixed set of possible values . In the case of text based data types these values are called concepts . When defining new data types it is also necessary to define their similarity measures , which are crucial for case based reasoning . These similarity measures can be defined as simple mathematical functions , in the case of numerical data types , or , in case of text based data types , as simple string distance measures . In case of concepts more elaborate similarity measures are also possible . Concepts can be arranged in lists or orders , forming taxonomies or similarity matrices . More complex similarities can be modeled using combined similarity measures where different measures are defined and the highest similarity is taken into account . Such a combined similarity measure can for example be used to create a model in which two leaves of a given taxonomy are more similar than the others , like for instance a pair of twins in a set of siblings . In this example a given family taxonomy would be combined with a similarity matrix in which the two twins are marked with a higher similarity than the similarity given by the taxonomy for its respective child leafs .
Once a model has been created it can be filled with data from a multitude of sources such as simple text or xml files , data bases , data collected by a web crawler or provided by an MS Exchange or Tamino server . Additional tools such
7 http://wwwempoliscom 8 http://wwweclipseorg/
Realizing Modularized Knowledge Models
123
Fig 1 . e:IAS Architecture , source:[13 ] as the TextMiner and different rules pipelets ( components of the PipeManager ) can be used for processing the data at import time . e:IAS itself uses a custom XML dialect to store its models , similarities , pipe/ import definitions etc . The index that is generated from the imported data can be queried using Java , JSP or web services .
4.2 Requirement Compatibility e:IAS also meets most of the requirements described in section 3.3 that arise from the actual knowledge domain . It offers the possibility to define custom similarity measures for data types and combine any number of them into a combined similarity measure , which is implemented in such a way that all included measures , are consulted and the highest value is taken into account . Switching between individual similarity measures during the system ’s runtime is realized using adaptation rules that are a part of e:IAS .
The aforementioned circular similarity measure which is needed in order to model temporal attributes has been realized by modelling the individual months as textual concepts and using a similarity matrix with manually defined similarities .
124
K D Althoff , K . Bach , and M . Reichle
Fig 2 . Data Type Language in e:IAS
The multiple case bases concept as described in 2.1 can also be realized using e:IAS . We did this by creating one aggregate per case base within a single instance of e:IAS . Aggregates in e:IAS are completely independent from each other , but having them inside one instance allows them to share data types , thus creating a shared vocabulary . In the context of our application domain this is particularly useful since we do have shared data types such as region or disease that would otherwise have to be copied and synchronized manually .
Since e:IAS has been under active development for several years , incorporates previously developed successful knowledge management tools such as orenge or SmartFinder and has also been successfully deployed in numerous industrial applications like the SIMATIC Knowledge Manager [ 14 ] we are confident that its overall performance and security will meet our requirements . The required open API is also provided in the form of a Java API that can be used in Java programs or from within JSP .
4.3 Shared Data Types and Similarities in e:IAS
The shared data types within our knowledge model are languages , diseases , geographic regions , medication , transmission ways , symptoms or parts of disease patterns . In this section we will show some examples how we modeled different kinds of data types and their according similarities .
The data type language contains a list of languages in which data is stored . Each case base contains this attribute , so we have to define it once and can use it in all case bases . Figure 2 shows the definition of this data type in e:IAS . On the left hand side of the figure the concepts are displayed and for each concept we are able to define synonyms ensuring an appropriate mapping .
Another data type which is used by more than one case base is region , because it describes the region of the destination , the regions in which a disease might occur , as well as the region a hospital is situated in . Figure 3 shows how concepts can be modeled in a taxonomy including their similarity definitions . The numbers underneath each concept in the taxonomy in figure 3 are the similarities if Jersey is requested .
Realizing Modularized Knowledge Models
125
Fig 3 . Taxonomy Excerpt of the Data Type Region in e:IAS
Fig 4 . Taxonomies of the data type disease
126
K D Althoff , K . Bach , and M . Reichle
This taxonomy represents the geographical classification and furthermore e:IAS allows to combine more types of classification , for instance , using climatic aspects . The taxonomy represents only one view to define the similarities . For more context dependable similarities we can define a matrix containing all countries and their subsumptions and define another similarity measure . During the retrieval process both measures are considered and the highest similarity will be included in the calculation .
Contextual similarities can be defined by creating concepts with more than one taxonomy which enables the system to represent information in one attribute using multiple taxonomies . Each taxonomy represents its respective similarity model . Figure 4 shows the data type facilities containing different kinds of facilities and multiple orders . Each order can assign its own similarity measure and during indexing process all orders are considered .
5 docQuery in the Context of SEASALT and CoMES
The realization of the modular , cross linked knowledge model with e:IAS is only a part of the general development of the SEASALT architecture [ 2 ] , which is based on the CoMES approach , our underlying research vision [ 1 ] . docQuery as a reallife application gives us the opportunity to evaluate the concepts and techniques we developed in CoMES and SEASALT by implementing them on an existing knowledge domain , using a well established industrial strength tool and thus testing their adequacy and feasibility . Of course not all parts of the SEASALT architecture can be implemented using e:IAS , which is why this paper focuses on docQuery ’s knowledge provision part . The knowledge acquisition part which is mostly concerned with natural language processing and classification will be implemented separately .
The implementation of an architecture such as docQuery ’s is not a typical application of e:IAS , since it uses several cross linked case bases and demands features like the switching of case bases or similarity measures during runtime , which is not yet implemented . We plan further extensions , using semantic descriptions of knowledge sources for instance based on [ 15 ] , with respect to improving the hybrid and decentralized/distributed reasoning capabilities as well as the problem solving capabilities in configuration like tasks .
6 Conclusion and Outlook
In this paper we presented the realization of a modular , cross linked knowledge model with e:IAS , an industrial knowledge management and CBR tool . We introduced travel medicine as our application domain and the docQuery project which aims to provide complete and reliable information for individual journeys considering all aspects a travel medicine physician would do . Within docQuery we introduced its different case bases and the way they can be queried and combined . Based on this model we then described the requirements that arise from
Realizing Modularized Knowledge Models
127 our architecture and its underlying knowledge domain with regard to knowledge modeling , similarity measures , system performance , and accessibility .
We then presented e:IAS , a knowledge management tool , which is based on CBR and developed by empolis introduced its underlying concepts and basic usage , and evaluated it , according the earlier stated requirements . Following this , we illustrated how we realized docQuery ’s modular , cross linked knowledge model using e:IAS and explained how we implemented the novel functionalities using IAS ’s on board utilities . Further on , we illustrated how this implementation fits in the general context of our work on SEASALT and CoMES . docQuery is still work in progress . We are currently building up our knowledge base and plan to further expand it , both manually and by mining knowledge from the corresponding community of experts . Apart from the knowledge acquisition part our next steps will be finding a sensible way of switching similarity measures during run time in order to realize contextual similarities . We also plan to launch a first prototype soon in order to optimize our request strategies based on realistic queries .
References
1 . Althoff , KD , Bach , K . , Deutsch , JO , Hanft , A . , M¨anz , J . , M¨uller , T . , Newo , R . , Reichle , M . , Schaaf , M . , Weis , KH : Collaborative multi expert systems – realizing knowlegde product lines with case factories and distributed learning systems . Technical report , University of Osnabr¨uck , Osnabr¨uck ( September 2007 )
2 . Bach , K . , Reichle , M . , Althoff , KD : A domain independent system architecture for sharing experience . In : Proceedings of LWA 2007 , Workshop Wissens und Erfahrungsmanagement , September 2007 , pp . 296–303 ( 2007 )
3 . Plaza , E . , McGinty , L . : Distributed case based reasoning . The Knowledge engi neering review 20(3 ) , 261–265 ( 2006 )
4 . Leake , D . , Sooriamurthi , R . : When two case bases are better than one : Exploiting multiple case bases . In : Aha , DW , Watson , I . ( eds . ) ICCBR 2001 . LNCS ( LNAI ) , vol . 2080 , pp . 321–335 . Springer , Heidelberg ( 2001 )
5 . Althoff , KD , Reichle , M . , Bach , K . , Hanft , A . , Newo , R . : Agent based maintenance for modularised case bases in collaborative multi expert systems . In : Proceedings of AI2007 , 12th UK Workshop on Case Based Reasoning , December 2007 , pp . 7–18 ( 2007 )
6 . Richter , MM : Introduction . In : Lenz , M . , Bartsch Sp¨orl , B . , Burkhard , HD , Wess , S . ( eds . ) Case Based Reasoning Technology . LNCS ( LNAI ) , vol . 1400 . Springer , Heidelberg ( 1998 )
7 . ISTM International Society of Travel Medicine : Introduction to travel medicine .
ISTM Slide Lecture Kit ( February 2006 )
8 . Schmidt , T . , Herda , LR , Ly , MP : First aid in tourism medicine . Curriculum .
Continuing Education Scheme ( August 2006 )
9 . Leake , DB , Sooriamurthi , R . : Dispatching cases versus merging case bases : When mcbr matters . In : Proceedings of the Sixteenth International Florida Artificial Intelligence Research Society Conference , FLAIRS 2003 , May 2003 , pp . 129–133 ( 2003 )
10 . Avesani , P . , Hayes , C . , Cova , M . : Language games : Solving the vocabulary problem in multi case base reasoning . In : Mu˜noz Avila , H . , Ricci , F . ( eds . ) ICCBR 2005 . LNCS ( LNAI ) , vol . 3620 , pp . 35–49 . Springer , Heidelberg ( 2005 )
128
K D Althoff , K . Bach , and M . Reichle
11 . Perner , P . : An architecture for a cbr image segmentation system . In : Althoff , K D , Bergmann , R . , Branting , LK ( eds . ) ICCBR 1999 . LNCS ( LNAI ) , vol . 1650 , pp . 525–534 . Springer , Heidelberg ( 1999 )
12 . Song , X . , Petrovic , S . , Sundar , S . : A case based reasoning approach to dose planning in radiotherapy . In : Wilson , DC , Khemani , D . ( eds . ) Proceedings of the 7th International Conference on Case Based Reasoning ( ICCBR ) 2007 , Workshop on Case Based Reasoning in the Health Sciences , Belfast , Northern Ireland , August 2007 , pp . 348–357 ( 2007 )
13 . empolis GmbH : Technical white paper e:information access suite . Technical report
( September 2005 )
14 . Lenz , M . , Busch , KH , H¨ubner , A . , Wess , S . : The simatic knowledge manager . In : Aha , DW , Becerra Fernandez , I . , Maurer , F . , Mu˜noz Avila , H . ( eds . ) Exploring Synergies of Knowledge Management and Case Based Reasoning ( Technical Report WS99 10 ) , pp . 40–45 . AAAI Press , Menlo Park ( 1999 )
15 . Schaaf , M . : Managing Experience Items Indexed by Declarative Workflow Descriptions . PhD thesis , Institute of Computer Science , University of Hildesheim ( February 2008 )
