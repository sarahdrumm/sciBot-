Anti Monotonic Overlap Graph Support Measures
Toon Calders ( tcalders@tuenl )
Eindhoven University of Technology
Jan Ramon ( janramon@cskuleuvenbe )
Katholieke Universiteit Leuven
Dries Van Dyck ( driesvandyck@uhasseltbe )
Hasselt University , Transnational University of Limburg
Abstract
In graph mining , a frequency measure is anti monotonic if the frequency of a pattern never exceeds the frequency of a subpattern . The efficiency and correctness of most graph pattern miners relies critically on this property . We study the case where the dataset is a single graph . Vanetik , Gudes and Shimony already gave sufficient and necessary conditions for anti monotonicity of measures depending only on the edge overlaps between the intances of the pattern in a labeled graph . We extend these results to homomorphisms , isomorphisms and homeomorphisms on both labeled and unlabeled , directed and undirected graphs , for vertex and edge overlap . We show a set of reductions between the different morphisms that preserve overlap . We also prove that the popular maximum independent set measure assigns the minimal possible meaningful frequency , introduce a new measure based on the minimum clique partition that assigns the maximum possible meaningful frequency and introduce a new measure sandwiched between the former two based on the poly time computable Lov´asz θ function .
1 Introduction
Recently , graph mining has emerged as a new field within contemporary data mining that got a lot of attention over the last several years . The central task is to find subgraphs , called patterns that occur frequently in either a collection of graphs , or in one large graph . Especially in the single graph setting , the notion of frequency , however , is not at all straightforward . For example , the na¨ıve solution of taking the number of instances of the pattern as its frequency has the undesirable property that extending a pattern ( ie , making it more restrictive ) , may increase its frequency . Hence , as pointed out by Vanetik , Gudes and Shimony [ 13 ] , a good frequency measure must be such that the frequency of a super pattern is always at most as high as that of a subpattern . This property is called anti monotonicity .
Also for reasons of efficiency , anti monotonicity of the frequency measure is highly desirable , as it allows for pruning large parts of the search space . The efficiency and correctness of most graph pattern miners relies critically on the anti monotonic property of the used frequency measure .
An important class of anti monotonic support measures in the single graph setting is based on the notion of an overlap graph — a graph in which each vertex corresponds to a match of the pattern and two vertices are connected by an edge if the corresponding matches overlap . Vanetik , Gudes and Shimony proved necessary and sufficient conditions for anti monotonicity in the single , labeled graph setting , in which the vertices of the overlap graph represent subgraphs of the data set isomorphic to the pattern , and the edges represent edge overlap [ 13 ] between the subgraphs .
In the context of graph mining , however , not only subgraph isomorphism and labeled graphs are important . On the one hand , the importance of homeomorphic based graph mining increased drastically with the study of biological networks [ 1 , 6 ] . On the other hand , in applications where vertices can play several roles ( eg social networks ) homomorphism is more suitable . Homomorphism in the context of data mining has been thoroughly investigated in the field of inductive logic programming [ 11 ] . In this paper we extend the results of Vanetik , Gudes and Shimony to these settings as well . Our main contributions are :
1 . We study systematically all 24 combinations of iso , homo , or homeomorphism , on labeled or unlabeled , directed or undirected graphs , with edge or vertexoverlap and extend the anti monotonicity results .
2 . In our proofs , we use reductions which are also of interest in their own right , as they allow to transfer results for different types of morphisms and overlap from one setting to another . For an overview of the different reductions , see Figure 1 .
3 . An interesting consequence of the reductions is that any unlabeled , undirected graph is a potential vertexand edge overlap graph in all considered settings . l
G↔
• , Homo l
G→
• , Homo h
R3 h
R3 c
_
[
V e←v v←v
G↔ λ , Homo ( Th . 22 ) c
_
[
V e←v v←v
G→ λ , Homo ( Th . 22 ) l
G↔
• , Homeo l
G→
• , Homeo j
G↔
• , Iso
_
[ c h
R2
G↔ λ , Iso [ 13 ] , Th . 22 hhh g e c a _ ] [ Y W
V h
R3
R
V e←v v←v g h j
R1 thhh
G↔ λ , Homeo e c a _ ] [ Y W
V
G→
• , Iso
_
[ c h
R2 e←v v←v
R3
R
V
R1 thhh
G→ λ , Homeo
G→
λ , Iso [ 13 ] , Th . 22 hhh
Figure 1 . Overview of the reductions . R1 , R2 , and R3 are proven respectively in Theorems 25 , 29 , and 33 ; the dashed and the dotted arrows in Prop . 12 . Arrows representing reductions changing γ overlap into γ ′ overlap are labeled with γ → γ ′ .
4 . We show that ( under reasonable assumptions ) the maximum independent set measure ( MIS ) of Vanetik , Gudes and Shimony [ 13 ] the smallest antimonotonic measure in the class of overlap graph based frequency measures . We also introduce the new minimum clique partition measure ( MCP ) which represents the largest possible one . is
5 . In general , both the MIS measure and the MCP measure are NP hard to compute in the size of the overlap graph . The Lov´asz measure is computable in polynomial time and is sandwiched between the former two measures . We show that the Lov´asz measure induces an anti monotonic overlap graph based frequency measure .
Due to space limitations , we omit the proofs for our theorems and only state the results and intuitions in this version . In Section 2 we review basic concepts from graph theory . In Section 3 we introduce overlap graphs , support measures and reductions between the different settings . Next , in Section 4 we present our results on minimal , maximal and polytime computable meaningful overlap measures . In Section 5 we present our reductions and use them to extend the results to all 24 settings . Finally , we conclude in Section 6 .
2 Preliminaries
We assume that the reader is familiar with most basic graph theoretic notions and computational complexity . Any textbook in these areas , such as [ 3 ] and [ 12 ] supply necessary background .
Graphs A graph G = ( V , E ) is a pair in which V is a ( non empty ) set of vertices or nodes and E is either a set of edges E ⊆ {{v , w} | v , w ∈ V , v 6= w} or a set of arcs E ⊆ {(v , w ) | v , w ∈ V , v 6= w} . In the latter case we call the graph directed . A labeled graph is a quadruple G = ( V , E , Σ , λ ) , with ( V , E ) a graph , Σ a non empty finite , totally ordered set of labels , and λ a function V → Σ assigning labels to the vertices . We use the notation V ( G ) , E(G ) and λG to refer to the set of vertices , the set of arcs ( edges ) and the labeling function of a graph G , respectively . By G , we denote the class of all graphs ; by G→ ( G↔ ) , the restriction to directed ( undirected ) graphs ; and by Gλ ( G• ) the restriction to labeled ( unlabeled ) graphs . We often combine notation ; eg , G→ • for directed , unlabeled graphs .
Morphisms The following concepts introduced for G→ λ are also valid for undirected and/or unlabeled graphs by dropping the direction of the edges and/or the vertex labels . A homomorphism π from H = ( VH , EH , Σ , λH ) to G = ( V , E , Σ , λ ) is a mapping from VH → V , such that ∀(v , w ) ∈ EH : ( π(v ) , π(w ) ) ∈ E . If such π exists , we say that H is homomorphic to G.We call π edge surjective if ∀(v′ , w′ ) ∈ E ∃(v , w ) ∈ EH : π(v ) = v′ ∧ π(w ) = w′ and call it surjective if it is both vertex and edge surjective . An isomorphism from H to G is a bijective homomorphism π from H to G . In that case , we say that H is isomorphic to G and write H ∼= G . We use H ⊆ G to denote that H ∼= g , for some subgraph g of G .
A path of length k in G is a sequence of vertices ( v0 , . . . , vk ) with ( vi−1 , vi ) ∈ E . The vertices v1 , . . . , vk−1 are called the inner vertices and v0 , vk the end vertices of the path . Two paths P1 and P2 of G are called disjoint or independent if no inner node of P1 is in P2 and vice versa . The set of all paths of G is denoted PG , and of all paths with end vertices v and w , PG(v , w ) .
A subgraph homeomorphism π from H to G is a pair of injective mappings from V ( H ) → V ( G ) and from E(H ) → PG , such that ∀(v , w ) ∈ E(H ) :
π((v , w ) ) ∈ PG(π(v ) , π(w))∧
∀x ∈ π((v , w ) ) : ∀y ∈ V ( H ) \ {v , w} : π(y ) 6= x , and ∀(v , w ) , ( x , y ) ∈ E(H ) :
) ) o o
) ) o o * * o o t ( ( o o
* * o o t ( ( o o P
1
P ′ 2
1
2
1
1
3
2
3
2
4
3
5
5
1
G
2
5
2
3
4
( a )
1
( c )
3
( b )
4
( d )
3
Figure 2 . Examples of the different morphisms . An isomorphic image of P ( a ) , P ′ ( b ) , a homomorphic image of P ′ ( c ) and a homeomorphic image of P ( d ) . The edges of the subgraph to which a pattern is mapped are in bold . The image of a vertex of the pattern is labeled with its identifier .
( v , w ) 6= ( x , y ) ⇒ π((v , w ) ) and π((x , y ) ) disjoint [ 10 ] . We call π surjective if ∀v′ ∈ V ( G ) and ∀e′ ∈ E(G ) : [ (∃v ∈ V ( H ) : v′ = π(v ) ) ∨ ( ∃e ∈ E(H ) : v′ ∈ π(e) ) ]
∧ [ ∃e ∈ E(H ) : e′ ∈ π(e) ] .
By Homo , Iso and Homeo , we denote the class of graph homomorphisms , isomorphisms and homeomorphisms , respectively .
If for π : H → G ∈ {Homo , Iso , Homeo} it holds that λH ( v ) = λG(π(v) ) , we call π label preserving . We will always implicitly assume that π is label preserving when H , G ∈ Gλ .
Example 1 . Fig 2 illustrates the introduced morphisms for unlabeled , undirected graphs . Note that in ( c ) the vertices 2,4 and 3,5 are mapped to the same vertex and in ( d ) the edges {2 , 3} and {3 , 1} are mapped to paths of length 2 .
3 Support measures and overlap graphs
Definition 2 . A support measure on Gα β is a function f : β → N that maps ( P , G ) to f ( P , G ) where P Gα β × Gα is called the pattern , G is called the dataset graph and f ( P , G ) is called the support of P in G .
For efficiency reasons , most graph mining algorithms use a level wise or depth first approach to generate frequent patterns , expanding smaller patterns to larger ones , which requires an anti monotonic support measure :
Definition 3 . A support measure f on Gα iff ∀p , P , G ∈ Gα
β : p ⊆ P ⇒ f ( P , G ) ≤ f ( p , G ) .
β is anti monotonic
Most support measures are based on the matches of a pattern in a graph :
Definition 4 . Let K ∈ {Homo , Iso , Homeo} and P , G ∈ β , α ∈ {→ , ↔} , β ∈ {λ , •} . Gα A K match of P in G is a subgraph g ⊆ G for which there exists a surjective mapping π ∈ K from P to g . An individual mapping π from P to g is called an embedding of P in G .
We call an Iso match of P in G an instance of P in G .
However , just counting the number of K matches of a pattern in G does not result in an anti monotonic support measure , as larger patterns may have more matches ( e.g , in Figure 3 , there are more instances of P in G than triangles ) .
3.1 Overlap graph
Most anti monotonic measures in a single graph setting are based on the notion of an overlap graph Gγ
P [ 13 , 9]1 :
Definition 5 . Let P , G ∈ Gα β , α ∈ {→ , ↔} , β ∈ {λ , •} . Two subgraphs g1 and g2 of G have vertex overlap if V ( g1)∩V ( g2 ) 6= ∅ and edge overlap if E(g1)∩E(g2 ) 6= ∅ . Let γ ∈ {vertex , edge} and K ∈ {Homo , Iso , Homeo} . The K γ overlap graph Gγ P of a pattern P in the dataset G is an undirected , unlabeled graph in which each vertex corresponds to a K match of the pattern P and two vertices are connected if the corresponding K matches have γ overlap .
Note that Gγ
P is always undirected and that the edges depend on the used notion of overlap . For example , Gγ P will be denser for vertex overlap than for edge overlap because the latter implies the former .
Let p , P , G ∈ Gα
β , γ ∈ {vertex , edge} , α ∈ {→ , ↔} , β ∈ {λ , •} , and K ∈ {Homo , Iso , Homeo} . Throughout the article , P denotes the ( super)pattern , p ⊆ P the subpattern and G the dataset , a single graph . Gγ p ) is the K γ overlap graph of P ( p ) in G .
P ( Gγ
Vanetik , Gudes and Shimony [ 13 ] consider three operP : clique contraction , edge ations on the overlap graph Gγ removal and vertex addition , as defined below .
Definition 6 . Let G = ( V , E ) ∈ G↔ • . Let K ⊆ G be a clique in G . The clique contraction CC(G , K ) yields a new graph G′ = ( V ′ , E ′ ) in which the subgraph K ⊆ G is replaced by a new vertex k /∈ V adjacent to {w | ∀v ∈ V ( K ) : {v , w} ∈ E} :
V ′ = V \ V ( K ) ∪ {k} E ′ = E \ {{v , w} | {v , w} ∩ V ( K ) 6= ∅}
∪{{k , w} | ∀v′ ∈ V ( K ) : {v′ , w} ∈ E} .
1[13 ] uses the term instance graph instead of overlap graph . The term instance suggests the use of isomorphisms , and we consider support measures based on any kind of morphism , we follow the terminology of [ 9 ] to avoid confusion .
The edge removal ER(G , e ) of the edge e = {v , w} yields a new graph G′ = ( V , E \ {{v , w}} ) .
The vertex addition VA(G , v ) of the vertex v /∈ V yields a new graph G′ = ( V ∪ {v} , E ∪ {{v , w} | w ∈ V } ) .
The rationale behind these operations is that the K γoverlap graph of P can be transformed into the K γ overlap graph of p by means of these operations . This can be seen based on the following two observations :
Observation 1 Any K match of P contains a K match of p .
Observation 2 Let g1 , g2 be two K matches of P and g′ g1 and g′ have γ overlap , so do g1 and g2 .
2 ⊆ g2 be two K matches of p . If g′
1 ⊆ 1 and g′ 2
These conditions hold for all settings considered in this article . We quickly sketch the main ideas of the transformation process and refer to [ 13 ] for the full details . For reasons of simplicity we assume that p contains at least one edge .
2} in Gγ
Let g′ ⊆ G be a match of p , and let super ( g′ ) be all matches of P in G containing g′ . Because of Observation 1 , every match g of P in G must be in at least one super(g′ ) . Because of Observation 2 , super ( g′ ) forms a clique in Gγ P , as they all overlap on g′ . Furthermore , if there p , there is an edge between any two is an edge {g′ P . As such , an ing1 ∈ super ( g′ p can be formed by subsequently conduced subgraph of Gγ tracting the cliques super ( g′ ) until for all g′ ∈ Gγ p , either super(g′ ) is empty , or a singleton . It is easy to see that one can go from an induced subgraph of Gγ p : first add all vertices not in the induced subgraph with node additions , and then remove spurious edges with edge removals .
1 , g′ 1 ) and g2 ∈ super(g′
2 ) in Gγ p to Gγ
3.2 Overlap support measure
Definition 7 . A graph measure is a function ˆf : G↔ • → N . Let o be a graph operation that transforms a graph G into a graph o(G ) . A graph measure ˆf is increasing under o if and only if ∀G ∈ G↔
• : ˆf ( G ) ≤ ˆf ( o(G) ) .
Definition 8 . Let α ∈ {→ , ↔} , β ∈ {λ , •} , γ ∈ {vertex , edge} and K ∈ {Homo , Iso , Homeo} .
A support measure f on Gα
β is a K γ overlap support β , if there exists a graph measure ˆf such that measure on Gα ∀P , G ∈ Gα
β : f ( P , G ) = ˆf ( Gγ
P ) .
Informally , an overlap support measure is a support measure that only depends on the overlap graph . Note that the associated graph measure ˆf is always unique . An example of an anti monotonic overlap support measure is the measure that assigns to every pattern P the size of the maximum independent set ( MIS ) [ 13 ] of Gγ P ; that is , the support is the maximal number of matches that fit in G without overlap . The main result of this article is the generalization of the following theorem of Vanetik , Gudes and Shimony [ 13 ] :
Theorem 9 ( Vanetik , Gudes , Shimony ) . Let α ∈ {→ , ↔} . Any Iso edge overlap support measure f on Gα λ is anti monotonic if and only if the associated graph measure ˆf is non decreasing under clique contraction , edge removal and vertex addition .
We extend it to the complete space defined by the param eters α , β , K and γ . More formally :
Theorem 10 . Let α ∈ {→ , ↔} , β ∈ {λ , •} , K ∈ {Iso , Homo , Homeo} , and γ ∈ {vertex , edge} . Any K γ overlap support measure f on Gα
β is anti monotonic if and only if the associated graph measure ˆf is increasing under clique contraction , edge removal and vertex addition .
The proof of sufficiency , ie , that any K γ overlap support measure f is anti monotonic if the associated graph measure is increasing under CC , VA and ER follows immediately from the fact that Gγ P can be transformed into Gγ by these operations . p
To prove necessity , Vanetik , Gudes and Shimony construct for every unlabeled graph H and every operation o , a triple ( P , p , G ) ( where P is a super pattern , p a subpattern ∼= o(H ) . So if and G a dataset ) such that Gγ P f would not be increasing under some o ∈ {CC , ER , VA} , there would be a H such that f ( H ) > f ( o(H ) ) and one could construct a G , P and p such that f ( G , P ) > f ( G , p ) , which would mean that f is not anti monotonic . We follow the same approach .
∼= H and Gγ p
3.3 Reductions
The necessity proofs for most settings are based on re ductions from K matches for Gα
β to K′ matches for Gα′ β ′ .
Definition 11 . Let K , K′ ∈ {Iso , Homo , Homeo} , α , α′ ∈ {→ , ↔} , β , β′ ∈ {• , λ} , and γ , γ ′ ∈ {edge , vertex} . β to K′ , γ ′ overlap on Gα′ β )3 → ( Gα′
A K , γ overlap on Gα tion is a function R : ( Gα ( p , P , G ) to a triplet ( p′ , P ′ , G′ ) such that :
β ′ reducβ ′ )3 that maps a triplet
( 1 ) p ⊆ P iff p′ ⊆ P ′ and ( 2 ) Gγ p
∼= G′γ ′ p′ ∧ Gγ
P
∼= G′γ ′ P ′ .
Note that this definition does not automatically imply that the number of K embeddings of P in G equals the number of embeddings of P ′ in G′ , as P ′ might have more/less automorphisms than P .
The following property gives reductions from unlabeled to labeled graphs , and from undirected to directed graphs .
Property 12 . For all α ∈ {→ , ↔} , γ ∈ {vertex , edge} , β ∈ {λ , •} , K ∈ {Iso , Homo , Homeo} , there exist reductions :
• from K , γ overlap on Gα
• to K , γ overlap on Gα
λ ; and
• from K , γ overlap on G↔
β to K , γ overlap on G→ β .
An overview of the reductions which follow from our results in Section 5 are shown in Figure 1 .
4 Minimal , Maximal and PTIME overlap support measures
Let G = ( V ( G ) , {{v , w} | v , w ∈ V } \ E(G) ) , denote the complement graph of G ∈ G↔ • . Eg , for the complete graph on k vertices , Kk = ( {v1 , . . . , vk} , {{vi , vj} | 1 ≤ i 6= j ≤ k} ) , Kk is the graph with k isolated vertices . We call an overlap support measure f meaningful if it is anti monotonic and assigns the frequency k to k nonoverlapping matches , ie , ˆf ( Kk ) = k .
An independent set of G is a subset I of V ( G ) such that ∀v , w ∈ I : {v , w} /∈ E(G ) . A maximum independent set ( MIS ) of G is an independent set of maximum cardinality and its size is notated as mis(G ) . Up to now , all meaningful overlap support measures f we are aware of are MIS measures , ie , the support of f ( P , G ) = mis(Gγ P ) . MIS was introduced and proven to be anti monotonic in [ 13 ] . A more compact proof can be found in [ 4 ] .
4.1 MCP measure
We introduce a new anti monotonic overlap support measure , inspired by the CC operation :
Definition 13 . A clique partition of G ∈ G↔ • is a partitioning of V ( G ) into {V1 , . . . , Vk} such that each Vi induces a clique in G . A minimum clique partition ( MCP ) is a clique partition of minimum size . Its size is denoted mcp(G ) . The MCP measure is defined by MCP ( P , G )
:
( P , G ) → mcp(Gγ
P ) .
Theorem 14 . Let K ∈ {Iso , Homo , Homeo} , γ ∈ {vertex , edge} , and α ∈ {→ , ↔} , β ∈ {λ , •} . The MCP measure is an anti monotonic K γ overlap measure on Gα β .
It is interesting to compare MCP with MIS . Let χ(G ) be the chromatic number of G , ie , the minimal number of colors to color the vertices of G such that no two vertices with the same color are adjacent , and let ω(G ) be the clique number ; the size of the largest clique in G .
First , it is known that mcp(G ) = χ(G ) and mis(G ) = Consequently , • , since the size of a maxi
ω(G ) ( see , eg , mcp(G ) ≥ mis(G ) , ∀G ∈ G↔ mum clique is a lower bound for the chromatic number . section 551 )
[ 5 ] , it
Informally , let {V1 , . . . , Vk} be an MCP and I a MIS for G . We know that I contains at most one vertex vi of each Vi , 1 ≤ i ≤ k . is easy to see why this is so :
P
G
12
3 3
2
1
5
4 4
5
Ge P
1
2
5
3
4
Figure 3 . Left : A pattern P and a graph G . The 5 Iso matches of P in G are indicated by the image in G of the edges outside the triangle . Right : The Iso edge overlap graph Ge P with a MCP ( dashed ellipses ) and a MIS ( white vertices ) .
In other words , to decide whether we can include a match of Vi , MIS forces us to choose either no match or exactly one match vi , which must be independent of all chosen vj ∈ Vj . MCP , however , allows us to count a match in Vi as soon there is a match in Vi which does not overlap with a match in Vj . That is , we can make another choice for each ( Vi , Vj ) pair .
Example 15 . Let us look at an example : consider pattern P and the graph G as shown in Figure 3 . The 5 Iso matches of P are indicated by an identifier on the image in G of the edges outside the triangle of P . The Iso edge overlap graph Ge P of P in G is shown on the right in Figure 3 and is isomorphic to a pentagon . The white vertices mark the MIS {1 , 3} and the dashed ellipses mark the MCP {{1} , {2 , 3} , {4 , 5}} of Ge P . Hence , if we count match 1 with MIS , we can only take match 3 or match 4 as second independent match , because 3 and 4 overlap , leading to a MIS support of 2 . This is a bit unnatural , because each of the 3 matches of the triangle can be extended to a match of P in a way that they do not overlap with each other , which would lead to a support of 3 of P .
This more natural notion of counting independent matches is exactly what MCP support allows us to do : we do not count individual matches , but groups of matches of P sharing a match of a subpattern p ( a triangle ) and allow to “ switch ” matches to decide whether a group is independent of an other . In this example , the group {1} is independent of the groups {2 , 3} and {4 , 5} , because it does not overlap with match 3 respectively match 4 and the group {2 , 3} is independent of the group {4 , 5} because , for instance , match 2 and match 5 do not overlap .
4.2 Bounding theorem and PTIME over lap support measure
Interestingly , MIS and MCP turn out to be the minimal and the maximal possible meaningful overlap measures :
Theorem 16 . Let K ∈ {Iso , Homo , Homeo} , γ ∈ {vertex , edge} , α ∈ {→ , ↔} , and β ∈ {λ , •} .
For every meaningful K γ overlap measure f on Gα
β , and every P , G ∈ Gα
β , it holds that :
MIS ( P , G ) ≤ f ( P , G ) ≤ MCP ( P , G ) .
Proof . We use Theorem 10 to show both the minimality of MIS and the maximality of MCP .
Let H = GP , let mis(H ) = k , and let I = {v1 , . . . , vk} be a MIS for H . Starting from the graph ( {v1 , . . . , vk} , ∅ ) we can add the vertices V ( H ) \ I using VA and remove edges not in E(H ) by ER . Since f is meaningful , it is antimonotonic and therefore ˆf cannot decrease after each step , starting from ˆf ( ({v1 , . . . , vk} , ∅ ) ) = k . As such , ˆf ( H ) is larger than or equal to k = mis(H ) .
On the other hand , let mcp(H ) = k , and let {V1 , . . . , Vk} be an MCP for H and let Hcc = CC( . . . CC(CC(H , V1 ) , V2 ) . . . , Vk ) . Hcc does not have edges : if it would , then joining the two cliques that were contracted to two connected vertices of Hcc would give us a smaller clique partition . Because f is anti monotonic , ˆf is increasing under CC and thus
ˆf ( H ) ≤ ˆf ( CC(H , V1 ) ) ≤ · · · ≤ ˆf ( Hcc ) = ˆf ( Kk ) = k .
Unfortunately , both mis and mcp are known to be NPhard to compute in the size of the overlap graph . This leads us to the following question : does there exist a meaningful overlap measure which is efficiently computable ?
A well known measure that is sandwiched between mis and mcp and that can be computed in polynomial time , is the theta function , also known as the Lov´asz function [ 8 ] . There are several equivalent characterizations of this function . The most concise definition is probably : θ(G ) = minA λmax(A ) , where λmax(A ) denotes the largest eigenvalue of matrix A and the minimum is taken over all feasible matrices A such that A⊤ = A , Aii = 1 and Aij = 1 if ( i , j ) 6∈ E(G ) .
Theorem 17 . θ is a meaningful overlap measure .
5 Necessity for other morphisms and graph settings
In the previous sections we considered measures on overlap graphs that are anti monotonic wrt the operations VA , ER and CC . Let us now return to the connection between measures with this property and anti monotonic graph support measures based on overlap graphs . [ 13 ] showed that when considering unlabeled , undirected graphs under subgraph isomorphism , a graph support measure based on the edge overlap graph is anti monotonic if an only if the corresponding graph measure on the edge overlap graph is antimonotonic wrt VA , ER and CC . In this section , we generalize this result to all 24 settings . We do this by proving a base case and then applying reductions from all the other settings to this base case .
5.1 Necessity for labeled homomorphisms and isomorphisms
As base case , we prove the necessity of the nondecreasingness of ˆf under the three graph operations for the anti monotonicity of f for K , γ overlap on Gα λ , for all combinations of K ∈ {Iso , Homo} , γ ∈ {vertex , edge} , and α ∈ {→ , ↔} . The proof will not rely on reductions , but show the necessity directly for these cases . We show only the undirected case , as the proof for the directed case is very similar . Notice also that the directed case follows from the undirected to directed reductions shown in Property 12 .
We will essentially use invariants under subgraph homomorphism to force an injective homomorphism ; ie , to ensure isomorphism .
Let G ∈ G↔ . The odd girth go(G ) of G is the size of a smallest cycle of odd length in G . The distance dG(v , w ) is equal to the length of a shortest path from v to w in G . If no such cycle respectively shortest path exist , we define go(G ) respectively dG(v , w ) equal to ∞ .
We will use the following well known invariants [ 7 ] to force each subgraph homomorphism into an isomorphism : β , α ∈ {→ , ↔} , β ∈ {λ , •}
Proposition 18 . If H , G ∈ Gα for which there exists a homomorphism π : H → G , then
1 . go(H ) ≥ go(G ) ,
2 . ∀v , w ∈ V ( H ) : dH ( v , w ) ≥ dG(π(v ) , π(w) ) . Remark that the first invariant implies that a cycle of length k , with k odd , can only be mapped by a homomorphism to an odd cycle of length at most k .
We will use the following graphs as patterns :
Definition 19 . Let k + 1 be an odd integer . Bk denotes the graph in G↔
λ defined by :
V ( Bk ) = Va ∪ Vb ∪ Vc ∪ Vd , Va = {a1 , . . . , ak , a′ 1 , . . . , a′ Vc = {c1 , . . . , ck+1} , Vd = {d1 , . . . , dk , d′ E(Bk ) = Ea ∪ Eb ∪ Ec ∪ Ed ∪ ∪k
1 , . . . , d′ k+1} , i=1{{ai , bi} , {ci , di}} k} , Vb = {b1 , . . . , bk+1} ,
∪ {bk+1 , ck+1} , i=1{ai , a′
Ea = ∪k Ec = {ck+1 , c1} ∪ ∪k λBk ( u ) = x , ∀u ∈ Vx , x = a , b , c , d . i} , Eb = {bk+1 , b1} ∪ ∪k i=1{ci , ci+1} , Ed = ∪k i=1{bi , bi+1} , i} , i=1{di , d′
We call the edges {ai , a′ i} legs , 1 ≤ i ≤ k , the cycle induced by Vb the torso and the cycle induced by Vc the hip . i} arms , the edges {di , d′ a a b a a b arm
Lk a a b d d c d d c leg d d c b torso
Bk c hip
Figure 4 . The graphs Bk and Lk .
Lk ∈ G↔
λ denotes the subgraph of Bk induced by Vc ∪Vd and is called the lower body of Bk .
An illustration of both graphs is shown in Figure 4 . Let P [ 1 ] , P [ 2 ] and p[1 ] , p[2 ] be two instances of P = Bk respectively p = Lk in a larger graph G and let super(g ) be equal to all matches of P in G containing g ⊆ G . We will use four types of overlap ( see Figure 5 ) : lower body overlap : P [ 1 ] and P [ 2 ] share the complete lower body , which is a single instance of p , resulting in two adjacent vertices in Gγ
P and a single vertex in Gγ p , leg overlap : P [ 1 ] and P [ 2 ] share a leg , resulting in two adjacent vertices in Gγ
P and two adjacent vertices in Gγ p , arm overlap : P [ 1 ] and P [ 2 ] share an arm , resulting in two adjacent vertices in Gγ P and two independent vertices in Gγ p , partial leg overlap : p[1 ] ⊂ P [ 1 ] shares a leg with p[2 ] , with super(p[2 ] ) = ∅ , resulting in a single vertex in Gγ P and two adjacent vertices in Gγ p .
Note that in each type of overlap , there is always vertex overlap if and only if there is edge overlap . When three or more instances of P or p overlap , we will always make sure that an arm or leg is shared by at most two instances of P or p , which is always possible by taking k sufficiently large . When two instances overlap , they always overlap once , ie , if P [ 1 ] and P [ 2 ] have an overlap of type x , they do not have an additional overlap of type y 6= x . We will call these restrictions the overlap condition and assume implicitly that they are obeyed at all times when constructing graphs by overlapping instances of P and p .
Lemma 20 . Let G ∈ G↔ λ be a graph constructed from n overlapping instances P [ 1 ] , . . . , P [ n ] of P = Bk . Then , the P [ 1 ] , . . . , P [ n ] are the only Homo matches of P in G .
Theorem 21 . Let α ∈ {→ , ↔} , γ ∈ {vertex , edge} and K ∈ {Homo , Iso} . Any undirected graph H is a K γ a a b a a b c d d a a b b c d d a a b b c c d d a a b a a b c c d d ( a ) a a b b c d d c d d c d d ( c ) a a b b a a b b c c d d a a b a a b c d d a a b c d d a a b c d d a a b b c c d d a a b b c c d d a a b a a b c c d d ( b ) a a b c c d d ( d ) a a b b c c d d a a b c d d c c d d c d d
Figure 5 . The four overlap types : ( a ) lower body overlap ( b ) leg overlap ( c ) arm overlap ( d ) partial leg overlap overlap graph , ie , there always exist P , G ∈ Gα H ∼= Gγ P .
λ such that
Theorem 22 . Let α ∈ {→ , ↔} , γ ∈ {vertex , edge} and K ∈ {Homo , Iso} . Any K γ overlap support measure f on λ is anti monotonic only if the associated graph measure Gα ˆf is increasing under clique contraction , edge removal and vertex addition .
5.2 Labeled isomorphisms to homeomor phisms
We will now show that we can reduce isomorphic mappings to homeomorphic mappings while preserving edgeand vertex overlap . First we show how to reduce isomorphic mappings to homeomorphic mappings for the labeled case , and then we show how to reduce the labeled homeomorphisms to unlabeled homeomorphisms . We will only give the proofs for the undirected cases , as the directed cases can either be proven in a very similar way ( replace all edges by arcs ) , or by composition of the reduction for the undirected case with the reduction from undirected to directed of Prop . 12 .
We first prove some invariants under subgraph homeomorphism which will be important in the proof of correctness of both reductions in this section .
The degree of a vertex v in a graph G ∈ Gα is defined as ∆G(v ) := #{w | {v , w} ∈ E(G)} . The maximum degree of G is then ∆(G ) := maxv∈V ( G)∆G(v ) .
Definition 23 . The connection strength between v and w is defined as csG(v , w ) := max{|P | : P ⊆ PG(v , w ) paths in P pairwise disjoint} and the maximal connection strength between two nodes of G as : CSG = maxv,w∈VG csG(v , w ) .
For G ∈ G↔ , csG(v , w ) is often called the local connectivity of v and w . Notice that connection strength between nodes v and w is well known to be equivalent with vertex connectivity ( Menger ’s theorem [ 3] ) ; ie , the minimal number of vertices that need to be removed to make v and w disconnected . Lemma 24 . Let π be a subgraph homeomorphism from H to G . Then ,
1 . |V ( H)| ≤ |V ( G)| and |E(H)| ≤ |E(G)| ;
2 . ∀v ∈ V ( H ) : ∆H ( v ) ≤ ∆G(π(v) ) ; a l l l l l b
Figure 6 . The subgraph ( Ve , Ee ) used in the reduction to replace an edge e = {u , w} , with λ(u ) = a and λ(w ) = b .
L1
L2
L3
Figure 7 . Label graphs for n = 3
3 . ∀v , w ∈ V ( H ) : csH ( v , w ) ≤ csG(π(v ) , π(w) ) .
522 Labeled to unlabeled homeomorphisms
521 Labeled isomorphisms to labeled homeomor phisms
We first present the labeled case , ie , a Iso , γ overlap on λ reduction . The reduction λ to Homeo , γ overlap on G↔ G↔ R1 replaces each edge e by an induced subgraph ( Ve , Ee ) containing the original end vertices and some new vertices . We make sure that no new vertex can be the image of an original vertex by labeling them with a new label .
Formally , let G ∈ G↔
λ with label alphabet Σ . Let R1 : λ and e = {u , w} ∈ E(G ) . We define
G → R1(G ) ∈ G↔ ( Ve , Ee ) as follows :
Ve = {u , w} ∪ {vi e | 1 ≤ i ≤ 5} ,
Ve ∩ V ( G ) = {u , w} , Ee = {{u , v1 e , v4
{v3 e} , {u , v2 e } , {v3 e , v5 e} , {v1 e } , {v4 e , v3 e } , {v2 e , w} , {v5 e , v3 e } , e , w}}
Let e′ = {u′ , w′} ∈ E(G ) . For e′ 6= e , we make sure that Ve ∩ Ve′ = {u , w} ∩ {u′ , w′} and Ee ∩ Ee′ = ∅ .
We are now ready to define R1(G ) :
V ( R1(G ) ) = V ( G ) ∪ ∪e∈E(G)Ve , E(R1(G ) ) = ∪e∈E(G)Ee , λR1(G)(u ) = λG(u ) , λR1(G)(ve ) = l /∈ Σ ,
∀u ∈ V ( G ) , ∀ve ∈ V ( R1(G ) ) \ V ( G ) .
An illustration of the subgraph replacing an edge from a vertex labeled a to a vertex labeled b is shown in Figure 6 . We can prove the following using connection strength :
Theorem 25 . ( P , p , G ) → ( R1(P ) , R1(p ) , R1(G ) ) is a Iso , γ overlap on G↔ λ reduction , γ ∈ {vertex , edge} .
λ to Homeo , γ overlap on G↔
We now show the reduction from the labeled case to the unlabeled one ; ie , from vertex overlap of G↔ λ to γ overlap for all γ ∈ {vertex , edge} . We will use the folof G↔ lowing special label graphs Ln to replace the labels Σ = i {l1 , . . . , ln} .
•
Definition 26 . Let 1 ≤ s < k be integers . C s graph in G↔
• with nodes {c0 , . . . , ck−1} and edges k denotes the
Hence , C s
Let 1 ≤ i ≤ n be integers . Ln
E := {{ci , cj} | j = ( i + 1 ) mod k . . . ( i + s ) mod k} . i denotes the graph C n−i+1 2(n+i ) . k is a cycle of length k , with additional edges : every node is connected to its s successors ( and hence also its s predecessors ) . The graphs Ln i will be used in the proof to replace labels . In Figure 7 , the label graphs for an alphabet of size 3 have been given . Intuitively , we will replace the labels of the vertices by “ attaching ” an appropriate Ln i to the node . For a graph over the alphabet Σ = {l1 , . . . , ln} , i will be used to replace li . A first essential piece of the Ln proof is that for a given n , no label graph Ln i can be mapped to another label graph Ln j , j 6= i under homeomorphism .
Lemma 27 . Let 1 ≤ i , j ≤ n be integers . There exists a homeomorphism from Ln j if and only if i = j . i to Ln
In all what follows , n will denote the size of the alphabet Σ = {l1 , . . . , ln} . We assume a function ι that maps the label li to its index i . We will slightly abuse the notation ι , and use ι(v ) to denote ι(λ(v) ) . Let G be a graph in G↔ λ over the alphabet Σ , with vertices V = {v1 , . . . , vk} and edges E = {e1 , . . . , em} .
In the proofs we will need many copies of the same label graph Ln i . Therefore , we will need to rename the vertices in these graphs to avoid confusion . We will use L[vi ] to denote the following isomorphic copy of Ln ι(λ(vi) ) :
Theorem 29 . Let p , P , G ∈ G↔ λ , and let c = max{∆(G ) , ∆(P ) , ∆(p ) , 2n} + 1 . The function R2 that 2(G ) ) is an Homeo , maps ( p , P , G ) to ( Rc vertex overlap on Gα • reduction , for all α ∈ {→ , ↔} and γ ∈ {vertex , edge} .
λ to Homeo , γ overlap on Gα
2(P ) , Rc
2(p ) , Rc
5.3 From labeled to unlabeled homomor phisms and isomorphisms
Finally , we extend the results for homomorphism and isomorphism to unlabeled graphs . First , we will show that our constructions for labeled graphs can be extended to unlabeled graphs by using special subgraphs in the unlabeled case to encode the labels from the labeled case . We will focus on the most difficult case , homomorphism . For isomorphism , much simpler constructions are possible . Also , we will discuss only the undirected case here . The directed case is analogous .
The key idea for emulating labels with unlabeled subgraphs under homomorphism follows from the fact that cliques are always mapped on cliques of the same size .
Lemma 30 . Let G ∈ G↔ . Let π be a homomorphism from Kk to G ( where Kk is the complete graph with k vertices ) . Then , π is a subgraph isomorphism mapping , ie π(Kk ) is a k clique of G .
Apart from the notations introduced in Definition 32 , we will also use
V w j = {vw,j , vw,j+1 mod σ(w ) , . . . vw,j+K mod σ(w)} .
The subgraphs attached to the original vertices to represent the labels are isomorphic to the graphs C σ(w ) as in Definition 26 and are illustrated in Figure 7 .
K
We now formalize the encoding of labels with undirected subgraphs :
Definition 31 . Let G ∈ G↔ λ . Let k be ( an upper bound on ) the clique number of G . A Schema for Labeling with Unlabeled Subgraphs ( SLUS ) for G is a pair ( K , σ ) such that
• K ≥ max(k + 2 , 2|Σ| ) ;
• σ : Σ → N is an injective function mapping every element from the alphabet Σ of labels on a distinct odd integer such that
∀l ∈ Σ : 4(K + 1 ) < σ(l ) < 5(K + 1 ) .
When it is clear that w is a vertex , we will use σ(w ) as a shorthand for σ(λG(w) ) . We now define a transformation from labeled to unlabeled graphs :
Figure 8 . Reduction for removing labels in the case of homeomorphisms . The triangle in the middle is the original graph G . The labels of the top , left , right nodes were respectively l1 , l2 , and l3 . j , ci j | cj ∈ V ( Ln k} | {cj , ck} ∈ E(Ln
ι(vi))} , and E(L[vi ] ) = V ( L[vi ] ) = {ci ι(vi))} . As such , any two L[v ] {{ci and L[w ] are disjoint whenever v 6= w , even if λ(v ) = λ(w ) . We now define the reduction , parameterized by c . Definition 28 . For every vi ∈ V ( G ) , let the following sets of vertices be given .
B(vi ) = {bi D(vi ) = {di j | j = 1 . . . c} j | j = 1 . . . c}
C(vi ) = V ( L[vi ] )
We assume all these sets are disjoint . Furthermore , c0(vi ) denotes the node ci
0 ; ie , the first node in L[vi ] .
Rc
2(G ) is the following graph in G↔ • :
V ( Rc
2(G ) )
E(Rc
2(G ) )
:= V ( G ) ∪ [ v∈V
:= E(G ) ∪ [ v∈V
C(v ) ∪ D(v ) ∪ B(v )
E(L[v ] )
∪ [ v∈V
∪ [ v∈V
{{c0(v ) , d} | d ∈ D(v)}
{{v , b} , {b , c0(v)} | b ∈ B(v)}
An example of the reduction has been given in Figure 8 . Intuitively , the rationale behind the reduction is as follows : the sub graphs L[v ] replace the label of v . The nodes D(v ) are added in order to increase the degree of all nodes c0(v ) to at least 2c + 2 . All other nodes have degree at most 2c . This allows us to use degree arguments to show that all c0nodes are mapped to c0 nodes . The nodes B(v ) are added to connect any label graph L[v ] to the right node v ( b of between ) . Their number c will be chosen so we can use connection strength arguments to show that in a match always label graphs will be associated with the right node .
Using the arguments above , we can prove the following :
Definition 32 . Let G ∈ G↔ λ Let ( K , σ ) be a SLUS for G . Then , we define the transformed ( unlabeled ) graph RK,σ
( G ) by
3
• the vertices of RK,σ
3
( G ) are
V ( RK,σ
3
( G ) ) = ∪w∈V ( G)V w where V w = {wj | 0 ≤ j < σ(w)} where for all w , w0 = w and wj , j = 1 . . . σ(w ) are new vertices .
• the edges of RK,σ
3
( G ) are
E(RK,σ
3
( G ) ) = E(G ) ∪ Elab
K,σ(G ) with Elab
K,σ(G ) = ∪w∈V ( G)Ew where
Ew = {{vw,j , vw,j+i mod σ(w)} |
0 ≤ j < σ(w ) ∧ 1 ≤ i ≤ K} overlap smaller reduces the size of the overlap graph . The extension is straightforward in most of the cases considered in this paper . As a special case , suppose only one vertex of a pattern is considered relevant . The overlap graph is then reduced to a set of isolated vertices of size at most |V ( G)| . [ 2 ] proposed a measure f ( P , G ) = minv∈P |{w ∈ V ( G ) : ∃π ∈ Iso : ( π(P ) ⊆ G ) ∧ ( w ∈ V ( π(P )))}| . One can see this as the minimum over several measures , each considering one of the vertices of P relevant . The minimum of anti monotonic functions is anti monotonic itself .
There exist also different notions of overlap . Eg [ 4 ] defines harmful overlap , which is based on embeddings . Two embeddings π1 and π2 of a pattern P overlap iff ∃v ∈ V ( P ) : π1(v ) , π2(v ) ∈ π1(V ( P ) ) ∩ π2(V ( P ) ) . This notion then results in harmful overlap graphs . We expect our reductions can be easily adapted to generalize also the harmful overlap notion to the considered combinations of directedness , labeledness and morphism choice .
We can prove the following
References
Theorem 33 . Let p , P , G ∈ G↔ λ such that G has no two adjacent vertices with the same label , and let ( K , σ ) be a SLUS for p , P and G . Then , the function RK,σ ( p ) , RK,σ that maps ( p , P , G ) to ( RK,σ ( G ) ) is a Homo , vertex overlap on Gα λ to Homeo , γ overlap on Gα reduction , for all α ∈ {→ , ↔} and γ ∈ {vertex , edge} .
( P ) , RK,σ
3
3
3
3
•
To generalize this result so that G is not required to have two adjacent vertices of the same label , we can first perform an additional transformation , splitting all edges in two new edges and labeling the new vertices in the middle of the original edges with a new mid edge label .
6 Discussion and conclusion
We extended the results of [ 13 ] to a range of different settings . We proved the results for labeled homomorphism as a base case and provided reductions which are more generally applicable to prove the results for the other settings . We showed that MIS and MCP are minimal and maximal anti monotonic overlap support measures . We also made a first step towards making the overlap support measures scalable by proving the anti monotonicity of the Lov´asz θ function , a polynomial time computable graph measure sandwiched between MIS and MCP .
Several extensions of our work are possible , some of those leading to smaller overlap graphs . An interesting one concerns alternative definitions for matches . We considered matches to be all vertices ( edges ) of the embedding of a pattern in the dataset . Alternatively , we can consider patterns where only a few distinguished vertices are taken into account for overlap . Making the set of vertices relevant for
[ 1 ] S . Bandyopadhyay , R . Sharan , and T . Ideker . Systematic identification of functional orthologs based on protein network comparison . Genome Res . , 16(3):428–435 , 2006 .
[ 2 ] B . Bringmann and S . Nijssen . What is frequent in a single graph ? In Proceedings of Mining and Learning with Graphs 2007 , Florence , Italy , 2007 .
[ 3 ] R . Diestel . Graph Theory , 3rd ed . Springer Verlag , 2005 . [ 4 ] M . Fiedler and C . Borgelt . Support computation for mining frequent subgraphs in a single graph . In Mining and Learning with Graphs 2007 , Florence , Italy , 2007 .
[ 5 ] J . L . Gross and J . Yellen . Handbook of Graph Theory . CRC
Press , 2004 .
[ 6 ] Grunewald , Stefan , Forslund , Kristoffer , Dress , Andreas , Moulton , and Vincent . Qnet : An agglomerative method for the construction of phylogenetic networks from weighted quartets . Molec . Biol . and Evolution , 24(2):532–538 , 2007 . [ 7 ] P . Hell and J . Neˇsetˇril . Graphs and homomorphisms . Oxford
University Press , 2004 .
[ 8 ] D . E . Knuth . The sandwich theorem . Electron . J . Combin . ,
1:48 pp . , 1994 .
[ 9 ] M . Kuramochi and G . Karypis . Finding frequent patterns in a large sparse graph . Data Min . Knowl . Discov . , 11(3):243– 271 , 2005 .
[ 10 ] A . S . LaPaugh and R . L . Rivest . The subgraph homeomorphism problem . In STOC ’78 : Proceedings of the tenth annual ACM symposium on Theory of computing , pages 40– 50 , New York , NY , USA , 1978 . ACM Press .
[ 11 ] S . Muggleton and L . De Raedt .
Inductive logic programming : Theory and methods . Journal of Logic Programming , 19,20:629–679 , 1994 .
[ 12 ] C . H . Papadimitriou . Computational Complexity . Addison
Wesley , 1994 .
[ 13 ] N . Vanetik , S . E . Shimony , and E . Gudes . Support measures for graph data . Data Min . Knowl . Discov . , 13(2):243–260 , 2006 .
