Time Will Tell : Leveraging Temporal Expressions in IR∗
Irem Arikan Srikanta Bedathur Klaus Berberich
Max Planck Institute for Informatics
Saarbrücken , Germany
{iarikan , bedathur , kberberi}@mpi infmpgde
ABSTRACT Temporal expressions , such as between 1992 and 2000 , are frequent across many kinds of documents . Text retrieval , though , treats them as common terms , thus ignoring their inherent semantics . For queries with a strong temporal component , such as US president 1997 , this leads to a decrease in retrieval effectiveness , since relevant documents ( eg , a biography of Bill Clinton containing the aforementioned temporal expression ) can not be reliably matched to the query . We propose a novel approach , based on language models , to make temporal expressions first class citizens of the retrieval model . In addition , we present experiments that show actual improvements in retrieval effectiveness . Categories and Subject Descriptors H33 [ Information Search and Retrieval ] : Retrieval models General Terms Algorithms , Experimentation , Performance Keywords Temporal Information Retrieval , Language modeling 1 .
INTRODUCTION
Increasing amounts of content , not only created at different times but also pertaining to different times , are available on the World Wide Web . Prominent examples of such content include news articles , blogs , and wikis . Typical approaches to retrieval either treat the temporal expressions contained in these documents simply as common terms , or take the creation time of a document as a surrogate for the temporal context of the document ’s content .
However , both families of approaches fail to capture the semantics inherent to the time dimension . Treating temporal expressions as common terms , on the one hand , ignores their inherent semantics . Unless document and query contain exactly the same temporal expression , the document will not be ranked high in the results . The creation time of a document , on the other hand , can be way off the time the contents of the document pertain to – think of a web page
∗Partially supported by the EU within the 7th Framework
Programme under contract 216267 “ Living Web Archives ( LiWA ) ”
Search Engine Y
1 . List of state leaders in 1977 http://enwikipediaorg/wiki/List of state leaders in 1977 2 . Prime minister http://enwikipediaorg/wiki/Prime minister 3 . List of state leaders in 1976 enwikipediaorg/wiki/List of state leaders in 1976 4 . List of state leaders in 1974 http://enwikipediaorg/wiki/List of state leaders in 1974 5 . List of state leaders in 1978 http://enwikipediaorg/wiki/List of state leaders in 1978
Search Engine G
1 . List of state leaders in 1977 http://enwikipediaorg/wiki/List of state leaders in 1977 2 . French municipal elections , 1977 http://enwikipediaorg/wiki/French municipal elections , 1977 3 . France Albert Ren´e http://enwikipediaorg/wiki/France Albert Ren´e 4 . 1977 http://enwikipediaorg/wiki/1977 5 . Anthony Eden http://enwikipediaorg/wiki/Anthony Eden
Figure 1 : Search results “ Prime Minister France 1977 ” describing a futuristic science fiction plot or a Wikipedia article about the French revolution .
As a consequence , retrieval effectiveness suffers for queries that have a strong temporal component ( eg , such aimed at finding historical information ) . To illustrate this problem , consider a user who wants to find out who was prime minister of France in 1977 . We ran the query “ Prime Minister France 1977 ” on two popular web search engines – codenamed Y and G – while restricting the domain of search to http://enwikipediaorg/ The top 5 answers for the query are listed in Figure 1 . As these results show , the top result for the query is simply the full list of world leaders in 1977 – a special feature of Wikipedia that is typically not available in text collections . When ignoring this special result , none of the remaining results is relevant to our information need .
In order to improve retrieval effectiveness for such queries , it is therefore essential to pay special attention to temporal expressions contained in documents . In this paper , we address this very issue . Our key contribution is a novel approach that seamlessly integrates the temporal dimension into a language model based retrieval framework . Experimental evidence shows that our approach yields improvements in retrieval effectiveness . For instance , when evaluating the above query Prime Minister France 1977 using our approach , we obtain the article about Raymond Barre ( http://enwikipediaorg/Raymond Barre ) , who was prime minister of France at the time of interest , at the second position .
2 . MODEL
In this section , we lay out the model and the notation that will be used throughout the remainder . We let D denote our document collection . When modeling the contents of a document d ∈ D , we distinguish between terms and temporal expressions . Formally , a document consists of a bag of textual terms dtx and a bag of temporal expressions dte . A temporal expression T found in a document is a time interval T = [ b , e ] with a begin boundary b and end boundary e drawn from a time domain . Queries in our setting consist of a textual part qtx and temporal part qte . The textual part qtx is a set of terms and can thus be thought of as a standard keyword query . Analogously , the temporal part qte is a set of temporal expressions that captures the times of interest to the user . As an example , a user interested in who were presidents of the US in the 1990s could formulate the query US president 1990s .
3 . LEVERAGING
TEMPORAL EXPRESSIONS
We now proceed to the core of this work and describe how temporal expressions can be leveraged to improve retrieval effectiveness . 3.1 Ponte and Croft ’s Model
Our approach builds on language models as originally proposed by Ponte and Croft [ 13 ] . Due to space constraints we only give an informal description of their approach and point to the original work [ 13 ] for full details . For a recent more complete description of language models , we refer to to Manning et al .
[ 9 ] .
In Ponte and Croft ’s approach each document has a generative model of terms associated . The probability P(t|dtx ) of producing the term t from document dtx depends on the term frequency of t in dtx , but also on the collection frequency of t ( ie , its total number of occurrences in D ) .
Assuming independence for the generation of individual terms , the relevance of document dtx to the query qtx is then assessed as the probability of generating qtx from the generative model associated with dtx , ie ,
Y
Y
P(qtx|dtx ) = q∈qtx
P(q|dtx ) ×
1.0 − P(q|dtx ) .
( 1 ) q6∈qtx
In the remainder , we will refer to the Ponte and Croft model simply as Lm . 3.2 Filtering Model
As we argued in the introduction , treating temporal expressions as standard terms is treacherous , as their inherent semantics is lost . For our earlier query example US President 1990s , a document mentioning that Bill Clinton was president between 1992 and 2000 would be treated equal to a document mentioning the president but not containing any temporal expression . Likewise , if a user is interested in what happened in San Francisco on April 18th , 1906 , a document talking about a severe earthquake that happened in the 1900s would not be given preference to any other document mentioning San Francisco . As a third and final example , consider a user interested in British Punk Rock between 1975 and 1980 . An article about The Clash stating that the famous punk band ’s active period was between 1976 and 1986 would not be favored , since the years stated in the document mismatch the years in the user ’s query .
These three examples are representative of different cases , namely those where the document contains a temporal expression that ( i ) is a superinterval , ( ii ) a subinterval , ( iii ) or an overlapping interval of a temporal expression given by the user . Intuitively , a document containing temporal expressions of these kinds is favorable to documents that do not contain any relevant temporal expressions .
Our first approach to take into account temporal expressions follows this intuition in a radical way . The idea behind the approach , coined LmF , is to not report documents that do not contain any temporal expressions of relevance to the user . The approach therefore filters out documents that do not contain ( i ) a superinterval , ( ii ) a subinterval , or ( iii ) an overlapping interval of a temporal expression specified in the user ’s query .
Formally , LmF reports only documents from the query
0 6= ∅} . ( 2 )
0 ∈ dte : T ∩ T dependent subset of the collection D(qte ) = { d ∈ D |∃ T ∈ qte ∃ T The relative ranking of result documents is exactly the same as the one obtained from the Ponte and Croft model for the textual part qtx of the query . In fact , the approach is not dependent on the use of language models , but can be used with other relevance models as , for instance , Okapi BM25 [ 14 ] . Moreover , it can easily be implemented on top of an existing system as a post filtering step . 3.3 Weighted Model
One drawback of the LmF approach just described is that it assumes a black and white perspective on the world . A document is either considered or not – there is no thing in between . In particular , the approach does not take into account ( i ) how many relevant temporal expressions a document contains and ( ii ) how closely they match the temporal expressions specified in the user ’s query . With regard to the second point and considering our earlier example , consider two documents that talk about earthquakes in San Francisco in April 1906 and the 1900s , respectively . Given otherwise equal relevance of the two documents , it is reasonable to favor the first document , as the temporal expression contained is closer to the temporal expression specified in the user ’s query , namely , April 18th , 1906 .
Our second approach , coined LmW addresses these issues . LmW assigns higher relevance to a document , if it contains more temporal expressions that provide a closer match to the temporal part qte of the user ’s query .
At the core of LmW lies a generative model for temporal expressions . Using this , we estimate the probability of generating the temporal part qte of the user ’s query from the temporal expressions contained in a document . We assume that the generation of the textual query part qtx and the temporal query part qte happen independently , giving us
P(q|d ) = P(qtx|dtx ) × P(qte|dte ) ,
( 3 ) where P(qtx|dtx ) is estimated based on the Ponte and Croft model described above . In analogy to their model , we assume that temporal expression in qte are generated independently . Therefore , the probability of generating the temporal query part qte from the document dte is
Y
P(qte|dte ) =
Q∈qte
P(Q|dte ) .
( 4 )
We now introduce a generative model that determines the probability P(Q|dte ) of producing the temporal expression Q from the document dte . In a first step , we draw a single temporal expression T = [ b , e ] at uniform from all the temporal expressions contained in the document dte . In a second step , we estimate the probability of generating the temporal expression Q = [ b ] given T . Putting these two
, e
0
0
Figure 2 : Generating Q = [ b
, e
0
] from T = [ b , e ]
0
X steps together , we yield
P(Q|dte ) =
·
1
|dte|
P(Q|T ) .
( 5 )
T∈dte
The generative model associated with T must meet the desiderata motivated above . First , it should only produce temporal expressions whose time interval intersects with T . Second , because we favor documents that contain temporal expressions close to a temporal expression Q specified in the query , if Q is not close to T , it should have low probability of being produced by the generative model associated with T . We subdivide the process of generating Q from T into first 0 and then the end boundary choosing the begin boundary b 0 . For the probability of generating Q from T , we thus e write
P(Q|T ) = P(b
0
) · P(e
0|b
0
) .
( 6 )
Figure 2 provides a visualization of the generative process and the underlying probability distributions . The choice of 0 ≤ e , since we must not generate an in0 is constrained as b b terval that does not intersect with T . Further , since we want temporal expressions close to T to have a higher probability 0 close to b should be favored . of being generated , values of b We employ a triangular distribution [ 7 ] to meet these criteria . The triangular distribution is defined by three parameters x ≤ y ≤ z with [ x , z ] being the support interval where the distribution assigns non zero probabilities and y being the point having maximal probability . On the intervals [ x , y ] and [ y , z ] assigned probabilities are linearly increasing and decreasing , respectively . For determining P(b ) , we employ a triangular distribution having parameters
0 x = b − α · ( e − b ) y = b z = e ,
Having chosen b where α ≥ 0 is a tunable parameter that constrains the 0 taking into account ( e − b ) , ie , the length of T . choice of b 0 remains to be 0 . Following picked . This choice is constrained by b the same reasoning as above , we again employ a triangular distribution having parameters
0 , the end boundary e
0 ≤ e x = b
0 0|b y = e z = e + α · ( e − b ) ) . Again , the parameter α constrains
0
0 depending on the time spanned by T . to determine P(e the choice of e
4 . PRELIMINARY EXPERIMENTS
To validate our hypothesis that temporal expressions can help to improve retrieval effectiveness , we conducted a preliminary series of experiments . Our finding obtained from it are the subject of this section .
Setup . We implemented the proposed methods using the Terrier [ 11 ] platform and , in particular , their implementation of the Ponte and Croft model . For the extraction of temporal expressions , we follow a simplified version of the approach described in Zhang et al . [ 15 ] . Each document is matched against a set of regular expression capturing common formats of temporal expressions , for instance , [ dD]uring ( \d{1,4})( BC| BC){0,1} The extracted temporal expressions are mapped to their corresponding time intervals , which are then stored in a MySQL database . In our experiments , we consider the three approaches described in Section 3 – we do not compare against Y and G that were mentioned in the introduction , since we can neither ensure the use of the same dataset , nor do we possess enough knowledge about their internals . For LmW we used value of α = 3.0 to produce the results – for the queries presented we found results to be fairly robust across different choices of α . Notice that for the Ponte and Croft language model the query is processed as specified by the user , ie , no temporal expressions are extracted . As a concrete example , the query Earthquake 1980 – 1990 is sent to Lm as qtx = { Earthquake , 1980 , 1990} but to the other two methods as qtx = { Earthquake } qte = { [ 1980 , 1990 ] } .
Dataset . As a dataset we use a snapshot of the English Wikipedia [ 3 ] taken in early May 2007 . This dataset contains about 2M encyclopedia articles as HTML pages .
Figure 3 shows the titles of the five highest ranked result documents for different queries . For the first query Prime Minister France 1977 ( Figure 3(a) ) , it can be seen that only LmW brings up the encyclopedia article for Raymond Barre who was prime minister at the time of interest . For our second query Spanish Painter 18th Century ( Figure 3(b) ) , LmF and LmW have two and three Spanish painters from the period of interest among their results , respectively . In contrast , results from Lm are fairly broad and do not contain any person specific articles . For the query Sea Battle 1650 1670 ( Figure 3(c ) ) we observe that Lm brings a good result to the top , but other than that produces only rather broad or non relevant results . LmF brings up two results relating to sea battles that took place in the period of interest . The five highest ranked results by LmW , finally , all relate to specific sea battles in the period of interest . A similar observation can be made for the query Earthquake 1980 1990 ( Figure 3(d) ) . Three of the results produced by LmW are specifically dedicated to earthquakes that happened between 1980 and 1990 . Results from LmF , in contrast , are fairly general . Lm brings up two result relating to earthquakes at the time , but also two sports related results .
Summary . The anecdotal results presented strongly indicate that LmF and LmW outperform the baseline , producing results that are both textually and temporally relevant . Comparing the two methods , it can be observed that LmW produced consistently better results than LmF .
5 . RELATED WORK
We now briefly put this work in context with existing prior research . Alonso et al . [ 4 ] highlight the importance of temporal information for Information Retrieval and give an overview of existing approaches – the problem addressed in our work is explicitly mentioned as one not satisfactorily supported by today ’s search engines . Nunes et al . [ 10 ] discovered that , on average , temporal expressions are present in about 1.5 % of web queries – queries about News and Sports were found to exhibit a significantly higher percentage .
Li and Croft [ 8 ] proposed time based language models that take into account the publication times of documents as to favor , for instance , more recent documents . Del Corso et al . [ 6 ] studied the problem of ranking news articles , also beb !(e b)b’ee + !(e b)b’e’(Step 1)(Step 2 ) Lm List of State Leaders in 1977 List of State Leaders in 1974 List of State Leaders in 1976 List of State Leaders in 1978 List of State Leaders in 1979
1 2 3 4 5
Lm
Spanish Art
1 Art in Puerto Rico 2 3 Palazzo Bianco ( Genoa ) 4 Caprichos 5 Portrait Painting
Lm
1 Battle of Dunbar ( 1650 ) 2 Monte Mataiur St . George ’s Caye 3 4 Culrain Scottland 5 First Anglo Dutch War
LmF List of State Leaders in 1974 Antoine Pinay Henri Queuille List of State Leaders in 1977 List of State Leaders in 2000 ( a ) Prime Minister France 1977
LmF Jos´e del Castillo List of Spanish Artists Roybal Augustine Esteve Francisco Eduardo Tresguerras ( b ) Spanish Painter 18th Century
LmF List of Norwegian Battles Battle of Portland Action of 22 February 1812 Naval Strategy Battle of the Gabbard
( c ) Sea Battle 1650 – 1670
Lm 1 San Jose Earthquakes 2 Earthquake ( Comics ) 3 4 Sant’Angelo dei Lombardi 5 Clayton Marsh Creek Greenville
Joe Morrone Jr .
LmF Earthquake Intraplate Earthquake Earthquake Prediction Parkfied Earthquake New Madrid Earthquake
Fault
( d ) Earthquake 1980 – 1990
Figure 3 : Anecdotal query results
LmW List of State Leaders in 1977 Raymond Barre Deputy Prime Minister of Canada List of State Leaders in 1978 Minister of Territorial Development
LmW Jos´e del Castillo Roybal Augustine Esteve Maldonado Luis Egidio Mel´endez
LmW Battle of the Gabbard Battle of Portland Battle of Scheveningen Battle of the Kentish Knock Battle of Dungeness
LmW 1990 Luzon Earthquake Earthquake ( Comics ) 1987 Edgecumbe Earthquake 1985 Mendoza Earthquake Gap Hypothesis taking into account their time of publication and linkage among the articles . None of the approaches , however , considers temporal expressions contained in the documents .
In Pas¸ca [ 12 ] temporal expressions are used to improve the performance of Question Answering for time related questions , such as “ When was the Taj Mahal built ? ” . Answers are then obtained by aggregating over matching pieces of information and their contained temporal expressions .
The work closest to ours is Baeza Yates [ 5 ] whose aim is to search information that refers to the future . The proposed retrieval model is focused on confidences associated with statements about the future , thus favoring relevant documents that are confident about their predictions regarding the future time of interest . The frequency of temporal expressions and their closeness to what the user is interested in , though , is not explicitly considered .
Finally , several prototypes are available that make use of temporal expressions when searching the Web , most notably , Google ’s Timeline View [ 1 ] and TimeSearch [ 2 ] . Details about their internals have not been published .
6 . SUMMARY
Documents are often rich of temporal expressions whose inherent semantics is typically ignored by relevance models . As an effect , retrieval effectiveness suffers for information needs that have a strong temporal component . In this work , we proposed two methods to address this problem and presented first experimental evidence demonstrating their improving retrieval effectiveness .
Ongoing & Future Work . At the time of writing we are conducting further experiments that include additional data sets and involve real users to obtain relevance judgments . There are several interesting avenues of future research – incorporating information about the proximity between temporal expressions and regular terms is one of them .
7 . REFERENCES [ 1 ] Google ’s Timeline View http://wwwgooglecom/experimental/
[ 2 ] TimeSearch Historyhttp://wwwtimesearchinfo [ 3 ] Wikipedia http://wwwwikipediaorg [ 4 ] O . Alonso , M . Gertz , and R . Baeza Yates . On the value of temporal information in information retrieval . SIGIR Forum , 41(2 ) , 2007 .
[ 5 ] R . A . Baeza Yates . Searching the future . In ACM
SIGIR Workshop MF/IR , 2005 .
[ 6 ] G . M . D . Corso , A . Gulli , and F . Romani . Ranking a stream of news . In WWW , 2005 .
[ 7 ] M . Evans , N . Hastings , and B . Peacock . Statistical
Distributions 3rd ed . Wiley , New York , 2000 .
[ 8 ] X . Li and W . B . Croft . Time based language models .
In CIKM , 2003 .
[ 9 ] C . D . Manning , P . Raghavan , and H . Sch¨utze .
Introduction to Information Retrieval . Cambridge University Press , New York , NY , USA , 2008 .
[ 10 ] S . Nunes , C . Ribeiro , and G . David . Use of Temporal
Expressions in Web Search . In ECIR , 2008 .
[ 11 ] I . Ounis , G . Amati , V . Plachouras , B . He ,
C . Macdonald , and C . Lioma . Terrier : A High Performance and Scalable Information Retrieval Platform . In OSIR , 2006 .
[ 12 ] M . Pas¸ca . Towards temporal web search . In ACM
SAC , 2008 .
[ 13 ] J . M . Ponte and W . B . Croft . A language modeling approach to information retrieval . In SIGIR , 1998 . [ 14 ] S . E . Robertson and S . Walker . Okapi/keenbow at trec 8 . 1999 .
[ 15 ] Q . Zhang , F . M . Suchanek , L . Yue , and G . Weikum .
TOB : Timely Ontologies for Business Relations . In WebDB , 2008 .
