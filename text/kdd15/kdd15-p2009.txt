Analyzing Invariants in Cyber Physical Systems using Latent Factor Regression
Marjan Momtazpour1 , Jinghe Zhang2 , Saifur Rahman2 ,
Ratnesh Sharma3 , Naren Ramakrishnan1
1Discovery Analytics Center , Department of Computer Science , Virginia Tech
1{marjan,naren}@csvtedu,2{jing2014,srahman}@vtedu,3ratnesh@nec labscom
2Advanced Research Institute , Virginia Tech
3NEC Laboratories America , Inc .
ABSTRACT The analysis of large scale data logged from complex cyber physical systems , such as microgrids , often entails the discovery of invariants capturing functional as well as operational relationships underlying such large systems . We describe a latent factor approach to infer invariants underlying system variables and how we can leverage these relationships to monitor a cyber physical system . In particular we illustrate how this approach helps rapidly identify outliers during system operation .
Categories and Subject Descriptors H28 [ Database Applications ] : Data mining
Keywords Regression , Latent Factors , System Invariants , Outlier Detection .
1 .
INTRODUCTION
In recent years , with the rapid growth in data logged from modern devices in a distributed system , the need for having stronger knowledge discovery methods has attracted significant attention [ 28 ] . Concomitantly , the size and complexity of these systems have become a burden for administrators in detecting failures and repairing them [ 13 , 25 ] . These challenges inspired us to characterize and track anomalies in cyber physical systems by correlating all monitored data across the system .
According to [ 15 ] , “ detecting anomalies that occur only within individual variables is often trivial , while detecting correlation anomalies is much harder and is practically important in fault analysis of complicated dynamic systems ” . In a complex cyber physical system , such as a smart grid ( Fig 1 ) , while some of the relationships between time series can be directly observed , other mutual dependencies are significantly complex to extract computationally . A typical cyber physical system may include tens of time series with hundreds of mutual dependencies , where a large number of them are not directly observable . In the past , researchers have tried to infer existing linear relations using regression models [ 17 ] or by
Figure 1 : A typical example of a smart grid . harnessing the structure of causal networks [ 4 ] . However , due to the complexity of modern systems , we must go beyond direct linear correlations in understanding them .
In this paper , we aim to use a more realistic approach to discover hidden patterns and indirect relationships among devices by employing latent variables in regression models . Specifically , we harness hidden factors derived by factor analysis and use them in regression models . We perform various experiments on synthetic and real datasets including wireless sensor networks and microgrid datasets . Furthermore , we use graph representations for better visualization of relationships which aids in discovering system wide anomalies . Results show that the use of invariants derived with latent factors helps us to monitor large scale complex systems and discover outliers more precisely . We also propose a ranking method to score system wide anomalies . Our key contributions are thus : • Proposing latent factor analysis regression to reveal hidden correlations among time series in a cyber physical system .
• Summarizing the discovered invariants into an invariant graph of the system .
• Detecting system outliers based on the change in the graph of invariants and ranking time series for fault localization .
2 . BACKGROUND
The high complexity of modern distributed cyber physical systems urges us to enhance the self management capabilities of these systems . Cyber physical systems such as microgrid systems have a high degree of heterogeneity ( in terms of shape , trend , and periodicity ) that requires us to have a general tool to profile a variety of behaviors . Moreover , due to the nature of these systems , we may observe abrupt regime changes , seasonal patterns , and pairwise relationships among time series [ 11 ] . Ding et al . proposed an
Generation Transmission Distribution Business Consumer Residential Consumer Utility Operation Center 2009 ensemble of different approaches to tackle these problems in [ 11 ] . As stated in [ 28 ] , traditional computational techniques cannot be used to model complex cyber physical systems for data analytic purposes in a straightforward manner . There have been multiple research efforts to model complex dynamic systems such as inferring/visualizing the input output relationships or predicting state switches/changes [ 28 ] .
Guofei et al . [ 16 ] proposed a concept named flow intensity and used the ARX ( autoregressive exogenous ) model to quantify the relationship between each pair of flow intensities . If such a relationship holds all the time , they are considered as invariants of the underlying system . This model has been successful in characterizing complex systems and in supporting different system management tasks such as fault detection and localization . However , one of the main disadvantages of this method , as cited in [ 13 ] , is that the complexity of algorithm in order to find all invariants is high . In this model , they look at two flow intensities ( timeseries ) where one of them is considered as input and the other one as output signal . Note that the differentiation of input and output time series are unknown and such labeling can occur only after examining both directions and evaluating which assignments lead to higher scores . The ARX model posits the following relationship between two flow intensities of y ( output ) and x ( input ) : y(t ) + a1y(t − 1 ) + + auy(t − u )
= b0x(t − l ) + + bvx(t − l − v )
( 1 ) where u , v , and l are the order of the model and determine the number of previous steps that are affecting the current output . ai ’s and bj ’s are coefficient parameters that reflect how strongly a previous step is affecting the current output . Equation 1 can be solved using a least squares method ( LSM ) and the fitness score will indicate whether the model fits the observed data appropriately [ 16 ] .
3 . PROBLEM FORMULATION Let us assume that we have observed a set of n time series , D = {x1(t ) , . . . , xn(t)} , measured at various points in one or more cyber physical systems . For a time series xi(t ) , we represent the vector of samples at time steps tk , . . . , tk+w as follows :
X k:k+w i
= [ xi(tk ) , xi(tk+1 ) . . . , xi(tk+w)]T .
( 2 )
Furthermore , we use Xi to represent the time series xi(t ) as a random variable . In other words , xi(t ) is a time series whose samples are drawn from a random distribution represented by random variable Xi .
In any type of cyber physical system , there are various correlations and inter dependencies among time series . In large cyberphysical systems , having sufficient level of knowledge about these inter dependencies is crucial to preform accurate system management tasks . In the following definition , we formally define what we mean by dependency between two time series .
DEFINITION 1 . ( Approximate Dependency ) : At time step tm , time series xj(t ) ∈ D approximately depends on xi(t ) ∈ D , if and only if , there exists a function f : R → R that for appropriately small > 0 :
ˆxj(tm ) = f ( X 1:m−1 j
,X 1:m i
)
( 3 )
( 4 )
. fififitm and
|xj(tm ) − ˆxj(tm)| < .
We depict this dependency by xj(t ) → xi(t )
When the dependency between two time series does not change over time , we say that these two time series are system invariants . DEFINITION 2 . ( System Invariants ) : Two time series , xj(t ) ∈ D and xi(t ) ∈ D , are system invariant up to time T within range of if and only if at least one of the following rules satisfied : ∃f : R → R and ∀0 ≤ t ≤ T or ∃f : R → R and ∀0 ≤ t ≤ T fififi0≤t≤T fififi0≤t≤T xj(t ) → xi(t ) → xj(t ) xi(t )
:
:
.
We show invariant time series by xi(t ) ff xj(t ) .
Based on the nature of the system , dependencies between time series can be linear or nonlinear and this is modeled by the function f . In complex cyber physical systems , when we have a large number of time series , it is appropriate to represent the invariants in the form of a graph .
DEFINITION 3 . ( Invariant Graph ) : Graph G = ( V , E ) , with the set of vertices V = {v1 , . . . , vn} and the set of edges E = {e1 , . . . , em} , is called an invariant graph of a system with observed time series D = {x1(t ) , . . . , xn(t)} , where e = ( vi , vj ) ∈ E if and only if xi(t ) ff xj(t ) .
From Definition 3 it is obvious that the vertex vi is equivalent to the time series xi(t ) . It should be noted that system invariants and invariant graph represent features of a system under its normal condition . However , in the presence of anomalies , when the behavior of system deviates from its normal condition , these dependencies may disappear . In other words , while two times series , xi(t ) and xj(t ) , may be invariant under normal conditions , the invariant feature may not hold when an anomaly condition appears in the system .
DEFINITION 4 . ( Broken Invariants ) : We say that system inff xj(t ) is broken at time T = tm , if and only if , variant xi(t ) time series xi(t ) and xj(t ) satisfy the following conditions : or fififit<T fififit<T xj(t ) → xi(t ) xi(t ) → xj(t )
∃f : R → R and ∀0 ≤ t < T = tm :
∧ fifixj(tm ) − f ( X 1:m−1 ∧ fifixi(tm ) − f ( X 1:m−1 j i
,X 1:m i
,X 1:m j
)fifi ≥
)fifi ≥
.
In some cases , the existence of unseen factors has an impact on the observed values of the system which cause them to have a specific behavior . However , uncovering those hidden factors behind all the underlying electro mechanical devices is a challenging task . Characterizing these factors can help us to reveal the hidden relationships between potential time series whether they have indirect or complex relationships . Figure 2 ( a ) shows an example of relationships among a set of time series , ( x1 , x2,··· , xn ) . In reality , the relationships can be direct ( solid lines ) or indirect ( dashed lines ) . Previous works tried to reveal the direct relationships among time series ( which is shown in Figure 2 ( b) ) . However , despite the simplicity of these linear methods , sometimes they result in a sparse graph of invariants where tracking all time series is impossible . Moreover , these methods are not able to capture the underlying hidden relationships and results in poor detection of system outliers . In this paper , we aim to uncover those hidden relationships
2010 where µi is the expected value of Xi , Hj ’s are unobserved random variables and λij ’s are unknown constants ( i ∈ 1,··· , n and j ∈ 1,··· , k where k < n ) . Also , ζi ’s are independently distributed error terms with zero mean and finite variance ( V ar(ζi ) = ψi ) . In other words , by Eq 6 , each of the Xi ’s random variables is related to k hidden random variables , known as latent factors .
In matrix notation , we have :
X − µ = ΛH + Z
( 7 ) where X = ( X1,··· , Xn)T is a data sample vector , µ is the expected values of data samples , Λ is an n × k matrix named as loading matrix , H = ( H1,··· , Hk)T is a vector of latent factors , and Z = ( ζ1,··· , ζn ) is the vector of error .
It is assumed that H and Z are independent , and E(Z ) = 0 , E(H ) = 0 , Cov(Z ) = Diag(ψ1 , , ψn ) = ψ , and E(HHT ) = Φ . Furthermore , it is assumed that the data has a multivariate normal distribution , X = N ( µ , Σ ) . Based on these assumptions , we will have :
Σ = ΛΦΛT + ψ .
( 8 )
Since X has a multivariate normal distribution , the actual distribution function of elements of sample covariance matrix , S , can be expressed as a Wishart distribution with m− 1 degrees of freedom , mS ∼ Wn(Σ , m − 1 ) , where m is the number of samples .
The log likelihood of the Wishart distribution can be expressed as follows : log L = − m − 1
2
,log|Σ| + tr(SΣ
−1 )
( 9 ) where the terms independent of Σ are dropped .
It is obvious that maximization of L is equivalent to minimizing the following function :
Q = log |Σ| + tr(SΣ
−1 ) .
( 10 )
One can find the latent variables by taking the partial derivatives of Eq 10 with respect to the elements of loading matrix and errors constrained by Eq 8 . For simplicity , it is convenient to assume that Φ = I and ΛTΨ−1Λ is diagonal .
There are different types of criteria to determine the number of factors such as criteria based on eigenvalues , discrepancy of approximation , or overall discrepancy [ 24 ] . Here , we use the Kaiser criterion which drops those with eigenvalues of less than 1 . Indeed , the number of factors , must be lower than the number of observed variables , k < n . More details can be found in [ 14 , 19 ] . 4.2 Latent Factor Auto Regression with Ex ogenous input ( LFRX )
Having n time series , D = {x1(t),··· , xn(t)} , related to a cyber physical system , similar to the ARX model [ 16 ] , we can rewrite Eq 1 as : u v
ˆxj(t ) = apxj(t − p ) + bpxi(t − l − p )
( 11 ) p=1 p=0 where xi(t ) , xj(t ) ∈ D .
As acknowledged widely [ 16 , 13 , 6 , 5 , 27 ] , a drawback of ARX is that relationship discovery is done based on the existence of direct linear relationships between two observed time series . In other words , at each time ARX considers a pair of time series without considering the underlying relationships and hidden patterns . To address this issue , we deploy latent factors in the ARX model to recover the complex relationships . If we use latent factors in the
Figure 2 : Different models of relationships : ( a ) Relationships in reality , ( b ) Relationships in the ARX model and ( c ) Relationships in ARX with a latent model . with the help of hidden factors as latent variables . Hidden factors , ( f1 , f2,··· , fn ) , are considered as a higher level in hierarchy of the system and have an impact on the whole observed variables . An example of relationships in a system with hidden factors is illustrated in Figure 2 ( c ) .
DEFINITION 5 . ( Latent Variable ) : In a cyber physical system with the set of observed time series D = {x1(t ) , . . . , xn(t)} , an unobserved time series h(t ) is a latent variable when two or more observed time series are functions of h(t ) . In other words , ∃gx : R → R :
∃D ⊂ D where ∀x(t ) ∈ D
∀tm ≥ 0 ,
, x(tm ) = gx(H1:m )
( 5 ) where similar to Eq 2 , H1:m is defined as follows : H1:m = [ h(t1 ) , h(t2 ) . . . , h(tm)]T .
It should be noted that each cyber physical system may have more than one latent variable . Also , existence of a latent variable does not mean that all the observed time series should be directly related to that variable .
4 .
INVARIANT DISCOVERY
In this section , we describe a framework for invariant graph discovery and anomaly detection . For this purpose , we first extract latent variables using factor analysis and incorporate hidden factors into the regression model . Then we construct the invariant graph using a search algorithm . Finally , we use the constructed graph as a normal invariant graph and deploy it for the purpose of anomaly detection in the system . By discovering the broken invariants and ranking them , one may be able to find fault(s ) and localize them . 4.1 Factor Analysis
Let us assume that we have a set of n random variables ( input variables ) , denoted by X1 , , Xn . Also , assume that there are k hidden ( latent ) factors in the system , denotes by H1 , , Hk . Furthermore , assume that the observed variables are modeled as linear combinations of latent variables . Then we derive latent variables using the factor analysis method . Factor analysis is a well studied field and is used to determine the main latent sources behind the observed data variation [ 9 ] . Although factor analysis is similar to principal component analysis ( PCA ) , it is used more in predictive models due to its generalizability ( eg , factor loadings can remain consistent for different subsets of variables ) [ 29 ] . Some might think of the factor model as generative models where the data is produced based on factors .
In factor analysis , for one sample of data extracted from random variable distributions , we have :
Xi − µi = λi1H1 + + λikHk + ζi
( 6 ) x1 x3 x2 xn 1 xn x1 x3 x2 xn 1 xn x1 x3 x2 xn 1 xn h1 …hk ( a ) ( c ) ( b ) 2011 Algorithm 1 : Invariant Search Algorithm Input : xi , i ∈ {1 , , n} : set of time series , ∆ : ARX superiority threshold , τ : minimum acceptable score , ts and te : start and end time of training dataset .
Output : G : Invariant Graph . for j = 1 to n do if i == j then Continue ; end foreach ts ≤ t ≤ te do
1 SARX = {} ; 2 SLF RX = {} ; 3 for i = 1 to n do 4 5 6 7 8 9 10 11 12 13 14 15 16 end if
17 18 19
, using Eq 11 ;
, using Eq 12 ; j ji
Learn an ARX model , θARX ( t ) using θARX ; Calculate ˆxARX Compute F ARX ( t ) with Eq 15 ; Learn an LFRX model , θLF RX Calculate ˆxLF RX Compute F LF RX
( t ) using θLF RX ( t ) with Eq 15 ; ji ji ji ji j
; ji ji t=ts
F ARX te ,mint(F ARX te ,mint(F LF RX end if
( t ) ≥te ( t ) ) ≥ τ then ( t ) >te ( t ) ) ≥ τ then
SARX = SARX ∪ {xiffxj} ;
F LF RX t=ts t=ts t=ts ji ji
F LF RX ji
( t ) − ∆
F ARX ji
( t ) + ∆ and and ji end
SLF RX = SLF RX ∪ {xiffxj} ;
20 21 22 23 end 24 Construct Graph , G = ( V , E ) , using SARX and SLF RX ; 25 return G ; end above regression model , we will have :
ˆxj(t ) = apxj(t−p)+ bpxi(t−l−p)+ v p=0 u p=1 w k cpqhq(t−p ) p=0 q=1
( 12 ) where hp(t ) ’s are the latent factor time series that have been built based on the latent factor random variables , as discussed in the previous subsection ( Eq 6 ) . Also , ap ’s , bp ’s , and cpq ’s are the regression weights that are determined in the learning phase . Note that in Eq 12 , in addition to the regression weights , latent factors are also unknown and should be estimated in the learning phase .
It should be noted that here we incorporate the previous values of xj(t ) as well as values of exogenous variable , xi(t ) , and hidden variables , hq(t ) ’s , to estimate new value of xj(t ) . In matrix notation , Eq 12 will change to :
ˆxj(t ) = ATX t−u:t−1 j
+ BTX t−l−v:t−l i
+ Tr(CTH )
( 13 )
1 where Au×1 , B(v+1)×1 , C(w+1)×k are matrices of coefficients . Also , H(w+1)×k is a matrix that represents all the latent factors , fi . In our experiments , we assume ie H = .Ht−w:t
···Ht−w:t u = v = w and their values are estimated using cross validation . Also , due to the lack of delay in our datasets , we assume l is zero . In order to solve Eq 13 , first we derive latent factors , H , using factor analysis of Subsection 4.1 and then we incorporate them into the regression model to estimate the weights . k
4.3 Invariant Graph Construction
Based on Definition 2 , in order to discover system invariants we need to identify time series that have persistent approximate dependencies . While time series may have nonlinear dependencies , in this paper we consider linear relationships and use ARX and LFRX for this purpose .
The search algorithm that extracts system invariants is shown in Algorithm 1 . In this algorithm , for each pair of time series , we first assume that they have a direct linear relationship and we fit them using an ARX model ( Eq 11 ) . The ARX model for time series xi(t ) and xj(t ) is illustrated by θARX . Then , we assume that there might be an indirect relationship through latent variables and hence , we use LFRX model to learn θLF RX . As defined in Definition 1 , to determine if xj(t ) depends on xi(t ) , we need to compare the estimation error with an acceptable threshold , . However since in a specific cyber physical system different time series have different range of values , it is more appropriate to use normalized error measurements . For this purpose , when we estimate xj(t ) based on xi(t ) , we can evaluate the relative absolute error ( RAE ) defined by the following equation : ij ij eRAE j,i
( t ) = te
|ˆxj(t ) − xj(t)|
|xj(t ) − xj(t)| t=ts
( 14 ) where xj(t ) is the observed value , ˆxj(t ) is the estimated value based on xi(t ) , and ¯xj is the sample mean of observed values .
According to [ 17 ] for each pair of time series , xi(t ) and xj(t ) , we calculate a score to measure their dependencies . The following normalized score may be used for the evaluations : j,i
Fj,i(t ) = 100(1 − eRAE
( 15 ) A higher score indicates stronger dependency between the time series . It should be noted that RAE is a specific example of normalized error measurement and one can easily extend the algorithm to use other error measurement approaches including RMSE , specifically when time series have the same range of variations .
( t) ) .
In Algorithm 1 , lines 8 to 15 are dedicated to estimate individual values of xj(t ) based on xi(t ) and calculate the scores for ARX and LFRX models . In order to discover invariants and choose between direct or indirect relationships , we consider the following criteria : • For all the time steps , score should be greater than or equal to a specific threshold . We name this threshold as minimum acceptable score and denote it by τ . Then , we should have : ( 16 ) • Since higher score depict stronger relationships , in choosing between ARX and LFRX , the one with the better overall score is chosen .
( Fji(t ) ) ≥ τ . min t
• Since linear invariants represent simpler relationships , higher priority is given to ARX based invariants using a guard bound , ∆ , which we name as the ARX superiority threshold . In other words , ARX based invariants are selected when : te
( t ) ≥ te
F ARX ji
F LF RX ji
( t ) − ∆ .
( 17 ) t=ts t=ts
When calculated scores satisfy Eq 16 , we will say that xi(t ) and xj(t ) are invariant and based on Eq 17 , the type of invariant is chosen to be direct ( ARX ) or indirect ( LFRX ) . The resulted invariants are added to the sets of ARX and LFRX invariants denoted by SARX and SLF RX , respectively . In Algorithm 1 , lines 16 to 21 are dedicated to this process .
2012 foreach ei,j ∈ E do
Use Definition 4 to check if ei,j is broken ; if ei,j is broken then
Algorithm 2 : Alerting Algorithm Input : xi(t ) , i ∈ {1 , , n} : set of time series ,
G = ( V , E):Invariant Graph , te : start time of monitoring , α : alerting threshold .
1 foreach t > te do 2 3 4 5 6 7 8 9 10 11 12 13 14 end end end else cntij ← cntij + 1 ; cntij ← 0 ; end if cntij > α then Invoke an alert ; cntij ← 0 ;
After finding system invariants , the final step ( line 24 in Algorithm 1 ) is to construct the invariant graph , G = ( V , E ) . This is a straightforward task which is performed based on Definition 3 . The total number of iterations of this algorithm is O(tn2 ) where t is the length of time series . At each iteration ( lines 9 to 14 ) , models are learned with a time complexity which is a function of t2 and various constants ( w , v , u,··· ) . This results in an overall complexity of O(Cn2t3 ) . 4.4 Outlier Detection using Broken Invariants After constructing the invariant graph ( in Subsection 4.3 ) , we can use this graph for detecting abnormalities in the system . For this purpose , using Definition 4 , at each time step we check whether each of the graph edges is broken or not . We then rank the time series in order to localize the source of abnormality . In what follows we first describe the alerting algorithm , followed by a metric for alerting threshold estimation and finally the ranking method for fault localization .
Anomaly alerting algorithm : The alerting algorithm is illustrated in Algorithm 2 . In this algorithm , in order to prevent generations of multiple alerts consecutively , we use an alert filtering mechanism by imposing a counting strategy with alert threshold of α . When the number of consecutive violations of a specific invariant goes beyond α , the algorithm invokes an alert to the system administrator , who may use this for further investigations . Time complexity of this algorithm is O(|E| ) at each time step . Anomaly detection threshold : According to model based FDI methods used in control theory and similar to [ 27 ] , in order to reduce false alarms the following approach is used for detection of broken invariants . The difference between the predicted value , ˆxj(t ) , and the actual value , xj(t ) , is recorded and whenever this difference deviates more than a predetermined threshold , 0 , an invariant will be broken :
|ˆxj(t ) − xj(t)| > 0
( 18 )
The threshold 0 can be estimated based on the observed values in the training period . According to [ 27 ] , 0 is assumed to be 10 % larger than the tolerance of deviations from the actual values :
0 = 1.1 ∗ argr {P rob(|ˆxj − xj| < r ) = 0.995}
( 19 )
Figure 3 : ( a ) Invariant graph of synthetic data ( b ) Correlation matrix of synthetic time series . where r is greater than 99.5 % of the residuals observed in the training data .
Ranking time series for fault localization : In complex cyberphysical systems with a large number of invariants , one single fault in the system may lead to a large number of broken invariants . Hence , for fault localization we need to rank the invariant graph vertices according to the number of their broken edges . Similar techniques have also been used in [ 12 ] . For this purpose , we use the following score to rank the vertices after the occurrence of an alarm . Assuming that an alarm is generated at time t , for each vertex , vj , we calculate the following score :
ρj = dnormal j
− dj(t ) dnormal j
( 20 ) j where dnormal is the degree of vj in normal condition and dj(t ) is the degree of vj after alarm generation at time t . It is obvious that higher value of ρj indicates vj has lost more edges which may potentially be due to the occurrence of a fault at xj(t ) .
5 . EXPERIMENTAL RESULTS
We perform our experiments on several datasets . We aim to show how our method ( ARX + LFRX ) can discover the invariants , how it can improve the accuracy of system , and how it can find the anomalies happening throughout the network . First , we perform our analysis on a synthetic dataset to recover indirect invariants . Next , we use two datasets from real cyber physical systems : a wireless sensor network and a microgrid system . In these datasets , there are multiple factors and measurements with various temporal and spatial dependencies . 5.1 Synthetic Data Dataset Description : At the first step , we perform our experiment on a synthetic dataset to verify our method for the discovery of indirect hidden relationships . For this purpose , we generate eight signals and compare the results of ARX with our method ( integration of ARX and LFRX ) . In this experiment , we add a Gaussian noise with zero mean and standard deviation of 0.1 to one of the time series in order to test the invariant graph under abnormalities . The ground truth graph and its corresponding correlation matrix are shown in Fig 3 ( a ) and ( b ) , respectively . As Fig 3 ( a ) shows , V6 and V7 are correlated to each other . V8 is isolated and all the remaining nodes are correlated to each other . However , the hidden relationship between signals is not observable in Fig 3 ( a ) . In fact , V3 , V4 , V5 are generated using V1 and V2 . The relationship between signals is given in the following equations : V1(t ) = 0.9V1(t− 1)− 0.02V1(t− 2)− 0.01V1(t− 3 ) + 0.09 + η V2(t ) = 2(V1(t − 1 ) − V 1(t − 2 ) ) + 0.5(V2(t − 1 ) + V 2(t − 2 ) ) v1v7v5v8v4v3v2v6Signal IDSignal ID 1234567812345678−08−06−04−020020406081(b)(a)2013 V3(t ) = V1(t−1)+V2(t)−V1(t ) , V4(t ) = 3V1(t−1)+V2(t−1 )
V5(t ) = 3V1(t − 1 ) − V2(t − 1 )
V6(t ) = 1 + 0.01R(t , 100 ) , V7(t ) = 1 − 0.01R(t , 100 )
V8(t ) = 2e10−4t + R(t , 600)e
−10−4t where R(t , T ) is a rectangular function of t , oscillating between −1 and 1 with period of T and η is a Gaussian noise with zero mean and standard deviation of 001
In order to consider various situations , with and without presence of hidden relationships , we perform multiple experiments with different subset of the above signals .
Results and Discussion : Recovered graph for both methods in normal and abnormal condition are shown in Figure 4 . In this figure , each row denotes an experiment involving a subset of synthetic time series , where white nodes represent the one with injected noise . As it is shown , in all cases the ARX + LFRX method has recovered the planted invariants and the recovered graph matches the ground truth . In both methods , in the presence of an anomaly , the invariants attached to the corrupted signal ( white node ) are broken . However , in some cases such as ( a ) and ( b ) where the ARX method cannot recover the existing relationships , at the time of anomaly , it was not able to detect it correctly . In figures ( a ) to ( d ) , time series V1 and V2 are not measured and hence , time series V3 , V4 , and V5 have indirect relationships . It is obvious from Fig 4 that the proposed method ( ARX + LFRX ) is able to discover the corresponding invariants while ARX , with the same parameter settings , has failed to discover them . 5.2 Sensor Motes Dataset Description : The sensor motes dataset contains measurements from wireless sensors at Intel Berkeley Research lab . There are a total of 54 sensors located at a lab measuring temperature , humidity , light , and voltage between February 28th and April 5th , 2004 [ 10 ] . Each sensor was able to record different variables every 31 seconds . Fig 5 ( a ) shows the location of each node as well as different part of the lab .
Results and Discussion : Fig 5 ( b ) shows the clustering of sensors in the loading matrix ( ie Λ in Eq 7 ) of light measurements . For this purpose , we used a k means algorithm with k = 6 . It is interesting to note that the sensors are clustered in a way that reflects their spatial distributions .
We performed invariant graph analysis on each variable ( light , temperature , humidity , and voltage ) , separately . Overall results are illustrated at Table 1 . It is obvious from this table that the proposed method results in lower average estimation error on test datasets , compared to the ARX approach . Also , the number of discovered invariants using the proposed method is higher than the one using ARX . This is due to the deployment of latent factors in LFRX method which is beneficial in anomaly detection . In fact , for the purpose of anomaly detection using invariant graphs , anomalies in vertices with a small number of edges cannot be discovered easily . One might think that by increasing the value of ( in Eq 4 ) at the time of invariant discovery , we can find larger number of invariants . However , by increasing , the estimation accuracy decreases dramatically which results in having false invariants . Table 1 shows that the proposed method discovers more invariants with higher accuracy .
Fig 6 shows an invariant graph of temperature under the normal condition and in the presence of abnormalities . In this figure , direct
Figure 4 : Invariant graphs discovered using ARX and the proposed method ( ARX + LFRX ) under normal and abnormal conditions . First column shows the ground truth . In the abnormal condition , an anomaly is injected into each graph at one variable ( white node ) . Rows ( a ) to ( f ) shows different combinations of time series in Fig 3 . Direct invariants are shown in solid lines and indirect invariants are shown in dashed lines .
Table 1 : Performance evaluation result of ARX and ( ARX + LFRX ) for the Sensor Motes dataset . Avg . Error
Edges
Avg . Error ARX+LFRX
ARX
Metric
Voltage Temperature Humidity Light
0.0056 0.3658 0.6262 81.8377
0.0070 0.4971 0.8632 93.1723
ARX+LFRX Latent Total 284 441 183 43 866 1142 539 269
Edges ARX
170 145 764 463 and indirect invariants are illustrated by blue and red edges , respectively . Fig 6 ( a ) shows the invariant graph under the normal condition with 183 edges where 140 of them are derived using LFRX . As we expected , geographic placement of sensors has an effect on the result . Fig 6 ( b ) shows the invariant graph at the presence of anomalies . In this figure , the top ten sensors based on the ranking of Eq 20 are highlighted with red circles . Larger circles represents higher rank of vertices . As this figure shows , variations of environmental temperature in the lab result in distortions in nearby sensors . As an example , sensors 12 to 17 are in the top ten ranking list . Sensors 16 and 37 are both among the highly ranked ones that are susceptible to be the source of anomaly . In Fig 6(b ) , we can observe that the LFRX edge between these two vertices is broken . Fig 7 depicts the corresponding time series of these two sensors . We can easily observe that these two time series have almost similar behavior and are expected to be system invariant . As this figure illustrates , the relationship between these sensors is broken at time t = 1300 . Abnormal conditions are shown in darker colors .
Truth Graph(a)(b)(c)Recovered Graph ( ARX)Recovered Graph ( New Model)normalabnormalnormalabnormalV7V7V5V4V3V6V5V5V4V4V3V3V7V6V7V(d)(e)(f)V8V2V1V7V6V5V4V3V5V4V3V5V4V3V8V8V7V6V7V6V2V12014 Figure 7 : Temperature of sensors 16 ( blue ) and 37 ( red ) . Outliers are shown in darker color .
( a )
( b )
Figure 5 : ( a ) Geographical location of wireless sensors ( taken from [ 1] ) . ( b ) Clustering of sensors based on latent factors of light measurement indicating a high degree of spatial correlation .
Figure 8 : Schematic view of the NEC microgrid setup .
( a )
( b )
Figure 6 : ( a ) Invariant graph of sensors based on temperature at normal condition ( with 183 edges ) . ARX based and LFRXbased invariants are shown with red and blue edges , respectively . ( b ) Invariant graph with broken edges in the presence of an anomaly ( 162 edges ) . Top ten sensors based on the ranking of Eq 20 are shown with red circles .
5.3 Microgrid Dataset Description : We performed our experiments on a microgrid system where several devices are operating in a distributed setting ( Fig 8 ) . In this setting , the control unit tries to minimize the amount of energy based on various criteria and hence the microgrid shows a complex behavior in the logged measurements . This dataset which is provided by NEC labs contains logged data from multiple sources such as loads ( primary , secondary ) , battery , PMU
Figure 9 : Three different time series of NEC microgrid dataset during one week .
( measurement unit outside of the microgrid ) , solar system ( PV ) , weather ( inside and outside parameters ) , and air cooling unit . There are total of 84 features measured from July 7th to August 7th , 2014 . Due to the different sampling rates of each device , time series are re sampled with a unique rate to be aligned to a specific windowtime . Figure 9 shows a sample plot of three time series from different units during one week .
Results and Discussion : The invariant graph derived by our proposed method is represented in Fig 10 ( a ) . In this figure , each node represents one of the features and the set of features that belong to
−40−35−30−25−20−15−10−50−35−30−25−20−15−10−50XY 1 2 3 4 5 6 7 8 9101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354−40−35−30−25−20−15−10−50−35−30−25−20−15−10−50XY 1 2 3 4 5 6 7 8 9101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354−40−35−30−25−20−15−10−50−35−30−25−20−15−10−50XY 1 2 3 4 5 6 7 8 910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535402004006008001000120014001600180014161820222426283032TimeTemperatureUtility grid Phasor Measurement Unit Microgrid bus Solar PV Battery Diesel generator Air cooling Weather Others Switch 2nd Load Switch Switch Load Control Unit ( Scheduling , Monitoring , etc . ) 0051152253354455x 104050100Depth of Discharge ( %)0051152253354455x 10401020Ipv ( Amp)0051152253354455x 104−200002000Active PowerChA ( kW)Time2015 ( a )
( b )
( c )
Figure 10 : ( a ) Invariant graph of microgrid under normal condition ( ARX + LFRX ) ( b ) Outlier happens when an additional device is switched off/on in the system . ( c ) Outlier happens when the secondary load is disconnected .
Table 2 : Performance evaluation result of ARX and ( ARX + LFRX ) .
Intra Device Edges
Intra Device Edges
Inter Device Edges
Device ( No . of Signals )
PMU ( 28 ) PV ( 9 ) Battery ( 9 ) Primary LD ( 9 ) Secondary LD ( 9 ) Weather ( 13 ) Air Cooling ( 7 )
Avg . Error
( ARX + LFRX )
Avg . Error
( ARX )
0.0028 0.0119
3.7 × 10−14 2.2 × 10−4 2.3 × 10−6
0
0.2852
0.1346 0.1146 0.2764 0.1460 0.0434 0.1342 0.2903
Total 102 26 21 35 36 57 11
( ARX + LFRX ) Latent
( ARX )
73 5 12 22 0 17 5
102 26 21 29 36 57 11
( ARX + LFRX ) Latent 265 63 81 66 19 94 75
Total 810 187 239 235 53 260 213
Inter Device Edges
( ARX )
755 175 226 236 52 244 203 a specific device are illustrated using the same color . Also , the size of each node is proportional to its degree . Furthermore , invariants derived by ARX and LFRX methods are shown by red and blue edges , respectively . The total number of invariants that ARX + LFRX discovered is 2285 where 797 of them are indirect and 1488 of them are direct invariants .
The average estimation errors of traditional ARX and the proposed method are compared in Table 2 . As this table shows , the average error of the proposed method for each device is dramatically lower than the error resulted by ARX approach . This means that invariants are selected with higher accuracy using ARX + LFRX . Also , Table 2 compares the proposed method with ARX in terms of the number of invariants between devices ( Inter Device ) and within each device ( Intra Device ) . Inter Device edges are visualized in Fig 11(a ) where edge thickness represents the total number of invariants between devices . From this figure , we can observe the high complexity of inter dependencies between measurements of devices . For example , energy produced by photovoltaics ( PV ) has effect on battery , PMU , loads , and the temperature of environment . After occurrence of an abnormal behavior , the topology of the invariant graph changes ( ie , depending on the nature of anomaly , some edges are removed from the graph ) . By comparing consecutive graphs , one is able to detect outliers in the system . We detect changes in the invariant graph in two different situations : when an additional device is switched off/on and when secondary load is turned off . Results are shown in Fig 10 ( b ) and ( c ) , respectively . As we may observe from Fig 10 ( b ) , two edges connecting the secondary load to PMU and PV are broken . This is due to the change in the energy consumption behavior of the system . On the other hand , as Fig 10 ( c ) depicts , a large number of invariants between secondary load and other devices are broken . This is due to the disconnection of the secondary load . It should be noted that measurements of the secondary load were among the top five anomalies returned by our outlier ranking method . Also , the number of remaining invariants between devices are shown in Fig 11 ( b ) and ( c ) .
Figure 12 shows some examples of anomalies in the microgrid system . Each figure shows a pair of time series that under normal condition are invariant . Abnormal conditions are shown in darker colors . The gap between occurrence of anomalies and normal time series depicts the time difference between them . As an example , Fig 12 ( a ) shows the detection of sudden change in the red curve which is the State of Health ( SOH ) of the battery . This change is detected using the broken link between SOH and Reactive power in Channel C of the PMU . Detecting such anomalies is crucial for microgrid operators .
It should be noted that since we do not know the labeling of real dataset , we are unable to evaluate our method using precision and recall metrics . Nevertheless , we calculated precision and recall under different scenarios . As an example , when 10 nodes have random injected noise , by looking at the top 10 ranked results , precision and recall were equal . This value is 0.51 for the ARX method , whereas for ARX + LFRX , it is 068 6 . RELATED WORK Smart Grid and Power System Analytics : Power grids comprise a large number of elements and processes that are highly dynamic and complex . Traditionally power system operational studies are primarily based on a quasi steady state assumption , with static and explicit models that largely ignores dynamic characteristics of loads and control devices . The classic weighted least square ( WLS ) estimator , combined with methods such as largest normalized residual test and hypothesis testing identification , is extensively used for system diagnosis and outlier identification [ 2 ] . Recent developments in smart grids have revealed to us insight into stochastic operating behaviors and dynamics that we were never able to observe before . In particular , the widespread deployment of smart meters , renewable generation , smart load controls , energy storage , and plug in hybrid vehicles will require fundamental
Weather Air Cooling PMU PV Battery Primary Load Secondary Load Weather Air Cooling PMU PV Battery Primary Load Secondary Load Secondary Load Weather Air Cooling PMU PV Battery Primary Load 2016 ( a )
( b )
( c )
Figure 11 : ( a ) Invariant graph of inter devices of microgrid ( ARX + LFRX ) ( b ) Outlier happens when additional device is switched off/on in the system ( c ) Outlier happens when secondary load is disconnected .
( a )
( d )
( b )
( e )
( c )
( f )
Figure 12 : Invariant time series at normal and abnormal conditions : ( a ) Reactive power Channel C vs . State of Health of Battery ( b ) Power factor vs . Voltage of channel A in PMU ( c ) Outside temperature vs . Power Factor of primary load ( d ) Battery Current vs . Inverter output voltage ( e ) Peak voltage of secondary load vs . Power factor ( f ) Current magnitude of Channel A vs . Peak power of primary load . changes in the operational concepts and principal components of the grid , in order to achieve real time operation and control .
Fraud detection and particularly detection of energy theft is one of most important concerns in the smart grid [ 18 , 22 ] . Data analytic methods can play an important role in identifying abnormal consumption trends and possible malicious activities in such systems . Daisuke et al . [ 22 ] used ARMA and LOF methods in an adversarial environment to detect attacks in data collected using advanced meter infrastructure ( AMI ) . Rong et al . [ 18 ] compared classification based , state based , and game theory based methods in energy theft detection schemas .
One area that has witnessed significant developments is in the use of phasor measurement units ( PMUs ) . Chen et al . [ 7 ] use PCA for online monitoring of PMU data for the purpose of early event detection . Khan et al . [ 20 ] proposed a parallel fluctuation approach using MapReduce techniques . At the lower level , Momtazpour et al . [ 23 ] proposed an integrated data driven framework to study the behavior of battery systems in microgrids using clustering , regression , and spectral clustering of time series for the purposes of high level characterization of usage behavior and online parameter estimation .
Invariant Discovery and Structure Learning : Sharma et al . [ 27 ] used ARX for invariant discovery in distributed systems and discussed the challenges in fault localization for data centers . Shan et al . [ 26 ] have extracted overlay invariants based on pairwise invariant networks for fault detection and capacity planning in distributed systems . Due to the time complexity of invariant discovery of large scale systems , Ge et al . [ 13 ] developed an effective pruning techniques based on the identified upper bounds . In some applications , the existence of anomalies in invariant graphs yields many broken links which makes it difficult for a system expert to manually inspect each broken link . Hence , Ge et al . in [ 12 ] proposed two different methods of ranking metrics according to the anomaly levels occurring in invariant networks .
In a closely related area , viz . causal modeling of time series data , Arnold et al . [ 4 ] used the concept of Granger causality to infer the structure of the causal network given set of time series . These authors compared performance of the exhaustive Granger method and a Lasso Granger method with benchmark methods including the VAR and SIN methods . However , in [ 4 ] , the main goal was to construct causal graphs instead of addressing data with correlated variables . Subsequently , Liu et al . [ 21 ] used a hidden Markov random field regression framework to infer temporal causal structures .
PMUPVBatteryPrimary LoadSecondary LoadWeatherAir CoolingPMUPVBatteryPrimary LoadSecondary LoadWeatherAir CoolingPMUPVBatteryPrimary LoadSecondary LoadWeatherAir Cooling8001000120014001600180020002200−25−2−15−1−050051152TimeNormalized measurements8001000120014001600180020002200−15−1−050051152TimeNormalized measurements800100012001400160018002000−25−2−15−1−050051152TimeNormalized measurements8001000120014001600180020002200−5−4−3−2−101234TimeNormalized measurements8001000120014001600180020002200−14−12−10−8−6−4−202TimeNormalized measurements8001000120014001600180020002200−2−10123456TimeNormalized measurements2017 Cheng et al . [ 8 ] use time order relationships to capture temporal dependence structures underlying multivariate time series .
Anomaly Detection in Graphs : Akoglu et al . [ 3 ] provide an extensive survey of anomaly detection methods in graphs spanning different settings : unsupervised , ( semi ) supervised approaches , static , dynamic , attributed , and plain graphs . In dependency graphs , for the purpose of anomaly detection , Ide et al . [ 15 ] used sparse structure learning to compute correlation anomaly scores of each variable using neighborhood selection approaches .
7 . CONCLUSION
Invariant discovery is an exciting research field which aims to discover underlying relationships in cyber physical systems . We used latent factor regression analysis and combined it with the ARX model ( ARX + LFRX ) to recover underlying direct and indirect relationships . These invariants are helpful in decision making and monitoring processes such as outlier detection . We tested our models on several datasets and results showed that with the help of latent factors , the accuracy of discovered invariants was higher than traditional methods . Investigating other topologies involving latent variables ( such as a mesh network ) and heuristic search algorithms to reduce the computational complexity are some of the directions for future research .
8 . REFERENCES [ 1 ] Intel Lab Data . http://selectcscmuedu/data/ labapp3/index.html , 2008 . [ Online ; accessed 03 June 2015 ] .
[ 2 ] A . Abur and A . G . Exposito . Power system state estimation :
Theory and implementation . Marcel Dekker , 2004 .
[ 3 ] L . Akoglu , H . Tong , and D . Koutra . Graph based anomaly detection and description : A survey . Data Min . and Knowl . Disc . , 28(4 ) , 2014 .
[ 4 ] A . Arnold , Y . Liu , and N . Abe . Temporal causal modeling with graphical granger methods . In Proc of KDD’07 , pages 66–75 . ACM , 2007 .
[ 5 ] H . Chen et al . Exploiting local and global invariants for the management of large scale information systems . In Proc ICDM’08 , pages 113–122 , 2008 .
[ 6 ] H . Chen , G . Jiang , K . Yoshihira , and A . Saxena . Invariants based failure diagnosis in distributed computing systems . In Proc . IEEE Symp on Reliable Distributed Systems , pages 160–166 , 2010 .
[ 7 ] Y . Chen , L . Xie , and P . Kumar . Dimensionality reduction and early event detection using online synchrophasor data . In Power and Energy Society General Meeting ( PES ) , 2013 IEEE , pages 1–5 , July 2013 .
[ 8 ] D . Cheng , M . T . Bahadori , and Y . Liu . Fblg : A simple and effective approach for temporal dependence discovery from time series data . In Proc KDD’14 , pages 382–391 , 2014 .
[ 9 ] J . C . F . De Winter and D . Dodou . Common factor analysis versus principal component analysis : a comparison of loadings by means of simulations . Communications in Statistics Simulation and Computation , June 2014 .
[ 10 ] A . Deshpande , C . Guestrin , S . Madden , J . Hellerstein , and
W . Hong . Model driven data acquisition in sensor networks . In Proc . Int Conf on VLDB , 2004 .
[ 11 ] M . Ding , H . Chen , A . Sharma , K . Yoshihira , and G . Jiang . A data analytic engine towards self management of cyber physical systems . In Proc IEEE ICDCSW’13 , pages 303–308 , 2013 .
[ 12 ] Y . Ge , G . Jiang , M . Ding , and H . Xiong . Ranking metric anomaly in invariant networks . ACM Trans . Knowl . Discov . Data , 8(2):8:1–8:30 , June 2014 .
[ 13 ] Y . Ge , G . Jiang , and Y . Ge . Efficient invariant search for distributed information systems . In Proc . ICDM’13 , pages 1049–1054 , 2013 .
[ 14 ] H . Harman . Modern Factor Analysis . University of Chicago
Press , Chicago , 3rd ed . edition , 1976 .
[ 15 ] T . Ide , A . C . Lozano , N . Abe , and Y . Liu . Proximity based anomaly detection using sparse structure learning . In Proc SDM’09 , 2009 .
[ 16 ] G . Jiang , H . Chen , and K . Yoshihira . Discovering likely invariants of distributed transaction systems for autonomic system management . Cluster Computing , 9(4):385–399 , Oct . 2006 .
[ 17 ] G . Jiang , H . Chen , and K . Yoshihira . Efficient and scalable algorithms for inferring likely invariants in distributed systems . IEEE Trans . on Knowl . and Data Eng . , 19(11):1508–1523 , Nov . 2007 .
[ 18 ] R . Jiang , R . Lu , Y . Wang , J . Luo , C . Shen , and X . S . Shen .
Energy theft detection issues for advanced metering infrastructure in smart grid . Tsinghua Science and Technology , 19(2):105–120 , April 2014 .
[ 19 ] K . Joreskog . Some contributions to maximum likelihood factor analysis . Psychometrika , 38(2):183–202 , 1967 .
[ 20 ] M . Khan , M . Li , P . Ashton , G . Taylor , and J . Liu . Big data analytics on pmu measurements . In Proc Int Conf on FSKD’14 , pages 715–719 , Aug 2014 .
[ 21 ] Y . Liu , A . Niculescu mizil , A . C . Lozano , and Y . Lu .
Learning temporal causal graphs for relational time series analysis . In Proc ICML’10 , pages 687–694 , 2010 .
[ 22 ] D . Mashima and A . A . Cardenas . Evaluating electricity theft detectors in smart grid networks . In Research in Attacks , Intrusions , and Defenses , volume 7462 of Lecture Notes in Computer Science , pages 210–229 . 2012 .
[ 23 ] M . Momtazpour , R . Sharma , and N . Ramakrishnan . An integrated data mining framework for analysis and prediction of battery characteristics . In Proc IEEE ISGT Asia’14 , pages 774–779 , 2014 .
[ 24 ] K . J . Preacher , G . Zhang , C . Kim , and G . Mels . Choosing the optimal number of factors in exploratory factor analysis : A model selection perspective . Multivariate Behavioral Research , 48:28–56 , 2013 .
[ 25 ] I . Shafer , K . Ren , V . N . Boddeti , Y . Abe , G . R . Ganger , and C . Faloutsos . Rainmon : An integrated approach to mining bursty timeseries monitoring data . In Proc KDD’12 , pages 1158–1166 , 2012 .
[ 26 ] H . Shan , G . Jiang , and K . Yoshihira . Extracting overlay invariants of distributed systems for autonomic system management . In Proc IEEE Int Conf on Self Adaptive and Self Organizing Systems , pages 41–50 , 2010 .
[ 27 ] A . Sharma , H . Chen , M . Ding , K . Yoshihira , and G . Jiang .
Fault detection and localization in distributed systems using invariant relationships . In Proc IEEE Int Conf on DSN’13 , pages 1–8 , 2013 .
[ 28 ] A . B . Sharma , F . Ivancic , A . Niculescu Mizil , H . Chen , and G . Jiang . Modeling and analytics for cyber physical systems in the age of big data . SIGMETRICS Perform . Eval . Rev . , 41(4):74–77 , Apr . 2014 .
[ 29 ] D . Suhr . Principal component analysis vs . exploratory factor analysis . In Proceedings of SUGI 30 , pages 203–30 , 2005 .
2018
