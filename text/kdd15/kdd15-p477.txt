Structured Hedging for Resource Allocations with
Leverage
Nicholas Johnson
Department of Computer Science and
Engineering
University of Minnesota njohnson@csumnedu
Arindam Banerjee
Department of Computer Science and
Engineering
University of Minnesota banerjee@csumnedu
ABSTRACT Data mining algorithms for computing solutions to online resource allocation ( ORA ) problems have focused on budgeting resources currently in possession , eg , investing in the stock market with cash on hand or assigning current employees to projects . In several settings , one can leverage borrowed resources with which tasks can be accomplished more efficiently and cheaply . Additionally , a variety of opposing allocation types or positions may be available with which one can hedge the allocation to alleviate risk from external changes . In this paper , we present a formulation for hedging online resource allocations with leverage and propose an efficient data mining algorithm ( SHERAL ) . We pose the problem as a constrained online convex optimization problem . The key novel components of our formulation are ( 1 ) a loss function for general leveraging and opposing allocation positions and ( 2 ) a penalty function which hedges between structurally dependent allocation positions to control risk . We instantiate the problem in the context of portfolio selection and evaluate the effectiveness of the formulation through extensive experiments on five datasets in comparison with existing algorithms and several variants .
Categories and Subject Descriptors H28 [ Database Management ] : Database Applicationsâ€” Data mining
Keywords Online learning ; Structured learning ; Finance
1 .
INTRODUCTION
Online Resource Allocation ( ORA ) problems are ubiquitous in modern data mining with problems ranging from investment of resources to a variety of assets , such as investing money in the stock market , to modern systems level challenges , such as job scheduling in compute clusters . Increasingly , such problems need to be solved dynamically and repeatedly in response to external changes , eg , movements in the stock market , new jobs for compute servers , etc .
Algorithms for ORA problems have focused on budgeting resources that are currently in possession [ 9 , 10 , 11 , 15 , 18 ] . For example , financial trading algorithms only invest in the stock market using the current cash on hand . However , in several settings there are opportunities to borrow additional resources at cost of a certain interest rate to use as leverage to increase returns . For example , a trader can invest with borrowed cash from a bank with the obligation to pay back the loan plus interest at a later date . Many data mining problems can more efficiently and cheaply be solved when leverage is used , however such leveraged allocations are risky since gains and losses are magnified .
Moreover , several ORA problems allow different allocation types or positions . For instance , when investing in the stock market , one can take a long position by purchasing shares in a company with cash on hand . Profit is made when the price of the shares increases . Additionally , one can take a short position by borrowing shares and selling them on the market at a price X and later purchasing them at a price Y and returning them . Profit is made when the price of purchasing them back is less than the price of selling them , Y < X , ie , the price of the shares decreases . When such ORA problems allow opposing allocation positions , one can strategically invest in both positions to reduce risk . This is often referred to as hedging and can be done by mining and utilizing correlation structures between assets to hold opposing positions in similar assets to withstand market crashes . In this paper , we present a novel data mining formulation and algorithm for hedging online resource allocations with leverage ( SHERAL ) . The formulation considers opposing long and short positions over assets such as stocks . The key novel components of our formulation are ( 1 ) a loss function for general leveraging and structurally dependent allocation positions and ( 2 ) a penalty function which encourages hedging between structurally dependent assets to control risk . We pose the problem as a constrained online convex optimization problem and instantiate it in the context of financial data mining where one has to compute a portfolio of stocks to invest in each day .
When starting with the simple portfolio selection algo rithm Exponentiated Gradient ( EG ) [ 13 ] , we show that adding leveraged long only positions leads to orders of magnitude improvements in wealth gain , and adding both long and short positions with leverage leads to even more improvements . The results are consistent across multiple datasets ,
477 and SHERAL outperforms several existing methods for the portfolio selection problem .
We arrange the rest of the paper as follows . In Section 2 we discuss related work . In Section 3 we introduce our structured hedging formulation . In Section 4 we introduce portfolio selection and describe the position types and leveraging setting . In Section 5 we instantiate the formulation to portfolio selection , and introduce the algorithm . In Section 6 we discuss the experimental results and conclude in Section 7 .
2 . RELATED WORK
In the context of online portfolio selection , few papers have considered leverage [ 1 , 4 , 13 ] through buying on margin . However , this was simulated after the fact and not considered in their problem setting .
One attempt at including leverage and long/short positions in the problem setting was recently presented in [ 12 ] . A few preliminary experiments on one dataset were presented to illustrate their formulation worked . However , they did not consider the structural dependencies between positions or utilize such structure to control risk .
Additionally , little work in online portfolio selection has been done to consider risk in the algorithmic setting [ 6 , 14 ] . However , previous work [ 1 , 3 , 4 , 5 , 7 , 8 , 13 ] have shown their algorithms are guaranteed to perform competitively with certain families of adaptive portfolios even in an adversarial market in a costless setting without making any statistical assumptions regarding the movement of the stocks . We build off of the setting in [ 12 ] by introducing a framework with key changes to the loss function and constraint set to allow more flexible long and short portfolios and to consider structured hedging to alleviate risk in addition to thoroughly exploring the affect similar features have on existing algorithms in the literature .
3 . HEDGED RESOURCE ALLOCATIONS In this section , we introduce a framework for structured hedging with leverage , and consider the online resource allocation problem under such structured hedging . In Section 5 , we consider the online portfolio selection problem as an instance of such hedged resource allocation . 3.1 Hedging and Leverage
In many resource allocation problems , one may benefit from borrowing additional resources to increase allocation power . For example , in finance , one often buys on margin which is the act of buying shares of stock using cash that is borrowed . This is achieved by putting some amount of cash into a margin account , which acts as collateral c , after which the bank loans additional cash . When one borrows cash , interest is charged on the loan which is often represented as a percentage of the loan size , eg , a daily interest rate of r = 0.000245 which is equivalent to an annual rate of 0063 In finance , the borrowed cash used to increase potential return is often referred to as leverage .
In addition to leverage , there are often opposing allocation types or positions one may take . For instance , one can budget a fraction of the resource to an object , eg , using cash to buy shares of stock . In finance , this is what is often referred as holding a long position in an asset . One will profit in a long position if the value of the allocation increases , ie , the stock price increases .
In contrast , one can choose an opposing type of allocation where one will profit if the value of the allocation decreases . In finance , one such type of allocation is called a short position , which is when one allocates a borrowed resource . One obtains a short position by placing collateral c , such as cash , into a margin account after which a resource , such as shares of a stock , is borrowed with the obligation to return it later at its current value . Often interest is charged on the borrowed resource rb and may be earned on the collateral rc , however in this paper we assume the interest on the borrowed resource , collateral , and cash leverage are the same , ie , rb = rc = r . We also assume that the value of the collateral c is equal to the value of the resource borrowed .
More specifically , a trader places X amount of cash as collateral into a margin account and then the bank borrows the trader shares of stock worth X . The trader then sells the shares at the current market price ( presumably X ) . After the market moves , the trader purchases the shares back at the new market price Y and returns them to the bank . The trader profits if the purchase price is less than the selling price , ie , Y < X .
Long and short positions act in opposition and are most frequently utilized to offset the risk of a particular allocation . For example , if two stocks s1 and s2 are positively correlated but highly volatile , then a trader may hold a long position in s1 and a short position in s2 . The trader is exposed to less risk with this allocation because if both stocks crash then the trader will not lose as much since there will be a loss in the long position s1 but a gain in the short position s2 . This is often referred to as hedging and the difficulty is in taking advantage of the structural dependencies between assets to balance high returns and exposure to risk .
3.2 Structured Hedging
We consider structure in resource allocation problems in the form of a graph over the assets . For n objects , the goal is to find an allocation p âˆˆ P âŠ‚ R2n which determines how to split up a resource amongst long and short positions over the n objects such that a certain ( convex ) objective f ( p ) is minimized . We denote the set of indices = {1 , . . . , n} and s = {n + 1 , . . . , 2n} as the long and short positions in p and let D and Ds be 2n Ã— 2n diagonal matrices with D(i , i ) = 1 for i âˆˆ and Ds(i , i ) = 1 for i âˆˆ s and 0 otherwise . Let q = Dp â‰¥ 0 and qs = Dsp â‰¤ 0 where the inequalities are taken element wise . q and qs are the longonly and short only vectors of size 2n Ã— 1 with value equal to p for indices in and s respectively and 0 otherwise .
For example , in the context of portfolio selection , the n objects can be different assets , such as stocks , and p is an investment strategy , ie , what fraction of one â€™s total resources ( say , money ) should one put on each asset ( stock ) . The basic idea of hedging is to place resources in opposing positions and different assets . A simple way to accomplish this is to select a set of assets to hold long positions and another set of assets to hold short positions . A potential issue with such an approach is that there may be structural dependencies between the assets , such as being negatively correlated , which may result in losing every position held .
For example , Apple and Costco may be negatively correlated because Apple sells luxury items and Costco sells consumer staples . Since companies that sell luxury items are cyclical , ie , share price is positively correlated with economic conditions , the purchases of luxury items often
478 slows during market crashes . In contrast , companies that sell consumer staples are non cyclical and the purchases of consumer staple items does not slow during market crashes . Therefore , if we hold a long position in Apple and a short position in Costco during this time , we will lose in both positions .
Such structure is often hard to determine a priori and represent simply such as in groups of assets , ie , market sectors . We can more easily capture relationships between assets via a graph where the value of the edges determines how similar the assets are . Similarity can be any suitable measure of correlation such as linear correlation , Rank correlation , etc . The goal of structured hedging is to develop hedged strategies which explicitly consider such graph structured assets .
321 Hedging Penalty Function For the development , we assume knowledge of the structured graph G = ( V , E ) where V = {v(1 ) , . . . , v(n)} are the nodes and E = {e(1 ) , . . . , e(m)} are the edges where e(k ) = ( v(i ) , v(j ) ) if there is an edge between nodes i and j . Let the weight on edge e(k ) be Wij âˆˆ R , then W âˆˆ RnÃ—n is the graph â€™s weighted adjacency matrix with Wij = 0 if there is no edge between nodes i and j . We outline approaches for constructing such a graph directly from the data in Section 5 in the context of portfolio selection . Given such a graph and long/short position vectors q , qs âˆˆ R2n where the long position of asset i is contained in index i of q and the short position of asset i is contained in the index i + n of qs , we introduce a hedging penalty function n
2n
â„¦h =
Wij ( q(i ) + qs(j))2
( 1 ) i=1 j=1+n j=i+n where Wij is a measure of the similarity between assets i and j and q(i ) â‰¥ 0 and qs(j ) â‰¤ 0 are the value of the asset positions . We seek to minimize â„¦h , so when Wij is large , we minimize â„¦h by making the value of the assetsâ€™ opposing positions close , effectively encouraging hedging . When Wij is small , the assets are not similar so the assetsâ€™ position values do not need to be close and we do not hedge .
One key aspect of hedging is that we want to hold opposite positions in different but structurally related assets rather than the same asset since this is similar to holding only the difference between the positions . ( 1 ) is designed to do this by ( i ) taking into account the structural dependencies between assets in G and ( ii ) only considering edges between opposing positions in different assets . In other words , we do not consider the difference between q(i ) and q(j ) ( same position type , different assets ) or the difference between q(i ) and qs(i ) ( different position type , same assets ) .
One benefit of our quadratic hedging function ( 1 ) is that we are able to capture the interaction between different asset positions which provides more flexibility in responding to asset fluctuations in addition to considering just the correlation between assets . We can consider other hedg , ing penalty functions , eg,n
2n
Wij
1 q(i)âˆ’qs(j ) i=1 j=1+n j=i+n however such a function does not capture the position interactions . Additionally , such functions may not reflect a true hedging strategy since the function can be minimized by making one position large while leaving the other small . One limitation of ( 1 ) is that when there are two identical as sets , this form will encourage both long positions and short positions to be similar across assets .
We can represent ( 1 ) in a more compact form by considering a graph over the 2n positions instead of the n assets . Let Gp = ( Vp , Ep ) be a graph over the positions where Vp = {v(1 ) , vs(1 ) , . . . , v(n ) , vs(n)} are the nodes , ie , v(i ) is the node for the long position of asset i and vs(i ) is the node for the short position of asset i . We can construct the set of edges Ep and their corresponding weights Uij from G by considering assets i and j that are connected by edge e(k ) with weight Wij . We add an edge to Ep between nodes v(i ) and vs(j ) with weight Wij and an edge between nodes vs(i ) and v(j ) with weight Wij . In other words , we only connect the opposing position nodes between the different assets and the corresponding edges will have the same weight as the weight between the assets .
Under this construction we can similarly define Gp â€™s weighted
âˆˆ R2nÃ—2n , which is symadjacency matrix U = metric since W is symmetric . Let D âˆˆ R2nÃ—2n be a diagonal matrix with D(i , i ) = j Uij and 0 otherwise , then
W 0
0 W
L = D + U
( 2 ) which is also symmetric and positive semi definite by design . Then , by construction n
2n p
Lp =
Wij ( q(i ) + qs(j))2 .
( 3 ) i=1 j=1+n j=i+n
Thus , for the purposes of structured hedging in resource allocation , we will consider problems of the form min pâˆˆP ( p ) + Î²â„¦h(p )
( 4 ) where â„¦h(p ) = pLp and Î² â‰¥ 0 . 3.3 Online Resource Allocation
Several resource allocation problems need to be solved online , ie , dynamically over time . Such a problem can be modeled as an online optimization problem with objective function ft(p ) at time t . In such an online setting , the optimization proceeds in rounds where in round t the algorithm has to pick a solution from a feasible set , pt âˆˆ P , without knowing ft(Â· ) and incur a loss of ft(pt ) . Thus , the problem at time t takes the form min pâˆˆP t(p ) + Î²â„¦h(p )
( 5 ) where t denotes a suitable resource allocation loss . Ideally , we would like to minimize the constrained cumulative loss
T t=1
T t=1 t(pt ) + Î²â„¦h(pt ) .
( 6 )
However , in the online setting , minimization of ( 6 ) is not feasible since we do not know the sequence of t a priori . Alternatively , over T rounds we intend to get a sequence of pt such that the following regret is sub linear in T
RT = ft(pt ) âˆ’ min pâˆ—
âˆ—
) â‰¤ o(T ) ft(p
( 7 )
T t=1 where ft(p ) = t(p ) + Î²â„¦h(p ) . The regret is measured wrt the best fixed minimizer in hindsight pâˆ— .
479 Following recent advances in online convex optimization , in order to accomplish a sub linear regret , in each step ( t+1 ) , we consider solving a linearized version of ( 5 ) obtained by a first order Taylor expansion of t at pt along with a proximal term , so that pt+1 = argmin pâˆˆP p,âˆ‡t(pt ) + Î²â„¦h(p ) + d(p , pt ) ,
( 8 ) where d(p , pt)= 1 2Î·t p âˆ’ pt2
2 and parameters Î·t , Î² â‰¥ 0 .
4 . ONLINE PORTFOLIO SELECTION
We consider a stock market consisting of n stocks {s1 , . . . , sn} over a span of T periods . For ease of exposition , we will consider a period to be a day , but the analysis presented holds for any valid definition of a â€˜periodâ€™ such as an hour or a month . Let xt(i ) denote the price relative of stock si in day t , ie , the multiplicative factor by which the price of si changes in day t . Hence , xt(i ) > 1 implies a gain , xt(i ) < 1 implies a loss , and xt(i ) = 1 implies the price remained unchanged . We assume , xt(i ) > 0 âˆ€ i , t . Let Ë†xt = [ xt(1 ) , . . . , xt(n ) ] denote the vector of price relatives for day t , let xt = [ Ë†xt , Ë†xt ] be the double stacked vector of price relatives , and let x1:t denote the collection of such price relative vectors up to and including day t . A portâˆˆ P where the folio on day t is pt = [ pt(1 ) , . . . , pt(2n ) ] first || elements are long only positions , ie , pt(i ) â‰¥ 0 and the last |s| elements are short only positions , ie , pt(i ) â‰¤ 0 which prescribes investing pt(i ) fraction of the total wealth , including leverage , in stock si . Note that the portfolio pt has to be decided before knowing xt which will be revealed only at the end of the day . 4.1 Long Only Portfolios
For long only portfolios q â‰¥ 0 without leverage , the multiplicative gain in wealth at the end of day t is q xt . When we allow borrowing cash from the bank as leverage we have xt q
+ ( 1 âˆ’ q
1)(1 + r )
.
( 9 ) market change in wealth cash borrowed or not invested
The last term accounts for the percentage of our current wealth we borrowed from the bank or wealth not invested . If we did not borrow any cash then 0 â‰¤ ( 1 âˆ’ q 1 ) â‰¤ 1 and any cash not invested is considered as being held in a savings bank account which earns interest at of rate of r . If we did borrow cash , then this term is negative and is the amount we have to pay back to the bank plus interest r .
When we allow borrowing cash , we have to be careful about owing more money than we have left at the end of any day in order to avoid financial ruin . For instance , if we invest long with leverage and the market crashes , we may have no money left to pay back the bank loan . In order to guarantee no ruin , we make an assumption on the price relatives similar to [ 12 ] such that 0 < 1 âˆ’ B < xt where B is a parameter that can be set based on historical stock B+r . data . Then the maximum amount we can invest is We prove that this will not lead to negative growth rate in the following proposition .
1+r
Proposition 1 . For a long only portfolio q such that q â‰¥ B+r , and with bounded price relatives 0 < 1 âˆ’ 1)(1+r ) â‰¥ 0 .
0 , q1 â‰¤ 1+r B < xt , the multiplicative gain q xt +(1âˆ’q
Proof . For ease of exposition , let us consider only a single investment so q âˆˆ R+ . Then in the worst case we have xt + ( 1 âˆ’ q q 1)(1 + r ) â‰¥ 1 + r B + r
( 1 âˆ’ B ) +
1 âˆ’ 1 + r B + r
( 1 + r )
= 0 .
4.2 Short Only Portfolios
For short only portfolios qs â‰¤ 0 without cash leverage , the multiplicative gain in wealth at the end of day t consists of the difference between the price value of shares borrowed q s 1 and the price the shares are now worth q s xt minus the interest owed on borrowing the shares plus the collateral c and interest on collateral r . In this paper , we assume the interest rate for borrowing cash/shares is the same as the interest rate earned for keeping cash and collateral in a margin account . Additionally , the total value of shares borrowed is equal to the collateral put down , ie , qs1 = c . s ( xt âˆ’ 1 ) + Therefore , the multiplicative gain in wealth is q s 1r âˆ’ q q s 1(1 + r ) . When we allow borrowing cash from the bank as leverage we have q s ( xtâˆ’1 )
+ s 1r q
+ ( 1+q s 1)(1+r )
âˆ’ q s 1(1 + r )
. market change in wealth interest owed on borrowed shares cash borrowed or not invested collateral and interest earned
Re arranging the terms we get q s ( xt âˆ’ 1 ) + q
= q s 1)(1 + r ) âˆ’ q s 1r + ( 1 + q s 1(1 + r ) s ( xt âˆ’ 1 + r ) + ( 1 + r ) .
( 10 )
1+r
Similar to long only portfolios , in order to guarantee no ruin we assume xt < 1 + Bs < âˆž . Then the maximum amount Bs+r . We prove that this will not lead to we can invest is negative growth rate in the following proposition . Proposition 2 . For a short only portfolio qs such that qs â‰¤ Bs+r , and with bounded price relatives xt < 1 + s ( xtâˆ’ 1 + r ) + ( 1 + r ) â‰¥ 0 . Proof . For ease of exposition , let us consider only a single investment so qs âˆˆ Râˆ’ . Then in the worst case we have
0 , qs1 â‰¤ 1+r Bs < âˆž , the multiplicative gain qT s ( xt âˆ’ 1 + r ) + ( 1 + r ) qT â‰¥ âˆ’ 1 + r Bs + r
( (1 + Bs ) âˆ’ 1 + r ) + ( 1 + r )
= 0 .
4.3 Long and Short Portfolios
For portfolios that allow both long and short positions with leverage , the multiplicative gain in wealth at the end of the day t will combine ( 9 ) and ( 10 ) to get xt + ( 1 âˆ’ q
1)(1 + r ) + q s ( xt âˆ’ 1 + r ) + ( 1 + r ) . q
However , we have counted the amount of cash borrowed or not invested plus interest twice since both were included individually in ( 9 ) and ( 10 ) so we subtract ( 1 + r ) to get xt + q s ( xt âˆ’ 1 + r ) + ( 1 âˆ’ q
1)(1 + r ) . q
( 11 )
Unlike in [ 12 ] , we do not assume B = Bs since bear and bull markets tend to not be symmetrical . Therefore , we
480 Algorithm 1 SHERAL Algorithm 1 : Input pt , xt , Î· , Î±1 , Î±2 , Î» , B , Bs , r , D , Ds,G . 2 : Compute weighted adjacency matrix L via ( 2 ) . 3 : Compute portfolio for day t + 1 : ( Î·âˆ‡t(pt ) + pt )
Î»(L + L pt+1 =
) + I
âˆ’1
P is where âˆ‡t(pt ) and pâˆˆP is a projection to the convex set P = p| Dp â‰¥ 0 , Dsp â‰¤ 0 , aT p â‰¤ 1+r alternating projections . defined
( 14 )
B+r via as in
Bs+r define a hyperplane that guarantees no ruin for a portfolio with a combination of long and short positions as q1 + B+r qs1 â‰¤ 1+r B+r . Since qs â‰¤ 0 , we can define a vector a such that the first || elements are equal to 1 and the last |s| elements are equal to âˆ’ Bs+r B+r , so the constraint on maximum investment as a combination of long and short positions is ap â‰¤ 1+r B+r . We prove that this will not lead to negative growth rate in the following proposition .
Proposition 3 . For a long and short portfolio p = q + qs such that q â‰¥ 0 , qs â‰¤ 0 , ap â‰¤ 1+r B+r , and with bounded price relatives 0 < 1 âˆ’ B < xt < 1 + Bs < âˆž , the multi
1)(1 + r ) â‰¥ 0 . plicative gain q Bs+râˆ’ B+r Bs+r u
Proof . Setting u=q1 implies qsâ‰¤ 1+r s ( xt âˆ’ 1 + r ) + ( 1âˆ’ q xt + q
.
Then in the worst case we have s ( xt âˆ’ 1 + r ) + ( 1 âˆ’ q q xt + q â‰¥ u(1âˆ’B)âˆ’
1+r
Bs+r
âˆ’ B+r Bs+r u
1)(1 + r ) ( (1+Bs)âˆ’1+r)+(1âˆ’u)(1+r )
= 0 .
Therefore , the multiplicative gain in wealth at the end of day t for a leveraged portfolio with long and short positions is ( 11 ) which , in the worst case , is non negative . This ensures we have enough money left over after the market moves to pay back all loans . Given this , and a sequence of price relatives x1:tâˆ’1 = {x1 , . . . , xtâˆ’1} up to day ( t âˆ’ 1 ) , the sequential portfolio selection problem in day t is to determine a portfolio pt based on past performance of the stocks . At the end of day t , xt is revealed and the actual performance of pt gets determined by ( 11 ) . Over T periods , for a sequence of portfolios p1:T = {p1 , . . . , pT} , the multiplicative and logarithmic gain in wealth are
ST ( p1:T , x1:T )= xt+q s ( xtâˆ’1+r)+(1âˆ’q
1)(1+r ) q
LST ( p1:T ,x1:T )= log q xt+q s ( xtâˆ’1+r)+(1âˆ’q
1)(1+r ) t=1
Ideally , for a costless environment ( no transaction costs ) we would like to maximize LST ( p1:T , x1:T ) over p1:T . However , xt is not available when one has to decide on pt . Therefore , we will use LSt(pt , xt ) as the loss function t in ( 8 ) .
T T t=1
Algorithm 2 Hedging for Online Portfolio Selection 1 : Input Î· , Î±1 , Î±2 , Î» , B , Bs , Interest rate r , Transaction cost Î³ , Days lag Î´ .
0 = $1 and
Receive the vector of price relatives : xt .
1+(Bs+r)/(B+r ) âˆ€i ( uniform over positions ) .
2 : Set SÎ³ 3 : p0:1(i ) = ( 1+r)/(B+r ) 4 : For t = 1 , . . . , T 5 : 6 : Compute multiplicative gain in wealth via ( 11 ) as Î¨t . 7 : 8 : 9 : 10 : 11 : 12 : 13 : end for
Compute wealth : SÎ³ If t â‰¤ Î´ pt+1 = pt ( uniform over positions ) . Else Compute graph : G . pt+1=SHERAL(pt,xt,Î·,Î±1,Î±2,Î»,B,Bs , r,D,Ds,G ) . tâˆ’1 ( Î¨t âˆ’ Î³pt âˆ’ ptâˆ’11 ) . t =SÎ³
5 . HEDGING PORTFOLIO SELECTION
Î±1q xt+Î±2q s ( xt âˆ’ 1 + r)+(1 âˆ’ q
Online portfolio selection can now be viewed as a special case of our online resource allocation with structured hedging setting with t(pt)=âˆ’ log
1)(1 + r ) where Î±1 , Î±2 â‰¥ 0 are parameters that control the importance of long and short positions respectively . Note , if both long and short positions are valued equally , Î±2 > Î±1 since the scale of the position returns differ by a factor ( Refer to 6.4 ( c ) for an example ) . Letting Î·t = Î· and multiplying each term in ( 8 ) by Î· so that Î» = Î·Î² , the online portfolio selection with structured hedging problem is
Î·p,âˆ‡t(pt ) + Î»p
Lp + p âˆ’ pt2 2 .
1 2 min qâ‰¥0 qsâ‰¤0 apâ‰¤ 1+r B+r
This is a strongly convex optimization problem with the linear constraint set P = where q = Dp and qs = Dsp ( Section 32 ) p| q â‰¥ 0 , qs â‰¤ 0 , ap â‰¤ 1+r
B+r
We propose an efficient projected gradient descent algorithm for solving ( 12 ) . Since the objective in ( 12 ) is strongly convex we can find the minimum by taking the gradient , setting it to zero , and solving for p to get pt+1 =
( Î·âˆ‡t(pt ) + pt )
Î»(L + L
) + I
( 13 )
P
âˆ’1
( 12 ) where âˆ‡t(pt)=
Î±1p
Î±1D t D xt + Î±2D xt+Î±2p t D s ( xt âˆ’ 1 + r ) âˆ’ D s ( xtâˆ’1+r)+(1âˆ’p
1(1 + r ) t D and
1)(1+r ) ( 14 ) P is a projection onto the convex constraint set P . Algorithm 1 shows the complete details for computing the hedged portfolio . Algorithm 2 is our hedged online portfolio selection with leverage algorithm which includes computing the transaction cost adjusted wealth using a fixed percentage transaction cost Î³ . 5.1 Regret Bound
We sequentially invest with the hedged portfolios p1,Â·Â·Â· , pT obtained from Algorithm 2 and on day t suffer a loss of ft(pt ) = Î·t + Î»p t Lpt . Our goal is to minimize the regret
.
481 with respect to the best fixed portfolio pâˆ— in hindsight . We establish the standard regret bound in portfolio selection literature [ 1 , 4 , 13 ] .
Regret Bound 1 . Let pâˆ— âˆˆ P be the fixed portfolio obT and âˆ‡t(pt ) â‰¤ t=1 t(p ) . For Î· = tained from min
âˆš
T p
G , the regret can be bounded as ,
T
âˆš
âˆ—
) â‰¤ O( t(p
T ) ,
( 15 )
T
Î· t(pt)+Î»p t Lptâˆ’Î· t=1 t=1 where t is a strongly convex function and the sequence pt and the fixed optimal portfolio pâˆ— all lie in the constraint set P = p| Dp â‰¥ 0 , Dsp â‰¤ 0 , aT p â‰¤ 1+r
.
B+r
6 . EXPERIMENTS AND RESULTS 6.1 Datasets
The experiments were conducted on 5 datasets with data taken from : Dow Jones Industrial Average ( DJIA ) , New York Stock Exchange ( NYSE ) , Standard & Poor â€™s 500 ( S&P 500 ) , and the Toronto Stock Exchange ( TSX ) . The DJIA dataset [ 2 ] consists of 30 stocks and 507 trading days over a period of 2 years from 2001 to 2003 . The NYSE dataset consists of 36 stocks and 5651 trading days over a period of 22 years from 1962 to 1984 and has been widely used in the literature [ 1 , 2 , 4 , 13 ] . The S&P500a dataset [ 2 ] consists of 25 stocks and 1276 trading days over a period of 5 years from 1998 to 2003 which includes the dot com crash . The S&P500b dataset1 contains the most stocks with 263 and 505 trading days over a period of 2 years from 2007 to 2009 which includes the financial and housing crash . The TSX dataset [ 2 ] consists of 88 stocks and 1259 trading days over a period of 5 years from 1994 to 1998 .
The datasets are very different in nature where 25 out of the 30 stocks ( 83 % ) in the DJIA lost value , every stock in the NYSE increased in value , 7 of the 25 stocks ( 28 % ) in the SP500a lost value , 253 of the 263 stocks ( 96 % ) in SP500b lost value , and 32 out of the 88 stocks ( 36 % ) in TSX lost value . 6.2 Methodology and Parameter Setting
In all our experiments we start with $1 as our initial investment and an initial portfolio with maximum leverage uniformly distributed over all the positions . We use Algorithm 2 to obtain our portfolios sequentially and compute the transaction cost adjusted wealth each day .
Since the five datasets are very different in nature , we experimented with various parameter values using a grid search in the following ranges : Î´ âˆˆ {5 , 10 , . . . , 50} , and each of Î· , Î±1 , Î±2 , and Î» following a log scale in [ 10âˆ’6 , 103 ] to observe their affect on our portfolio and found stable behavior in these ranges . Moreover , we chose a reasonable range of transaction costs Î³ âˆˆ [ 0 % , 2 % ] to observed their affect on the transaction cost adjusted wealth .
Typical yearly margin interest rates are between 5 % and 8 % . For all experiments we set the daily interest rate r = 0.000245 which is equivalent to a yearly interest rate of 63 % Rates around 6.3 % have been used before in the literature [ 4 , 12 , 13 ] . For each dataset , we computed the parameters B and Bs to the nearest hundredth decimal place in hindsight ( Table 1 ) . In practice , one must use historical data 1http://www userscsumnedu/âˆ¼njohnson/port sel.html to compute such values , thus , no ruin guarantees can only be made probabilistically . Alternatively , one could develop online generalizations of Bayesian Optimization or suitable variants of parameter free online learning to avoid parameter setting in hindsight . 621 Constructing Structured Graph G In all our experiments , we construct the graph G by fully connecting each stock so every node has degree n âˆ’ 1 . We compute their similarity by calculating the linear correlation coefficient wij between each pair of stocks i and j using the previous Î´ days of price relatives to get the weighted adjacency matrix W âˆˆ RnÃ—n . The positional graph Gp was then constructed as in ( 2 ) . 6.3 Cumulative Wealth
To evaluate the practical application of SHERAL , we analyze the performance and compare several benchmark algorithms with parameters tuned for maximum cumulative wealth ( without transaction costs ) .
631 Leveraged Long and Short Effect on EG First , we take the well known algorithm EG [ 13 ] and observe its performance on the 5 datasets . To observe the affect that long and short positions with leverage have , we further experiment with variants of EG to allow : ( 1 ) longonly positions with leverage ( LO ) , ( 2 ) short only positions with leverage ( SO ) , and ( 3 ) long and short positions with leverage ( LS ) . p(i ) term , ie , d(p , pt ) =n ( p(i ) â‰¥ 0âˆ€i ,
EG Variants Formulation EG allows long only positions p â‰¥ 0 and uses the relative entropy function as the proximal where p âˆˆ âˆ†n = i p(i ) = 1 ) . Since we need to allow p(i ) â‰¤ 0
2p âˆ’ pt2 for short positions , we instead use d(p , pt ) = 1 2 . Additionally , we utilize the loss function defined in ( 11 ) . Essentially , the variant EG problem is i=1 p(i ) log pt(i )
2 min p âˆ’ pt2 pâˆˆP Î·p,âˆ‡t(pt ) + 1 2 where P = {p| q â‰¥ 0,q1 â‰¤ 1+r B+r} for LO , P = {p| qs â‰¤ 0,qs1 â‰¤ 1+r Bs+r} for SO , and P = {p| q â‰¥ 0 , qs â‰¤ 0 , ap â‰¤ B+r} for LS . We can see that this is a special case of ( 12 ) where Î» = 0 . Therefore , SHERAL is able to perform at least as good as the EG* variants .
( 16 )
1+r
Results The results are presented in Table 2 . From this table , we can see that the original EG is outperformed by at least one of the EG* variants in each dataset . Interestingly , when only adding leverage to EG , ie EG* ( LO ) , the performance improves substantially for the NYSE , SP500a , and TSX datasets . It seems that EG* ( LO ) is able to select the correct stocks and that increasing the investment power dramatically enhances the multiplicative gain in wealth .
DJIA NYSE SP500a 0.60 0.21
0.26 0.36
0.31 0.25
SP500b TSX 0.64 0.94
0.61 0.67
B Bs
Table 1 : Table of B and Bs values for each dataset .
482 EG
EG* ( LO ) EG* ( SO ) EG* ( LS )
SHERAL ( Î»>0 )
DJIA NYSE 26.70 0.81 6.9Ã—1014 1.55 0.63 6.6Ã—1014 2.00 2.47 1.8Ã—1015
0.04
SP500a SP500b
1.64 20.90 0.34 20.65 19.89
0.68 2.21 1.10 2.26 7.84
TSX 1.59
1.0Ã—103
1.07 1.62 8.74
Table 2 : Cumulative wealth for EG , leveraged longonly ( LO ) , short only ( SO ) , and long/short ( LS ) variants of EG* , and SHERAL with Î» > 0 .
Additionally , we see that EG* ( SO ) is able to earn more wealth for the SP500b dataset than EG . This is because almost all stocks in this dataset lose value and EG is not able to hold short positions thereby limiting it to invest in stocks that are performing poorly . However , we also see that EG* ( LO ) earns more wealth than EG* ( SO ) even though it is limited by only holding long positions . It seems that for the few stocks that have increases in value , the leverage is enough to allow it to earn more wealth . Finally , we see that the EG* ( LS ) is able to outperform EG on each datasets even though they are significantly different in nature . It is also able to compete with EG* ( LO ) in 4 of the 5 datasets . From these results , we can see that adding leverage to EG significantly increases cumulative wealth . Moreover , it seems that short positions do not have a strong impact on cumulative wealth but they do allow for more flexibility and reasonable performance on datasets with both bull and bear markets . We can observe the affect that structured hedging has on wealth by comparing the cumulative wealth of SHERAL to that of EG and EG* variants . We can especially see its affect by looking at EG* ( LS ) since it is equivalent to setting Î» = 0 in ( 12 ) . We can see that SHERAL is able to earn more wealth than EG and all EG* variants on 3 of the 5 datasets . This implies that there is some volatility in these datasets and the structured hedging helps alleviate this volatility . The structured hedging has a positive affect on most datasets and , as we will see later , it is able to reduce the risk and earn similar amounts of wealth . When Î» = 0 , SHERAL can earn as much as EG and all EG* variants so for datasets where hedging is not beneficial , we can still earn the same amount of wealth .
In Figure 1 , we can see how the transaction cost adjusted cumulative wealth changes as we vary the structured hedging weight Î» in comparison with the best performing variant EG* ( LO ) for the NYSE dataset . SHERAL is able to earn more wealth even with reasonable transaction costs than the best EG variant ( which does not include transaction costs ) . 632 Comparison with Benchmark Algorithms In addition to a comparison between EG and our EG* variants , we compared the performance between several benchmark algorithms : a buy and hold strategy ( U BAH ) , a uniform constant rebalanced portfolio ( U CRP ) , Universal Portfolios ( UP ) [ 4 ] , Online Lazy Updates ( OLU ) [ 7 ] , and the best single stock in hindsight . These algorithms were designed to only invest in long positions and without leverage .
Further , we again compared against several variants of these algorithms : a long only , short only , and long/short with leverage variant of both U BAH and U CRP , and a long only and short only with leverage variant of the best single stock . The results of these algorithms and variants on the 5 datasets are presented in Table 3 .
Figure 1 : Transaction cost adjusted wealth for the NYSE dataset with varying values of Î» . SHERAL returns more wealth than the best competing algorithm even with transaction costs .
We can see that out of those algorithms that only invest in long positions and without leverage , the best single stock tends to outperform the best with OLU being competitive in most cases . We can see how the market performs by looking at the U BAH algorithm . If U BAH returns < 1 then the market was down for that dataset . For such datasets ( DJIA , SP500b ) , we see that both U CRP and UP perform about the same and lose money . However , the best stock earns money for these datasets . We can see that there is at least one stock that performs well even if the majority of the stocks do not . OLU is able to identify this stock , or the few similar stocks , for SP500b and earn money but is not able to do the same for DJIA . Comparing the U BAH and U CRP variants on the SP500b dataset , we see that only U BAH* ( SO ) and ( LS ) are able to earn money . Since for this dataset , the vast majority of the stocks decrease in value , these variants are able to hold short positions and take advantage of this . UCRP* ( SO ) and ( LS ) lose money but still perform better than the ( LO ) variant for this dataset .
For the NYSE dataset , we can see that U CRP* ( LO ) earns significantly more wealth than all the other algorithms ( except SHERAL ) . Since all the stocks in the NYSE dataset increase in value , holding long positions is beneficial and
Figure 2 : Total value of the hedging penalty â„¦h with varying Î» for the NYSE dataset . As Î» increases , the value of the hedging penalty function â„¦h decreases .
1eâˆ’09 1eâˆ’07 5eâˆ’06 7eâˆ’06 9eâˆ’06 2eâˆ’05 4eâˆ’05 00001001 0051152x 1015Î»Wealth No transaction costÎ³=1eâˆ’05Î³=3eâˆ’05Î³=5eâˆ’05Î³=00001Î³=00003Î³=00005EG* ( LO)05100101102103104Number of DaysÎ»=1eâˆ’0605100101102103104â„¦hÎ»=0.0105100101102103104Î»=100483 U BAH U CRP
UP OLU
Best Stock ( LO ) U BAH* ( LO ) U BAH* ( SO ) U BAH* ( LS ) U CRP* ( LO ) U CRP* ( SO ) U CRP* ( LS )
DJIA 0.76 0.81 0.80 0.84 1.18 0.55 0.43 0.97 0.61 0.28 0.83
NYSE 14.49 26.78 26.99 50.80 54.14 38.44
3.68 Ã— 10âˆ’6
0.43
695.59
1.04 Ã— 10âˆ’6
0.05
SP500a
SP500b
1.34 1.64 1.62 2.45 3.77 0.44 0.01 0.78 1.04
1.00 Ã— 10âˆ’2
0.45
0.63 0.69 0.69 3.02 1.74 0.38 1.21 1.03 0.43 0.97 0.93
TSX 1.61 1.59 1.59 2.24 6.27 1.71 0.54 1.12 1.68 0.54 0.92
Best Stock* ( LO ) Best Stock* ( SO ) SHERAL ( Î» > 0 )
1.09 ( P&G ) 1.13 ( MCD )
2.47
1.45 Ã— 10âˆ’5 ( DD )
65.71 ( PM ) 1.81 Ã— 1015
0.56 ( WMT )
0.02 ( KO )
1.15 ( SWN ) 4.71 ( GCI )
7.84 ( GTA ) 2.11 ( IFP )
19.89
7.84
8.74
Table 3 : Cumulative wealth ( without transaction costs ) of SHERAL , benchmark algorithms , and several variants for each of the five datasets .
Figure 3 : Active stocks with varying Î» . As Î» increases the number of active stocks decreases which indicates either more hedging or less total investing .
Figure 4 : Active positions with varying Î» . When the NYSE Index decreases , hedging increases with Î» = 001 adding leveraging provides even more earning power . However , comparing the leveraged ( LO ) best stock with the nonleveraged ( LO ) best stock , we can see that for each dataset , the leverage does not appear to help that much and even in some cases hurts the cumulative wealth . This is because leverage magnifies not only gains but also losses . We can see the benefits of leverage but also the drawbacks . If we have a portfolio that is allowed to switch between stocks with leverage , there can be huge gains . However , if we are stuck investing in a single stock with leverage , there are few gains and even some losses .
Looking at the last row of Table 3 , we observe the results for our SHERAL algorithm . We can see that SHERAL is able to outperform all other algorithms for each of the datasets even though they are very different in nature . For example , SHERAL earns $7.84 on the SP500b dataset where 96 % of the stocks decrease in value and is also able to earn $1.81 Ã— 1015 on the NYSE dataset where all stocks increase in value . This shows the flexibility and power of being able to invest in both long and short positions with leverage .
6.4 Effect of the hedging function â„¦h and Î»
The hedging penalty function â„¦h encourages structural hedging between assets . The amount of hedging is further controlled by the value of Î» which has an affect on ( a ) the value of â„¦h each day , ( b ) the number of active stocks , and ( c ) the number of active positions .
( a ) Value of â„¦h With the hedging penalty function â„¦h , we are encouraging different levels of asset hedging depending on the value of Î» . From Figure 2 , we can see the affect Î» has on â„¦h = pLp with Î· = 0.1 , Î±1 = 0.1 , and Î±2 = 0.1 for the NYSE dataset with Î´ = 20 days . With a low Î» value of 10âˆ’6 , there are many days with large values of â„¦h . As we increase Î» to 100 , we see that the value of â„¦h becomes very small with most days having a value of 0 .
( b ) Number of Active Stocks An active stock is a stock which has a significant percent of the wealth , e.g , 1 % , 10 % , etc . , invested in it between both long and short positions . For instance , if there is 1 % of the wealth invested in the long position and 1 % invested in the short position , the total effective wealth invested is 0 % since the amounts are equal and cancel out . An active stock has a significant amount of total effective wealth invested . It is a measure of the number of non hedged assets where a higher number indicates less hedging and a lower number indicates more hedging or less total investing , ie , more wealth held in the bank . From Figure 3 , we can see that with Î· = 0.1 , Î±1 = 1 , Î±2 = 10 , and Î» = 10âˆ’6 , the number of active stocks for the
â€˜63â€˜65â€˜67â€˜69â€˜71â€˜73â€˜75â€˜77â€˜79â€˜81â€˜83â€˜85020Î»=1eâˆ’06â€˜63â€˜65â€˜67â€˜69â€˜71â€˜73â€˜75â€˜77â€˜79â€˜81â€˜83â€˜85020Î»=0.01Active Stocksâ€˜63â€˜65â€˜67â€˜69â€˜71â€˜73â€˜75â€˜77â€˜79â€˜81â€˜83â€˜85050Î»=1eâˆ’06â€˜63â€˜65â€˜67â€˜69â€˜71â€˜73â€˜75â€˜77â€˜79â€˜81â€˜83â€˜85050Î»=0.01Active Positionsâ€˜63â€˜65â€˜67â€˜69â€˜71â€˜73â€˜75â€˜77â€˜79â€˜81â€˜83â€˜850100200 NYSEIndex484 Figure 5 : Average risk for each algorithm and dataset with optimal parameters in terms of wealth returned . SHERAL computes portfolios with less risk than U BAH ( LO ) and U CRP ( LO ) for almost all risk measures and datasets and is competitive with the non leveraged algorithm OLU .
NYSE dataset is high , with around 25 out of 36 stocks active ( about 70 % ) on average . With the other parameters fixed and only increasing Î» to 0.01 , the number of active stocks decreases to around 4 ( about 11% ) . This could be due to two reasons : ( 1 ) the amount invested in both long and short positions increases and the total effective wealth invested decreases , or ( 2 ) the total amount invested decreases with the rest kept in the bank .
( c ) Number of Active Positions We define an active position in a similar way to that of an active stock , however we consider the positions independent of one another . If both the long and short positions have the same and significant amount invested in them , then both are considered active . From Figure 4 , we can see the affect Î» has on the number of active positions for the same parameters values as that of Figure 3 . With a low Î» value of 10âˆ’6 , we can see that the number of active positions is reasonably high , with around the same amount as the number of active stocks in Figure 3 ( note the scale differences ) . This shows that when Î» is small for these set of parameters , SHERAL is not hedging much . When Î» increases to 0.01 , the number of active positions increases some days and decreases other days .
Comparing this to the NYSE index value in the bottom plot , we can see that the days where SHERAL is hedging more corresponds to days that the index decreases , eg 1969 1970 , 1973 1975 , and 1981 1983 . This is explained by the fact that with this set of parameters , we are emphasizing long positions more even though Î±2 > Î±1 because of the difference in scale . For example , the mean price relative for the NYSE dataset is 1.0006 , and for a long position the gain xt which on average is of the order 1 Ã— q whereas the is q s ( xt âˆ’ 1 + r ) which on average is gain for short positions is q of the order ( 10âˆ’4 + r ) Ã— qs . With r = 0.000245 , to weight the positions equally we would have to set Î±2 to be in the range [ 103 , 104 ] . However , for these results Î±2 = 10 so the long positions are emphasized more . Since there is more hedging on days the market decreases , this indicates that SHERAL is trying to take advantage of increasing stocks on some days whereas other days , when the market is crashing , it is not quite sure which stocks will perform well so it is hedging more between them . 6.5 Risk Comparison
From Section 6.3 , we saw that SHERAL is able to return more wealth than all of the state of the art algorithms on all of the datasets , and more wealth than EG and our EG* variants in three out of the five datasets . However , as
Markowitz postulated , we should seek low risk in addition to high returns . As such , we compare the risk exposure for each of the competing algorithms with optimal parameters with respect to wealth using three common measures of risk : ( a ) covariance , ( b ) Sharpe ratio , and ( c ) Sortino ratio .
( a ) Covariance We compute the covariance Î£t using the previous Î´ days of price relatives . We measure the risk of a portfolio pt wrt a uniform constant rebalanced portfolio u as Î±var=p t Î£tpt/uÎ£tu . High Î±var implies high risk and low Î±var implies low risk .
( b ) Sharpe ratio The Sharpe ratio [ 16 ] measures how much the return ( percent gain or loss on investment ) of a portfolio compensates for the level of risk taken . It computes what can be considered as a risk adjusted return for a given portfolio and benchmark return . It does this by measuring both the downwards and upwards volatility . A higher Sharpe ratio implies better compensation for the risk exposure . We compute the Sharpe ratio of a portfolio as
Î±Sharpe=(Râˆ’Rb)/var(Râˆ’Rb ) where R is the return for the portfolio and Rb is the benchmark return which is typically a large index such as the S&P500 .
( c ) Sortino ratio The Sortino ratio [ 17 ] is similar to the Sharpe ratio , however it only measures the downwards volatility . Typically , upwards volatility is encouraged as we would gladly accept the price of a stock we have invested long in to go up . However , the Sharpe ratio penalizes this type of volatility where the Sortino ratio does not . We compute the Sortino ratio as Î±Sortino = ( R âˆ’ Rb)/DR where DR is the standard deviation of negative returns ( losses ) .
To be consistent in the plots and have each bar represent the level of risk exposure , we have plotted the negative Sharpe and Sortino ratios since a low ratio implies a high risk relative to the return . Therefore , for each of the bar plots in Figure 5 , a higher bar height implies higher risk . Additionally , we compare algorithms that are not special cases of SHERAL , ie , EG or EG variants . We also only compare the best performing algorithms and variants with parameters tuned for optimal wealth for each algorithm .
From Figure 5 , we can see that SHERAL is competitive with OLU in terms of risk , and in many cases having less risk . SHERAL consistently has less risk than U BAH ( LO ) and U CRP ( LO ) . These results are encouraging because in addition to earning more wealth , SHERAL is able to reduce risk in spite of using leverage which inherently increases risk .
010203040Risk ValueNYSE 0204060SP500a 02468SP500b 050100150200DJIA 0100200300TSX SHERALOLUUâˆ’BAH LOUâˆ’CRP LOÎ±varÎ±SharpeÎ±SortinoÎ±varÎ±SortinoÎ±varÎ±SharpeÎ±SortinoÎ±varÎ±SharpeÎ±SortinoÎ±varÎ±SharpeÎ±SortinoÎ±Sharpe485 Figure 6 : Average Î±var risk for each dataset with varying Î· and Î» . With a higher Î· value , the average variance risk is higher , however as we increase Î» the risk decreases for each Î· value across all datasets .
Additionally , for algorithms which do use leverage , U BAH ( LO ) and U CRP ( LO ) , SHERAL is exposed to much less risk than these algorithms and earns more wealth . 6.6 Risk and Î»
Even though our hedged resource allocation with leverage framework ( 8 ) does not explicitly take risk into account , we can control it by setting the value of Î» . We observe how the value of Î» affects the amount of risk our portfolios are exposed to using variance as the measure of risk . We do not consider the Sharpe or Sortino ratios here since with varying parameters , the return in wealth changes drastically and the risk adjusted returns from the Sharpe and Sortino ratios cannot effectively illustrate how only the risk changes . From Figure 6 , we can see that across each dataset the behavior is consistent . As we increase Î· , the average variance is higher across all values of Î» . As we increase Î» , the average variance decreases to zero for all Î· values . This illustrates how as we increase Î» , we are encouraging more hedged portfolios and reducing risk . Thus , we can effectively control the level of risk by setting the value of Î» .
7 . CONCLUSIONS
In this paper , we have developed a framework and algorithm for hedging online resource allocations with leverage ( SHERAL ) and showed how it can be applied to the problem of online portfolio selection . Our analysis shows that SHERAL is competitive with reasonable fixed strategies which have the power of hindsight . Our experimental results illustrate the affect long and short positions and a graphbased hedging penalty function â„¦h have on the cumulative wealth and various measures of risk . We exhaustively show how SHERAL compares in terms of wealth with state ofthe art portfolio selection algorithms on five datasets . Additionally , we experimented with variants of such algorithms to allow long and short positions with leverage and showed how SHERAL is competitive with these variants in terms of risk and wealth even with reasonable transaction costs .
Acknowledgements The research was supported in part by NSF grants IIS1447566 , IIS 1422557 , CCF 1451986 , CNS 1314560 , IIS 0953274 , IIS 1029711 , and by NASA grant NNX12AQ39A .
8 . REFERENCES [ 1 ] A . Agarwal , E . Hazan , S . Kale , and R . Schapire .
Algorithms for portfolio management based on the newton method . In ICML , pages 9â€“16 , 2006 .
[ 2 ] A . Borodin , R . El Yaniv , and V . Gogan . Can we learn to beat the best stock . JAIR , 21:579â€“594 , 2004 .
[ 3 ] N . Cesa Bianchi and G . Lugosi . Prediction , Learning , and Games . Cambridge University Press , 2006 .
[ 4 ] T . Cover . Universal portfolios . Mathematical Finance ,
1:1â€“29 , 1991 .
[ 5 ] P . Das and A . Banerjee . Meta optimization and its application to portfolio selection . In KDD , 2011 .
[ 6 ] P . Das and A . Banerjee . Online quadratically constrained convex optimization with applications to risk adjusted portfolio selection . Technical report , University of Minnesota , 2012 .
[ 7 ] P . Das , N . Johnson , and A . Banerjee . Online lazy updates for portfolio selection with transaction costs . In AAAI , pages 202â€“208 , 2013 .
[ 8 ] P . Das , N . Johnson , and A . Banerjee . Online portfolio selection with group sparsity . In AAAI , 2014 .
[ 9 ] N . R . Devanur and T . P . Hayes . The adwords problem : Online keyword matching with budgeted bidders under random permutations . In EC , pages 71â€“78 , 2009 . [ 10 ] S . Ermon , J . Conrad , C . Gomes , and B . Selman . Risk sensitive policies for sustainable renewable resource allocation . In IJCAI , pages 1942â€“1948 , 2011 .
[ 11 ] D . Golovin , A . Krause , B . Gardner , S . J . Converse , and S . Morey . Dynamic resource allocation in conservation planning . In AAAI , 2011 .
[ 12 ] L . Gyorfi , G . Ottucsak , and H . Walk . Machine
Learning for Financial Engineering . Imperial College Press , London , UK , UK , 2011 .
[ 13 ] D . Helmbold , E . Schapire , Y . Singer , and
M . Warmuth . On line portfolio selection using multiplicative weights . Mathematical Finance , 1998 .
[ 14 ] N . Johnson and A . Banerjee . Online resource allocation with structured diversification . In SDM , 2015 .
[ 15 ] R . Munos . Efficient resources allocation for markov decision processes . In NIPS , pages 1571â€“1578 , 2001 .
[ 16 ] W . Sharpe . Mutual fund performance . Journal of
Business , pages 119â€“138 , 1966 .
[ 17 ] F . Sortino and R . van der Meer . Downside risk .
Journal of Portfolio Management , pages 27â€“31 , 1991 .
[ 18 ] S . Xue , A . Fern , and D . Sheldon . Dynamic resource allocation for optimizing population diffusion . In AISTATS , pages 1033â€“1041 , 2014 .
1eâˆ’060.011000100200300400Î»Average varianceNYSE Î·=0001Î·=001Î·=01Î·=1Î·=10Î·=1001eâˆ’06001100050100Î»SP500a 1eâˆ’06001100010203040Î»SP500b1eâˆ’06001100050100Î»DJIA 1eâˆ’060.01100050100150200Î»TSX 486
