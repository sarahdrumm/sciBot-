A Diagrammatic Inference System for the Web Chris Barrell1 Logikos , Inc .
Beckman Coultier . , PDC
Peter Nei1
Michael Wollowski
Rose Hulman Institute of Technology
Indianapolis , IN 46268 , USA
7451 Winton Drive 001 317 808 4382
2914 Independence Drive
Fort Wayne , IN 46808
001 260 373 1387
5500 Wabash Ave .
Terre Haute , IN 47803 , USA
001 812 877 8650 wollowski@rose hulman.edu peternei@sagiancom cbarrell@logikos.com
ABSTRACT We developed a diagrammatic inference system for the World Wide Web . Our system enables the creation of diagrams such that the information contained in them can be searched and inference can be performed on it . We developed an XMLSchema for bar , line , and pie charts . Based on it , we developed software that transforms a corresponding XML file into an SVG image , which in turn is rendered by the client as an image . Additionally , we developed a search engine which enables a user to find information explicitly contained in the XML file , and as such in the image . Furthermore , we developed an inference engine which enables a user to locate information that is implicitly contained in the image .
Categories and Subject Descriptors H31 [ Content Analysis and Indexing ] : Indexing Methods
General Terms Human Factors , Standardization .
Keywords Search , Inference , Searchable diagrams , Inference system , XML .
1 . INTRODUCTION We developed a process for presenting diagrammatic information on the World Wide Web while making that information available to a search and inference engine . If done right , this makes the information easier to read for people [ 2 ] . However , information presented in an image file is not accessible to search engines . While a search engine may be able to use the image tags and surrounding text to make an educated guess about what an image represents , in the case of diagrams ( as compared to photos ) it is particularly desirable to be able to search and reason with the information contained within the image . Diagrammatic inference systems are special purpose systems . They differ from first order logic in that they are custom fit for the domain for which they are intended . This means that they are limited to that domain , but they are usually complete [ 3 , 4 , 5 ] . See [ 1 ] for an encompassing treatment of these issues .
2 . AN EXAMPLE In the following example , we show the format of an XML document in our system and how it relates to the rendered image .
Copyright is held by the author/owner(s ) . WWW 2004 , May 17 22 , 2004 , New York , NY , USA . ACM 1 58113 912 8/04/0005 .
Figure 1 contains the XML file and figure 2 the rendered image . Data is boldfaced . The top level element is chart and contains a single attribute type with which to specify the chart type , which can be a bar , line , or pie chart . In this example , we show a bar chart . The chart's title is contained in the title element and is displayed above the chart proper . The title not only assists the human viewer in identifying the kind of information presented , the search engine will also rely heavily on the information in it . 1 <?xml version="1.0" ?> <chart type="bar"> <title>4 Year GPA by Gender</title> <legend /> <plotarea> <axis variable= ” x1 ” >Year</axis> <axis variable= ” x2 ” min="0" max="4.0" step="0.5">GPA</axis> </plotarea> <dataset label="Men"> <datapoint x1="2000" x2="2.6" /> <datapoint x1="2001" x2="2.8" /> <datapoint x1="2002" x2="2.9" /> <datapoint x1="2003" x2="3.0" /> </dataset> <dataset label="Women"> <datapoint x1="2000" x2="2.5" /> <datapoint x1="2001" x2="2.8" /> <datapoint x1="2002" x2="3.0" /> <datapoint x1="2003" x2="3.1" /> </dataset> </chart>
Figure 1 . A sample XML file for a bar chart .
A legend element enables the user to specify ( by its presence or absence ) whether a legend should be generated in the resulting image . The actual label information is pulled from the dataset elements , as described below . The information enclosed in the plotarea element is of technical as well as semantic nature . Currently , our system only renders two dimensional charts , designated by variable attributes with the values "x1" and "x2" . The text contained within an axis element is used to label it . For a bar chart , the x2axis specifies a starting and ending value ( min and max attribute ) as well as a gradation for the vertical axis ( step attribute ) . In contrast , the horizontal x1 axis does not contain these attributes and is instead divided based on the string data present in the x1
1 This work was done while the authors were at Rose Hulman
Institute of Technology .
374 attributes of datapoint elements . For a line chart , both axes contain numerical data and hence would look like the x2 axis of the example . In contrast , a pie chart has no axes and has no need of a plotarea element .
Figure 3 . The results of a query requesting inference .
A search engine enables a user to find information that is explicitly contained in a document . An inference engine enables a user to also search for information that is implicitly contained in the document . For example , the highest GPA achieved by women is 31 Furthermore , the GPA went up each year . Those two results are indicated in the search displayed in figure 3 . They are two pieces of information that people looking at bar charts are very interested in . We implemented those two inference rules , as well as rules for minimum , average , median , decreasing and those that compare datapoints to a given values . We feel that those predicates are central to charts of our system , and are sufficient for now .
4 . CONCLUSIONS Our system of storing chart information in XML files on the web demonstrates a general process by which diagrammatic information can be stored on a web server in sentential format without losing the preferred visual presentation of the information to the user . The primary benefit of this process is that what the user perceives as an image is in fact a text file that can be indexed by a typical search engine spider . The choice of an XML format reaps the additional benefit of having structured metadata , as demonstrated in the design of our diagrammatic search and inference engine .
5 . REFERENCES [ 1 ] Barwise , Jon and Etchemendy , John . Visual information and valid reasoning . in : Visualization in Mathematics , Zimmerman and Cunningham ( eds. ) , Mathematical Association of America , Washington , DC , 1990 .
[ 2 ] Glasgow , Janice , Narayanan , N.Hari , and Chandrasekaran , B .
( eds ) Diagrammatic Reasoning . AAAI/MIT Press , Menlo Park , CA , 1995 .
[ 3 ] Hammer , Eric . Logic and Visual Information . CSLI Press ,
Stanford , CA , 1995 .
[ 4 ] Allwein , Gerard and Barwise , Jon ( eds ) Logical Reasoning with Diagrams , Oxford University Press , 1996 .
[ 5 ] Wollowski , Michael and Signorelli , Robert . Towards a
General Purpose XML Search Engine . Presentation at the 8th Search Engine Meeting , Boston , MA , 2000 .
Figure 2 . The rendered image of the file from figure 1 .
Each set of data is enclosed in a separate dataset element . This element has a label attribute identifying the dataset in the legend . In our example , we have data for men and for women . A dataset consists of datapoint elements . Every datapoint has two attributes identifying the values across the horizontal axis ( x1 ) and the vertical axis ( x2 ) . Data points are represented by bars in a bar chart and through a connected line in a line chart . In a pie chart , each dataset represents a slice of the pie , and instead of containing datapoint elements , it has a second attribute , value .
3 . DIAGRAMMATIC SEARCH AND INFERENCE ENGINE In order for a search engine to return meaningful results , we designed a special purpose search engine which is tailor made for our XML format . See [ 5 ] for more information on special purpose XML search engines . To get a sense of how to interpret the data of charts in our system , we will rewrite a datapoint . First , we substitute in the contents of the title element and the value of label attribute from its surrounding dataset element . We then substitute the x1 and x2 attributes with the contents of their corresponding axis elements . The resulting first datapoint of the dataset for men looks as follows :
<4 Year GPA by Gender Men "Year = 2000" "GPA = 2.6"/>
Each datapoint now contains all information pertaining to it . At this point , we can search each datapoint individually and display all that satisfy a given query . Suppose that the user enters the keyword “ women ” . The results of this query are displayed in figure 3 . In it , we return all datapoints , as modified above , which contain this keyword . The results are presented in a nested fashion , so as to avoid repetition of information . Furthermore , a link to the source XML document is presented .
375
