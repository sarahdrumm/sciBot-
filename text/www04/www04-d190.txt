Browser Based Applications :
Positive Transference or Interference ? Sidne G . Ward Mark S . Silver Fordham University
University of Missouri , Kansas City
113 W . 60th Street , 604C New York , NY 10023 USA
+01 212 636 6755 msilver@acm.org
5110 Cherry St .
Kansas City , MO 64110 USA
+01 816 235 2321 wards@umkc.edu today . Given the many similarities among
ABSTRACT Applications that run on top of web browsers dominate the Internet these applications’ features , positive transference from one to another is often seen as an important source of ease of use for such applications . This paper examines the many differences in the way similar features are implemented in different browser based applications , analyzing the way these inconsistencies can lead to negative transference ( interference ) that degrades rather than enhances usability . Categories & Subject Descriptors : H43 [ Information Systems Applications ] : Communications Applications information browsers . H52 [ Information Systems Interfaces and Presentations ] : User Interfaces standardization . General Terms : Design , Human Factors , Standardization . Keywords : interference , transference , browser based applications , usability .
1 . INTRODUCTION Browser Based Applications ( BBAs ) dominate the world of Internet Applications today . Instead of employing a specialized software client , BBAs run on top of the web browser . Their functionality is provided to users by a combination of the web browser's ( limited ) functionality and the web server's informationprocessing capabilities , accessed through server generated web pages . BBAs are the chief vehicle for on line shopping and are also widely used for e trading , e banking and e mailing . BBAs are popular for several reasons , but one of the most common explanations of BBA popularity is that BBAs are extremely easy to learn and use . In particular , it is often argued that since BBAs have many similarities one to another—both because they are all built on the common browser platform and because they implement many similar features—positive transference from currently used BBAs will make it easier for someone to learn and use additional BBAs . This assertion seems reasonable on the surface , but it fails under closer examination . Despite some similarities across BBAs there are far more differences . In particular , similar features are often implemented with small or great variations in different BBAs . These inconsistencies can lead to an interference ( negative transference ) that is likely to equal or exceed the positive
Copyright is held by the author/owner(s ) . WWW 2004 , May 17–22 , 2004 , New York , New York , USA . ACM 1 58113 912 8/04/0005 . transference . Consider a simple example , the “ printable version ” button found in many BBAs . This feature differs greatly in how it is implemented across BBAs . For instance , some BBAs open the printable version in a new browser window whereas others open it in the same window . In the former case one simply closes the printable version window after printing . A person accustomed to this approach who encounters an application that does not open a new window is still likely to close the window , in this case closing the browser entirely and aborting the BBA midstream . This paper identifies a set of common BBA features that might have been sources of positive transference but are more likely to generate interference , instead , because their implementations vary so significantly across BBAs . The paper thus serves as a starting point for empirical study of the effects of positive and negative transference as well as an advisory to the BBA design community of features whose implementations are likely to be problematic and would merit standardization . 2 . SOURCES OF INTERFERENCE 2.1 The “ Back ” Button BBAs differ in how they handle the “ Back ” toolbar button . Some BBAs require it , some forbid it , and some do some of each . Misusing the “ Back ” toolbar button in a transaction sequence can be disastrous , possibly leading to duplicate transactions , failed transactions , or lost information . For example , TreasuryDirect warns its customers that if they use the “ Back ” button they can “ seemingly receive a confirmation number when , transaction was processed . ” Since other BBAs instruct their customers to use the “ Back ” button , interference from those systems is likely to lead to failed transactions for some of TreasuryDirect ’s customers . 2.2 The “ Enter ” Key BBAs differ in how they treat the "Enter" key when a person is completing a form . Some BBAs treat “ Enter ” as a signal to post the form ; others do not . These two approaches are likely to interfere one with another . If a person becomes accustomed to pressing the "Enter" key with no effect , he or she is likely to press it mistakenly in BBAs where it does have an effect , prematurely posting a partially completed form . At best , the user is inconvenienced by the delays and discontinuities associated with having the page returned to him or her for completion . At worst , the BBA acts on the form as though it were complete , possibly causing all sorts of problems for the user . 2.3 Finding Features Some features are common to many BBAs—for instance , login , logout , search , order status , shipping rates , and privacy policies— but how one finds the links to these features varies greatly from transaction and even fact , no in conduct a
426 one BBA to another . Differences across BBAs in such attributes as link location on the page , link identification ( how the link is labeled ) , and link salience can cause trouble for people as they go from one BBA to another . Someone accustomed to clicking in a particular spot for a particular feature may have trouble locating that feature , or may even mistakenly click on a different feature , in BBAs that implement the link differently . Similarly , users accustomed to a particular visual representation of the feature— say , a brightly colored button—may have trouble locating it when it appears in other forms . Ironically , while making a key feature salient improves the usability of a given site , it increases the interference when the user accustomed to this salient button works at other sites that do not make the feature salient in the same way . When features are not directly accessible from the homepage , users may expend much effort searching the site for them . And since some BBAs may not implement a given feature at all , the user may spend time and effort searching in vain . Conversely , if users do not find a feature , they cannot be sure whether they missed it or whether it simply is not there . 2.4 Going Home Many sites have a clickable logo in the upper left corner of every page that takes users to the homepage . But some companies put something else clickable in the corner and move the logo over . Users trying to go home may select this other feature—perhaps a link to a featured product or an advertisement for another site—by mistake . Such a design choice might simply reflect a desire to put the feature in a prominent place , or it might be an attempt to exploit the interference effect to trick users into selecting this feature . Either way , it degrades usability for the person who is trying to reach the homepage but accidentally ends up elsewhere . 2.5 Search Boxes Many BBAs have a search box at the top or bottom of their homepages . Some sites have other fill in boxes in these locations , instead of , or in addition to , the search box . For instance , some BBAs invite customers to supply their e mail addresses for the company ’s mailing list . But given that search boxes are much more common than these others , users may mistakenly type a search phrase into the fill in boxes intended for other purposes . 2.6 Counting Items in a Shopping Cart Many shopping cart sites show the count of items currently in the cart somewhere on each catalog page . But different sites count items differently . Some include the number of distinct products while others count the total number of items , including multiples of some products . Consumers who uses both types of sites are likely at some point to interpret the item count incorrectly , leading them to fear that the cart does not contain what they put in it . 2.7 Updating Quantities in a Shopping Cart Most shopping cart sites require customers to press an “ Update Quantity ” button after making any changes to the cart . But the sites differ in how they implement this feature . If a customer proceeds to checkout or continues shopping without pressing the “ Update Quantity ” button , some sites process the change ; others ignore it . Negative transference from the BBAs that update automatically will likely lead some people to fail to update when required . Similarly , some sites automatically update when customers terminate entries with the "Enter" key ; others do not . The “ Update Quantity ” button looks different , and is located in different places , at different sites , so a customer might not notice the button at some sites and consequently not realize it needs to be clicked . And some BBAs place an “ Update ” button labeled in a very small font directly beneath the quantity fill in box . While this is a logical place for the feature , other BBAs place a “ Remove ” or “ Delete ” button in this location . A user accustomed to clicking beneath the quantity after changing it could easily delete items by mistake . 2.8 Unit Prices and Extended Prices One would think that distinguishing the unit price from the extended price ( unit price times quantity ) would be a simple matter . But shopping cart displays are surprisingly diverse in how they treat price data . Some carts have columns for both the unit price and the extended price , while others have a column for one or the other , but not both . Moreover , some sites use the column heading “ Price ” for the unit price and others use it for the extended price . Inconsistent labeling across sites can lead to interference . Someone accustomed to looking at the “ Price ” column for the unit price might easily confuse the unit price with the extended price on a site that has only an extended price column and labels it “ Price . ”
3 . CONCLUSION The availability of so many browser based applications that have so many features in common and yet so many inconsistencies in how those features are implemented sets up a classic situation for negative transference . Because of the many similarities among BBAs , each BBA seems comfortable and familiar to the user . But as that user transfers his or her behavior from one BBA to another , even small differences can become big problems . Links to features are not where they are supposed to be or the features do not operate as expected . The consequences are the ones we have come to expect from degraded usability : user errors and wasted time . Even applications built using the same development system—for example , the many on line stores implemented through Yahoo! Merchant Solutions—have significant differences from one to another . So , while BBA commonalities certainly afford some benefits , the substantial inconsistencies across even similar BBAs impose significant costs . Establishing BBA standards for various common features is one likely means of decreasing inconsistencies and increasing BBA usability , although standardization presents its own challenges . Allowing people to personalize BBAs is another approach to providing users with a more uniform experience across sites . Given the pervasive position of BBAs in today ’s world of Internet Applications , we cannot afford the negative transference and concomitant usability losses that follow from the substantial inconsistencies across BBAs . To date this issue has been largely ignored . It is time to study this phenomenon more formally and to act upon what we learn .
427
