Translation Method of Contextual Information into Textual
Space of Advertisements
Yukihiro Tagami
Yahoo Japan Corporation
Tokyo , Japan yutagami@yahoo corp.jp
Shingo Ono Tokyo , Japan
Yahoo Japan Corporation shiono@yahoo corp.jp
Toru Hotta Tokyo , Japan
Yahoo Japan Corporation thotta@yahoo corp.jp
Koji Tsukamoto
Yahoo Japan Corporation
Tokyo , Japan kotsukam@yahoo corp.jp
Yusuke Tanaka
Yahoo Japan Corporation
Tokyo , Japan yuustana@yahoo corp.jp
Akira Tajima Tokyo , Japan
Yahoo Japan Corporation atajima@yahoo corp.jp
ABSTRACT Contextual advertising has a key problem to determine how to select the ads that are relevant to the page content and/or the user information . We introduce a translation method that learns a mapping of contextual information to the textual features of ads by using past click data . This method is easy to implement and there is no need to modify an ordinary ad retrieval system because the contextual feature vector is simply transformed into a term vector with the learned matrix . We applied our approach with a real ad serving system and compared the online performance in A/B testing . Categories and Subject Descriptors H35 [ Information Storage and Retrieval ] : Online Information Services—Commercial services ; I26 [ Artificial Intelligence ] : Learning Keywords Contextual advertising , Learning to rank , Click feedback . 1 . Contextual advertising is a form of textual advertising usually displayed on third party web pages . The advertiser is primarily interested in targeting relevant users , and the publisher is concerned about keeping the user experience pleasant . To satisfy these two objectives , an ad networking service selects ads that are relevant to the page content and/or the user information .
INTRODUCTION
The relevance of an ad to page content is typically a tfidf score that measures the word overlap between the page content and ad content , but this is not very effective if the vocabulary used in the page is expected to be different from the vocabulary used in the ad . To remedy this problem , some previous studies used a semantic taxonomy [ 1 ] or hidden classes [ 2 ] . However , in these approaches , it is necessary to expand the ad retrieval system to handle the categories or classes .
We introduce here an approach that does not require modification of an ordinary ad retrieval system , which calculates Copyright is held by the author/owner(s ) . WWW’14 Companion , April 7–11 , 2014 , Seoul , Korea . ACM 978 1 4503 2745 9/14/04 . http://dxdoiorg/101145/25679482577275 a matching score between two term vectors . This approach is a method of translating ad request information into the textual space of ads . With this translation table , the feature vector of ad requests is transformed into the input term vector of the ad retrieval system . 2 . METHODS We define a score proportional to click through rate ( CTR ) for query feature vector q = ( q1 , . . . , qDq)T and ad feature vector a = ( a1 , . . . , aDa)T as follows : j=1 wijqiaj . score(q , a ) = bscore(q , a ) + tscore(q , a ) .
( 1 ) q is a query feature vector of ad request , which includes web page and user information . bscore(q , a ) is a basic score as bscore(q , a ) = wT basicxbasic . xbasic is a feature vector which includes features such as the ad ’s own clickability and similarity scores like term vector cosine . wbasic is a weight vector corresponding to xbasic . We also define a matching score tscore(q , a ) using translation matrix W = [ wij]Dq×Da as follows : tscore(q , a ) = qTW a =!Dq i=1!Da
In our approach , we transform q with W and use this for ad retrieval . Therefore , we need to learn the matrix . The reason for adding bscore(q , a ) is that the score proportional to CTR consists not only of a interaction between the query and ad but other factors also such as xbasic .
For computational efficiency in learning the matrix and retrieving the ads , we first select ad features related to each query feature and then learn the corresponding wij , instead of the approach which learns directly with a large hash table and L1 regularization [ 4 ] .
We calculate a score mij = ctr(qi,aj ) ctr(aj ) for each pair of qi and aj presented in the training data . ctr(aj ) denotes the CTR of ads that include feature aj . Similarly , ctr(qi , aj ) represents the CTR of ads that include feature aj when query feature vector includes qi . So , large mij value means that ads that include feature aj are more likely to be clicked when query feature vector includes qi . For each qi , some of the aj that have larger mij are selected :
Ai = {j | where mij in the top Mf ilter for i} where Mf ilter is a hyper parameter . The number of nonzero elements in W increases as a function of Mf ilter . We use
385 Website A
Website B
Website C
Mfilter = 20 Mfilter = 40 Mfilter = 60 Mfilter = 80 Mfilter = 100
1.6 %
1.4 %
P A M ∆
1.2 %
1.0 %
0.8 %
0.6 %
P A M ∆
2.0 %
1.8 %
1.6 %
1.4 %
1.2 %
1.0 %
0.8 %
0.6 %
0.4 %
Mfilter = 20 Mfilter = 40 Mfilter = 60 Mfilter = 80 Mfilter = 100
P A M ∆
1.2 %
1.0 %
0.8 %
0.6 %
0.4 %
0.2 %
0.0 %
Mfilter = 20 Mfilter = 40 Mfilter = 60 Mfilter = 80 Mfilter = 100
20
40
60
80
100 all
20
40
60
80
100 all
20
40
60
80
100 all
Mretrieve
Mretrieve
Mretrieve
Figure 1 : Offline experimental results
Aj and replace the score ( 1 ) as follows : score(q , a ) = !Dq i=1!j∈Ai transxtrans + wT
= wT = wTx . wijqiaj + wT basicxbasic basicxbasic
As described in our previous work [ 3 ] , we define a pairwise loss function like RankSVM for clicked requests , which is a set of ad requests that include at least one clicked impression . So we learn the w by using past click data .
With the learned matrix W , the query feature vector is transformed into the input term vector of the ad retrieval system for each ad request : qinput = W Tq . We need to limit the number of nonzero values in the input vector because the performance of the ad retrieval system declines in accordance with the number of these values . In this paper , we simply choose top Mretrieve elements , which are larger values . 3 . EXPERIMENT This section describes offline and online evaluations . Due to business confidentiality , we report only relevant performance when showing experimental results .
We compare the models using the data sampled from an ad network for a period of six weeks . The models we evaluate are constructed with respect to each website , since the web page and the users to visit there are different .
The query features q include web page and user information . The web page features are extracted terms which are scored with their position in the page and HTML tags . The user features are terms and categories which the user is interested in , as well as gender , age , and location . In this paper , we simply use textual features as the ad features a , which are tf idf weighted terms based on the title and description . The basic features xbasic include the ad features , the display position on the web page , and some common similarity values such as term vector cosine . The ad ’s own features include the tf idf terms and the historical CTR of the ad and advertiser .
Offline evaluation . We compared the proposed method with a baseline model that only uses xbasic instead of x = ( xT basic)T . As described in the above , we need to limit the number of query terms by reason of the performance of the ad retrieval system . In this offline experiment , we carried out our evaluation by changing the value of Mretrieve . We changes Mretrieve and truncate the query term vector during the evaluation , not during training . We evaluated the performance of the model by using the mean average precision ( MAP ) and normalize the scores of the method by the above baseline model . We investigated model performance trans , xT of each Mf ilter when changing Mretrieve . The experimental results are reported in Figure 1 . Our model achieved improvement over the baseline model in all websites . However , trends of the results are different from each website . This results indicate that optimal Mf ilter varies depending on both Mretrieve and website .
Online evaluation . To measure the online performance , we applied our approach to a real ad serving system . This ad serving system adopts a two stage approach . The first stage retrieves K ads in total from an ad corpus by multiple methods . The second stage selects the desired top k using brute force CTR prediction on the K retrieved ads ( k ≪ K ) . We added the proposed method to the first stage and compared the online performance by conducting A/B testing . The online test ran over five days period in August 2013 for website A and B . We chose these two websites , since the improvement of both websites are fairly large in the offline evaluation . Hyper parameters are set as follows : ( Mf ilter = 60 , Mretrieve = 20 ) .
The experimental results are summarized in Tables 1 . This result indicates that our proposed method achieved improvement in the online setting as well as offline setting . In website A , CPC greatly increased , regardless of a slight CTR lift . One possible explanation for this result is that ads were ranked by considering revenue in this online testing . Thus , CPC increased instead of CTR in website A . Table 1 : Online A/B testing results . Values represent the relative gains .
Metric
Website
A
B
Click through rate ( CTR )
+0.06 % +4.68 % +12.89 % +1.73 % Revenue per request ( RPR ) +12.96 % +6.49 %
Cost per click ( CPC )
4 . REFERENCES [ 1 ] A . Broder , M . Fontoura , V . Josifovski , and L . Riedel . A semantic approach to contextual advertising . In SIGIR , 2007 .
[ 2 ] A . Ratnaparkhi . A hidden class page ad probability model for contextual advertising . In Workshop on Targeting and Ranking for Online Advertising at the 17th International World Wide Web Conference , 2008 . [ 3 ] Y . Tagami , S . Ono , K . Yamamoto , K . Tsukamoto , and
A . Tajima . Ctr prediction for contextual advertising : learning to rank approach . In ADKDD , 2013 .
[ 4 ] C . Wang , R . Raina , D . Fong , D . Zhou , J . Han , and G . Badros . Learning relevance from heterogeneous social network and its application in online targeting . In SIGIR , 2011 .
386
