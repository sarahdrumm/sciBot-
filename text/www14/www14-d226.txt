Temporal QoS Aware Web Service Recommendation via
Non negative Tensor Factorization
Wancai Zhang , Hailong Sun , Xudong Liu , Xiaohui Guo School of Computer Science and Engineering , Beihang University
{zhangwc , sunhl , liuxd , guoxh}@actbuaaeducn
Beijing , China
ABSTRACT With the rapid growth of Web Service in the past decade , the issue of QoS aware Web service recommendation is becoming more and more critical . Since the Web service QoS information collection work requires much time and effort , and is sometimes even impractical , the service QoS value is usually missing . There are some work to predict the missing QoS value using traditional collaborative filtering methods based on user service static model . However , the QoS value is highly related to the invocation context ( eg , QoS value are various at different time ) . By considering the third dynamic context information , a Temporal QoS Aware Web Service Recommendation Framework is presented to predict missing QoS value under various temporal context . Further , we formalize this problem as a generalized tensor factorization model and propose a Non negative Tensor Factorization ( NTF ) algorithm which is able to deal with the triadic relations of user service time model . Extensive experiments are conducted based on our real world Web service QoS dataset collected on Planet Lab , which is comprised of service invocation response time and throughput value from 343 users on 5,817 Web services at 32 time periods . The comprehensive experimental analysis shows that our approach achieves better prediction accuracy than other approaches .
Categories and Subject Descriptors H35 [ On line Information Services ] : Web based services ; I26 [ Artificial Intelligence ] : Parameter Learning
Keywords Web Service Recommendation , QoS , Collaborative Filtering , Tensor Factorization
1 .
INTRODUCTION
As the developing of Service oriented computing ( SOC ) , Web Service has become the standard technology for sharing data and software , and Web service users can compose services to accomplish a more complex task . Web services provide the means for such seamless integration of business processes across organizational boundaries [ 3 ] . Qualityof Service ( QoS ) encompasses important nonfunctional attributes such as performance metrics ( eg , response time ) ,
Copyright is held by the International World Wide Web Conference Committee ( IW3C2 ) . IW3C2 reserves the right to provide a hyperlink to the author ’s site if the Material is used in electronic media . WWW’14 , April 7–11 , 2014 , Seoul , Korea . ACM 978 1 4503 2744 2/14/04 .
Figure 1 : A motivating scenario security attributes , transactional integrity , reliability , scalability , and availability [ 18 ] . Web services environment demands greater availability of applications and introduce complexity of accessing and managing services . In addition , QoS is widely employed in describing non functional properties of Web Services for optimizing the Web service composition .
Since the number of functionally equivalent services offered on the web with different QoS properties is increasing , it is quite important to recommend services considering their non functional QoS properties . Although the Web service providers may declare the QoS properties of services ( eg , availability , response time , throughput , etc. ) , which are highly related to the Web service invocation context . Web service QoS value observed from the users is usually quite different from those value declared by the service providers , due to : ( 1 ) Web service performance is related to invocation time , because the network environment and service status ( eg , workload , number of clients ,etc . ) are changing over time ; ( 2 ) the user locations are distributed in different geographical locations which greatly influence the user observed QoS value of Web service . For these reasons , to carry out a QoS aware service recommendation system , predicting missing QoS value of service is often required . Nowadays there are some Collaborative Filtering ( CF ) Recommendation Frameworks to predict the service QoS value . But one significant limitation of most of the existing CF methods [ 24 , 31 , 30 , 17 , 6 ] , is that they are static models in which relations are assumed to be fixed in different temporal sequence where the Web service QoS properties are varying . Example . Figure 1 shows a scenario for finding the best QoS value of a Web service . The service users from differ
585 ent geographical locations submit their requests to the Web Service Recommender System at various time , specifying some criteria for service QoS parameters ( eg , responsiveness , availability , throughput ) The recommendation system then returns a list of Web services with best QoS value by taking comprehensive account of the users and services invocation context information . The recommended Web services can be exposed to service users as a Web service , API or widget .
In this scenario , we assume that some service users from Beijing , London , Los Angeles and New York invoke the Web service at different time ( eg , 8 , 9 , 10 , 11 o’clock local time ) , respectively . Now the recommendation system needs to predict the Web service QoS value which will be decided by the time context information of service users . Through the QoS prediction , the Service Oriented Architecture system designer can make more informed decisions on the Web service composition . As a result , a Temporal QoS aware Web Service Recommendation Framework is presented to predict missing QoS value at different service invocation time . Though this example , the user service intra relations are often represented by two dimensional matrix , which is used by the previous work [ 24 , 31 , 30 , 17 , 6 ] . We extend the two two dimensional user service matrix into a more complicated user service time triadic relations represented by three dimensional tensor , and present a novel tensor factorization ( TF ) [ 13 ] that is based on a generalization of matrix factorization ( MF ) [ 15 ] . The key idea of our temporal three dimensional TF approach is to replace the user service matrix in MF with the user service time interaction relations by considering the difference of QoS value at difference time . However , the QoS value is non negative , the conventional TF method dose not guarantee the result factors for non negativity . To deal with the non negativity issue , Nonnegative Tensor Factorization ( NTF ) , which is decomposed into a set of factor matrices , is an emerging research topic in recent years . Some NTF algorithms have been proposed in literatures [ 27 ] , and we use multiplicative updating rules to approximate the QoS value tensor .
Contributions .
In this paper , we clarify some intrarelations specific to personalized Web service QoS property based on temporal data analysis , and observe that the comprehensive knowledge of Web service QoS properties are difficult to acquire . The QoS information collection work requires much time and effort , and is sometimes even impractical ( eg , service invocations are various by different users at different time ) . A new temporal QoS aware recommendation approach based on tensor factorization is proposed to address the issue of Web service QoS value prediction with considering Web service invocation time . This framework collects QoS information from geographically distributed service users , and filters out qualified value as training data for predicting missing QoS value . After a period of collection , a QoS value dataset is produced , which contains different context information types : user , service and time . The relations among these objects are complicated . For example , users with similar location may get different service invocation response times at different invocation time . By performing analysis on the QoS information data , we propose a model based CF method to discover the latent factors that govern the associations among these multi type objects . Compared with prior related works , our main contributions can be summarized as follows .
1 . There exist the complicated relations among user,service and temporal information in the real world Web service QoS properties data . We discover the fact and utilize tensor to represent the triadic relations .
2 . An Non negative Tensor Factorization ( NTF ) approach is proposed to predict the Web service QoS value with considering service invocation time , and present a Temporal QoS Aware Web Service Recommendation Framework .
3 . We evaluate our approach experimentally using realworld Web service dataset , which contains more than 19 millions real world Web service invocation results from 343 distributed service users on 5,817 real world Web services at 32 time periods . Our real world Web service dataset has been published online1 .
The rest of the paper is organized as follows . Section 2 discusses related work , while Section 3 introduces the tensor preliminaries and notations . Section 4 presents the problem statement and our NNCP approach . Section 5 describes our implementation and experiments . Finally , Section 6 concludes the paper .
2 . RELATED WORK
Web Service QoS has been widely discussed for a long time . Zeng et al . [ 28 ] employ a five dimensional Web Service QoS property model ( ie , execution price , execution duration , reputation , availability , and reliability ) for dynamic Web service composition , and then they transfer QoS aware service selection into an optimization problem [ 29 ] . Alrifai et al . [ 2 ] propose an efficient service composition approach by considering both generic QoS properties and domain specific QoS properties . These previous QoS aware Web service research usually assume that the Web service QoS information is already known or can be easily obtained from the service providers and third party institution . However , there is so much missing QoS value to the service users in real world . Therefore , dealing with the prediction of missing QoS value is useful to advance the service composition .
The problem of predicting the missing QoS value of Web service has received a lot of attention during the last years . In order to obtain a accurate prediction of missing QoS value , a practical prediction algorithm is required . Among the previous algorithms , Collaborative Filtering ( CF ) is a family of popular methods , and has been widely used in commercial recommender [ 16 , 20 , 21 ] . Typical collaborative filtering algorithms can be categorized into two classes : neighborhood based methods and model based methods [ 15 ] . Neighborhood based method computes the similarity between users or items to make recommendation , which can be divided into two types : user based nearest neighbor and itembased nearest neighbor [ 31 ] . For example , a group of users with similar interests , the items selected by one user can be recommended to others in the group . In [ 24 ] , the authors propose a user based CF algorithm to predict the QoS value from similar Web service users . Zheng et al . [ 31 ] propose a hybrid method of user based and item based CF algorithm to predict the QoS value on real world Web services dataset . They developed an advanced Pearson Correlation Coefficient ( PCC ) measurement for user similarity computation , which addressed the problem that PCC often overestimates similarities of users who are actually not similar but happen to have similar QoS properties . Chen et al . [ 6 ] first discover the
1http://wwwservice4allorgcn/servicexchange/
586 great influence of user location in Web services QoS prediction and propose a novel region based hybrid CF algorithm . They integrate users into a hierarchy of regions according to both user locations and their QoS value , so that when identifying similar users for a specific user , the method only finds the region which the user belongs to . Jiang et al . [ 9 ] propose a personalized hybrid CF method which takes into account the influence of personalization of Web services when computing degree of similarity between users . It means that the more popular services should contribute the less degree to user similarity measurement .
Since neighborhood based methods are sensitive to sparse data , the low rank Matrix Factorization ( MF ) model [ 15 ] is widely used . MF characterizes both users and services by vectors of factors in a joint latent factor space of low dimension . The philosophy behind the model based method is that a QoS value relates not only to how similar Web service users preferences and services features are , but also to the relationship between users and services interaction . In the model based methods , training data is used to train a predictor model with fitting the user service matrix with lowrank approximations . Although , model based methods are considered more effective than those based on neighborhood , these two classes are often complementary . Recently , some researchers [ 14 , 17 , 30 ] blend them for obtaining better performance . In [ 30 ] , a model based method has been adopted to predict the Web service QoS value . The authors use the neighborhood based method to identify similar users , and on the basis , MF method is employed to construct a global model . Lo et al . [ 17 ] use the geographical information of Web services and users to find similar neighbors , and apply MF method with location based regularization to improve prediction accuracy .
The issue of the above concerns is that they deals with the user service two dimensional matrix data , without considering of the temporal information of Web service invocation . The absence of temporal information in QoS value prediction leads recommendation to suffering from the static model issue . We argue that temporal information is an essential element in QoS aware Web service recommendation , so the prediction model should consider using the temporal information to reveal the complex triadic relations of userservice time model , rather than the straightforward dyadic relations of user service model . To overcome the drawbacks of CF methods described above and learn the triadic relations from the QoS value data , a tensor factorization approach is proposed for Web service QoS value prediction . We take the advantage of model based method and extend it to model temporal three dimensional data . The CANDECOMP/PARAFAC ( CP ) model [ 13 ] is utilized to represent the triadic relations among user , service and time . In this paper , we deal with constructing a temporal threedimensional tensor whose element is the QoS value according to the triplet .user , service , timefi and proposing a nonnegative CP decomposition method [ 11 , 27 ] to approximate this temporal QoS value tensor .
In real world scenarios , the reason of limited work in the literature employing CF methods to predict Web service QoS value is the lack of real world Web service QoS dataset for experimental studies . Without the convincing and sufficient real world Web service QoS property data , the characteristics of Web service QoS value cannot be fully mined and the experimental results of the proposed prediction al
Notations A,B , X ,Y A , B,X ,Y A,B , X ,Y
A , B A(n ) A(n ) a,b a , b ' ⊗ ∗ ◦ ·
Table 1 : Notations of Tensor
Descriptions tensor(calligraphic letters ) matrix(upper case letters ) n mode matrix of the tensor n subspace matrix of the tensor vector(bold lower case letters ) scalar(lower case letters )
Khatri Rao product Kronecker product Hadamard product outer product inner product
In [ 1 ] , a Web service QoS gorithms cannot be justified . dataset is released , which is observed by one service user on 2,507 Web services . In [ 32 ] , totally 1,974,675 real world Web service invocations are executed by 339 service users on 5,825 real world Web service . The fact that the QoS data is static cannot reflect the latent factors that govern the association relations among user,service and time factors . In order to explore the influence of dynamic factor , our released dataset includes more than 19 millions realworld Web service invocations observed by 343 service users in heterogenous network environment on 5,817 Web services during 32 continuous time periods .
3 . PRELIMINARIES
A tensor is a higher order generalization of a vector ( ie , first order tensor ) and a matrix ( ie , second order tensor ) . Tensor factorization is an important technique in many applications , such as data mining , dimensionality reduction , chemometrics , signal processing , neuroscience , and web analysis [ 7 , 10 , 26 , 8 ] . Before clarifying our model , some basic notations and operations for CP model are first introduced . There are mainly two popular kinds of TF approaches : Tucker decomposition and CP decomposition . In this paper we focus on CP decomposition model where our model is based . 3.1 Notations and Operations In this paper , tensors are denoted by bold calligraphic upper case letters A,BA , BA , B ··· , matrices by bold upper case letters A,B··· , vectors by bold lower case letters a,b··· and scalars by lower case letters a , b·· · . A tensor is a multidimensional or N way array . An N way tensor is denoted as : AAA ∈ R I1×I2×···×IN , which has N indices ( i1 , i2,· ·· , iN ) and its elements are denoted by ai1i2···iN . In tensor terminology , the n mode matricization operation maps a tensor into a matrix . The n mode matrix of an N way tensor AAA are the In dimensional matrix obtained from AAA by varying the index in and keeping the other indices fixed , and the elements of AAA is mapped into the unfolding matrix A(n ) ∈ R In×(I1I2···In−1In+1···IN ) . For example , A(2 ) represents the mapping AAAI×J×K → AAAJ×IK . . The scalar product of two tensors A,BA,BA , B ∈ R I1×I2×···×IN is defined as : .A,BA , BA,Bfi = i1,i2··· ,iN ai1i2···iN bi1i2···iN . The n mode product of a tensor AAA by a matrix U ∈ R Jn×In is an I1 × . I2 × ··· × In−1 × Jn × In+1 × ··· × IN tensor given by ( AAA×n U)i1···in−1jnin+1···iN = in ai1···iN ujn in . The Frobenius norm of a tensor AAA is given by AAA = fiAAA,AAAfi More
( 2 )
587 where I is the indicator function which is equal to 1 when user u invokes Web service s at time t and equal to 0 otherwise . The optimal solution of the above problem is given by :
ˆU = A(1)(T'S)(T
T
T ∗ S
T
( 7 ) where ∗ denotes the Hadamard product . In the same way , the optimal solutions of S and T are given by :
S + λI )
,
†
T
T
ˆS = A(2)(T'U)(T ˆT = A(3)(T'S)(S
T ∗ U S ∗ U RAAA'
ˆAAA =
ˆU , ˆS , ˆT
=
T
U + λI )
†
,
T
U + λI )
†
,
( 8 )
( 9 )
ˆur ◦ ˆsr ◦ ˆtr ,
( 10 )
The approximation result of tensor ˆAAA can be written as : r=1
Above the derivation corresponding to ALS algorithm for CP decomposition , the pseudo code of this algorithm is given by Algorithm 1 . For each iteration , the primary cost of the computation complexity is Eq ( 7 10 ) , each of which is O(IJKRAAA + ( 2I + J + K)R2AAA + JKRAAA ) , and Eq ( 10 ) is O(IJKRAAA ) . In typical cases , the term ( IJKRAAA ) is much larger than the rest , so the computation complexity can be considered as O(IJKRAAA ) in one iteration .
Algorithm 1 : The ALS algorithm for CP decomposition Input : the tensor AAA , the rank R of tensor AAA , the regularization parameter λ . Output : the approximate tensor ˆAAA , three factor matrices ˆU , ˆS , ˆT . 1 : Procedure [ ˆAAA , ˆU , ˆS , ˆT ] = CP ALS(AAA , R , λ ) 2 : Initialize : U ∈ R small random value . 3 : Repeat 4 : Fix S , T . ˆU ← Eq ( 7 ) 5 : Fix U , T . ˆS ← Eq ( 8 ) 6 : Fix U , S . ˆT ← Eq ( 9 ) 7 : Until convergence or maximum iterations exhausted . 8 : ˆAAA ← Eq ( 10 ) 9 : Return : ˆAAA , ˆU , ˆS , ˆT . 10 : EndProcedure
J×R , and T ∈ R
I×R , S ∈ R
K×R by
4 . PROPOSED MODEL
For Web service users , the service QoS properties are not as accurate as the service provider declared . To obtain accurate Web service QoS value for every service user , we employ the Temporal QoS aware Web Service Recommendation Framework to make prediction of QoS value . As shown in Figure 3 , our QoS prediction framework collects Web services QoS information from different service users . A Web service user can obtain the service QoS value prediction through our prediction framework , if the service QoS information contributions of the user surpass the threshold . The more service QoS information contributions , the higher QoS value prediction accuracy can be achieved . After collecting a large number of QoS information , we filter some inferior QoS information for the training data and employ the prediction engine to generate the predictor model for
AAA ≈ RAAA'
Figure 2 : CP decomposition of a 3 way tensor into R components details on matrix unfolding of tensor can be found in [ 13 , 31 ] . A brief overview of important tensor notations is presented in Table 1 . 3.2 CP Decomposition
An N way tensor AAA ∈ R
I1×I2×···×IN is rank 1 if it can be written as the outer product of N vectors :
AAA = a ( 1 ) In for n = 1 , 2,·· ·N is a vector . This means
( 2 ) ◦ · ·· ◦ a where a(n ) ∈ R that each entry of the tensor can be written as :
( 1 ) ◦ a
( N )
,
AAAi1i2···iN = a
( 1 ) i1 a
( 2 ) i2
···a
( N ) iN ,
( 2 )
( n ) where a in is the inth element of the vector a(n ) .
The rank of tensor AAA , denoted rank(AAA ) = RAAA , is defined as the smallest number of rank 1 tensors . Then , the tensor A can be written as :
( 1 ) r ◦ a
( 2 ) r ◦ ·· · ◦a a
( N ) r
,
( 3 ) r=1
( n )
( n )
( n ) r
In×RAAA for n = 1 , 2 , ···N , and r ∈ R where the vector a 2 ,··· , a fi can be rewritten as the set of vectors .a ( n ) 1 , a a matrix A(n ) ∈ R In×RA . Such a decomposition is called CP rank decomposition as illustrated in Figure ( 2 ) . For instance , given a three dimensional tensor AAA ∈ R I×J×K , the n mode of AAA can be written as : A(1 ) ≈ U(T ' S)T , A(2 ) ≈ S(T'U)T , A(3 ) ≈ T(S'U)T , where ' denotes the Khatri.RAAA Rao product . Following [ 12 ] , the CP model can be concisely expressed as : AAA ≈ [ [U,S,T ] ] = r=1 ur ◦ sr ◦ tr . Using the notations defined above , the CP decomposition problem can be formulated as alternating least squares(ALS ) optimization problem :
AAA − [ [U,S,T]]2 F ,
1 2 min U,S,T
( 4 ) where ·F is the Frobenius norm.To avoid the issue of model over fitting , three regularization terms related to U,S and T are involved as follow : AAA − [ [U,S,T]]2
F + T2
F + S2
( U2
F ) , ( 5 )
+ min U,S,T
1 2
λ 2 where λ are regularization parameters .
The ALS approach fixes U and S to find the best T , then fixes U and T to find the best S , then fixes S and T to find the best U , and continues to repeat the entire procedure until some convergence criterion is satisfied . For example , given that S and T are fixed , the above optimal problem can be rewritten as : ffffffA(1 ) − ˆU(T ' S )
T ffffff2
F min
U
1 2
+
λ 2
I ,
( 6 )
588 Figure 3 : Temporal QoS Aware Web Service Recommendation Framework predicting the missing QoS value . Due to the space limitation , we mainly introduce the prediction algorithm principle in this paper . 4.1 Problem Statement
The research problem studied in this paper is stated as follows : Given a Web service QoS dataset of temporal information with user service interactions , recommend to each user under a given temporal context an optimal services list . To illustrate these concepts , the following example is given . A Toy Example : Consider the instance of recommending services to users in specific temporal context which is assigned to service invocation time in this paper . Then the .user , service , timefi triplets have the following attributes : • User : the set of all service users to whom Web services are recommended ; it is defined as UserID .
• Service : the set of all the Web services that can be recommended ; it is defined as ServiceID .
• Time : the Web service invocation time when the user invoke the service ; it is defined as TimeID .
Then the service QoS value assigned to a service invocation from a user also depends on where and when the service was invoked . For instance , a specific service is recommended to users in different locations , significantly depending on when they are planning to invoke it .
Each QoS value is described by three dimensionality according to userID , serviceID and timeID . Thus the QoS value is represented as points in the three dimensional space , with the coordinates of each point corresponding to the index of the triplet .userID , serviceID , timeIDfi . A straightforward method to capture the three dimensional interactions among the triplet .user , service , timefi is to model these relations as a tensor . The QoS value of Web service invocations from J services by I users at K time intervals are denoted as a tensor YYY ∈ R I×J×K , ie , a three dimensional tensor , with I × J × K entries which are denoted as YYY ijk : ( 1 ) YYY ijk = Rating indicates the missing QoS value that the service j has been invoked by user i under the context type k , and Rating is this service QoS value ; ( 2 ) YYY ijk = 0 indicates that the service has not been invoked . The real world Service QoS value dataset is very sparse , even though the density of the dataset collected by our system is only 30 % .
Figure 4 : Slices of time specific matrices with users and services are transformed into a temporal tensor
To obtain the missing QoS value in the user service time tensor , the Web service QoS observed by other service users can be employed for predicting the Web service for the current user . Once these initial Web service QoS value is obtained , our recommendation system will try to estimate the Web service QoS value which has not been obtained for the .user , service , timefi triplets by using the QoS value function T :
U serID × ServiceID × T imeID → Rating where U serID , ServiceID and T imeID are the index of users , services and time periods , respectively and Rating is the QoS value corresponding to the three dimensional index . As we can see from this example and other cases , an algorithm is needed to estimate the QoS value function T . In this paper , CP decomposition model is used to reconstruct the temporal three dimensional user service time tensor . As mentioned in Section 3 , the main idea behind CP decomposition model is to find a set of low rank tensors to approximate the original tensor . Our approach is designed as a two phase process . Firstly , the temporal QoS value tensor composed of the observed QoS value is constructed . Then we propose a non negative tensor factorization approach to predict the missing QoS value in the tensor . 4.2 Construct QoS Value Tensor
When a service user invokes a Web service , the QoS properties performance will be collected by our recommendation system . After running a period of time , the recommender accumulates a collection of Web service QoS property data , which can be represented by a set of quadruplets .U serID , ServicID , T imeID , Ratingfi(or .u , s , t , rfi for short ) . Using the QoS value data , a temporal three dimensional tensor YYY ∈ R I×J×K can be constructed , where I , J , K are the number of users , services and time periods , respectively . Each entry of tensor represents the QoS value of .u , sfi pair at time period k .
The three dimensional Temporal Tensor Construct algorithm is given in Algorithm 2 : the input is a set of Web service QoS value , and the output is the constructed temporal tensor YYY ∈ R I×J×K . Each frontal slice in tensor YYY corresponds to a .u , sfi pair QoS value matrix for each time interval . 4.3 Non negative CP Decomposition
In the real world , the Web service QoS value is always non negative , so the temporal QoS value tensor is presented
589 I×J×K .
Algorithm 2 :Temporal Tensor Construct Input : a set of quadruplets .u , s , t , rfi for Web service QoS value dataset . Output : a temporal tensor YYY ∈ R 1 : load all quadruplets .u , s , t , rfi of the Web service Qos 2 : use the set of .u , s , 1 , rfi to construct a p user,service matrix U(1 ) that takes all I users as the rows and all J services as the columns in the time of period 1 , 3 : the element of the matrix U(1 ) is the r of the quadruplet .u , s , t , rfi according to the corresponding .u , s , 1fi triplet , 4 : construct all the matrices U(1 ) , U(2 ) , ··· , U(K ) for K value , time periods ,
5 : an augmented matrix U can be built by horizontally concatenating all matrices as shown in Figure 4 ( a ) denoted as Y(1 ) , I×J×K as shown in Figure 4 ( b ) , each slice of tensor is one matrix of Y(1 ) .
6 : Construct tensor YYY ∈ R 7 : Return : YYY ∈ R I×J×K
RYYY'
I×RYYY + and T ∈ R as an non negative three way tensor YYY ∈ R I×J×K + composed components are a set of matrices : U ∈ R I×RYYY +
, and de , S ∈ I×RYYY + , here and elsewhere , R+ denotes R the non negative orthant with appropriate dimensions . As presented in the previous section , our goal is to find a set of factor matrices as the to approximate the tensor , whose rank is the number of the components . Adding the nonnegativity restriction to the CP decomposition model , we can get a non negative CP decomposition model ( NNCP ) . Our three dimensional NNCP decomposition model is given by :
YYY = ur ◦ sr ◦ tr + EEE ,
( 11 ) r=1 where the vectors ur , sr , tr are restricted to have only nonnegative elements and the tensor EEE ∈ R is errors or noise depended on the application .
I×J×K +
The QoS value tensor should be reconstructed for predicting all missing QoS value but the fitting Algorithm 1 for tensor is not based on the non negative orthant . A new fitting algorithm which approximates the tensor with nonnegative value should be designed . Firstly , we define a cost function to quantify the quality of approximation , which can be constructed using some measure of distance between two non negative tensors YYY and ˆYˆYˆY . One useful measure is simply the square of the Euclidean distance between YYY and ˆYYY ,
YYY − ˆYYY2
F =
( YYY ijk − ˆYYY ijk )
2
,
( 12 )
' ijk where YYY ijk is the Web service QoS value of j th service ˆYYY ijk is the approximation value , from i th user at k time , the lower bound is zero , and clearly vanishes if and only if YYY = ˆYYY . Then , we consider the formulations of NNCP as a optimal problem :
YYY ijk − RYYY' min ur ,sr ,tr
1 2 r=1 ur , sr , tr . 0 . st ur ◦ sr ◦ tr2 F ,
( 13 )
RYYY'
∂f
( i ) ∂u l
=
'
YYY ijk ≈ RYYY'
We use multiplicative updating algorithms [ 23 ] for factor matrices U , S and T to approximate the non negative tensor . Then we are easy to obtain the partial derivative of the objective Eq ( 13 ) :
( i ) l ( sr · sl)(tr · tl ) − u
YYY ijks
( k ) ( j ) l t l
( 14 ) r=1 j,k
( i ) where u is the l th column and i th row element of factor matrix U , sr is the r th vector of factor matrix S , l ∈ RYYY , l · denotes the inner product and for more details see [ 25 ] . Then we can obtain the following update rule by using a multiplicative update rule :
.RYYY l ← u
( i+1 )
( i ) l u r=1 u
. j,k YYY ijks r ( sr · sl)(tr · tl )
( j ) l t
( k ) l
( i )
,
( 15 ) the updating rules for the rest of factor matrices can be ( n ) easily derived in the same way , s are shown as l follows :
( n ) and t l
( j )
( k ) ( i ) l t l
. i,k YYY ijku r ( ur · ul)(tr · tl ) . i,j YYY iklu r ( ur · ul)(sr · sl )
( i ) l s
( j ) l
( k )
( j ) l
.RYYY ← s .RYYY ← t
( k ) l r=1 s r=1 t
( j+1 ) l s
( k+1 ) l t
;
,
( 16 )
( 17 ) where the vectors ur , sr , tr are composed of non negative value when they are initialized . So far we have described the details of NNCP algorithm for predicting the missing QoS value with non negative value . In summary , Algorithm 3 gives the whole factorization scheme for NNCP . In each iteration of our algorithm , the new value of ˆU , ˆS , ˆT is calculated by multiplying the current value by a factor depended on the quality of the approximation in Eq ( 11 ) . The quality of the approximation improves monotonically with the application of these multiplicative update rules . The convergence proof of the multiplicative rule was introduced by Lee and Seung [ 23 ] .
Given the latent factor matrices ˆU , ˆS , ˆT , the prediction QoS value of Web service j from service user i at time k is given by :
( i ) r s
( j ) r t
( k ) r . u
( 18 ) r=1
Notice that increasing the number RYYY of components allows us to represent more and more factor structures of the Web service QoS value . However , as the number of components increases , we go from under fitting to over fitting these structures , ie , we face the usual tradeoff between approximating complex structures and over fitting them .
5 . EXPERIMENTS
In this section , we introduce the experiment dataset , our evaluation metrics , and the experiment results . We use the QoS prediction accuracy to measure prediction quality , and address the following questions : ( 1 ) How do the tensor density and factor matrices dimensionality influence prediction accuracy ? The factor matrices dimensionality determines how many the latent factors which have direct influence on prediction accuracy . ( 2 ) How does our approach compare with other CF methods ?
590 I×J×K +
Algorithm 3 : Non negative CP decomposition algorithm Input : the tensor YYY ∈ R Output : three non negative factor matrices ˆU , ˆS , ˆT . 1 : Procedure [ ˆU , ˆS , ˆT ] = NNCP(YYY , R ) 2 : Initialize : U ∈ R
, the rank R of tensor YYY .
+ , and T ∈ R J×R
+ , S ∈ R I×R
K×R + by small non negative value .
ˆS ← Eq ( 16 )
ˆU ← Eq ( 15 )
3 : Repeat 4 : for l = 1 , ··· , I do 5 : 6 : end for 7 : for l = 1 , ··· , J do 8 : 9 : end for 10 : for l = 1 , ··· , K do 11 : 12 : end for 13 : Until convergence or maximum iterations exhausted . 14 : Return : ˆU , ˆS , ˆT 15 : EndProcedure
ˆT ← Eq ( 17 )
We implement the algorithms described in Section 4 with Matlab . For constructing the temporal QoS value tensor and solving the non negative CP decomposition , we use the Matlab Tensor Toolbox [ 4 ] . The experiments are conducted on a Dell PowerEdge T620 machine with 2 Intel Xeon 2.00GHz processors and 16GB RAM , running Window Server 2008 . 5.1 Dataset
To evaluate our proposed QoS prediction method in the real world Web service , we implement a ServiceXChange and a QoSDetecter . The ServiceXChange is a platform , more than 20,000 openly accessible Web services obtained by crawling Web service information from Internet . Recently we have integrated it with our other project Service4All 2 platform . We deploy our QoSDetecter on more than 600 distributed slices of Planet Lab3 , which is a global research network that supports the development of new network services . We filter out slices which have successfully invoked at least 50 Web services so that there are enough observations to be split in various proportions of training and testing set for our evaluation . Finally , 343 slices were selected as the Web service users , and 5,817 publicly available real world Web services are monitored by each slice continuously . The other of the more than 10,000 initially collected Web services are excluded in this experiment due to : ( 1 ) authentication required ; ( 2 ) refused by the provider ( eg , the Web service is hosted by a private golf club ) ; ( 3 ) permanent invocation failure ( eg , the Web service is shutdown ) . In this experiment , each 343 Planet Lab slice invokes all the Web services continuously . This experiment dataset is consist of these Web services QoS performances of 4 days from July 26 to 29 of 2013 in 32 time intervals lasting for 3 hours . We collect Web service invocation records from all the slices , and represent one observation in the dataset as a quadruplet .u , s , t , rfi . The dataset contains more than 19 million quadruplets , 343 users , 5,817 services and 32 time periods . Finally , we obtain two 343× 5817× 32 user servicetime tensors . One tensor contains response time value , and
2http://wwwservice4allorgcn/ 3http://wwwplanet laborg/
)
%
( r e b m u n n o i t a c o v n i i e c v r e S
30
25
20
15
10
5
0
<0.1
01−02 02−04 04−08 08−16 16−32 32−64 64−128
>12.8
Response time ( s )
( a )
)
%
( r e b m u n n o i t a c o v n i e c v r e S i
25
20
15
10
5
0
<0.1
01−02
02−04
04−08
08−16
16−32
32−64
64−128
128−256
256−512 512−1024
>102.4
Throughput ( kbps )
( b )
Figure 5 : Web Services QoS Distribution
Table 2 : Statistics of Web Service QoS Value
Statistics
Response Time Throughput
Scale Mean
Num . of service users Num . of Web services Num . of Time periods
0 200s 0.6840
343 5817 32
0 1000kbps
7.2445
343 5817
32 the other one contains throughput value . Response time is defined as the persistent time between a service user sending a request and receiving the corresponding response , while throughput is defined as the average rate of successful message size per second . The statistics of Web service QoS performance dataset are summarized in Table 2 . The distributions of response time and throughput are shown in Figure 5 , and the more details of dataset and experiment result are released online for further research4 . In Table 2 , the means of response time is 0.6840 seconds and throughput is 7.2445 kbps . In Figure 5 ( a ) shows that more than 95 % of the response time elements are smaller than 1.6 seconds , and Figure 5 ( b ) shows that more than 99 % of the throughput elements are smaller than 100 kbps . In this paper we only study the response time and throughput , our NNCP method can be used to predicting any other QoS value directly without modifications . The value of the element in the three dimensional tensor is the corresponding QoS value , when predicting value of a certain QoS value(eg , popularity , availability , failure probability , etc ) 5.2 Evaluation Measurements
Given a quadruplet .u , s , t , rfi as T = .u , s , t , rfi , we evaluate the prediction quality of our method in comparison with other collaborative filtering methods using Mean Absolute Error ( MAE ) and Root Mean Squared Error ( RMSE ) [ 30 ] . 4http://wwwservice4allorgcn/servicexchange/
591 Table 3 : Web Service QoS Performance Comparison ( A Smaller Value Means a Better Performance )
WS QoS Property
Response time
Throughput
Method
5 %
0.8156 UMean 0.5708 IMean 0.6861 IPCC 0.5965 UPCC 0.5135 WSRec RSVD 0.9162 NNCP 0.4838 UMean 8.3696 6.7947 IMean 8.2521 IPCC 8.0533 UPCC 6.3139 WSRec RSVD 9.6429 NNCP 6.0007
10 % 0.7247 0.4919 0.7972 0.6627 0.5252 0.8375 0.3589 8.4262 7.0433 8.6508 7.7259 6.2608 8.9885 5.4889
MAE 15 % 0.7161 0.4988 0.5146 0.6625 0.5268 0.8168 0.3254 8.0827 6.4606 8.1413 7.1103 5.9656 7.5998 4.9859
20 % 0.6758 0.4158 0.6014 0.6014 0.3947 0.8088 0.3178 7.7713 5.7356 8.8179 7.3437 5.9222 5.6261 4.5001
25 % 0.6361 0.4083 0.4073 0.5435 0.3717 0.7800 0.3148 7.7113 5.2033 8.3416 7.0486 4.7879 5.1030 4.0385
5 %
2.3807 2.3344 3.8511 2.3424 2.1838 6.6970 1.1470 32.7424 33.5447 41.4411 31.8687 23.0171 23.5928 10.8098
10 % 1.9589 2.0264 3.8336 1.8843 2.0207 5.2284 1.0685 35.3732 34.5250 40.9693 32.9089 24.6223 25.4172 10.1738
RMSE 15 % 1.9937 2.4146 3.3770 1.9331 2.1533 3.8099 1.0502 32.8413 25.6687 37.4096 29.6238 22.4384 20.3695 9.57085
20 % 1.6229 2.0878 2.5129 1.5129 1.7144 4.9581 1.0434 44.4918 22.7903 48.9877 29.2614 22.3709 19.7478 8.98722
25 % 1.4217 1.7216 1.9188 1.2671 1.2975 3.6419 1.0399 40.9749 19.3721 42.6471 25.1004 17.9580 19.9420 8.43047
MAE is defined as :
'
( ((YYY ijk − ˆYYY ijk
( ((
1|T| i,j,k
M AE =
( 19 ) where YYY ijk denotes actual QoS value of Web service j observed by user i at time period k , ˆYYY ijk represents the predicted QoS value of service j for user i at time period k , and |T| is the number of predicted value . The MAE is the average absolute deviation of predictions to the ground truth data , and places the equal weight on each individual difference . RMSE is defined as :
( YYY ijk − ˆYYY ijk )
2
( 20 )
)
' i,j,k
RM SE =
1|T| where smaller MAE ( or RMSE ) indicates better prediction accuracy . Since the errors are squared before they are averaged , the RMSE gives extra weight to relatively large errors . 5.3 Baseline Algorithms
For comparison purpose , we investigate whether our approach can be captured by the following 6 baseline algorithms , according to the prediction performance measured on the dataset . The baselines involved in this comparative experiment are listed below :
• UMean : This method uses the mean QoS value of all Web services QoS value from a service user who has invoked these services to predict the missing QoS value which this service user has not invoked .
• IMean : This method uses the mean QoS value of each Web service QoS value from all service users who have invoked this service to predict the missing QoS value which other service users have not invoked this service . • UPCC ( User based collaborative filtering method using Pearson Correlation Coefficient ) : This method is a classical CF algorithm that involves similar user behavior to make prediction [ 24 ] .
• IPCC ( Item based collaborative filtering method using Pearson Correlation Coefficient ) : This method is widely used in e commerce scenarios [ 22 ] .
• WSRec : This method is a hybrid collaborative algorithm that combines both UPCC and IPCC approaches , and employs both the similar users and similar Web services for the QoS value prediction [ 31 ] .
• RSVD : SVD ( Singular Value Decomposition ) is proposed by [ 5 ] in Collaborative Filtering area , and used to exploit the ‘latent structure’ of the original data . In this paper , we use the regularized SVD method proposed in [ 19 ] .
In this part , the above six baseline methods are compared with our NNCP approach given the same training and testing cases . Since the baseline algorithms cannot be directly applied to context aware prediction problem , we employ a special formulation for making the comparison with our NNCP approach . We consider the three dimensional user service time tensor as a set of user service matrix slices in terms of time interval . Firstly , we compress the tensor into a user service matrix . Each element of this matrix is the average of the specific .user , servicefi pair during all the time intervals . For each slice of the tensor , the baseline algorithms are applied for predicting the missing QoS value . Secondly , we compute the MAE and RMSE of these baselines , and make the comparison with our NNCP method .
In the real world , the dataset is usually very sparse since a service user usually only invokes a very small number of Web services . We randomly remove QoS value to sparse the dataset , and obtain the sparser dataset with different density from 5 % to 25 % , ascending by 5 % each time . For example , dataset density 5 % means that we randomly leave 5 % of the dataset for training and the other value becomes testing set . The parameter settings of our NNCP method is that latent features dimensionality set as 20 . The comparison result of this experiment are presented in Table 3 , and the detailed investigations of parameter settings will be provided in the following subsections .
From Table 3 , we can observe that our NNCP approach significantly improves the prediction accuracy , and obtains smaller MAE and RMSE value consistently for both responsetime and throughput with different matrix densities . The MAE and RMSE value of throughput are much larger than those of response time , because the range of throughput is 01000 kbps , while the range of response time is only 0 20 sec
592 onds . With the increase of dataset density from 5 % to 25 % , the MAE and RMSE value of our NNCP method becomes smaller , because denser dataset provides more information for the missing QoS value prediction . Our NNCP method achieves better performance than the baselines . But some factors of disharmony in the Table 3 are that the MAE and RMSE of baselines are not decreasing with the increase of dataset density in the strict sense . The fluctuation is cause by that prediction value of the baselines is only in one layer , and the value of testing set intersperse among 32 layers , which increase the uncertainty of prediction . 5.4 Impact of Dataset Sparseness
In this section , we investigate the impact of data sparseness on the prediction accuracy as shown in Figure 6 . We vary the density of the training matrix from 5 % to 25 % with a step of 5 % . Figure 6 ( a ) and ( b ) are the MAE and RMSE results of response time . Figure 6 ( c ) and ( d ) are the MAE and RMSE results of throughput . Figure 6 shows that : ( 1 ) With the increase of the training density , the performance of our method enhances indicating that better prediction is achieved with more QoS data . ( 2 ) Our NNCP method outperforms baselines consistently . The reason of this phenomenon is that baselines only utilize the two dimensional static relations of user service model without considering the more useful triadic relations of both the user and the service with the temporal information in the user service time model . 5.5 Impact of Dimensionality
The parameter dimensionality determines how many latent factors involve to tensor factorization . In this section , we investigate the impact of the dimensionality . We set the tensor density as 25 % , and vary the value of dimensionality from 1 to 20 with a step value of one .
Figure 7(a ) and ( b ) show the MAE and RMSE results of response time , and Figure 7(c ) and ( d ) show the MAE and RMSE results of throughput . Figure 7 shows that with the increase of latent factor number from 1 to 20 , the value of MAE and RMSE keeps a declining trend . These observed results coincide with the intuition that relative larger number of latent factor produce smaller error ratio . But , more factors will require longer computation time and storage space . Moreover , when the dimensionality exceeds a certain threshold , it may cause the over fitting problem , which will degrade the prediction accuracy .
6 . CONCLUSIONS
Matrix Factorization is one of the most popular approaches to CF but the two dimension model is not powerful to tackle the triadic relations of temporal QoS value . We extend the MF model to three dimensions through the use of tensor and employ the non negative tensor factorization approach to advance the QoS aware Web service recommendation performance in considering of temporal information . A systematic mechanism for Web service QoS value collection is designed and real world experiments are conducted . In the experimental results , a higher accuracy of QoS value prediction is obtained with using the three dimensional user service time model , when comparing our method with other standard CF methods .
In this paper , our recommendation approach only considers and models the relations between QoS value and the triplet .user , service , timefi . But in other cases , service users in different geographic locations at the same time may observe different QoS performance of the same Web service . Besides the temporal contextual information , more contextual information that influences the client side QoS performance ( eg , the workload of the service servers , network conditions of the users , etc . ) should be considered to improve the prediction accuracy .
In our future work , more real world Web services will be monitored , and more QoS properties and contextual information will be collected . Since there are so many CF methods , we also consider to explore an ensemble method for aggregating various CF algorithms to predict missing QoS value .
7 . ACKNOWLEDGMENTS
This work was supported by National Natural Science Foundation of China ( No . 61103031 , No . 61370057 ) , China 863 program ( No . 2012AA011203 ) , China 973 program ( No . 2014CB340300 , No . 2014CB340304 ) , A Foundation for the Author of National Excellent Doctoral Dissertation of PR China ( No . 201159 ) , and Beijing Nova Program(2011022 ) . We are pleased to acknowledge Mingyue Liang for collecting and preparing the dataset .
8 . REFERENCES [ 1 ] E . Al Masri and Q . H . Mahmoud . Investigating web services on the world wide web . In Proceedings of the 17th international conference on World Wide Web , pages 795–804 . ACM , 2008 .
[ 2 ] M . Alrifai and T . Risse . Combining global optimization with local selection for efficient qos aware service composition . In Proceedings of the 18th international conference on World wide web , pages 881–890 . ACM , 2009 .
[ 3 ] M . Alrifai , D . Skoutas , and T . Risse . Selecting skyline services for qos based web service composition . In Proceedings of the 19th international conference on World wide web , pages 11–20 . ACM , 2010 .
[ 4 ] B . W . Bader , T . G . Kolda , et al . Matlab tensor toolbox version 25 Available online , January 2012 . [ 5 ] D . Billsus and M . J . Pazzani . Learning collaborative information filters . In ICML , volume 98 , pages 46–54 , 1998 .
[ 6 ] X . Chen , X . Liu , Z . Huang , and H . Sun . Regionknn : A scalable hybrid collaborative filtering algorithm for personalized web service recommendation . In Web Services ( ICWS ) , 2010 IEEE International Conference on , pages 9–16 . IEEE , 2010 .
[ 7 ] A . Cichocki , R . Zdunek , A . H . Phan , and S i Amari .
Nonnegative matrix and tensor factorizations : applications to exploratory multi way data analysis and blind source separation . Wiley . com , 2009 .
[ 8 ] L . Hu , J . Cao , G . Xu , L . Cao , Z . Gu , and C . Zhu .
Personalized recommendation via cross domain triadic factorization . In Proceedings of the 22nd international conference on World Wide Web , pages 595–606 . International World Wide Web Conferences Steering Committee , 2013 .
[ 9 ] Y . Jiang , J . Liu , M . Tang , and X . Liu . An effective web service recommendation method based on personalized collaborative filtering . In Web Services
593 Response Time
Response Time
Throughput
Throughput
0.5
0.45
E A M
0.4
0.35
0.3
E A M
0.345
0.34
0.335
0.33
0.325
0.32
0.315
0.31
1.15
E S M R
1.1
1.05
1
5
10
15
20
25
Tensor Density ( % )
( b )
E A M
6.5
6
5.5
5
4.5
4
3.5
3
5
10
15
20
25
Tensor Density ( % )
( c )
E S M R
11
10.5
10
9.5
9
8.5
8
Figure 6 : Impact of Tensor Density ( Dimensionality = 20 )
Response Time
Throughput
5
10
15
20
25
Tensor Density ( % )
( a )
Response Time
5
10
15
20
25
Tensor Density ( % )
( d )
Throughput
E S M R
1.15
1.13
1.11
1.09
1.07
1.05
1.03
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
Dimensionality
( b )
E A M
4.2
4.18
4.16
4.14
4.12
4.1
4.08
4.06
4.04
4.02
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
Dimensionality
( c )
E S M R
9.3
9.2
9.1
9
8.9
8.8
8.7
8.6
8.5
8.4
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
Dimensionality
( d )
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
Dimensionality
( a )
Figure 7 : Impact of Factor Matrices Dimensionality ( Tensor Density = 25 % )
( ICWS ) , 2011 IEEE International Conference on , pages 211–218 . IEEE , 2011 .
Proceedings of KDD cup and workshop , volume 2007 , pages 5–8 , 2007 .
[ 10 ] J . Kim . Nonnegative matrix and tensor factorizations ,
[ 20 ] Y . Ren , G . Li , and W . Zhou . Automatic Generation of least squares problems , and applications . 2011 .
[ 11 ] J . Kim and H . Park . Fast nonnegative tensor factorization with an active set like method . In High Performance Scientific Computing , pages 311–326 . Springer , 2012 .
[ 12 ] T . G . Kolda . Multilinear operators for higher order decompositions . United States . Department of Energy , 2006 .
[ 13 ] T . G . Kolda and B . W . Bader . Tensor decompositions and applications . SIAM review , 51(3):455–500 , 2009 .
[ 14 ] Y . Koren . Factorization meets the neighborhood : a multifaceted collaborative filtering model . In Proceedings of the 14th ACM SIGKDD international conference on Knowledge discovery and data mining , pages 426–434 . ACM , 2008 .
[ 15 ] Y . Koren , R . Bell , and C . Volinsky . Matrix factorization techniques for recommender systems . Computer , 42(8):30–37 , 2009 .
[ 16 ] G . Linden , B . Smith , and J . York . Amazon . com recommendations : Item to item collaborative filtering . Internet Computing , IEEE , 7(1):76–80 , 2003 .
[ 17 ] W . Lo , J . Yin , S . Deng , Y . Li , and Z . Wu .
Collaborative web service qos prediction with location based regularization . In Web Services ( ICWS ) , 2012 IEEE 19th International Conference on , pages 464–471 . IEEE , 2012 .
[ 18 ] M . P . Papazoglou , P . Traverso , S . Dustdar , and
F . Leymann . Service oriented computing : State of the art and research challenges . Computer , 40(11):38–45 , 2007 .
[ 19 ] A . Paterek . Improving regularized singular value decomposition for collaborative filtering . In
Recommendations from Data : A Multifaceted Survey . Deakin University , School of Information Technology , 2011 .
[ 21 ] P . Resnick , N . Iacovou , M . Suchak , P . Bergstrom , and
J . Riedl . Grouplens : an open architecture for collaborative filtering of netnews . In Proceedings of the 1994 ACM conference on Computer supported cooperative work , pages 175–186 . ACM , 1994 .
[ 22 ] B . Sarwar , G . Karypis , J . Konstan , and J . Riedl .
Item based collaborative filtering recommendation algorithms . In Proceedings of the 10th international conference on World Wide Web , pages 285–295 . ACM , 2001 .
[ 23 ] D . Seung and L . Lee . Algorithms for non negative matrix factorization . Advances in neural information processing systems , 13:556–562 , 2001 .
[ 24 ] L . Shao , J . Zhang , Y . Wei , J . Zhao , B . Xie , and
H . Mei . Personalized qos prediction forweb services via collaborative filtering . In Web Services , 2007 . ICWS 2007 . IEEE International Conference on , pages 439–446 . IEEE , 2007 .
[ 25 ] A . Shashua and T . Hazan . Non negative tensor factorization with applications to statistics and computer vision . In Proceedings of the 22nd international conference on Machine learning , pages 792–799 . ACM , 2005 .
[ 26 ] J T Sun , H J Zeng , H . Liu , Y . Lu , and Z . Chen .
Cubesvd : a novel approach to personalized web search . In Proceedings of the 14th international conference on World Wide Web , pages 382–390 . ACM , 2005 .
[ 27 ] M . Welling and M . Weber . Positive tensor factorization . Pattern Recognition Letters , 22(12):1255–1261 , 2001 .
594 [ 28 ] L . Zeng , B . Benatallah , M . Dumas , J . Kalagnanam ,
[ 31 ] Z . Zheng , H . Ma , M . R . Lyu , and I . King . Wsrec : A and Q . Z . Sheng . Quality driven web services composition . In Proceedings of the 12th international conference on World Wide Web , pages 411–421 . ACM , 2003 . collaborative filtering based web service recommender system . In Web Services , 2009 . ICWS 2009 . IEEE International Conference on , pages 437–444 . IEEE , 2009 .
[ 29 ] L . Zeng , B . Benatallah , A . H . Ngu , M . Dumas ,
[ 32 ] Z . Zheng , Y . Zhang , and M . R . Lyu . Distributed qos
J . Kalagnanam , and H . Chang . Qos aware middleware for web services composition . Software Engineering , IEEE Transactions on , 30(5):311–327 , 2004 .
[ 30 ] Z . Zheng , H . Ma , M . Lyu , and I . King . Collaborative web service qos prediction via neighborhood integrated matrix factorization . 2012 . evaluation for real world web services . In Web Services ( ICWS ) , 2010 IEEE International Conference on , pages 83–90 . IEEE , 2010 .
595
