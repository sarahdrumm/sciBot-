Community Structure for Efficient Information Flow in
‘ToS;DR’ , a Social Machine for Parsing Legalese
Reuben Binns , David Matthews Web Science Doctoral Training Centre
{rb5g11,dm1x07}@sotonacuk
University of Southampton
Southampton , UK
ABSTRACT This paper presents a case study of ‘Terms of Service ; Didn’t Read’ , a social machine to curate , parse , and rate website terms and privacy policies . We examine the relationships between its human contributors and machine counterparts to determine community structure and information flow .
Categories and Subject Descriptors H12 [ User/Machine Systems ] : Human information processing ; G23 [ Discrete Mathematics ] : Applications
General Terms Human Factors , Measurement , Theory
Keywords Social Machines ; Terms of Service ; Privacy ; Legal Informatics ; Network Science , Community structure
1 .
INTRODUCTION
Social machines are new combinations of human and machine activity that engage in complex activities and solve problems which were previously difficult or costly for humans or machines to do alone [ 6 ] . An interesting application of social machines is to the curation , analysis and rating of legal documents and advice . Contracts , terms of service , privacy policies , and licenses all serve important functions in a range of online and offline interactions . However , they incur significant costs on interacting parties as they are often written in complex legalistic language ( sometimes referred to as ‘legalese’ ) which is time consuming and difficult for individuals to understand without formal training . In addition , despite advances in automatic parsing techniques made in semantic processing and legal informatics [ 2 , 7 ] , computational processes alone may be insufficient . Instead , social machines aimed at handling these tasks and functions are emerging . These systems aim to capture the activity of human actors who write , develop , read , modify , sign , or abide
Copyright is held by the International World Wide Web Conference Committee ( IW3C2 ) . IW3C2 reserves the right to provide a hyperlink to the author ’s site if the Material is used in electronic media . WWW’14 Companion , April 7–11 , 2014 , Seoul , Korea . ACM 978 1 4503 2745 9/14/04 . http://dxdoiorg/101145/25679482578833 by such texts , and aggregate that activity to produce new content and services .
We used an existing classificatory framework for social machines to search for and identify systems in this area [ 6 ] . For the purposes of this paper , our broader analysis of the domain of social machines for parsing legalese has been discarded . We focus here on just one case study , the ‘Terms of Service ; Didn’t Read’ project , a platform for analysing and rating website terms and privacy policies .
2 . CASE STUDY : TOS;DR
The ToS;DR platform has around 500 users , who communicate primarily through an open mailing list . Its stated aim is to ‘fix the biggest lie on the internet’ namely , the statement that ‘I have read and agreed to the terms’ . Participants identify , discuss , and annotate clauses in terms ofservice and privacy policies , rating them as either ‘good’ , ‘bad’ , or ‘neutral’ . This activity generates the raw data which drives the service – as they explain it , ‘every thread on the mailing list is a data point’ . The number of good , bad and neutral points are tallied to produce an overall rating of a policy . The ratings serve data via an API to other services including a browser plugin .
In order to keep track of changing policies , an automated web crawler called ToSBACK regularly crawls an index of websites and notifies the human participants of any changes to the policies which may need to be reviewed . Any participant can add a website to the index , which is a list of XPath addresses .
The ToS;DR platform provides a case study of how legalese text can be parsed through a social machine . The system receives an input of ‘raw legalese’ , analyses its parts in terms of ‘good’ and ‘bad’ , and outputs an overall score . An interesting aspect of this process is the community structure and the way information flows within it . In order to explore this we used the Girvan and Newman ( GN ) algorithm for identifying communities in complex networks [ 3 ] . We ran the same analysis on the data before and after the introduction of the ToSBACK crawler , in order to test how the introduction of a computational actor affected community structure . 2.1 Method
We built two graphs G1 and G2 corresponding to the mailing list archive before and after the ToSBack bot began contributing . The vertex sets of both graphs are made up of all the regularly interacting contributors to the mailing list . In total , 2,345 interactions were analysed , from between 28 35 active users . An edge was placed between two vertices if
881 the relevant contributors responded , or were responded to by another contributor . These edges were then weighted by the number of interactions between the relevant contributors . Finally we applied the GN algorithm to both graphs . GN detects bottlenecks in the graph of social interactions and splits the graph along these bottlenecks into a nested hierarchy of communities [ See appendix 4 ] .
2.2 Results
Tree T1 ( Figure 1 ) was built via the GN algorithm from the mailing list prior to the introduction of the ToSBack bot , and corresponds to a nested hierarchy of communities . The vertex labelled 1 represents the entire mailing list and every interaction between contributors , whereas the vertices 2 and 17 represent sub communities that we will call C2 and C17 respectively . Since 2 is adjacent to 3 and 4 there also exist sub communities of C2 that we denote C3 and C4 . One can deduce from the GN algorithm that leaf vertices of T1 correspond to a single contributor , thus C3 is a community of precisely 1 person . On the other hand C4 indicates a much larger community – ( C2 without one contributor ) .
In general a subtree of the tree associated to a network using the GN algorithm that is “ close ” to a line indicates a hub and spoke community . We have highlighted four linelike subtrees in T1 ; these subtrees can be recognised as the areas of discussion initiated by or frequently involving particular members .
We can formalise the notion of “ line like ” subtrees by analysing the symmetry of a tree . One can measure how symmetric a tree is by calculating the number of permutations , |Aut(T )| , of the vertices ( of that graph ) that preserve adjacent vertices [ 1 ] . We call the set of such permutations the automorphism In general a low |Aut(T )| coincides with the group of T . presence of one or several long line like subtrees . We calculated that |Aut(T1)| = 16 and | Aut(T2)| = 24 . This shows a marked increase in the cardinality of the automorphism group and therefore increased symmetry which is further entrenched by normalisation of Aut(T ) .
Figure 1 : The tree , T1 , built via the GN algorithm that corresponds to the mailing list prior to the ToSBack bot contributions .
Figure 2 : The tree , T2 , built via the GN algorithm that corresponds to the mailing list after the ToSBack bot contributions began . Vertex 17 [ green ] indicates the bot .
2.3 Discussion
We see two distinct community structures before and after the introduction of the ToSBack bot . Notice the asymmetry of the very long branch ( red in T1 ) , which represents one particular user ’s tendency to interact with a disproportionate number of contributors . In contrast , after the introduction of the bot , the network is more balanced with no one information hub .
One explanation for the new structure is suggested by research into how natural structures become optimised . Selfsimilarity in natural structures like rivers ensures that these structures develop in an optimal way [ 5 ] . Guimera et . al . show that this principle is also true for communities ; they tend to self organise to form an optimal structure [ 4 ] . One way of measuring self similarity in a graph is to find the order of the symmetry group or group of automorphisms of that graph . The increased symmetry in T2 may therefore be a result of self organisation that occurred after the introduction of TosBack , allowing for more efficient dissemination of information .
Finally , one particular user began interacting heavily with the bot , accounting for the overwhelming majority of interactions with the bot ( 86% ) . During this period , the user ’s importance in the network grew , triggering more responses than in the previous period ( while her total contributions remained stable ) . A possible explanation for this is that this user became a filter between the new content generated by the bot and other ( human ) participants .
3 . CONCLUSION
This paper introduces a novel technique for analysing community structure within social machines using the GN algorithm . Our analysis suggests that the introduction of a computational actor may have increased the symmetry of the community structure , with workflows changing and humans re positioning themselves around it . Such symmetry has been shown to improve a system ’s information processing efficiency . For the ToS;DR social machine , where the translation of legalese into a human friendly format is costly in terms of information processing , efficient information flow is important to success . We therefore believe this method may also be usefully applied to the study of other social machines where efficiency of information flow is important .
4 . ACKNOWLEDGMENTS
This research was funded by the RCUK Digital Economy Programme , EP/G036926/1 . Thanks also to Hugo Roy , project lead at ToS;DR for background information .
882 5 . REFERENCES [ 1 ] Bollob´as , B . Modern graph theory , vol . 184 . Springer ,
1998 .
[ 2 ] Francesconi , Enrico , e . a . Semantic processing of legal texts : Where the language of law meets the law of language . Springer , 2010 .
[ 3 ] Girvan , M . , and Newman , M . E . Community structure in social and biological networks . Proceedings of the National Academy of Sciences 99 , 12 ( 2002 ) , 7821–7826 .
[ 4 ] Guimera , Roger , e . a . Self similar community structure in a network of human interactions . Physical review E 68 , 6 ( 2003 ) .
[ 5 ] Murray , C . D . The physiological principle of minimum work : I . the vascular system and the cost of blood volume . In Proceedings of the National Academy of Sciences of the United States of America ( 1926 ) .
[ 6 ] Shadbolt , Nigel R . , S . D . A . S . E . V . K . M . Y . Y . , and Hall , W . Towards a classification framework for social machines . In SOCM2013 : The Theory and Practice of Social Machines , Rio de Janeiro , Brazil ( 2013 ) .
[ 7 ] Spinosa , PierLuigi , e . a . Nlp based metadata extraction for legal text consolidation . In Proceedings of the 12th International Conference on Artificial Intelligence and Law . ( 2009 ) , ACM .
APPENDIX Girvan and Newman Algorithm :
Let G be a simple weighted graph with edge and vertex sets E(G ) and V ( G ) respectively . The importance of an individual edge eij ∈ E(G ) is commonly calculated in terms of edge betweenness centrality which is defined as follows :
β(eij ) =
σuv(eij )
σuv
. u.=v∈V ( G ) where σuv is the number of shortest paths from vertex u to v and σuv(eij ) is the number of those shortest paths that pass through edge eij .
In order to determine community structure we will apply the Girvan and Newman ( GN ) algorithm [ 3 ] which associates a binary , rooted tree , T , with a simple weighted graph G as follows :
( i ) The root of T is assigned to be the whole graph G . ( ii ) The edge , eij , with the highest betweeness centrality in
G is determined .
( iii ) Edge eij is removed from G . ( iv ) If step ( iii ) disconnects G then connect two vertices to the root of T ( these vertices correspond to the connected components of G ) .
( v ) Iterate until there are no remaining edges in G .
It has been shown [ 3 ] that the degree of cohesion in a network can be detected via the GN algorithm and it has been used to identify communities in structures as diverse as scientific collaboration networks , food webs and e mail networks [ 3 , 4 ] .
883
