User Satisfaction in Competitive Sponsored Search
David Kempe
Department of Computer Science University of Southern California dkempe@usc.edu
Brendan Lucier Microsoft Research brlucier@microsoft.com
ABSTRACT We present a model of competition between web search algorithms , and study the impact of such competition on user welfare . In our model , search providers compete for customers by strategically selecting which search results to display in response to user queries . Customers , in turn , have private preferences over search results and will tend to use search engines that are more likely to display pages satisfying their demands .
Our main question is whether competition between search engines increases the overall welfare of the users ( ie , the likelihood that a user finds a page of interest ) . When search engines derive utility only from customers to whom they show relevant results , we show that they differentiate their results , and every equilibrium of the resulting game achieves at least half of the welfare that could be obtained by a social planner . This bound also applies whenever the likelihood of selecting a given engine is a convex function of the probability that a user ’s demand will be satisfied , which includes natural Markovian models of user behavior .
On the other hand , when search engines derive utility from all customers ( independent of search result relevance ) and the customer demand functions are not convex , there are instances in which the ( unique ) equilibrium involves no differentiation between engines and a high degree of random√ ness in search results . This can degrade social welfare by a N ) relative to the social optimum , where N is factor of Ω( the number of webpages . These bad equilibria persist even when search engines can extract only small ( but non zero ) expected revenue from dissatisfied users , and much higher revenue from satisfied ones .
Categories and Subject Descriptors H.4 [ Information Systems Applications ] : Miscellaneous
Keywords search engine ; competition ; game theory ; equilibrium ; user satisfaction
Copyright is held by the International World Wide Web Conference Committee ( IW3C2 ) . IW3C2 reserves the right to provide a hyperlink to the author ’s site if the Material is used in electronic media . WWW’14 , April 7–11 , 2014 , Seoul , Korea . ACM 978 1 4503 2744 2/14/04 . http://dxdoiorg/101145/25664862567994
1 .
INTRODUCTION
One of the most central tenets of economic market theory is that competition between vendors will benefit consumers , whether by driving down prices , encouraging product differentiation , or increasing the overall quality of goods . This belief is supported by many models and a long history of empirical studies . ( See , eg , [ 14 , 20 ] for classic overviews . ) In a market where consumers directly buy products from vendors , these benefits of competition are clear : given a choice between multiple competing products , a customer can be expected to choose whichever he finds most appealing at its given price . This dynamic naturally leaves inferior and overpriced products unsold .
In this paper , we analyze a game of competition between search engines , and its impact on the welfare of the users . The main difference between the market for sponsored search and classic oligopoly models is that in sponsored search , users are not the customers ( since search results are provided to them for free ) , but the product , which is sold to advertisers . As a result , a search engine might have an interest in satisfying users only inasmuch as it can monetize their visit and satisfaction — this results in a potentially serious misalignment of incentives , and thus loss in user welfare .
At a high level , a competition between search engines is essentially a competition between ( potentially randomized ) algorithms that return ordered collections of webpages in response to search queries . A query typically does not completely determine which web pages are being searched for.1 As a result , search engines will generally not be able to deterministically satisfy every user ; in return , a searcher may not know whether a set of results will satisfy his demand before choosing a search provider.2
If there is only a single engine that acts as a monopolist , the algorithmic solution to the web search problem is clear : given a query , the engine should display the pages that maximize the probability that the user is satisfied . ( We assume that engines have estimates of searchers’ probabilities for desiring different pages . ) When multiple engines compete for customers , it is less clear how the engines will behave at equilibrium . Will they differentiate their search results to capture different parts of the market , or will competition perversely drive them toward displaying esoteric webpages in their rankings , degrading the overall user experience ?
The main insight of our work is that the answer depends on two features of the competition : ( 1 ) the alignment of
1Think of polysemy , or simply different information needs of different users . 2In this sense , search results are an “ experience good ” [ 19 ] .
699 utility between the engines and users , and ( 2 ) how users respond to search result quality . In order to elaborate on these insights , we briefly describe some features of our basic model of competitive search ( The missing parts of the model are defined in Section 2 . )
A brief overview of the model .
K search engines are competing for the attention of users , by displaying the set of N web pages in some order . Each query by a user3 induces a known probability distribution over subsets S of web pages ; the probability associated with the set S is the probability that the user would be satisfied upon seeing at least one page in S . When the query arrives , each search engine can select ( a distribution over ) the order in which the N pages are displayed . In addition to the set S , the user ’s type also includes a patience threshold t : he is satisfied if the first t pages in the ordering contain at least one page from S .
Based on the distributions of orders in which the K search engines display pages , a user interested in a set S will choose an engine to visit . The choice can be probabilistic , and will be correlated in some way with search performance . We assume that the probability of choosing engine i is monotone non decreasing in the probability that i would satisfy the user , and monotone non increasing in the probabilities that the competing engines i = i would satisfy him . This model of user behavior is very general , allowing for many concrete instantiations of such selection rules , including natural Markovian models4 , proportional choice , and others .
We note that even though a user ’s choice depends on the search engines’ algorithms , the intended interpretation is not that users know their desired webpages in advance ( which would eliminate the need for search engines ) . Rather , our model is intended to capture the fact that the fraction of users choosing an engine can depend , possibly in the long run , on the likelihood that a query on a certain topic will result in satisfactory search results .
It remains to describe the search engine payoffs in the game . When a user visits a search engine , it derives revenue by showing ads to the user . In sponsored search , the user is shown ads that are aligned with his perceived intent . Thus , even conditioned on a user having chosen a given engine , the revenue generated can be correlated with how well the engine inferred the user ’s intent , which is correlated with whether the user was satisfied by the search results . Motivated by this , we define engine utilities as follows : an engine receives a payoff of 1 for every user that visits the engine and is satisfied , and a payoff of β ∈ [ 0 , 1 ] for users that visit the engine but are not satisfied . That is , when β = 1 an engine receives full benefit from each user regardless of the search results , whereas β = 0 implies that an engine receives no revenue from a customer if it presents irrelevant results .
There is a natural interpretation of the parameter β in terms of the type of advertising chosen by the search engines . When using per impression advertising ( eg , banner ads ) , the search engine receives the full payment from the advertiser when a user visits , regardless of satisfaction ; this corresponds to β = 1 . On the other hand , with per click advertising , the search engine is paid only when a user clicks
3whom we can imagine as drawn from an infinite population 4For example , a user might stick with his current engine until it fails to satisfy a query , at which point he switches to an alternative . on an ad , which will be highly correlated with the relevance of the results and ads displayed ; thus , pure per click advertising corresponds to β = 0 . A mix of the two advertising models naturally gives rise to intermediate values of β .
We emphasize that even in the extreme case of β = 1 ( a fully per impression advertising model ) , user satisfaction is still relevant as it provides a way to attract users away from competing engines . The difference lies in how a user is valued , given that he has already made his choice about which engine to use .
Our Results .
We find that the outcome of competition depends heavily on both the value of β ( ie , on whether or not an engine derives direct benefit from unsatisfied users ) , and on the form of the selection rule ( ie , how users respond to changes in satisfaction probability ) . Our main analytical result , informally stated , is the following dichotomy :
1 . If β = 0 ( search engines obtain revenue only when a user is satisfied ) , or if the engine selection rule is convex , then the equilibrium ( which is essentially unique ) will have a large amount of specialization . Engines will choose deterministic strategies aimed at targeting particular subsets of the users . Regardless of the number of search engines , the Price of Anarchy is bounded by 2 , even for mixed or correlated equilibria , and this bound is tight . In other words , competition degrades user satisfaction at most by a factor 2 compared to the outcome if engines were to pool their resources to best satisfy users .
2 . In contrast , if β > 0 , then for a large class of nonconvex engine selection rules , there exist symmetric equilibria , ie , all engines use the same algorithm . In these equilibria , there is no specialization , meaning that users are no better off than with a single engine . In fact , there are cases in which the equilibria can be worse than the optimal single engine solution , with a N ) even when K = 2 . pure Price of Anarchy of Ω( √ When β = 1 we show that this equilibrium is unique , N ) . and hence even the pure Price of Stability is Ω(
√
Thus , informally stated , when search engines only want to satisfy viewers ( eg , because they use purely per click advertising ) , searcher welfare is guaranteed to be close to the social optimum , whereas it can be very far from optimum when search engines only want to attract viewers ( eg , because they use purely per impression advertising ) . However , these inefficiencies vanish under certain models of user behavior that result in convex selection rules . The intuition behind this phenomenon is that convexity incentivizes engines to have high satisfaction probability for a few user types , rather than infrequently satisfying many types . As a concrete example , we show that convexity occurs under a natural class of Markovian models of user behavior .
Related Work .
Our model is closely related to the study of competitive algorithm design due to Immorlica et al . [ 7 ] . In that work , two algorithms ( for a general optimization problem ) compete to maximize the probability that they will outperform their opponent on an ( unknown , randomly selected ) input . Competitive search is given as an example in [ 7 ] , though
700 their model differs significantly from our own : in their version , the goal of each engine is to place a single desired page closer to the top of the search results than the opponent . The all or nothing nature of this goal creates some unintuitive best response strategies , and may be questionable in terms of modeling actual web searcher behavior . In contrast , we focus on a richer model of competition between search algorithms , and explore the ( in)efficiency of equilibria for this class of games .
A somewhat similar model of search engine competition was proposed by Khoussainov and Kushmerick [ 9 , 10 ] . They consider a metasearcher that directs queries to specialized engines , and propose and experimentally evaluate reinforcement learning approaches for the search engines .
Differentiation between competing search engines has been studied under economic models by Mukhodhyay , Telang , and Rajan [ 16 ] . They primarily focus on vertical differentiation , ie , why lower quality search engines can survive in a market , as well as a model of horizontal differentiation that somewhat resembles Hotelling ’s model for competition [ 6 ] . Competition for user participation has been modeled in the context of auctions [ 13 , 15 , 17 ] . In these settings , each auctioneer selects a mechanism ; bidders then select an auction to participate in and decide on their bidding strategy . The revenue of a single search engine has been studied under various models of user behavior and advertising revenue [ 1 , 3 , 5 , 8 ] . These works focus on the game played by advertisers , rather than by multiple search engines .
The analysis of horizontal product differentiation in competitive markets has a long history in economic theory . The classic Hotelling model [ 6 ] suggests that competing firms will tend to produce similar products . Later works , beginning with Aspremont , Gabszewicz , and Thisse [ 4 ] , find that product differentiation can improve revenue by , for example , thinning markets to affect future prices . See [ 20 ] for a treatment of this classic theory .
Our analysis of competition in the case β = 0 shares some similarities with the analysis of valid utility games [ 21 ] and smooth games [ 18 ] . We note that the click through variant of our game is mathematically similar to Oren and Kleinberg ’s recent analysis of a research credit allocation game [ 11 ] , where researchers select projects in which to invest effort . Besides the motivation behind these games , the primary difference is that we model a search engine ’s ( pure ) strategy as a probability distribution over search results , rather than a deterministic list of pages .
2 . MODELS AND CONCEPTS
We write [ n ] = {1 , . . . , n} . Vectors are denoted by bold face . For a vector x , we use x−i to denote the vector without coordinate i ( extending the notation to sets of coordinates as well ) , and ( y , x−i ) for the vector with coordinate i replaced by y . For an event E , we write 1[E ] for the function that is 1 when E happens and 0 otherwise . Let A be a finite set , and p a distribution over A . We say that p is in general position if for every pair S , S ⊆ A of distinct sets ( S = S ) , we have that p(S ) = p(S ) .
The Search Engine Competition Game .
The game is played by K engines . There is a universe Ω of N possible webpages , and an infinite population of users
( or searchers).5 There is a commonly known distribution Γ over user types , where γ(S , t ) is the probability of drawing the pair ( S , t ) . This distribution incorporates the search query issued by the user ; in other words , we consider the game for a specific query , since games for different queries can be solved independently.6 Without loss of generality , we t γ(S , t ) > 0 for all pages n ∈ Ω , ie , assume that
Sn each page satisfies at least one type in the support of Γ .
The engines’ strategies are based on permutations of pages . When engine i plays permutation σi , she places page σi(j ) in slot j ( for each j ) . We also think of σi as a matching between slots and pages , and write σi[t ] = {σi(j ) | j ∈ [ t]} for the set of pages placed in the first t slots by engine i . A user with type ( S , t ) is satisfied by a matching σi precisely if σi[t]∩ S = ∅ , ie , if at least one of the pages satisfying the user is among the top t pages displayed by the engine . When a user visits engine i , the engine obtains utility 1 if the user is satisfied , and utility β ∈ [ 0 , 1 ] , a fixed parameter of the game , if the user is not satisfied . The parameter β models the tradeoff between optimizing for market share vs . customer satisfaction , or the fraction of display ads among the ads shown by the engine . A pure strategy for engine i is a distribution Di over matchings . ( This apparent misnomer is discussed in more detail below . ) A ( pure ) strategy profile D = ( D1 , . . . ,DK ) is a vector of strategies , one for each engine . A user type ( S , t ) and engine strategy Di together determine a satisfaction probability qi(S , t,Di ) = Probσ∼Di [ σ[t ] ∩ S = ∅ ] . We often write qi for qi(S , t,Di ) when the type and strategy are clear from the context . The vector of the satisfaction probabilities for all engines is denoted by q(S , t,Di ) or q . Engines may also mix strategies , playing distributions over distributions . Two permutations σ , σ are equivalent with respect to Γ if , for every type ( S , t ) in the support of Γ , ( S , t ) is satisfied by either both or neither of the permutations . For example , if every user has a threshold of at least 2 , then two permutations that differ only in the order of the first two pages are equivalent . A pure strategy is deterministic if its support consists entirely of permutations that are equivalent to each other ; we abuse terminology by stating that such a strategy consists of a single permutation . A strategy profile ( pure or mixed ) is deterministic if the support of each engine ’s distribution contains only deterministic strategies .
A user of type ( S , t ) must select which search engine to use , taking into account the profile q of satisfaction probabilities . A selection rule is a function f which maps q to a distribution over search engines . We write fi(q ) for the probability that a user selects engine i given q .
The precise sequence of events in the game is as follows . First , the engines jointly determine a mixed strategy profile C . Let ρ(D ) be the density function of the joint distribution of pure strategies under C . Notice that we allow the random choices to be correlated . Once C is determined , a vector of pure ( but not necessarily deterministic ) strategies D is drawn according to ρ . Next , a user type ( S , t ) is realized from Γ . D is known to the user , and determines a satisfaction probability profile q = ( q1 , . . . , qK ) for the engines . The user selects a search engine stochastically according to the distribution f ( q ) . After the user selects an engine , say i , a permutation σi is realized from the distribution Di . If 5We consistently use female pronouns for search engines and male pronouns for searchers . 6This holds under the ( strong ) assumption that users choose their engine per query . See a brief discussion of this issue in Section 6 .
701 the user is satisfied by σi , engine i receives a payoff of 1 ; otherwise , she receives a payoff of β . All other engines i = i receive payoff 0 . In summary , the payoff to engine i under the joint strategy profile C is
γ(S , t ) · fi(q(S , t , D ) ) · ( β + ( 1 − β)qi(S , t , Di))ρ(D)dD .
D
S⊆Ω t≥0
( 1 )
We call this game the Search Engine Competition Game with parameters β and Γ , and denote it by Searchβ(Γ ) .
Strategies , Equilibria , and the Price of Anarchy . We now discuss in more depth the choice to consider distributions Di as pure strategies . The reason that we cannot simply consider engines as mixing over pure strategies which are permutations is that the engines’ payoffs are defined in terms of user behavior , and users’ behaviors depend on the entire probability distributions chosen by the engines .
In other words , it is necessary to know the distributions over pure strategies in order to even define the game ’s payoffs . For the same reason , when engines are playing mixed strategies , it is necessary to assume that the searchers are aware of the pure strategies drawn by the engines ; this would be realistic if the changes in engines’ strategies occurred at a much slower time scale than the users’ adaptation .
We will carefully distinguish nomenclature between pure strategies and deterministic strategies , which — as defined above — are ones that have probability 1 of selecting a particular permutation ( or its equivalence class ) . With this understanding in hand , a ( pure ) Nash Equilibrium is a strategy profile D in pure strategies from which no single engine can unilaterally deviate to strictly improve her utility . Pure Nash Equilibria may not exist ( even for β = 0 ) — we show a simple example of this in the full version of the paper 7 — so we broaden the space of allowed strategy profiles .
Definition 1
( Correlated Equilibrium ) . Fix a finite probability space ( Ω , δ ) . For each i = 1 , . . . , K , let Zi : Ω → Zi be a signal ( random variable ) , using the same domain , and write Z = ( Z1 , . . . , ZK ) . The strategy of player i is a mapping µi from Zi to the pure strategies of player i . ( µ1 , µ2 , . . . , µK ) is a correlated equilibrium iff for each player i and each mapping µ i from Zi to the pure strategies of player i , we have that
EZ∼δ [ ui((µ1(Z1 ) , . . . , µi(Zi ) , . . . , µK ( ZK )) ) ]
.ui((µ1(Z1 ) , . . . , µ i(Zi ) , . . . , µK ( ZK )))fi .
≥ EZ∼δ
( 2 )
In other words , given the signal he received , each player prefers playing according to the suggested strategy over any other strategy .
We denote the set of all Correlated Equilibria by EQCorr
β
( Γ ) , or EQCorr when the parameters are clear from the context . We measure the quality of a strategy profile by the welfare of the searchers , ie , the probability that a user drawn from
Γ is satisfied by his chosen engine . The welfare , W ( C ) , is fi(q(S , t , D ) ) · qi(S , t , Di ) · ρ(D)dD .
γ(S , t ) ·
( 3 )
D
S⊆Ω t≥0 i
7available on the arXiv as 1310.4098
Let OPT denote a strategy profile for the engines that maximizes the searcher welfare . The degradation of welfare at equilibrium , compared to this optimum profile , is typically measured by two quantities : the ( pure , mixed , or correW ( OPT ) lated ) Price of Anarchy ( PoA ) [ 12 , 18 ] supD∈EQCorr W ( D ) captures the worst case welfare loss resulting from selfish rational behavior by the engines ; the Price of Stability ( PoS ) [ 2 ] infD∈N W ( OPT ) captures the welfare loss incurred by inW ( D ) sisting that a strategy profile must be stable against selfish unilateral deviations . ( Here , the infimum is usually taken over Nash Equilibria N , as correlated equilibria are more permissive , and would thus lower the value . )
The Singleton Search Engine Game .
All of the lower bounds on PoA ( or PoS ) which we prove in this paper arise already in a very restricted form of the Search Engine Competition Game , which we call the Singleton Search Engine Game . In the Singleton Search Engine Game , each user always has a patience threshold of 1 , and desires a singleton set . Thus , the distribution Γ can be specified simply as γ(n ) := γ({n} , 1 ) . Furthermore , since no user ever looks past the first slot , engine strategies are equivalent iff they agree in the page in the first slot . In particular , for the purpose of the game , a distribution D is completely specified by the probability distribution of pages in slot 1 . We will therefore frequently speak simply of an engine “ displaying ” or “ choosing ” a page , without specifying a slot ( which is understood to be slot 1 ) .
This distribution is characterized by the probability of satisfying any given type of user ( which can now be associated with the desired page n ) . Therefore , for instances of the Singleton Search Engine Game , an engine i ’s pure strategy can be fully specified by the probability vector qi = ( qi(n))N of probabilities of displaying pages n = 1 , . . . , N . n=1
User Behavior and Selection Rules .
We model the users as stochastic entities , choosing engines via a probabilistic process that depends on their probability of being satisfied . A selection rule f captures a model of user behavior . We assume that the same selection rule is used by each user,8 and that the effect of the engines’ strategies on user behavior can be captured entirely by the satisfaction probability profile q . We assume that each fi is monotone non decreasing in qi and non increasing in qi for each i = i . We do not assume that fi is differentiable or continuous .
For some of our results , we will be interested in selection rules f that are symmetric in the following sense : the value of fi(q ) is invariant under relabeling of the engines . When analyzing symmetric rules , we write f ( q ) = f1(q ) .
This model is very general , encompassing almost all rational selection rules one could imagine . We illustrate it with several examples , capturing different models of behavior .
Proportional selection rule : fi(q ) = qi
, with fi(0 ) := 1/K . In this rule , a user picks engine i with probability proportional to the probability that he will be satisfied by engine i . Similar rules have frequently been used in past j qj
8We note that the space of selection rules is convex , so the selection rule in which each user independently randomizes between using a rule f1 or an alternative rule f2 is , itself , a selection rule .
702 models that involved a user selecting a vendor according to the quality of the vendors’ products .
Markovian selection rule : fi(q ) = bi 1 for each engine j . If any qj is equal to 1 , then fi(q ) = 1−qj 1/k if qi = 1 , where k is the number of engines with qj = 1 , and fi(q ) = 0 if qi < 1 . This selection rule captures the stationary distribution of a process in which a user repeatedly uses a given engine until she does not satisfy him , then switches to another engine uniformly at random . ( A more general version is defined in Section 5 . )
, where bj = j bj
Majority selection rule : Let A = argmaxi qi be the set of engines maximizing the satisfaction probability of a given user . Then the Majority selection rule sets fi(q ) = 1/|A| for all i ∈ A , and fi(q ) = 0 for all i /∈ A . The Majority selection rule captures the behavior of a user who chooses an engine that maximizes his probability of being satisfied , breaking ties uniformly at random . 3 . CONVEXITY , DETERMINISM , AND
HIGH WELFARE
In this section , we examine the role of convexity in the search engines’ utility functions . Roughly speaking , we show that when the selection rule f is convex , each engine ’s utility is strictly convex . This convexity , or alternatively , the assumption that β = 0 , implies that every correlated equilibrium is deterministic ; in other words , engines do not mix over distributions of permutations , but only over permutations . For pure equilibria , this implies that engines simply play one permutation deterministically . In turn , we will show that the restriction to deterministic strategies implies a bound of 2 on the correlated PoA .
In Section 5 , we will show that , for a natural and general class of Markovian user behaviors , the selection rule f is indeed convex ; hence , for arbitrary β , this type of user behavior yields a correlated PoA of at most 2 .
We begin by defining a non indifference property of selection rules . Roughly speaking , we wish to exclude selection rules for which a search engine ’s probability of satisfying a user has effectively no impact on that user ’s selection . We define the support S(q ) of a satisfaction probability vector q to be the set of engines i for which qi > 0 . We say that f is non indifferent if the following two properties hold . First , whenever |S(q)| ≥ 2 and qj < 1 for some j ∈ S(q ) , there exists some i ∈ S(q ) such that fi(q ) < fi(1 , q−i ) . That is , if at least two engines would satisfy a user with positive probability , and not all supporting engines satisfy the user with probability 1 , then at least one supporting engine would be more likely to attract the user by sufficiently increasing her probability of satisfying him . Second , if there exists some i such that qi = 1 , then fj(q ) = 0 for all j ∈ S(q ) . That is , if some engine is guaranteed to satisfy the user , then the user will not choose an engine that is guaranteed not to satisfy him . The non indifference property is quite weak ; in particular , it is significantly weaker than assuming that fi is strictly increasing in qi . For example , both the Majority and Markovian selection rules described at the end of Section 2 are not strictly increasing in the satisfaction probabilities , but do satisfy non indifference .
Theorem 31 Suppose that Γ is in general position , and at least one of the following three holds for each i :
1 . β < 1 , and fi(qi , q−i ) is a convex function of qi ;
2 . β = 1 , and fi(qi , q−i ) is strictly convex in qi ;
3 . β = 0 and fi is non indifferent .
Then , each correlated equilibrium of the game Searchβ(Γ ) is deterministic .
The proof of Theorem 3.1 ( in the appendix ) follows from the observation that if selection rules are convex or β = 0 , an engine can increase her utility by choosing two outcomes she randomizes between , deciding which one contributes more to the overall utility , and increasing the probability of returning that outcome at the expense of the other .
We now show that if engines apply deterministic strategies at equilibrium , the resulting outcomes will generate high social welfare . Combining this result with Theorem 3.1 , we conclude that the PoA of Searchβ(Γ ) is at most 2 under the conditions of Theorem 31
Theorem 32 Suppose that f is non indifferent and every correlated equilibrium of Searchβ(Γ ) is deterministic . Then , the correlated PoA of Searchβ(Γ ) is at most 2 .
Let µZi
Proof . Consider a correlated deterministic equilibrium of Searchβ(Γ ) , characterized by a joint distribution ρ(σ ) over vectors of permutations σ . Let ˆσ be the vector of permutations for each engine under the socially optimal profile . Focus on one engine i and one signal Zi she receives . Let σi be the permutation played by i when seeing Zi . From the perspective of i , conditioned on receiving Zi , the other engines are playing a correlated distribution ρ−i(σ−i ) . S,t = Prob[∀i : σi [ t ] ∩ S = ∅ | Zi ] be the probability that no engine i ( including i ) satisfies the searcher type ( S , t ) , given that i received the signal Zi . Consider a deviation by i to any ˆσj . This will certainly attract any searcher who would not be satisfied by any other engine , but would be satisfied by ˆσj . Also , any other searcher satisfied by ˆσj would select engine i with probability at least fi(1 ) , by the assumed monotonicity of the selection rule . Finally , this deviation will not affect the behavior of searchers that are not satisfied by any engine or ˆσj . Putting this together , the expected conditional utility of this deviation is at least
µj =
γ(S , t ) · 1[ˆσj[t ] ∩ S = ∅ ] · µZi
S,t
γ(S , t ) · fi(1 ) · 1[ˆσj[t ] ∩ S = ∅ ] · ( 1 − µZi S,t )
γ(S , t ) · fi(0 ) · 1[ˆσj[t ] ∩ S = ∅ ] · µZi S,t .
S⊆Ω
+ β ·
S⊆Ω t≥0 t≥0
+
S⊆Ω t≥0
+ β ·
S⊆Ω t≥0
σ−i
S⊆Ω t≥0
Since engine i , receiving the signal Zi , does not want to deviate to ˆσj at the correlated equilibrium , µj is at most
γ(S , t ) · fi(q(S , t , σ ) ) · qi(S , t , σ ) · ρ−i(σ−i)dσ−i
γ(S , t ) · fi(0 ) · µZi S,t .
The first term is the utility that i obtains from searchers she attracts and satisfies , while the second term is the utility obtained from searchers that are not satisfied by any
703
S⊆Ω t≥0
S⊆Ω t≥0
≤
S⊆Ω t≥0
σ
S⊆Ω t≥0
+
Taking a sum over all i , and applying the definition of equilibrium welfare W ( ρ ) , we get engine , and visit engine i . Taking an expectation over signals Zi , writing µS,t = EZi∼ρi , and rearranging the terms with β factors , we conclude
µZi S,t
γ(S , t ) · fi(1 ) · 1[ˆσj[t ] ∩ S = ∅ ] · ( 1 − µS,t )
γ(S , t ) · fi(0 ) · 1[ˆσj[t ] ∩ S = ∅ ] · µS,t .
γ(S , t ) · fi(q(S , t , σ ) ) · qi(S , t , σ ) · ρ(σ)dσ
γ(S , t ) · 1[ˆσj[t ] ∩ S = ∅ ] · µS,t
γ(S , t ) · 1[ˆσj[t ] ∩ S = ∅ ] · µS,t
+ β ·
K · γ(S , t ) · 1[ˆσj[t ] ∩ S = ∅ ] · ( 1 − µS,t ) ·
+ β · γ(S , t ) · µS,t · 1[ˆσj[t ] ∩ S = ∅ ] · i fi(0 ) ≤ 1 , Using ≥ ( K − β ) ·
≥ ( K − β ) ·
S⊆Ω γ(S , t)(1 − µS,t )
1[ˆσj[t ] ∩ S = ∅ ]
S⊆Ω ≤ W ( ρ )
K · W ( ρ ) t≥0
S⊆Ω γ(S , t)(1 − µS,t ) · 1[∃j : ˆσj[t ] ∩ S = ∅ ]
1[ˆσj[t ] ∩ S = ∅ ]
γ(S , t)µS,t · 1[∃j : ˆσj[t ] ∩ S = ∅ ] i fi(1 ) = 1 , and summing over all j , t≥0
γ(S , t)µS,t
+
+ fi(1 ) i fi(0 ) . i j j
S⊆Ω t≥0
+ t≥0
S⊆Ω t≥0
S⊆Ω t≥0
S⊆Ω t≥0
= ( K − β ) ( W ( OPT ) − λ · W ( ρ ) ) + λ · W ( ρ ) for some λ ∈ [ 0 , 1 ] . The last equality follows because
γ(S , t ) · 1[∃j : ˆσj[t ] ∩ S = ∅ ] = W ( OPT ) and
S⊆Ω t≥0
γ(S , t)(1 − µS,t ) ≤ W ( ρ ) .
S⊆Ω t≥0
Rearranging , we have W ( ρ ) ≥ ( 1+λ)K−λ(β+1 ) · W ( OPT ) , with λ ∈ [ 0 , 1 ] . As K ≥ 2 and β ∈ [ 0 , 1 ] , this expression 2K−β−1 W ( OPT ) ≥ is minimized at λ = 1 ; hence , W ( ρ ) ≥ K−β 1 2 W ( OPT ) , as claimed .
K−β
The bound of 2 on the PoA is asymptotically tight , even for the pure PoA of the Singleton Search Engine Game with In the tight instance , a convex selection rule and β = 0 . there are K pages , and γ(1 ) = K+1 2K for all n > 1 . Consider the profile in which each engine displays page 1 . For any symmetric selection rule ( convex or otherwise ) , each engine has utility K+1 2K , which exceeds the utility 1 2K from switching to another page n . Hence , the strategy profile is an equilibrium ( in fact , the unique one ) . It satisfies a K+1 2K fraction of users . On the other hand , the
2K , while γ(n ) = 1
K · 1 profile in which engine i displays page i satisfies all users . As K becomes large , the ratio approaches 2 .
4 . SYMMETRIC EQUILIBRIA AND LOW
WELFARE
Next , we analyze equilibria of the Search Engine Competition Game when the conditions of Theorem 3.1 do not apply ; that is , when β > 0 and the selection rule is not convex . We will show that the resulting misalignment of incentives can lead to equilibria with very poor social welfare , ie , high PoA . All of our results are proved already for the Singleton Search Engine Game9 , and all proofs are deferred to the appendix or the full version . 4.1 When Satisfaction is Irrelevant
We begin by considering the case β = 1 . Our first result is that when the selection rule f is symmetric and satisfies a cross concavity assumption , every pure Nash Equilibrium of the Singleton Search Engine Game is symmetric . In other words , search engines do not specialize : all engines apply the same strategy . A user can thus do no better than selecting an engine arbitrarily , and hence competition does not positively impact social welfare .
A selection rule f is strictly cross concave if it satisfies the following property : for all x and y such that x < y , there exists a δ > 0 such that for all 0 < < δ , f ( (x + , y , q−{1,2} ) ) − f ( (x , y , q−{1,2} ) )
> f ( (x , y , q−{1,2} ) ) − f ( (x , y − , q−{1,2}) ) .
Intuitively , if f is cross concave , the increase in user visits that a ( trailing ) engine experiences when increasing her satisfaction probability is at least as large as the loss in visits incurred by a ( leading ) engine from decreasing her satisfaction probability by the same amount . That is , catching up in user visits is easier than expanding a lead .
Theorem 41 Let Q be a pure strategy equilibrium of the Singleton Search Engine Game with β = 1 and symmetric and strictly cross concave selection function f . Then Q must be symmetric .
The proof proceeds by directly arguing that if two engines employ different strategies , then cross concavity implies that one of them can strictly improve her welfare by shifting her page distribution slightly toward the strategy used by the other . Theorem 4.1 implies that for symmetric and strictly cross concave selection rules and β = 1 , more engines do not provide any advantage in pure strategy equilibria . As we show below , this implies a PoA of Ω(K ) . However , we will show that the effects of competition can be even more negative , by giving lower bounds on the Price of Stability for the proportional selection rule . Thereto , we next characterize the ( unique ) equilibrium for the proportional selection rule . The proof follows from an analysis of the equilibrium condition that no engine wishes to shift probability mass from any page to any other .
Theorem 42 When β = 1 and f is the proportional selection rule , the Singleton Search Engine Game has a unique
9The strong lower bounds continue to hold under the ( realistic ) assumption that t N . When t ≈ N , searchers will typically see most pages , so good welfare is obtained .
704 pure Nash Equilibrium where each engine selects page n ∈ Ω with probability γ(n ) .
We use Theorem 4.2 to bound the PoS for the Search
Engine Competition Game .
Proposition 43 Consider the Singleton Search Engine
Game with β = 1 and the proportional selection rule .
1 . There are instances in which the PoS is at least K . 2 . There are instances with only two engines in which the
√ PoS is Ω(
N ) .
√
The idea behind the second example of Proposition 4.3 is a type distribution in which two “ popular ” pages are each desired with probability Θ(1/ N ) , while the remaining pages have probability Θ(1/N ) . The unique equilibrium then selects each page proportional to its probability , whereas the optimal outcome would have each engine displaying one of the popular pages deterministically . 4.2 When Satisfaction is Partially Beneficial We now consider the intermediate case , β ∈ ( 0 , 1 ) , which represents scenarios in which search engines derive some , but not full , expected advertising benefit from a user who is not served a desired page . We show that , for any fixed β , our lower bounds on the PoS in Proposition 4.3 can persist as long as the number of pages N is large . ( However , for intermediate β values , we cannot rule out the existence of other equilibria , so we obtain lower bounds on the PoA , not the PoS . ) Our conclusion is that the constant PoA bounds at β = 0 in general do not survive perturbations of β when the selection rule is not convex .
We again focus on the Singleton Search Engine Game with the proportional selection rule f . We first show that the existence of symmetric equilibria for this class , established for β = 1 in Section 4.1 , continues to hold under small perturbations of β . The proof is conceptually similar to that of Theorem 42
Theorem 44 Suppose that β ∈ ( 0 , 1 ) . The Singleton Search Engine Game with proportional selection rule f has at most one symmetric equilibrium . Moreover , whenever β > 1 − 1/K , a symmetric equilibrium exists .
In fact , for specific instances , symmetric equilibria ( and thus high PoA ) arise for much smaller values of β already . √ Specifically , we show that the bad examples from ProposiN ) , retion 4.3 persist for β = Ω(K/N ) and β = Ω(K/ spectively . Notice that since N * K , this means that in realistic settings , we cannot rule out high inefficiency due to search engine competition for any constant value of β . We emphasize that while Proposition 4.3 provided lower bounds on the Price of Stability , we have not ruled out the existence of asymmetric equilibria for β ∈ ( 0 , 1 ) ; therefore , the propositions in this section only prove lower bounds on the Price of Anarchy .
Proposition 45 Consider the Singleton Search Engine N +2K , there
Game with proportional selection rule f . If β > 2K are instances with PoA Ω(K ) .
Proposition 46 Consider the Singleton Search Engine , there
Game with proportional selection rule f . If β > 6√ √ are instances with K = 2 and PoA Ω(
N ) .
N
5 . CONVEXITY OF MARKOV RULES
We now describe a natural model of user behavior under which the selection rule is convex . By Theorems 3.1 and 3.2 , if users behave according to this model , searcher welfare is high . The model generalizes the Markov selection rule described in Section 2 . Each search engine i corresponds to a unique state . The user performs a walk on states , and always uses the engine corresponding to his current state . The transition probabilities between states depend on whether the user was satisfied in the previous round ; we use τ ( s ) i,j and τ ( f ) i,j to denote the probability of moving from state i to state j upon satisfaction or failure ( non satisfaction ) , respectively . The process has a stationary distribution π , and the induced Markovian selection rule is fi(q ) = πi . i i
We call a Markov process monotone if , for all i , τ ( s )
Leaving state i after a successful ( resp . , failed ) query induces a distribution over the process ’s state in the next round . That state defines an expected return time R(s ) ( resp . , R(f ) ) to state i : the expected number of rounds bei ≥ 1 . fore the process returns to state i . Note that R(s ) , R(f ) i,i ≥ τ ( f ) i,i and R(s ) . The first condition states that a user is no more likely to leave his current engine after a successful query than after a failed query . The second condition says that , conditioning on having left engine i , the last query having been successful should not increase the expected return time . The Markov process is strictly monotone if the first inequality is strict . We show that monotone Markovian selection rules are convex . i ≤ R(f ) i i
Theorem 51 Any ( strictly ) monotone Markovian selec tion rule is ( strictly ) convex . i = 1 − τ ( f )
Proof . For a given Markov process , consider the time spent in state i . Write p(f ) for the probability that the process leaves state i following a failure or success , respectively . Given that the process is in state i , the expected number of rounds until the process . Conditioned on having leaves state i is i = 1 − τ ( s ) i,i and p(s ) i,i
( 1−qi)p
1 ( s ) ( f ) i +qip i left state i , the probability that the last search was suc
, and the probability that it failed
. We conclude that the expected return cessful is qip ( 1−qi)p
( s ) i ( s ) ( f ) i +qip i is
( 1−qi)p
( f ) i
( 1−qi)p
( s ) ( f ) i +qip i time , conditioned on having left state i , is qip(s ) ( 1 − qi)p(f ) i i + qip(s ) i
R(s ) i +
( 1 − qi)p(f ) i
( 1 − qi)p(f ) i + qip(s ) i
R(f ) i
.
Since the fraction of time spent in state i is the expected stay length divided by expected stay length plus return time , we have that πi is equal to
( 1−qi)p
1 ( f ) i +qip
( s ) i
+
( 1−qi)p qip ( 1−qi)p
1 ( f ) i +qip ( s ) ( s ) i R i ( f ) i +qip
( s ) i
( s ) i
+ ( 1−qi)p ( 1−qi)p
( f ) i R
( f ) i ( s ) ( f ) i +qip i
We must show that πi is a valid selection rule , meaning that it is non decreasing in qi . Taking the derivative with respect to qi , we have d dqi
πi = p(f ) i R(f ) i R(f ) i − p(s ) i R(s ) ( 1 − qi ) + p(s ) i i
( 1 + p(f )
, i R(s ) i qi)2
705 i ≥ R(s ) which is non negative since p(f ) . Next , we show that πi is a convex function of qi . Taking the second derivative with respect to qi , we have i ≥ p(s ) and R(f ) i i d2 dq2 i
πi = i R(f )
2(p(f ) i R(f ) i i − p(s ) i R(s ) i )2 ( 1 − qi ) + p(s ) i R(s ) i qi)3
( 1 + p(f )
, which is non negative , and strictly positive if p(f ) i > p(s ) i
.
6 . CONCLUSIONS AND FUTURE WORK We introduced a natural model of competition between multiple search algorithms , who are vying for visits from users searching for web pages . Our model interpolates between different objectives for the search engines . At one extreme is the objective of attracting as many searchers as possible . At the other extreme is an objective of attracting and satisfying as many searchers as possible .
Our main result is a strong dichotomy : when engines are directly incentivized to satisfy users , we expect to see specialization , leading to a market that serves users well and achieves a ( tight ) Price of Anarchy of 2 . Otherwise , search engines will generally play symmetrically , duplicating each √ other ’s strategies . The Price of Stability in this setting can N ) . However , these pessimistic be as bad as Ω(K ) or Ω( examples vanish under natural models of user behavior in which the demand for an engine is a convex function of that engine ’s search result quality .
A number of questions remain open . Our lower bounds apply to the pure Price of Stability ; we did not rule out the existence of more benign mixed ( or correlated ) equilibria . Can the lower bounds be generalized ? Our understanding of equilibria for β ∈ ( 0 , 1 ) is even more limited ; how can we characterize the equilibria in this case , and can we rule out asymmetric pure equilibria ?
One could also consider approximate equilibria , in which engines cannot unilaterally deviate to improve their payoffs much . It would be interesting to study the Price of Anarchy/Stability for approximate equilibria .
Finally , another layer of complexity may be added to the model to be more realistic . Our model posited that a user would choose an engine i for each search independently . In reality , most users are loyal to one search engine . This could be modeled by assuming that each user has a distribution over potential queries , and picks one engine to maximize the expected probability of satisfaction across all queries . Analyzing the Price of Anarchy/Stability of this more complex game is an interesting direction for future work . Acknowledgments We thank Shaddin Dughmi , Matt Elliott , Xinran He and Nicole Immorlica for useful discussions , and anonymous reviewers for helpful feedback . Work done in part while David Kempe was visiting Microsoft Research , New England .
APPENDIX A . OMITTED PROOFS Proof of Theorem 3.1 : Fix a correlated equilibrium C , and assume for contradiction that the support of C is not entirely deterministic . Fix an engine i and a signal Zi given to i with positive probability , such that conditioned on receiving Zi , engine i plays a non deterministic strategy
Di . From engine i ’s viewpoint , conditioned on Zi , the other = i are playing mixed strategies , randomizing engines i in possibly correlated ways over possibly non deterministic strategies . Let ρ−i(D−i ) denote the joint density over the strategies played by engines i = i , conditioned on Zi . Let Supp(Γ ) denote the support of Γ , and consider a type ( S , t ) ∈ Supp(Γ ) . When engine i satsifies users of type ( S , t ) with probability x , her expected utility conditioned on the user type being ( S , t ) , gi(x ; S , t ) , is fi((x , q−i(S , t,D−i) ) ) · ( β + ( 1 − β ) · x ) · ρ−i(D−i)dD−i . D−i If fi((x , q−i(S , t,D−i) ) ) is a convex function of x and β < 1 , or if fi is strictly convex in x , then for each ( S , t ) , fi((x , q−i(S , t,D−i) ) ) · ( β + ( 1 − β ) · x ) is a strictly convex function of x , and hence so is gi(x ; S , t ) . Therefore , under either of the first two assumptions of the theorem , gi(· ; S , t ) is strictly convex . ( The analysis in the third case β = 0 will proceed similarly , but not explicitly be based on strict convexity . )
The utility of engine i from playing at this equilibrium is ui(D ) =
γ(S , t ) · gi(qi(S , t,Di ) ; S , t ) .
S⊆Ω t≥0
Engine i plays the non deterministic strategy Di . For each permutation σ , let Di(σ ) be the probability that engine i chooses the permutation σ . Recall from Section 2 that qi(S , t,Di ) =
Di(σ ) · 1[σ[t ] ∩ S = ∅ ] ;
( 4 )
σ thus , qi(S , t,Di ) is a convex combination of the 1[σ[t]∩ S = ∅ ] terms . In the first two cases of the theorem , we can use the convexity of gi to obtain that gi(qi(S , t,Di ) ; S , t ) ≤
Di(σ ) · gi(1[σ[t ] ∩ S = ∅ ] ; S , t ) .
σ
( 5 )
In the third case ( β = 0 , no assumptions on f ) , Inequality ( 5 ) holds for a slightly different reason : we can write gi(qi(S , t,Di ) ; S , t ) fi((qi(S , t,Di ) , q−i(S , t,D−i) ) ) · qi(S , t,Di ) · ρ−i(D−i)dD−i fi((1 , q−i(S , t,D−i) ) )
·
σ
Di(σ ) ·
D−i
Di(σ ) · 1[σ[t ] ∩ S = ∅ ] · ρ−i(D−i)dD−i fi((1[σ[t ] ∩ S = ∅ ] , q−i(S , t,D−i) ) )
D−i
D−i
σ
σ
=
≤
=
=
· 1[σ[t ] ∩ S = ∅ ] · ρ−i(D−i)dD−i
Di(σ ) · gi(1[σ[t ] ∩ S = ∅ ] ; S , t ) .
For the inequality , we used the selection rule ’s monotonicity . In the penultimate step , we used that 1[σ[t ] ∩ S = ∅ ] = 0 whenever 1[σ[t ] ∩ S = ∅ ] = 1 , so the whole expression for the particular σ is 0 anyway .
Next , we argue that Inequality ( 5 ) is in fact strict for at least one pair ( S , t ) with γ(S , t ) > 0 , in all cases . Because Di is not a deterministic strategy , there exist two
706 non equivalent permutations σ , σ with Di(σ ) ∈ ( 0 , 1 ) and Di(σ ) ∈ ( 0 , 1 ) . Let X ⊆ Supp(Γ ) be the set of types satisfied by σ but not by σ , and X ⊆ Supp(Γ ) the set of types satisfied by σ but not by σ ; note that X ∪ X = ∅ by non equivalence . We then have 0 < qi(S , t,Di ) < 1 for all ( S , t ) ∈ X ∪ X . Therefore , in Equation ( 4 ) for those types ( S , t ) , there are both terms with 1[σ[t ] ∩ S = ∅ ] = 0 and with 1[σ[t]∩ S = ∅ ] = 1 . Thus , for the first two cases ( when gi(· ; S , t ) is strictly convex ) , Inequality ( 5 ) is strict for this ( S , t ) pair.10 Again , the reason for the strictness is slightly different in the third case . Focus on the searcher types ( S , t ) ∈ X ∪ X . Assume for contradiction that qj(S , t,Dj ) = 0 for all j = i and ( S , t ) ∈ X ∪ X , and that Inequality ( 5 ) is not strict . Thus , for each ( S , t ) , ( S , t ) ∈ X ∪ X , fi(q(S , t,D ) ) = fi(1 , 0 ) = fi(q(S
Because Γ is in general position , we know
,D) ) . ( S,t)∈X γ(S , t ) = ( S,t)∈X γ(S , t ) ; wlog , assume that the left hand side is larger . Then , if engine i were to increase the probability of the permutation σ by some > 0 while reducing the probability of σ by , her resulting change in utility would be
, t
γ(S , t)fi(q(S , t,D ) ) −
γ(S , t)fi(q(S , t,D ) )
( S,t)∈X
= · fi(1 , 0 ) ·
γ(S , t ) −
( S,t)∈X

( S,t)∈X
γ(S , t )
( S,t)∈X
 > 0 .
Engine i could thus increase her utility by shifting probability from σ to σ , contradicting the equilibrium assumption . Thus , there must be another engine j with qj(S , t,Dj ) > 0 . Now , the non indifference of the selection rules implies that fj(q ) < fj(1 , q−j ) for at least one such engine j ( possibly j = i ) ; for this particular engine j , this implies strictness of Inequality ( 5 ) . The remainder of the proof now proceeds with this engine ( formerly j ) as engine i . Finally , summing up the strict Inequality ( 5 ) over all types ( S , t ) ∈ Supp(Γ ) and changing orders of summation , we obtain that
Di(σ ) ·
σ
S⊆Ω t≥0 ui(D ) < gi(1[σ[t ] ∩ S = ∅ ] ; S , t ) .
( 6 )
The right hand side of Inequality ( 6 ) is exactly the utility of engine i when mixing over deterministic strategies instead of playing a non deterministic strategy . Thus , Di cannot have been engine i ’s best strategy at the correlated fi equilibrium under signal Zi , a contradiction .
Let Q = ( qi)K
Proof of Theorem 4.1 : i=1 be a pure strategy equilibrium of the Singleton Search Engine Game . Assume for contradiction that Q is not symmetric . Then , there are two engines ( without loss of generality , engines 1 and 2 ) and two pages ( without loss of generality , pages 1 and 2 ) such that q1(2 ) < q2(2 ) and q1(1 ) > q2(1 ) . Let δ1 be the constant in the definition of cross concavity when applied to engines 1 , 2 with x = q1(2 ) and y = q2(2 ) . Similarly , let δ2 be the constant when the definition is applied to engines 1 , 2 with x = q2(1 ) and y = q1(1 ) . Fix an arbitrary <
10It would not have been strict if all indicator terms had been equal . min(δ1 , δ2 ) . By strict cross concavity , f ( q1(2 ) + , q2(2 ) , q−{1,2} ) − f ( q1(2 ) , q2(2 ) , q−{1,2} )
> f ( q2(2 ) , q1(2 ) , q−{1,2} ) − f ( q2(2 ) − , q1(2 ) , q−{1,2} ) , f ( q2(1 ) + , q1(1 ) , q−{1,2} ) − f ( q2(1 ) , q1(1 ) , q−{1,2} )
> f ( q1(1 ) , q2(1 ) , q−{1,2} ) − f ( q1(1 ) − , q2(1 ) , q−{1,2} ) .
( 7 )
Because Q is an equilibrium , engine 1 cannot profit from moving probability from page 1 to page 2 , nor can engine 2 profit from moving from page 2 to page 1 . Thus , f ( q1(2 ) + , q2(2 ) , q−{1,2} ) + f ( q1(1 ) − , q2(1 ) , q−{1,2} ) ≤ f ( q1(2 ) , q2(2 ) , q−{1,2} ) + f ( q1(1 ) , q2(1 ) , q−{1,2} ) , f ( q2(1 ) + , q1(1 ) , q−{1,2} ) + f ( q2(2 ) − , q1(2 ) , q−{1,2} ) ≤ f ( q2(1 ) , q1(1 ) , q−{1,2} ) + f ( q2(2 ) , q1(2 ) , q−{1,2} ) .
( 8 )
Adding the two Equations ( 7 ) and subtracting the two Equations ( 8 ) , all terms cancel and we are left with the fi contradiction 0 > 0 . Hence , Q must be symmetric .
Proof of Theorem 4.2 : The proportional sharing rule satisfies symmetry and strict cross concavity . Thus , by Theorem 4.1 , all pure equilibria are symmetric . It remains to show that a symmetric equilibrium exists and is unique .
We begin by showing uniqueness and deriving a specific form for the equilibrium . Let Q be a symmetric pure equilibrium ; it is completely described by the ( common ) probability q(n ) with which the engines choose page n . We claim that q(n ) > 0 for all pages n . Assume for contradiction that q(n ) = 0 for some page n , and let n be any page with q(n ) > 0 . Consider the deviation in which engine 1 adds a small amount of probability to page n , and removes it from page n . Engine 1 receives all visits from users of type n , for an added payoff of γ(n ) > 0 ( since each page is desired with positive probability ) . The loss in payoff from page n is less than γ(n ) · Kq(n ) For small enough , this is strictly less than the gain γ(n ) . Thus , Q was not an equilibrium .
Because q(n ) > 0 for all n , the strategy profiles under consideration are bounded away in all coordinates from 0 ( and also 1 ) , and thus from the discontinuities ( and nondifferentiabilities ) of the selection function . We can therefore safely take derivatives . n γ(n)f ( q(n ) ) subject to tive of the Lagrangian L(qi , λ ) =
Engine i is choosing her strategy to maximize the value n qi(n ) = 1 ; thus , the derivan γ(n)f ( q(n) ) ) + λ(1 − n qi(n ) ) with respect to all variables must be 0 : that is , dqi(n ) f ( qi(n ) , q−i(n ) ) = λ for each page n . Using the
γ(n ) definition of the proportional selection rule , this implies d i=i qi ( n ) i qi ( n))2 =
λ
γ(n )
( 9 )
λK2 for each n . As the equilibrium is symmetric , qi ( n ) = qi(n ) for all i , simplifying ( 9 ) to qi(n ) = γ(n)·(K−1 ) . Since qi and Γ are distributions , we must have λK 2/(K − 1 ) = 1 , and hence qi(n ) = γ(n ) for all engines i is the only equilibrium . It remains to prove that this distribution is in fact an equilibrium . Consider any best response qi by engine i to the symmetric equilibrium qi ( n ) = γ(n ) played by the other engines . We use variants of the Lagrangian condition ( 9 ) , substituting that qi ( n ) = γ(n ) . Assume qi = qi ; then there exist pages n , n with 0 ≤ qi(n ) < qi ( n ) and qi ( n ) <
(
707 Because qi(n ) > 0 for all n , we can take derivatives ; a necessary condition for qi to be a local optimum for Li is then that dqi(n ) Li(λi , qi ) = 0 for each n . This yields ( K − 1)q(n ) · ( 2(1 − β)qi(n ) + β ) + ( 1 − β)qi(n)2 d
γ(n )
( qi(n ) + ( K − 1)q(n))2
= λi .
.
Because Q is symmetric , we also have that qi(n ) = q(n ) for all n , and can simplify this condition to
γ(n )
( K − 1)β + ( 2K − 1)(1 − β)q(n )
K 2q(n )
= λi .
Writing λ terms , we can solve for q(n ) to get
( K−1)β , z = ( 2K−1)(1−β ) i = K2λi
( K−1)β
, and rearranging
, q(n ) =
γ(n ) i − zγ(n ) λ
.
( 10 )
Because q(n ) > 0 , this implies λ i > zγ(n ) for all n . The condition n q(n ) = 1 implies γ(n ) i − zγ(n ) λ n
= 1 .
( 11 ) qi(n ) ≤ 1 . Since it is possible that qi(n ) = 0 or qi(n ) = 1 , we only obtain weaker Lagrangian conditions of non positive ( resp . , non negative ) derivative , as opposed to derivatives of 0 . These weaker Lagrangian conditions for n , n yield
( K − 1)γ(n )
( qi(n ) + ( K − 1)γ(n))2 ≤ λ ( qi(n ) + ( K − 1)γ(n))2 ≥ λ γ(n )
( K − 1)γ(n )
γ(n )
,
We can rearrange for λ and use that qi(n ) < γ(n ) and γ(n ) < qi(n ) to obtain that
( K − 1)γ(n)2
( Kγ(n))2 ≤ λ ≤
( K − 1)γ(n)2
( qi(n ) + ( K − 1)γ(n))2
< ( K − 1)γ(n)2
( qi(n ) + ( K − 1)γ(n))2 <
( K − 1)γ(n)2
( Kγ(n))2 a contradiction . Thus , the only locally optimal response for player i is to play the same distribution as the other players , fi so the symmetric distribution is an equilibrium .
Proof of Proposition 4.3 :
Suppose that we have N ≥ K pages , and assume wlog that γ(1 ) > γ(2 ) > displays page i , leading to a social welfare ofK ··· > γ(N ) , and the probabilities are in general position . The social optimum occurs when engine i deterministically n=1 γ(n ) . By then be satisfied with probabilityN Theorem 4.2 , the unique pure equilibrium has each engine choosing each page n with probability γ(n ) . Each user will K n=1 γ(n)2 , regardless of N n=1 γ(n ) n=1 γ(n)2 . n=1 γ(n)2 ≤K
We now consider two special cases . First , when the first K pages have probability Θ(1/K ) each , and the remaining pages together have probability o(1/K ) , the PoS is Ω(K ) , as n=1 γ(n)2+ n>K γ(n))2 . Another distribution giving rise to this type can be seen by upper boundingN ( his engine choice . The PoS is thus of behavior is when all pages have probability Θ(1/N ) .
√ Second , consider the following distribution : the top two N ) ; the remaining pages have pages have probability Θ(1/ N ) . Thus , when probability Θ(1/N ) . The PoS becomes Θ( √ there are a few highly relevant pages and many rare pages , N ) . fi the symmetric equilibrium leads to inefficiency Ω(
√
Proof of Theorem 4.4 : As in the proof of Theorem 4.2 , if Q is a symmetric equilibrium , say , qi(n ) = q(n ) for all i and n , then q(n ) > 0 for all n ; otherwise , an engine could increase her utility by selecting page n with sufficiently small probability . We can therefore assume q(n ) > 0 for all n .
Because each qi is a best response to the other engines’ strategies , it maximizes ui(qi , q−i ) =
γ(n)f ( q(n ) ) · ( β + ( 1 − β)qi(n ) )
=
γ(n )
· ( β + ( 1 − β)qi(n) ) , qi(n ) k qk(n ) n n n qi(n ) = 1 . The Lagrangian for this con strained optimization , Li(λi , qi ) , is subject to n qi(n ) qi(n ) + ( K − 1)q(n )
γ(n )
+ λi(1 −
· ( β + ( 1 − β)qi(n ) ) n
γ(n )
γ(n )
Now let n∗ ∈ argmaxn{γ(n)} be a page maximizing the probability of being desired . For λ in the range ( zγ(n∗),∞ ) ,
λ−zγ(n ) > 0 for all pages n , and the expression we have λ−zγ(n ) is strictly decreasing , approaching 0 as λ → ∞ and approaching ∞ as λ → zγ(n∗ ) . There is therefore a ( zγ(n∗),∞ ) . By choice of n∗ , all terms of unique solution ( in λ i ) to the Equation ( 11 ) in the range i−zγ(n ) are λ i−zγ(n ) lies in ( 0 , 1 ) . λ Thus , the i−zγ(n ) form a valid distribution over pages , and λ constitute the only local maximum of the Laplacian . Thus , the values q(n ) = γ(n ) i−zγ(n ) constitute the only candidate λ symmetric equilibrium.11 positive at this solution , and each
γ(n )
γ(n )
γ(n ) n d2qi(n ) is equal to
It remains to show that this symmetric profile , which attains a local maximum for the utility of each engine , is actually a global maximum ( and thus a best response ) for each player when β > 1 − 1/K . To see this , note that dqi(n)dqi(n ) = 0 for all pairs of pages n = n ; furthermore , d2ui(qi,q−i ) for each page n , d2ui(qi,q−i ) k=i qk(n ) ) · ( β − ( 1 − β )
− 2γ(n)( Since K implies that β − ( 1 − β ) k=i qk(n ) ≤ K − 1 , our assumption that β > 1 − k=i qk(n ) ) > 0 , and hence d2qi(n ) < 0 over the entire domain of ui(· ) . This implies d2ui(qi,q−i ) that the Hessian of ui(· ) is negative definite , and ui(· ) is strictly concave . Thus , the local maximum described above is also a global maximum . We conclude that the symmetric fi profile is an equilibrium .
( k=i qk(n ) ) k qk(n))3
( 12 )
.
1 qi(n) ) .
11We remark that for β = 1 , we get that z = 0 , so we recover the analysis from the proof of Theorem 4.2 as a special case . n
708 B . REFERENCES [ 1 ] G . Aggarwal , J . Feldman , S . M . Muthukrishnan , and
M . P´al . Sponsored search auctions with markovian users . In Proc . 4th WINE , pages 621–628 , 2008 .
[ 2 ] E . Anshelevich , A . Dasgupta , J . Kleinberg , E . Tardos , T . Wexler , and T . Roughgarden . The price of stability for network design with fair cost allocation . In Proc . 45th IEEE FOCS , pages 295–304 , 2004 .
[ 3 ] S . Athey and G . Ellison . Position auctions with consumer search . Technical Report 15253 , National Bureau of Economic Research , Inc , August 2009 .
[ 4 ] C . d’Aspremont , J . J . Gabszewicz , and J F Thisse .
On hotelling ’s ’s tability in competition’ . Econometrica , 47(5):1145–50 , September 1979 .
[ 5 ] B . Edelman , M . Ostrovsky , and M . Schwarz . Internet advertising and the generalized second price auction : Selling billions of dollars worth of keywords . American Economic Review , 97(1):242–259 , 2007 .
[ 6 ] H . Hotelling . Stability in competition . The Economic
Journal , 39:41–57 , 1929 .
[ 7 ] N . Immorlica , A . T . Kalai , B . Lucier , A . Moitra ,
A . Postlewaite , and M . Tennenholtz . Dueling algorithms . In Proc . 42nd ACM STOC , pages 215–224 , 2011 .
[ 8 ] D . Kempe and M . Mahdian . A cascade model for externalities in sponsored search . In Proc . 4th WINE , pages 585–596 , 2008 .
[ 9 ] R . Khoussainov . Economics of Distributed Web
Search : A Machine Learning Approach . PhD thesis , Department of Computer Science , University College Dublin , 2004 .
[ 10 ] R . Khoussainov and N . Kushmerick . Distributed web search as a stochastic game . In Proc . SIGIR 2003 Workshop on Distributed Information Retrieval , pages 58–69 , 2003 .
[ 11 ] J . M . Kleinberg and S . Oren . Mechanisms for
( mis)allocating scientific credit . In Proc . 42nd ACM STOC , pages 529–538 , 2011 .
[ 12 ] E . Koutsoupias and C . Papadimitriou . Worst case equilibria . In Proc . 17th STACS , pages 404–413 . Springer , 1999 .
[ 13 ] J . J . Liu and D . M . Chiu . Mathematical modeling of competition in sponsored search market . In Proc . 2010 Workshop on the Economics of Networks , Systems , and Computation , 2010 .
[ 14 ] A . Mas Collel , M . D . Whinston , and J . R . Green .
Microeconomic Theory . Oxford University Press , 1995 . [ 15 ] R . P . McAfee . Mechanism design by competing sellers .
Econometrica , 61(6):1281–1312 , November 1993 .
[ 16 ] T . Mukhopadhyay , U . Rajan , and R . Telang . The market structure for internet search engines . Journal of Management Information Systems , 21(2):137–160 , 2004 .
[ 17 ] M . Peters and S . Severinov . Competition among sellers who offer auctions instead of prices . Journal of Economic Theory , 75(1):141–179 , July 1997 .
[ 18 ] T . Roughgarden . Intrinsic robustness of the price of anarchy . In Proc . 40th ACM STOC , pages 513–522 , 2009 .
[ 19 ] C . Shapiro and H . Varian . Information Rules : A
Strategic Guide to the Network Economy . Harvard Business Press , 1999 .
[ 20 ] H . Varian . Intermediate microeconomics : a modern approach . W . W . Norton & Company , seventh edition , 2006 .
[ 21 ] A . Vetta . Nash equlibria in competitive societies with applications to facility location , traffic routing and auctions . In Proc . 43rd IEEE FOCS , pages 416–425 , 2002 .
709
