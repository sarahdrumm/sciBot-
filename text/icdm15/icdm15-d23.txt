From Micro to Macro : Uncovering and Predicting
Information Cascading Process with Behavioral Dynamics
Linyun Yu1 , Peng Cui1 , Fei Wang2 , Chaoming Song3 , Shiqiang Yang1
1Department of Computer Science and Technology , Tsinghua University
2Department of Computer Science and Engineering , University of Connecticut yuly12@mailstsinghuaeducn,cuip@tsinghuaeducn,fei_wang@uconnedu chaomingsong@gmailcom , yangshq@tsinghuaeducn
3Department of Physics , University of Miami
5 1 0 2 y a M 7 2
] I S . s c [
1 v 3 9 1 7 0
.
5 0 5 1 : v i X r a
ABSTRACT Cascades are ubiquitous in various network environments . How to predict these cascades is highly nontrivial in several vital applications , such as viral marketing , epidemic prevention and traffic management . Most previous works mainly focus on predicting the final cascade sizes . As cascades are typical dynamic processes , it is always interesting and important to predict the cascade size at any time , or predict the time when a cascade will reach a certain size ( eg an threshold for outbreak ) . In this paper , we unify all these tasks into a fundamental problem : cascading process prediction . That is , given the early stage of a cascade , how to predict its cumulative cascade size of any later time ? For such a challenging problem , how to understand the micro mechanism that drives and generates the macro phenomenons ( ie cascading proceese ) is essential . Here we introduce behavioral dynamics as the micro mechanism to describe the dynamic process of a node ’s neighbors get infected by a cascade after this node get infected ( ie one hop subcascades ) . Through data driven analysis , we find out the common principles and patterns lying in behavioral dynamics and propose a novel Networked Weibull Regression model for behavioral dynamics modeling . After that we propose a novel method for predicting cascading processes by effectively aggregating behavioral dynamics , and propose a scalable solution to approximate the cascading process with a theoretical guarantee . We extensively evaluate the proposed method on a large scale social network dataset . The results demonstrate that the proposed method can significantly outperform other state of the art baselines in multiple tasks including cascade size prediction , outbreak time prediction and cascading process prediction .
Keywords Information Cascades , Social Network , Dynamic Processes Prediction
1 .
INTRODUCTION
In a network environment , if decentralized nodes act on the basis of how their neighbors act at earlier time , these local actions often lead to interesting macro dynamics cascades . In online social networks , the information a user can get and engage in is highly dependent on what his/her friends share , and thus information cascades naturally occur and become the major mechanism for information communication . There has been a growing body of research on these information cascades because of their big potential in various vital applications such as viral marketing , epidemic prevention , and traffic management . Most of them focus on characterizing these information cascades and discovering their patterns in structures , contents and temporal dynamics .
Recently , predictive modeling on information cascades has aroused considerable research interests . Earlier works on predicting the final size of information cascades based on content , behavioral and structural features [ 3 , 6 ] . As only large cascades are of interest in most real applications , Cui et al.[6 ] propose a data driven approach to predicting whether the final size will surpass a threshold for outbreak . More recently , Cheng et al.[3 ] go beyond the final size to continuously predict whether the cascade will double the current size in future . They also raise an interesting question that whether cascades can be predicted , and their experimental results demonstrate that cascade size are highly predictable . However , the previous works were all about cascade size , which did not include the whole of information cascades . Information cascade is a typical dynamic process , and temporal scale is critical for understanding the cascading mechanism . Also , it is highly nontrivial to predict when a cascade breaks out , and , more ambitiously , to predict the evolving process of a cascade ( ie cascading process , as shown in 1 ( a) ) . In this paper , we move one step forward to ask : Is the cascading process predictable ? That is , given the early stage of an information cascade , can we predict its cumulative cascade size of any later time ?
It is apparent that the targeted problem is far more challenging than those in previous works . The commonly used cascade level macro features for size prediction , such as the content , increasing speed and structures in the early stage are not distinctive and predictive enough for the cascade sizes at any later time . A fundamental way to address this problem is to look into the micro mechanism of cascading processes . Intuitively , an information cascading process can be decomposed into multiple local ( one hop ) subcascades .
Figure 1 : Illustration of cascading process prediction
When a node involves in a cascade , one or more of its offspring nodes will also involve in the cascade with a temporal scaling . If the dynamic process of these subcasades can be accurately modeled , then the cascade process can be straightforwardly predicted by an additive function of these local subcascades .
Here we exploit behavioral dynamics as the micro mechanism to represent the above mentioned dynamic process of local subcascades . Given a node involving in a cascade at t0 , its behavioral dynamic aims at capturing the changing process of the cumulative number of its offspring nodes that involve in the cascade with time evolving . By definition , this is a non decreasing counting process and can be well represented by survival model [ 16 ] . A paucity of recent research works have exploited the survival theory to model how the occurrence of event at a node affects the time for its occurrence at other nodes ( ie diffusion rate ) , and their results demonstrate the superiority of continuoustime survival model to uncover temporal processes . However , their targeted problem is to uncover the hidden diffusion networks , and thus suppose the parameters of the survival function on each edge to be fixed . This will cause the unexpected result that all the cascades with the same root node ( or early involved nodes ) will be anticipated to have the same cascading processes , which makes these models inapplicable in our problem .
In this paper , we propose a novel method for cascading process prediction , as shown in Figure 1 . Given the early stage of a cascading process before t in Figure 1 ( a ) , we illustrate the partially observed cascade as shown in Figure 1 ( b ) , where nodes in green ( red ) represent the observed ( unobserved ) nodes involved before ( after ) t . Given the behavioral dynamics of node p1 represented by its survival rates , and the number of its offspring nodes that have involved before t , we can predict the cumulative number of its offspring nodes that involve in the cascade at any time t > t . After conducting similar predictions on all the observed nodes , the cascading process after t can be predicted by an additive function over all local predictions from behavioral dynamics . More specifically , how to model behavioral dynamics and further predict cascading process based on continuous time survival theory also entail many challenges . First , it is unclear what distribution form the behavioral dynamics follow . Although Exponential and Rayleigh distributions are commonly used to characterize the temporal scaling of pairwise interactions , behavioral dynamics in this paper are a reflection of collective behaviors and are proved to be inconsistent with these simple distributions in real data . Second , the parameters in survival models are difficult to interpret , which limits the generality of the learned model . Given the distribution form of data , the parameters of survival model can always be learned from real data in maximum likelihood manner . However , it is unsure what these parameters stands for and the learned model cannot be generalized to out ofsample nodes ( ie the nodes whose behavioral dynamic data is not included in the data ) . Third , the predictive models based on survival theory are computationally expensive due to the continuous time characteristic , which makes them infeasible in real applications . Thus , we intend to design an effective and interpretable model for behavioral dynamics modeling and a scalable solution for cascading process prediction .
In particular , we conduct extensive statistical analysis on large scale real data and find that the behavioral dynamics cannot be well captured by simple distributions such as Exponential and Rayleigh distribution , but the general form of Exponential and Rayleigh , Weibull distribution , can well preserve the characteristics of behavioral dynamics . Also , we discover strong correlations between the parameters of a node ’s behavioral dynamics and its neighbor nodes behavioral features . Enlightened by these , we propose a NEtworked WEibull Regression ( NEWER ) model for parameter learning of behavioral dynamics . In addition to the maximum likelihood estimation term , we also assume the parameters of a node can be regressed by the behavioral features of its neighbor nodes and thus impose networked regularizers to improve the interpretability and generality of the model . Based on the behavioral dynamics , we further propose an additive model for cascading process prediction . To make it scalable , we propose an efficient sampling strategy for approximation with a theoretical guarantee .
We extensively evaluate the proposed method in a complete dataset from a population level social network in China , including over 320 million users , 1.2 billion edges and 340 million cascades . In all the testing scenarios , the proposed method can significantly outperform other baseline methods . Figure 2 is a showcase of cascading process prediction by the proposed method . We show that by accurately modeling behavioral dynamics of social network users , we can predict the cascading process with a 2 hours leading time window , and get the average precision of 0.97 if we restrict the error rate of the size to be 01 Also , the accurate predictions of final cascade size , cascade outbreaking time are all implied in the predicted cascading process .
The main contributions of this paper are : ( 1 ) Enlightened by the cascading size prediction works , we
Predictedcascading processEarlystage(a ) Cascading Process(c ) Behavioral dynamicsof 𝑝1(b ) Partially observed cascade at t base on the information of other edges . Influence Modeling and Maximization . Influence modeling and maximization aims to evaluate users’ importance in social networks . This is first proposed by Domingos et al . [ 7 ] to select early starters to trigger a large cascade . Then Kempe et al . [ 12 ] proposed Stochastic Cascade Model to formalize the problem and Chen et al . [ 2 ] proposed a scalable solutions . Recently the approach was extended to adding opinion effect [ 1 , 9 ] or time decay effects [ 18 ] on the models . Our work is distinct from existing works in the following way : Rather than quantify the influence on nodes , we will predict the cascading process .
3 . PRELIMINARIES
This section presents the dataset information , discovered patterns and validated hypothesises to support the model design and solution . 3.1 Dataset Description
The dataset in this paper is from Tencent Weibo , one of the largest Twitter style websites in China . We collect all the cascades in 10 days generated between Nov 15th and Nov 25th in 2011 . The dataset contains in total 320 million users with their social relations , 340 million cascades1 with their explicit cascading processes . The distribution of cascade size is shown in Figure 3 . We can see that the cascade size follows Power Law distribution , and the majority of cascades have very small size , which are not of interest for many applications . As the paper intends to predict cascading process , we filter out the cascades with the size of less than 5 , and maintain the remaining 0.59 million cascades with obvious cascading process for statistical analysis and experiments .
Figure 3 : Distribution of cascade size . The red straight line is the linear fitting result to the blue curve , showing the size distribution fits power law . 3.2 Characteristics of Behavioral Dynamics
As mentioned before , behavioral dynamics play a central role in uncovering and predicting cascade processes . Here we investigate the characteristics of behavioral dynamics to enlighten the modeling of behavioral dynamics . By definition , the behavioral dynamics of a user capture the changing process of the cumulative number of his/her followers retweet
1Here the cascades are information cascades . When a user retweet/generate a post , several of his/her followers will further retweet the post and so on so forth to form a information cascade .
Figure 2 : Showcase of cascading process prediction for a real cascade . The red line represents the groundtruth cascading process . The others are prediction results based on different early stage information . move one step forward to attempt cascading process prediction problem , which implies several vital problems such as cascade size prediction , outbreaking time prediction as well as evolving process prediction .
( 2 ) We find out the common principles and patterns lying in behavioral dynamics and propose a novel Networked Weibull Regression model for behavioral dynamics modeling accordingly , which significantly improves the interpretability and generality of traditional survival models .
( 3 ) We propose a novel method for predicting macro cascading process by aggregating micro behavioral dynamics , and propose a scalable solution to approximate the cascading process with a theoretical guarantee . 2 . RELATED WORK Prediction on Cascades . In recent years , many methods have been proposed to make prediction on cascades . Most of them focus on predicting the future size of a cascade , and the common way is to select vital nodes and place sensors on them . For example , Cohen et al . [ 4 ] focus on exploring the topological characteristics of the cascade . Cui et al . [ 6 ] proposes to optimize the size prediction problem using dynamic information . Cheng et al . [ 3 ] introduces temporal feature into the problem and they predict the growing size of the cascade . Rather than attempt to predict the cascade size , we focus on predicting the cascading process which considers both time and volume information together . Survival Model . Survival model is a method try to analysis things according to the time duration until one or more events happen . In recent years , researchers started modeling information diffusion using continuous models . Myers et al . [ 14 ] proposed CONNIE to infer the diffusion network base on convex programming while leaving the transmission rate to be fixed , later on Rodriguez et al.[17 ] proposed NETRATE which allowing the transmission rate to be different in different edges . Subsequently , Rodriguez et al . [ 10 ] give an additive model and a multiplicative model to describe information propagation base on survival theory . Most of these works focus on discovering the rules and patterns to the edges in the social network and is hard to extend to make predictions for cascades since the correlation between transmission rates on edges is little . In contrast , our work focus more on predictive modeling by grouping correlated edges together so that we can make predictions for edges
Esp= 0.1Early stage Percentage=0.2Early stage Percentage=0.3Early stage Percentage=05δ02 Precision=052δ02 Precision=063δ02 Precision=085δ02 Precision=094`y= 166x+592 model
Exponential Power Law
Rayleigh
Weibull density function λie−λit
, t −αi−1 ki−1 t t2 2
δ
λi
αite−αi
αi δ ki λi
− t
λi e
, t −αi survival function e−λit ki − t e−αi e t2 2
λi
δ ki hazard function λi αi t αit ki−1 t ki λi
λi
Table 1 : Parametric Models ks static in Weibo
0.2741 0.9893
0.7842
0.0738 the number of the posts user received in a certain period . the number of the posts user sent in a certain period . average inflow rate of fans to the user , or where i is the fans to the user(and the same as following ) . average retweet rate of fans to the i retweet(i)·retweet rate(i ) user , or i retweet(i)·in f low(i ) i retweet(i ) i retweet(i )
.
Behavioral features inf low rate outf low rate f ollower avg− inf low rate f ollower avg− retweet rate Structural features f ollower number f ollow number a post after the user retweeting the post . Then the behavioral dynamics of a user can be straightforwardly represented by averaging the size growth curve of all subcascades that spread to the user and his/her followers . However , Figure 4 shows that the size growth curves vary significantly for different subcascades of the same user , which means that such a representation is not fit to characterize behavioral dynamics . Here we normalize the size growth process by the cascade final size and adopt survival function to describe the behavioral dynamics where the survival rate represents the percentage of nodes that has not been but will be infected . As shown in Figure 4 , a user ’s survival function is quite stable for different subcascades although their size growth patterns vary .
Figure 4 : The size growth curves and their corresponding survival function for 3 users .
Then can we use the behavioral dynamics represented by survival function to predict the size growth curve of a subcascade ? We provide positive answer with the assistance of early stage information . For example , if we know the subcascade size at an early time t0 , then the survival function can be straightforwardly transformed from percentage dimension into size dimension . 3.3 Parametrize Behavioral Dynamics
For the ease of computation and modeling , we need to parametrize the behavioral dynamics in our case . In stateof the art , Exponential and Rayleigh distributions are often used to describe the dynamics of user behaviors in different settings [ 8 , 11 ] . Here we testify these distribution hypothesis on our real data and find that these distributions cannot well capture both the shape and scale characteristics of behavioral dynamics . Thus , we turn to the general form of Exponential and Rayleigh distributions , the Weibull distribution [ 15 ] , and find it adequate for parametrizing behavioral dynamics . In order to quantify the effect of parametrization , we calculate KS Statistic for the three candidate distributions as shown in Table 1 . It displays that Weibull distribution performs much better than Exponential and Rayleigh distribution . The improvement is attributed to the high degree of freedom of Weibull distribution as it has two parameters λ and k to respectively control the scale and shape of the behavioral dynamics . 3.4 Covariates of Behavioral Dynamics
If subcascades for all users are sufficient , the parameters of behavioral dynamics can be directly learned from data . number of the followers to the user . number of users this user follows . Table 2 : Behavioral features for users .
However this suffers from several drawbacks : ( 1 ) some users may have no or very sparse subcascade in training dataset , which makes these users’ behavioral dynamics inaccurate or even unknown ; ( 2 ) it is difficult to interpret the parameters directly learned from data , which prohibits us from getting insightful understanding on the behavioral dynamics . To address these , we investigate the covariates of behavioral dynamics here . As the behavioral dynamics of a user are to capture the collective responses of his/her followers , we assume the parameters of the user ’s behavioral dynamics should be correlated with the behavioral features of his/her followers ( network neighbors ) . Hence , we extract a set of behavioral features for each user as listed in Table 2.2 For each user with enough subcascades in our dataset , we learned their λ and k directly from data . And then , we calculate the correlations between the learned parameters and their followers’ collective behavioral features . The examples given in Figure 5 indicate obvious correlations between the learned parameters with these behavioral features . Therefore , we can use these behavioral features as covariates to regress the parameters of behavioral dynamics . 3.5 From Behavioral Dynamics to Cascades
After validating that the behavioral dynamics can potentially be accurately modeled and predicted , the key problem is whether we can derive the macro cascading process from micro behavioral dynamics . Intuitively , the cascading process cannot be perfectly predicted at early stage by behavioral dynamics . Given any time t , we can only use the behavioral dynamics of the users that involved before t to predict the cascading process after t . Consequently , the prediction coverage is restricted to all the followers of these users , while the users beyond this scope are neglected . These uncovered users may potentially affect the performance of cascading process prediction .
2We think that follower with different retweet number will have different effects to the user , so we modify the weights on each term of f ollower avg inf low rate and f ollower avg retweet rate . one node and spread ( eg , by retweeting ) to its neighboring nodes . A cascade is typically formed by repeating this process . Therefore , a cascade can be represented by a set of nodes C = {u1 , u2 , um} , where u1 is the root node . In a cascade , each node will get infected by the event only once , so it is tree structured . For every node ui in the cascade , we denote its parent node as rp(ui ) . The time stamp that ui gets infected is t(ui ) , and t(ui ) ≤ t(ui+1 ) . Then the partial cascade before time t is denoted by Ct = {ui|t(ui ) ≤ t} , and its size size(Ct ) = |Ct| where |.| is the cardinality of a set . Then the cascade prediction problem can be defined as :
Cascade Prediction : Given the early stage of a cascade Ct , predict the cascade size size(Ct ) with t ≥ t . 4.2 Survival Analysis
Survival analysis is a branch of statistics that deals with analysis of time duration until one or more events happen , such as death in biological organisms and failure in mechanical systems [ 13 ] . It is a useful technique for cascade prediction . More concretely , let τ0 be a non negative continuous random variable representing the waiting time until the occurrence of an event with probability density funtion f ( t ) , the survival function
S(t ) = P r{τ0 ≥ t} = f ( t )
( 1 ) t encodes the probability that the event occurs after t , the hazard rate is defined as the event rate at time t conditional on survival until time t or later ( τ0 ≥ t ) , ie ,
λ(t ) = lim dt→0
P r(t ≤ τ0 < t + dt|τ0 ≥ t ) dt
= f ( t ) S(t )
( 2 )
S(t ) and λ(t ) are the two core quantities in survival anal ysis . 4.3 NEtworked WEibull Regression Model
The Weibull distribution is commonly used in survival analysis.In network scenario , if we think the time that an event ( eg , retweet ) happened on a node as a survival process , we can fit a Weibull distribution to the survival time of node i , then its corresponding density , survival and hazard functions
∞ ki
− t
λi exp t ki−1 − t ki t ki−1
λi
λi fi(t ) = ki λi
Si(t ) = exp hi(t ) = ki λi
λi
( 3 )
( 4 )
( 5 ) where t > 0 is the average event happening time to node i , λi > 0 and ki > 0 is the scale and shape parameter of the Weibull distribution . In the following we will assume the network nodes are users and the event is retweeting .
Likelihood of retweeting dynamics . Supposing there are N users in total , Ti is a set of mi time stamps and each element Ti,j indicates the j th retweet time stamp to the post of the i th user . We sort those time stamps out in increasing order so that Ti,j+1 Ti,j . We assume Ti,j ≥ 1 and Ti,mi > 1 . Then the likelihood of the event data can be written as follows :
Figure 5 : Correlations between the survival function parameters and the behavioral features
Fortunately , we observe two interesting phenomenons in real data .
Minor dominance . Although each user has behavioral dynamics , the behavioral dynamics of different users make significantly different contributions to the cascading process . It is intuitive that the behavioral dynamics of an active user with 1 million followers contribute much more than that of an inactive user with 5 followers . The data also coincides with our intuition . According to Figure 6 ( a ) , it can be observed that a very small number of nodes whose behavioral dynamics dominate the cascading process underpin the idea of just using the behavioral dynamics of these dominant nodes for cascading process prediction .
Early stage dominance . Enlightened by the minor dominance phenomenon , we further ask whether the dominant nodes are prone to join cascades in early stage . Here , Figure 6 ( b ) depicts the time distribution of these dominant nodes joining in cascades ,
Figure 6 : Minor dominance and early stage dominance in information cascades .
Taking these two phenomena into account together , it is safe to design a model exploiting the behavioral dynamics of infected nodes in early stage to predict the cascading process .
4 . METHODOLOGY
This section introduces the NEtworked WEibull Regres sion ( NEWER ) and cascade prediction methods in detail . 4.1 Problem Statement
Given a network G = U , A , where U is a collection of nodes and A is the set of pairwise directed/undirected relationships . An event ( eg , tweet ) can be originated from
L(λ , k ) =
=
( hi(Ti,j ) · Si(Ti,j ) ) ki · T ki−1 i,j
· λ
−ki i
−T
· e
−ki i,j·λ ki i
( 6 )
( 7 )
4.4 Efficient cascading process prediction
It should be born in mind that cascading prediction is intended to perform early prediction of its size at any later time . In the following we will present two models to achieve this goal . 441 Basic Model The entire flow of the basic model we proposed is illus i=1 j=1 mi mi
N N N mi j=1 i=1 log L(λ , k ) = where li(λi , ki ) = mi log ki + ( ki − 1)mi li(λi , ki ) i=1 j=1 log Ti,j− miki log λi − λ
−ki i j=1 T ki i,j .
As discovered in section 3.4 , the survival characteristics of the user is correlated with the behavioral features of him/her . Then we can parametrize those parameters in the personalized Weibull distributions using those behavioral features . More formally , let xi be a r dimensional feature vector for user i , we parameterize λi and ki with the following linear function : log λi = log xi ∗ β log ki = log xi ∗ γ
( 8 )
( 9 ) where β and γ are r dimensional parameter vector for λ and k . We attempt to find the scale and shape parameter of every user so that the likelihood of the observed data is maximized , at the same time we can also get the parameter vectors for out of sample extensions .
We use the Equation ( 8 ) and ( 9 ) to replace λi and ki in the log likelihood function Equation ( 7 ) to solve the parameters . To further enhance the interpretability , we also add 1 sparsity regularizers on β and γ respectively to enforce model sparsity . Combining everything together , we can obtain the NEtworked WEibull Regression ( NEWER ) formulation which aims to minimize the following objective :
F ( λ , k , β , γ ) = G1(λ , k ) + µG2(β , λ ) + ηG3(γ , k )
G1(λ , k ) = − log L(λ , k )
G2(λ , β ) =
G3(k , γ ) =
1 2N 1 2N log λ − log X · β2 + αβ β1 log k − log X · γ2 + αγ γ1
( 10 )
( 11 )
( 12 )
( 13 )
Optimization . To minimize F ( λ , k , β , γ ) in Equation ( 10 ) , we first prove that the function is lower bounded . We have the following theorem .
Theorem 1 . F ( λ , k , β , γ ) has global minimum .
Proof . See the appendix .
With this theorem , the following coordinate descent strategy can be used to solve the problem with guaranteed convergence . At each iteration , we solve the problem with one group of variables with others fixed .
F or it = 1 , . . . , itmax
λ[it+1 ] = argminλF ( λ , k[it ] , β[it ] , γ[it ] ) k[it+1 ] = argminkF ( λ[it+1 ] , k , β[it ] , γ[it ] ) β[it+1 ] = argminβF ( λ[it+1 ] , k[it+1 ] , β , γ[it ] ) γ[it+1 ] = argminγF ( λ[it+1 ] , k[it+1 ] , β[it+1 ] , γ )
( 14 )
For solving the subproblem with respect to λ or k , we use Newton ’s Method . For subproblem with respect to β and γ , we use standard LASSO solver [ 19 ] .

Set of users U involved in the cascade C before time tlimit , survival functions of users Suj ( t ) , predicting time te ; creates a subcascade process with replynum(ui ) = 0 if ui is not root node then replynum(rp(ui ) ) = replynum(rp(ui ) ) + 1 trated in Algorithm 1 : Algorithm 1 Basic Model Input :
Size of cascade size ( Cte ) ;
Output : 1 : for all user ui ∈ U do 2 : 3 : 4 : 5 : end if 6 : end for 7 : sum = 1 8 : for all user ui ∈ U do 9 : deathrate(ui ) = max
1 − Sui ( tlimit − t(ui) ) , 1|V | 1 − Sui ( te − t(ui) ) , 1|V |
10 : f drate(ui ) = max sum = sum + replynum(ui)·f drate(ui ) deathrate(ui )
11 : 12 : end for 13 : return size ( Cte ) = sum
When a new node ui is added into the cascade at t(ui ) , the algorithm will launch a process to estimate the final size of the subcascade that ui will generate , with temporal size counter replynum(ui ) and survival function Sui ( t ) starting at t(ui ) . If ui is involved by others , the algorithm also increases the temporal size of the retweet set of its parent rp(ui ) by one .
After all the information before the deadline is collected , the result will be finalized by aggregating all the value estimated by every subcascade process . Since the post number is at most |V | ( all nodes in the network are involved into the cascade ) , the value of death rate deathrate(ui ) and final death rate f drate(ui ) ( complement to their survival rates ) at line 9 and line 10 is set to be 1/|V | when it is lower than 1/|V | . Complexity Analysis . Only constant time operations is involved in the two for loops . Therefore , the complexity of the algorithm is O(n ) where n is the number of users in the cascade . 442 Although the basic model solves the estimation problem , real applications often need to estimate the cascade size dynamically so that the changes can be monitored .
Sampling Model
To make the algorithm scalable , the number of recalculations should be limited , while the estimated value of size should fall into an acceptable error scope . We can utilize the following two facts to make the estimation process more efficient : ( 1 ) For a subcascade generated by ui , the estimation of the size will always be zero if there is no user involved into it , which means we can ignore the calculation . ( 2 ) If we do not re estimate the final number of a subcascade ( when there is no new user involved into it ) , the temporal size counter replynum(ui ) and final death rate edrate(ui ) will not change but the death rate deathrateui ( t ) will increase over time . Supposing the previous time stamp of the deathrateui ( t1 ) subcascade set estimation is t0 , it will cause a relative error deathrateui ( t0 ) − 1 at t1 . Hence , the relative error rate of rate will be at most if we re estimate the final number of u ( 1 − ( 1 + ) · ( deathrateui ( t0)) ) . By the subcascade at S−1 exploring those two tricks , we propose a sampling model shown in Algorithm 2 :
Algorithm 2 Sampling Model Input : survival functions of users Suj ( t ) , and set of users U in one cascade C(given dynamically ) ;
Output : for every size prediction request to te at t0 , output size ( Cte ) ; switch ( request.type )
1 : sum = 0 ; 2 : while request = model.acceptRequest do 3 : 4 : 5 : 6 : 7 : 8 : ui=request.user , t0=request.time creates a subcascade process : return size ( Cte ) = sum case APPROXIMATION : case INVOLVED USER : t(ui ) = t0 , app(ui ) = 0 , replynum(ui ) = 0 , f drate(ui ) = max
1|V | , 1 − Srp(ui)(te − t0 )
; if ui is root node then else sum = 1 ; trep = t0 − t ( rp(ui) ) ; replynum(rp(ui ) ) = replynum(rp(ui ) ) + 1 ; sum = sum − app(rp(ui) ) ; deathrate(rp(ui ) ) = max app(rp(ui ) ) = replynum(rp(ui))·f drate(rp(ui ) ) sum = sum + app(rp(ui) ) ; tnew = S−1 rp(ui)(1 − ( 1 + ) · deathrate(rp(ui) ) )
1|V | , 1 − Srp(ui)(trep ) deathrate(rp(ui ) )
;
;
+t(rp(ui) ) ; sendRequest(THRESHOLD CHANGE,rp(ui),tnew ) ; end if case THRESHOLD CHANGE :
1|V | , 1 − Sui ( t0 − t(ui ) ) ui = request.user , t0=request.time sum = sum − app(ui ) ; deathrate(ui ) = max ; tnew = S−1 ui ( 1 − ( 1 + ) · deathrate(ui ) ) + t(ui ) ; sendRequest(THRESHOLD CHANGE,ui,tnew ) ; app(ui ) = replynum(ui)·f drate(ui ) sum = sum + app(ui ) ; deathrate(ui )
;
9 : 10 : 11 : 12 : 13 : 14 : 15 :
16 : 17 : 18 :
19 : 20 : 21 : 22 : 23 : 24 :
25 : 26 : 27 : 28 : 29 : 30 : end while end switch
Complexity Analysis . The following theorem analyzes the complexity of Algorithm 2 .
Theorem 2 . With an overall O(n log1+ ( |V | ) ) counting to estimate the number of subcascades , the sampling model can approximate the final size of the whole cascade at any time with an relative error rate of at most .
Proof . For each approximation request , we only need to report the number directly ; for every new subcascade , the initially operation number is also constant , and we need to do at most O(log1+ ( |V | ) ) times threshold adjustment for subcascade which has users involved in , since the lower1|V | and the upperbound is 1(all the bound of deathrate is people are involved in the cascade ) . Above all , the final complexity is O(t)+O(n)+O(n log1+ ( |V | ) ) = O(t+n log1+ ( |V | ) ) for each cascade ( with n users and t requests ) . If we put this algorithm into an online environment , the complexity will be O(T + N log1+ ( |V | ) ) ∼ O(T ) for all the cascades with N Users in total3 ( we see log1+ ( |V | ) as a constant with respect to T and N ∼ T as the number of users involved in cascades increases over time ) .
With this model , for cascade final size prediction , we just need to set the prediction time te to be infinite so that the deathrate of all subcascades will be 1 . For outbreak time prediction , we can make a binary search with respect to time te , checking whether the cascade size will be more or less than the size number at tmid and make the decision eachtime .
5 . EXPERIMENTS
In order to evaluate the performances and fully demonstrate the advantages of the proposed method , we conduct a series of experiments on the dataset introduced in Section 31 The results of multiple tasks are reported , including cascade size prediction , outbreak time prediction and cascading process prediction . Also , 5.1 Baselines and Evaluation Metrics
Since we are the first to investigate cascading process prediction problem , no previous models can be adopted as direct baselines . Here , we implemented the following methods which can be potentially applied into our targeted problem as baselines :
• Cox Proportional Hazard Regression Model ( Cox ) : This model assumes that the behavioral dynamics of all users have different scale parameters while sharing the same shape parameter . We use the same covariates as in our model and find the optimal scale parameters for all users and the shared shape parameter . We implement it as in [ 5 ] .
• Exponential/Rayleigh Proportional Hazard Regression Model ( Exponential/Rayleigh ) : Since the shape parameters of both Exponential and Rayleigh distributions are fixed values ( 1 for Exponential distribution and 2 for Rayleigh distribution ) , they are two special cases of Cox model .
• Log linear Regression Model ( Log linear ) : We refer to [ 3 ] which extracted 4 classes features to characterize cascades , including node features , structural features of cascades , temporal features and content features . In our case , we ignore the content features which are not covered in our dataset and also reported by [ 3 ] to be unimportant for cascade prediction . Then we use log linear regression model to predict the cascade size .
It is noted that Log linear can only predict cascade size but not for time related prediction , while Cox , Exponential and Rayleigh models are applied to all prediction tasks . Also , the goal of Cox , Exponential and Rayleigh models are to elucidate the behavioral dynamics . After that , we use the same cascade prediction model as in our method to conduct cascade level predictions .
For each cascade , our dataset includes its complete cascading process as the groundtruth . Next , we use the following metrics to evaluate the performances :
3It will be counted multiple times if a specific user involves in multiple cascades
• Root Mean Square Log Error ( RM SLE ) : In PowerLaw distributed data , it is not reasonable to use standard RMSE to evaluate the prediction accuracy . For example , for a cascade with the groundtruth size of 1000 , it is significantly different to predict its size to be 2000 or 0 , but they have the same RMSE . Thus , we first calculate the logarithmic results for both the groundtruth and predicted value , then calculate RMSE on the logarithmic results to evaluate the accuracy of the proposed method and baselines .
• Precision with σ Tolerance ( δσ Precision ) : In real applications , a small deviation from the groundtruth value is often acceptable . In our case , we regard the predicted value within the range of groundtruth(1 ± σ ) as a correct prediction , and the resulted precision is δσ Precision .
For parameter setting , there are 4 parameters in our method , including µ , η , αβ and αγ . We tune these parameters by grid searching , and the optimal parameters used in our experiments are µ = 10 , η = 10 , αβ = 6 ∗ 10−5 , αγ = 8 ∗ 10−6 . 5.2 Cascade Size Prediction
Figure 7 : RM SLE results of different methods with different number of observed nodes in cascades .
We randomly separate the cascades into 10 folds , and conduct a 10 fold cross validation by using 9 of them as training data and the other one as testing data . For cascades with size over k , we use the first s(s < k ) nodes as observed data , and the target is to predict the final cascade sizes .
The prediction performances of all the methods are shown in Figure 7 . It can be seen that the proposed method NEWER significantly outperforms other baselines in RM SLE value in different sized datasets . The baselines that has the closest performance with NEWER is the Cox model . We can see that the margins of improvement from Cox to NEWER are more obvious in the dataset with larger k . In a certain dataset , the margins are more evident with smaller s . These results demonstrate the significant advantage of NEWER in predicting large cascades in very early stage .
Comparatively , the Log linear method does not achieve satisfactory results in this task . The main reason is that the coefficients in the Log linear model are highly biased towards the dominant number of small sized cascades , which is also argued by [ 3 ] . In our method , we successfully overcome this bias by shifting from macro cascade level features to micro behavioral dynamics . The substantial gain achieved by all behavioral dynamics based methods ( including NEWER , Cox , Exponential and Rayleigh ) exemplifies the importance of this micro mechanism for cascade prediction .
In order to demonstrate the efficiency of the proposed method , we also evaluate the computational cost of NEWER and Sampling NEWER in the computational environment with 3.4GHZ Quad Core Intel i7 3770 and 16GB memory . We track the process of all cascades . The base cascade prediction model ( Base ) re predicts the final size at every time
Improved
Directed
Model ( δ = 0.1 )
Learning Method
Base Model
8.47 ∗ 105s 7.61 ∗ 105s 6.65 ∗ 105s 4.35 ∗ 105s 3.4 ∗ 105s
Method Size ≥ 20 Size ≥ 50 Size ≥ 100 Size ≥ 500 Size ≥ 1000 Table 3 : Running time for different methods in different dataset under a server with 3.4GHZ Quad Core Intel i7 3770 CPU and 16GB memory .
10.73s 8.62s 7.09s 4.33s 3.30s
899s 899s 898s 891s 881s points ( in second ) , while the sampling based cascade prediction model ( Sampling ) re predicts the final size only when the observed cascade sizes increase . As shown in Table 3 , the Sampling model ( with a 10 percent performance degradation tolerance ) is much more efficient than Base model by almost 5 magnitudes . According to Section 4.4 , it is guaranteed that the Sampling method can also improve with similar magnitudes than the Base model in cascading process prediction task . So we omit these results for brevity . 5.3 Outbreak Time Prediction
Another interesting problem is to predict when a cascading outbreak will happen . For example , in the early stage of a cascade , can we predict when the cascade reaches a specific size ? Without loss of generality , we set the outbreak size threshold to be 1000 . We evaluate the prediction performance with different number of observed nodes in the cascades . As shown in Figure 8 , the NEWER model get the best performances in both RM SLE and δσ Precision metrics . Although Exponential and Rayleigh models report better results than NEWER in very early stage ( less than 50 observation nodes ) , the improvements of their performances with increasing number of observed nodes are not as significant as NEWER .
Figure 8 : Outbreak time prediction results of different methods with different number of observed nodes in cascades . 5.4 Cascading Process Prediction
The ultimate purpose of this paper is to predict the cascading process . For each cascade , we use δt to represent the early stage window and ˆt to represent its ending time . Then we use the cascade information during [ 0 , δt ] to predict the cascading process during [ δt , ˆt ] . At any time t ∈ [ δt , ˆt ] , we calculate whether the predicted cascade size at t is within the σ tolerance of the groundtruth size at t . Then we calculate the δσ Precision by integrating t to describe the prediction accuracy for this cascading process . Finally , we average the δσ Precision for all cascades and show the results in Figure 9 . Here , we vary the early stage percentage ( ie δt/ˆt ) from 0 to 50 % , and discover that in all the settings of early
RMSLERMSLERMSLERMSLE stage percentage , NEWER always carries out the best performances in cascading process prediction . More over , the advantage of NEWER is more clear in smaller early stage percentage . When we set the early stage to be 15 % of the whole cascade duration , we can get the δ0.2 Precision of 0849 That means that we can correctly predict the cascade sizes at 84.9 % time points , which indicates that the cascading process is predictable and the proposed method is adequate and superior in cascading process prediction . Furthermore , changing the precision tolerance value σ will not affect the relative results of all the methods in our experiments , and the precision value will be smaller when setting σ smaller . For abbreviation , we only report the results of σ = 0.2 , which is a reasonable tolerance in most application scenarios .
As shown in Figure 10 , the NEWER model can significantly and consistently outperform Cox and Wbl models in out of sample prediction , which demonstrates that the discovered covariates from behavioral features of a user ’s networked neighbors can effectively predict the user ’s behavioral dynamics . Also , we visualize the regression coefficients β and γ in Figure 11 . It can be observed that the behavioral features of a user ’s followers plays more important roles in predicting both scale and shape parameters for the user , while the user ’s structural features are less important .
Figure 9 : Cascading process prediction accuracy of different methods under different early stage percentage settings . 5.5 Out of sample Prediction
In real applications , the interaction information between nodes is not always available , which makes some nodes’ behavioral dynamics cannot be directly derived by maximum likelihood estimation from data . We call these nodes as outof sample nodes . This is the main reason why we propose NEWER to incorporate the covariates of behavioral dynamics . In order to evaluate the performance of NEWER in handling this case , we simulate the scenario by hiding the interaction information of randomly selected 10 % users as out of sample users , and then predict the final sizes of the cascades that these users involved in early stages .
Figure 10 : Prediction result by unknown users In Cox model , the scale parameters in behavioral dynamics of out of sample users can be regressed by the covariates . For the shape parameter , we calculate the average value of shape parameters in observed users and apply this value to the shape parameters of out of sample users . In NEWER model , both of shape and scale parameters can be regressed by covariates with the learned β and γ . We also employ the standard Weibull Regression ( Wbl ) as a basline , which can be derived by simply setting µ and η to be 0 in Equation 10 . Then we use the averaged shape and scale parameters of observed users as the parameters of out of sample users .
Figure 11 : Parameter coefficients .
6 . CONCLUSIONS
In this paper , we raise an important and interesting question : beyond predicting the final size of a cascade , can we predict the whole cascading process if the early stage information of cascades is given ? In order to address this problem , we propose to uncover and predict the macro cascading process with micro behavioral dynamics . Through data driven analysis , we find out the common principles and important patterns laying in behavioral dynamics , and propose a novel NEWER model for behavioral dynamics modeling with good interpretability and generality . After that , we propose a scalable method to aggregate micro behavioral dynamics into macro cascading processes . Extensive experiments on a large scale real data set demonstrate that the proposed method achieves the best results in various cascading prediction tasks , including cascade size prediction , outbreak time prediction and cascading process prediction . Appendix : Proof of Theorem 1
Proof . It ’s evident that both G2(β , λ ) and G3(γ , k ) has global minimum value . Next we prove that G1(λ , k ) also has global minimum value , or to prove log L(λ , k ) has global maximum value . i(λ j=1 log Ti,j + mi log λ
, log L(λ , k ) = log L(λ , k ) = N i , ki ) i − i=1 l
−ki i
Let λ where l λ i i , ki ) = mi log ki + ( ki − 1)mi mi i = λ i(λ i,j , the partial derivatives of the l j=1 T ki ∂l = − mi ∂λ λ2 mi ∂l i ∂ki ∂2l i ∂k2 i log Ti,j − λ mi mi mi
= − mi k2 i
− λ
∂2l ∂λ2 i mi ki
T ki i,j , mi λ i
− j=1
= i i
=
+ j=1 i j=1 i i
T ki i,j ( log Ti,j )2 < 0 i j=1 i are given by :
< 0
( 15 )
T ki i,j log Ti,j
( 16 )
( 17 )
Since ∂2l < 0 and ∂2l i ∂λ2 ∂k2 densities of parameters λ i i i
< 0 , the conditional marginal posterior i and ki are log concave . Moreover , when
NEWERRMSLERMSLERMSLEscaleshapeParameter coefficientParameter coefficient
,
( 18 )
1 j=1 Ti,j log Ti miT ki i,j = 0
≥ mi + log Ti,j − 1 > 0 mi j=1
0 < ki < 1 , 0 < λ ∂l ∂λ mi λ
−
= i i i mi mi j=1 j=1 i
, j=1 j=1 ki i,j ki i,j mi i < min i=1 T i=1 T i,j ≥ T ki
T ki i,j log Ti,j mi − mimi mimi mi log Ti,j − λ mi mi mi j=1 Ti,j log Ti,j−mi − j=1 T ki i,j log Ti,j j=1 Ti,j log Ti
λ mi
1 ,
, i ki i,j log Ti,j − mi i,j ≤ T ki mimi mi log Ti,j − λ i=1 T ki i,j i j=1 j=1
∂l i ∂ki
= mi ki
≥ mi ki
+
+ mi j=1
1 , max when ki ≥ max mimi mi j=1 T − mi
∂l ∂λ mi λ j=1
= i i i
=
+
∂l i ∂ki mi ki
≤
λ i
= λ i mi mi j=1 Ti,j log Ti,j−mi mi mi mi Ti,j log Ti,j − j=1 log Ti,j log Ti,j + j=1 log Ti,j miT ki i,j = 0 j=1 and λ i ≥
( 19 )
T ki i,j log Ti,j
+ mi mi j=1 mi log Ti,j − λ mi j=1 i log Ti,j − λ i
T ki i,j log Ti,j
T ki i,j log Ti,j j=1 j=1 j=1 j=1
< 0 which means there should be a global maximum of l log L .
( 20 ) i , so does
7 . REFERENCES [ 1 ] W . Chen , A . Collins , R . Cummings , T . Ke , Z . Liu ,
D . Rincon , X . Sun , Y . Wang , W . Wei , and Y . Yuan . Influence maximization in social networks when negative opinions may emerge and propagate . In SDM , volume 11 , pages 379–390 . SIAM , 2011 .
[ 7 ] P . Domingos and M . Richardson . Mining the network value of customers . In Proceedings of the seventh ACM SIGKDD international conference on Knowledge discovery and data mining , pages 57–66 . ACM , 2001 .
[ 8 ] N . Du , L . Song , H . Woo , and H . Zha . Uncover topic sensitive information diffusion networks . In Proceedings of the Sixteenth International Conference on Artificial Intelligence and Statistics , pages 229–237 , 2013 .
[ 9 ] A . Gionis , E . Terzi , and P . Tsaparas . Opinion maximization in social networks . arXiv preprint arXiv:1301.7455 , 2013 .
[ 10 ] M . Gomez Rodriguez , J . Leskovec , and B . Sch¨olkopf .
Modeling information propagation with survival theory . In ICML , 2013 .
[ 11 ] M . Gomez Rodriguez , J . Leskovec , and B . Sch¨olkopf .
Structure and dynamics of information pathways in online media . In Proceedings of the sixth ACM international conference on Web search and data mining , pages 23–32 . ACM , 2013 .
[ 12 ] D . Kempe , J . Kleinberg , and ´E . Tardos . Maximizing the spread of influence through a social network . In Proceedings of the ninth ACM SIGKDD international conference on Knowledge discovery and data mining , pages 137–146 . ACM , 2003 .
[ 13 ] R . G . Miller Jr . Survival analysis , volume 66 . John
Wiley & Sons , 2011 .
[ 14 ] S . Myers and J . Leskovec . On the convexity of latent social network inference . In Advances in Neural Information Processing Systems , pages 1741–1749 , 2010 .
[ 15 ] J . E . Pinder III , J . G . Wiener , and M . H . Smith . The weibull distribution : a new method of summarizing survivorship data . Ecology , pages 175–179 , 1978 .
[ 16 ] G . Rodriguez . Parametric survival models . Lectures
Notes , Princeton University , 2005 .
[ 17 ] M . G . Rodriguez , D . Balduzzi , and B . Sch¨olkopf .
Uncovering the temporal dynamics of diffusion networks . arXiv preprint arXiv:1105.0697 , 2011 .
[ 2 ] W . Chen , Y . Wang , and S . Yang . Efficient influence
[ 18 ] M . G . Rodriguez and B . Sch¨olkopf . Influence maximization in continuous time diffusion networks . arXiv preprint arXiv:1205.1682 , 2012 .
[ 19 ] R . Tibshirani . Regression shrinkage and selection via the lasso . Journal of the Royal Statistical Society . Series B ( Methodological ) , pages 267–288 , 1996 . maximization in social networks . In Proceedings of the 15th ACM SIGKDD international conference on Knowledge discovery and data mining , pages 199–208 . ACM , 2009 .
[ 3 ] J . Cheng , L . Adamic , P . A . Dow , J . M . Kleinberg , and
J . Leskovec . Can cascades be predicted ? In Proceedings of the 23rd international conference on World wide web , pages 925–936 . International World Wide Web Conferences Steering Committee , 2014 .
[ 4 ] R . Cohen , S . Havlin , and D . Ben Avraham . Efficient immunization strategies for computer networks and populations . Physical review letters , 91(24):247901 , 2003 .
[ 5 ] D . Cox . Regression models and life tables . Journal of the Royal Statistical Society . Series B ( Methodological ) , 34(2):187–220 , 1972 .
[ 6 ] P . Cui , S . Jin , L . Yu , F . Wang , W . Zhu , and S . Yang .
Cascading outbreak prediction in networks : a data driven approach . In Proceedings of the 19th ACM SIGKDD international conference on Knowledge discovery and data mining , pages 901–909 . ACM , 2013 .
