Identifying Bridging Rules Between Conceptual Clusters
Shichao Zhang
Feng Chen
FAC , Beijing University of
Department of Computer
Department of Computer
Aeronautics and
Astronautics , China
FIT , University of
Technology , Sydney ,
Australia
Science ,
Guangxi Normal University ,
Guilin City , China zhangsc@itutseduau ABSTRACT 1 A bridging rule in this paper has its antecedent and action from different conceptual clusters . We first design two algorithms for mining bridging rules between clusters in a database , and then propose two non linear metrics for measuring the interestingness of bridging rules . Bridging rules can be distinct from association rules ( or frequent itemsets ) . This is because ( 1 ) bridging rules can be generated by infrequent itemsets that are pruned in association rule mining ; and ( 2 ) bridging rules are measured by the importance that includes the distance between two conceptual clusters , whereas frequent itemsets are measured by only the support .
Categories and Subject Descriptors H28 [ Database Applications ] : Data mining ; I26 Learning . General Terms : Algorithms ; Measurement ; Theory . Keywords : Outlier , clustering , association rule , bridging rule , entropy . 1 . INTRODUCTION There are many algorithms [ 10 15 ] for detecting outliers [ 1 ] that are data objects that are grossly different from or inconsistent with the remaining set of the data objects . Outlier mining has wide applications [ 2 4 ] including fraud detection , marketing , medical analysis and so forth . Here we define a new kind of outliers : bridging rules , the antecedent and action of which belong to different conceptual clusters . Formally , let I = {i1 , i2 , … , iN} be a set of N distinct literals called items and D a set of variable length transactions over I . Given a similarity measure ζ , all objects in D can be partitioned into disjoint clusters C1 , C2 , … , Cm . A→B is a bridging rule , where items in A belong to clusters Ci1 , Ci2 , … , Cis ; items in B to clusters Cj1 , Cj2 , … , Cjt ; and {Ci1 , Ci2 , … , Cis} ∩ {Cj1 , Cj2 , … , Cjt}=Φ . A→B is interesting when both A and B are important . The importance of A→B can be measured by ( 1 ) The distance between {Ci1 , Ci2 , … , Cis} and {Cj1 , Cj2 , … , Cjt} , ( 2 ) The association of A and B in the database D , and
Xindong Wu
Science ,
Burlington ,
Chengqi Zhang Faculty of Information
Technology ,
Sydney ,
University of Vermont ,
University of Technology ,
VT 05405,USA
NSW 2007 , Australia xwu@csuvmedu chengqi@itutseduau
( 3 ) The impact of A in {Ci1 , Ci2 , … , Cis} and that of B in {Cj1 ,
Cj2 , … , Cjt} .
We name these interactions as bridging rules because they are the interactions that look like bridges linking different clusters . Bridging rules are useful in many applications . Especially in detecting insurance fraud and murder cases , using bridging rules can produce unexpected results . The following is an example found in one of the experiments in Section 5 . A local police office 2 invited us to help them analyze a case that a worker had disappeared . After making use of our algorithm , we analyzed some information of local residents and mined the rule : “ worker ( 17 ) → IT clerk ( 21 ) ” , where 17 represented the disappeared worker and 21 an IT clerk . We thought it to be a very valuable clue and advised the police to follow up on it . When the police investigated 21 , they surprisingly found that before the worker 17 ’s disappearance , this 21 person was already dead in an unexpected big fire , the reason of which was determined to be the wrong usage of a water heater , and the insurance company was going to pay his spouse a great amount of insurance . This situation inspired the police ’s attention at once . Through a hard investigation , they finally found out the terrible truth that the IT clerk really disappeared and the worker 17 did not disappear but was killed , and this brutal murder case involved this IT clerk , as well as his spouse . In fact , the IT clerk was a very bad guy . Because of gambling , he threw himself into a very difficult situation . If he could not pay off his debt , he would possibly be killed . At this time , he met by chance worker 17 , and subsequently designed a terrible plan when he unexpectedly found that worker 17 looked like himself very much . So he asked his spouse for help in carrying out this plan . Firstly , he bought insurance involving a great deal of money . Next , he , as well as his spouse , kidnapped worker 17 and jailed him into 21 ’s home . Afterwards , they killed this poor guy and made the spot look like an accident . They wanted to get the insurance money from the insurance company and avoid those renters . With help from our research , the police paid their attention to these two cases that seemed to have no similarity between each other . Finally they successfully resolved both cases .
2 Due to the sensitive nature of the data we have used , we are not allowed to publicize more details of the data set and its collection mechanism . We have mentioned relevant data items from this data set in this paper in a very careful way to avoid violating possible data privacy concerns .
Research Track Poster815 The above example vividly and powerfully shows that our research was very promising in case analysis and insurance fraud detection . In addition , the famous association rule “ diapers→ beer ” is also a bridging rule because its antecedent and action belong to two different conceptual clusters : alcohol and baby goods . And the antecedent and action of the rule “ steel→ nickel , chrome ” which can generate stainless steel belong respectively to black metal and rare metal . Therefore , it is obvious that bridging rules can work well in many applications . Bridging rules are similar to association rules ( or frequent itemsets ) in the sense that they both look for associations . However , bridging rules are different from association rules , for the following reasons : ( 1 ) For association rules , such as ‘bread ∧ butter → milk’ , bread , butter and milk are all daily food , and they are frequently purchased together everyday . These rules should be referred to as commonsense knowledge . However , bridging rules can be infrequent itemsets , and can come out as a surprise , as the above example has demonstrated .
( 2 ) While the interestingness of association rules is measured by their supports and confidences , bridging rules are measured by their importance ( see the definition above ) .
These differences have indicated that we must exploit novel strategies to ( a ) confront an exponential search space consisting of all possible itemsets , frequent and infrequent in a database ; ( b ) detect which of the itemsets can generate bridging rules ; ( c ) identify which bridging rules are really useful for particular applications ; and ( d ) measure the interestingness of bridging rules . The remainder of the paper is organized as follows . Section 2 discusses some previous work . Section 3 describes two approaches for mining bridging rules . In Section 4 , we design two non linear measures for identifying bridging rules in terms of entropy . In Section 5 we evaluate our approach using groups of experiments . We summarize our contributions in the last section .
2 . RELATED WORK There are statistics based [ 5 ] , distance based [ 6 ] , deviation based [ 7,10 ] , depth based [ 8 ] and density based [ 9 ] algorithms for detecting outliers . The statistical approach to outlier detection assumes a distribution or probability model for the given data set and then identifies outliers with respect to the model using an inconsistent test . But the data distribution is always unknown . Also , the cost of computing in this approach is considerable . A distance based algorithm thinks of outliers as those objects that do not have “ enough ” neighbors being defined based on a distance from the given objects . It does not scale well with the dimensionality . Meanwhile , the number of exceptional patterns found depends very much on the user specialized parameters . Deviation based outlier detection identifies outliers by examining the main characteristic outliers . But the drawbacks in distanced based algorithms also exist when facing a high dimensional space . As for depth based and density based algorithms , the former is relatively effective for data with 2 or 3 dimensions , and the latter relies heavily on parameters . into consideration prior background knowledge
Bridging rules are different from the above approaches because of our basis of conceptual clusters . Meanwhile , although bridging rules employ the same form of association rules as other patterns do , there are significant differences between them . Discovering unexpected patterns [ 3 ] has a subjective nature . It takes that constitutes a set of expectations or beliefs about the problem domain . But its most difficult question is how to generate an initial system of beliefs . Mining exceptional patterns [ 2 ] , which is also a subjective method , divide all patterns into three categories . This approach can avoid searching all attributes in the database so it can possibly be more effective comparing with other subjective algorithms . [ 4 ] has extended traditional associations to include association rules of forms A →┐B , ┐A → B and ┐A →┐B , which indicate negative associations between itemsets . Change mining [ 11 ] has focused on finding changes that are brought about by new data through analyzing a decision tree . Finding interesting patterns [ 12 ] is characterized by requiring the user to specify a set of patterns , making use of a fuzzy matching algorithm to match and rank the discovered patterns according to the specified pattern set . Compared to all the above approaches , bridging rules are different from the patterns generated in these approaches . As bridging rules require their antecedent and action come from different clusters , we need novel evaluation mechanisms and algorithms .
3 . APPROACH DESCRIPTION In this section , we describe the main ideas of our two algorithms : an agglomeration based algorithm and a weighting based algorithm . 3.1 Agglomeration Based Algorithm We design the agglomeration based algorithm by improving the clustering technique ‘CHAMELEON’ [ 13 ] which considers interconnectivity of the clusters by making use of RI(Ci , Cj ) and the closeness of items within the clusters and taking advantage of RC(Ci , Cj ) , and then defines two thresholds TRI and TRC to find out a clustering . To discover bridging rules between clusters , our algorithm is based on the following thresholds : T1RC , T1RI , T2RC and T2RI . Sub clusters with RI(Ci , Cj ) > T1RI and RC(Ci , Cj ) > T1RC are clustered into one cluster and those satisfying the following formula are also grouped together because there is a meaningful interaction between them :
T2 RI < RI(Ci , Cj ) < T1RIT2RC < RC(Ci , Cj ) < T1RC
Using these thresholds to record the similarity between any two objects across conceptual clusters and identify interactions between them . Each interaction is a bridging rule that we want . We conducted some experiments on a real world database named zoo , including 101 records each of which consists of 18 attributes . The results are shown in Figure 1 .
Figure 1 . Bridging rules generated by the agglomeration slowworm catfish pike seasnake
0.684 bass
0.684 tuatara tuna based algorithm
Research Track Poster816 In this graph , tuatara , alowworm and seasnake belong to one cluster , while bass , tuna , catfish , and pike to the other . ‘seasnake → bass’ and ‘seasnake→ catfish’ are the bridging rules we are looking for .
3.2 Weighting Based Algorithm This strategy is a post process designed for transaction databases . We first find correlative itemsets [ 14 15 ] based upon frequent itemsets across clusters , then prune abundant itemsets by a setenumeration tree [ 16 ] , and finally calculate the importance of each itemset . There may be more than one bridging rule between two conceptual clusters . We identify bridging rules of interest based on the importance ‘IMPOR’ of itemsets that generate these bridging rules . The importance ‘IMPOR’ is defined as follows . Let support(S ) be the support of itemset S , the chi squared value be 2χ ( S ) , where S = {i1 , i2 , … , im} , and the weight of ij be wj . We define
IMPOR(S ) = support(S ) ∗ 2 ( )Sχ
∗ max{w1 , w2 , … , wj}
The weight of an item can be determined by , for example , the impact of the item . We have performed our algorithm on a synthetic database including 50 transactions consisting of 15 merchandises that are divided into 3 clusters , as shown in Table 1 .
Table 1 . Merchandises and their clusters
Adult
Female
Baby
Cigarette , lighter , western style clothes , beer , tie Pregnant women ’s clothes , perfume , hairpin , high heeled shoes , silk scarf , earring Toy , diaper , nursing bottle lipstick ,
Bridging rules identified in the database are as follows according to this weighting based algorithm : 1 . cigarette , lipstick , hairpin 2 . cigarette , lipstick , high heeled shoes 3 . lighter , lipstick , hairpin 4 . beer , diaper 5 . perfume , western style clothes As we can see , our algorithm can find the bridging rules effectively , including the famous rule “ diaper→ beer ” .
3.3 Analysis and Comparison The two algorithms above are efficient in mining bridging rules between clusters in a database . They have some distinct features . The agglomeration based algorithm is a clustering like method , designed for mining relational databases . It identifies bridging rules and generates clusters at the same time . The weightingbased algorithm is designed for mining bridging rules in transaction databases . The chi square and set enumeration tree are used for measuring interestingness of bridging rules . However , they have two limitations : the
1 . Using the same criterion for measuring both bridging rules and internal relations in clusters is not efficient when highlighting the characteristics of bridging rules .
2 . When measuring bridging rules , only the left and right of bridging rules are considered without the other important factors defined in Section 1 .
To include more important factors , below we propose two nonlinear metrics based on the entropy for measuring bridging rules . 4 . NON LINEAR METRICS Compared with other possible bridging rules between clusters in a database , objects in a bridging rule can have a more important impact . For example , let A → B and H → L be two bridging rules over Ci and Cj , A , H ∈ Ci and B , L ∈ Cj ; and act(X ) stand for the number of objects strongly interacting with X within a cluster . If act(A ) > act(H ) and act(B ) > act(L ) , objects in A → B have a more important impact than that in H → L , and A → B should be more important than H → L . On the other hand , bridging rules have different importance when straddling a vault between different clusters . For example , let Ci , Cj and Ck be three clusters . A bridging rule R1 straddling a vault between Ci and Cj can be much more important than a bridging rule R2 straddling a vault between Ci and Ck . This importance can be obtained from , for example , examining the distance between two sets of clusters , or the surprise or necessity of a rule straddling a vault between the two sets . The above observations motivate us to design two non linear metrics for identifying bridging rules between clusters in a database . We use similarity to measure the closeness relation between two contrasting sets of objects in a database D , whereas entropy is used for measuring the interaction ( or distance ) between two contrasting sets of clusters in D . Some definitions and formulas about joint entropy ( H X Y ) , mutual information I X Y Z ) can be ( I(X , Y ) ) and conditional mutual information ( ( found from Information Theory related books . 4.1 Joint Entropy Based Strategy Our joint entropy based strategy is based on the definition of joint entropy . Figure 2 shows the structure of this kind of bridging rules .
Figure 2 . Structure of bridging rule based on joint entropy In Figure 2 , C1 and C2 are two conceptual clusters ; c10 belongs to C1 and c20 to C2 . Furthermore , c10→c20 is a bridging rule in terms of similarity ; and α1={c11 , c12 , … , c1n} is an object set in which each object belongs to C1 and associates with c10 . We define : c12 c1j c1m c21
(
,
) c23
;
|
)
C1 c11
C2 c22 c1n c10 c20 c1i
Research Track Poster817 H c (
, c 10 1
) j n =− ∑ j 1 = p c (
, c 10 1 j p c )log (
, c 10 1
,
) j where p c (
, c j 10 1
)
=
Simi c ( n ∑ k 1 =
Simi c (
,
) c j 10 1 c k , 10 1
, and Simi(c10 , c1j ) denotes the
) similarity between c10 and c1j . Similarly , we can define Then the entropy sum of the bridging rule ‘(c10 , c20)’ is :
H c (
, c
2
20
.
)
H c (
, c
10 20
)
=
H c (
, c 10 1
)
+
H c (
, c 20 2
) the closeness relation between
We define the minimum similarity threshold as ‘minsimi’ and the minimum joint entropy threshold as ‘minentro’ . A bridging rule is interesting only if it satisfies both these two constraints . Since the similarity measures two contrasting sets of objects in a database , whereas the entropy measures the interaction ( or distance ) between two contrasting sets of clusters in the database . The bigger the similarity sum is , the closer the object associated with objects in a cluster is , and the bigger the entropy sum is , the more important the bridging rule is . It is the bridging rule ( linkage ) that we want to identify . 4.2 Mutual Information Based Strategy This strategy is based on definitions of mutual information and conditional mutual information below .
Figure 3 . Structure of a bridging rule based on
Y yj
Y*
X* ym
X x1 x2 x0 y3 y1 y2 xn y0
Z xi mutual information
In Figure 3 , let X* , Y* be two conceptual clusters and X , Y and Z denote object sets . X={x1 , x2 , … , xn}，Y={y1 , y2 , … , ym}， and Z={x0 , y0} , where X ⊆ X* , Y ⊆ Y* ; x0∈ X* , and y0Y* . Z represents a linkage taken as our bridging rule , and x0 and y0 are located in two sides of the rule . Definition 1 . Assuming X and Y are two random variables , the mutual information ‘I(X , Y)’ between X and Y is the expectation between xi ∈ X and yi ∈ Y , ie ,
I X Y (
;
)
∑= i
∑ j p x yi ( , j
)log p x yi ( , j p x p y ( ( i
)
)
) j
It means that the mutual information is the sum of the information amount of X given Y , which is the same as that of Y given X . Definition 2 . With a given Z , the conditional mutual information of X and Y is
I X Y Z (
;
|
)
∑= i
∑∑ j k p x y ( , i
, z k j
)log p x y z ) ( | i j k p x z p y z | | ( ( i k j k
, )
)
|
;
;
)
)
I X Y Z ( (
It shows the amount of mutual information of X and Y given Z . I X Y can be considered the change of the mutual So information of X and Y given Z . The bigger the value is , the more important the rule is . Consequently , we define the mutual information constraint as ‘mininfo’ and the similarity constraint as ‘mimsimi’ . Then the bridging rule x0 → y0 is interesting only if 1 . Simi(x0 , y0 ) ≥ minsimi 2 .
I X Y | ≥ mininfo
I X Y Z − ( (
|
)
)
;
;
|
To identify X , we first construct a k nearest neighbor graph [ 17 ] for each object and find its first k nearest neighbors . Then we use a reverse k nearest neighbor graph [ 18 ] corresponding to x0 , where k = 1 . Therefore , for x Xi∀ ∈ , x0 is its nearest neighbor . This can reduce the quantity of objects in X and decrease the algorithm complexity . In addition , it can obtain the strongest impact of X on x0 . Similarly , we can get Y . When employing the k nearest neighbor graph techniques , we must note that an object ν may not be a nearest neighbor of an object μ although μ is a nearest neighbor of ν . In a nearest neighbor graph , therefore , an edge between nodes is directed , and the direction can be from an object to its nearest neighbor . If ν is a nearest neighbor of μ , but μ is not a nearest neighbor of ν , then we can calculate Simi(μ , ν ) but not Simi(ν,μ ) . Taking into account this reasoning , for the object set in Definition 1 , X+Y={x1 , x2 , … , xn , y1 , y2 , … , ym} , we have p x (
' )
=
∑
Simi x x ' , '* ) ∑ Simi x x Simi y , * ) ( i i
( + ∑
( x
' , x
' * ,
* , y x i j
*
∈
X
+
Y x X ∈ i i n 1 ≤ ≤
, y
* ) j j y j
∈
Y
1 ≤ ≤ j m x
'* , * , x i where , respectively . y
* j denote the nearest neighbors of x x yi ' , , j in X+Y p x y ( ' ,
' )
=
(
Simi y y Simi x x '* ) '* ) ' , ( ' , + ∑ ∑ Simi y y Simi x x , ( * ) , * ) + ∑ ∑ j j i
( i x
' * , y
' * ,
* , y x i j
*
∈
X
+
Y x X ' ∈
, y Y ' ∈ x X ∈ i i n 1 ≤ ≤ y j
∈
Y
1 ≤ ≤ j m x
'* , y
'* , * , x i y j
* where , denote the nearest neighbors of x y x yi ' , ,
' , j .
Similarly , for the object set in Definition 2 : X＋Y＋Z={x1 , x2 , … , xn , y1 , y2 , … , ym , x0 , y0} , we can also get the probability . The edge between x0 and y0 is not labeled in any direction . This is because ( 1 ) x0 and y0 are nearest neighbors to each other ; ( 2 ) x0 is a nearest neighbor of y0 but y0 is not that of x0 ; and ( 3 ) y0 is a nearest neighbor of x0 but x0 is not that of y0 . 5 . EXPERIMENTS One of our databases is a real world one downloaded from wwwicsuciedu/~mlearn/MLSummaryhtml , named Zoo . We output top 10 % of our bridging rules as the most interesting
Research Track Poster818 information to users . The other database is an investigation of local people of a certain area surveyed by the local police office . We hope to find interesting bridging rules in both databases . 5.1 Zoo Database The Zoo database includes 101 records consisting of 7 clusters that are mammal , Aves , crawler , fish , amphibian , insect and others . Every record represents an animal with 18 attributes to tell whether an animal has or not , such as hair , feathers , predator , backbone and so on . For the sake of identifying bridging rules , we delete two of these attributes : name and category . The results generated by our two metrics are listed below .
Table 2 . Results generated by joint entropy based strategy Thresholds Bridging rules minisimi =0.6 minentro =6
( penguin , platypus ) ( ostrich , wallaby ) ( lion , rhea ) ( platypus , rhea ) ( platypus , swan ) ( fruitbat , wren ) ( goat , rhea ) ( sparrow , vampire ) ( cheetah , rhea ) ( pheasant , vampire ) ( vampire , wren ) ( kiwi , platypus ) ( leopard , rhea ) ( penguin , , platypus )
( ostrich , wallaby ) ( platypus , rhea ) ( platypus , swan ) ( goat , rhea ) ( penguin , platypus ) ( cheetah , rhea )
Table 3 . Results of mutual information based strategy
Bridging rules ( newt , opossum ) , ( mink , newt ) minisimi =0.675 minentro =6.25 minisimi =0.625 minentro =6.25
Thresholds k=20 minisimi=0 mininfo=0 k=20 minisimi=0.5 mininfo= 7 k=20 minisimi=0.65 mininfo= 2
( moth ,
( newt , opossum )
( dogfish , dolphin ) ( crab , frog ) ( mink , , newt ) ( newt , pitviper ) ( crayfish , flea ) ( frog , pitviper ) ( newt , slowworm ) worm ) ( slug , termite ) ( termite , worm ) ( bass , dolphin ) ( lobster , termite ) ( crayfish , frog ) ( housefly , slug ) ( housefly , worm ) ( crab , frog ) ( dogfish , dolphin ) ( newt , pitviper ) ( mink , newt ) ( bass , frog ) ( crayfish , flea ) ( frog , pitviper ) ( newt , slowworm ) ( moth , worm ) ( slug , termite ) ( termite , worm ) ( lobster , termite ) ( housefly , slug )
First of all , there is a common property in the above two tables that the importance of bridging rules is changed with different thresholds . In addition , another point that can be easily seen and understood is that the more clusters and the bigger the size of clusters , the more bridging rules . Second , we can find that the bridging rules in Table 2 are completely different from that in Table 3 , due to the fact that our two metrics bias towards different impact factors . In Table 2 the antecedent and action of a bridging rule identified belong to the clusters of mammal and Aves , such as penguin→platypus , leopard→rhea and ostrich→wallaby . However , in Table 3 , the to the clusters of fish and mammal ; number of the involved clusters has increased . For example , the antecedent and action of the bridging rule “ dogfish→dolphin ” belong these of “ newt→pitviper ” belong to the clusters of amphibian and crawler , these of “ housefly→worm ” belong to the clusters of insect and rest ; and so on . One may notice that there is a change in Table 3 that there is no bridging rule whose antecedent and action belong to the clusters of mammal and Aves . Commonly , we assume that the closeness of the mammal cluster and the Aves cluster is much higher than that of the mammal and crawler clusters , or that of the insect and Aves clusters . Therefore , from the two groups of bridging rules , the joint entropy based strategy is good at distinguishing clusters from each other , but the mutual information based strategy is not so good as that . For the bridging rules in Table 2 , although they may relatively have both a large similarity and a joint entropy , there are no clear changes in the information amount even if without the similarity and joint entropy . On the contrary , for the bridging rules in Table 3 , the absence of bridging rules results in a large change in the information amount , although not a large joint entropy . 5.2 Life Insurance One local police office invited us to help them analyze some information for a disappearance case . In this experiment , we extracted materials of 86 residents from a large database . As noted in Footnote 2 , we are mentioning relevant data items in this experiment in a careful way to avoid violating data privacy concerns . Because the number of attributes of each person is too many and complicated to analysis , we just keep 22 of them which include some basic individuals and some knowledge about life insurance . They are job , physical feature , received education , hometown , address , family background , income , economic situation , marriage status , life insurance , criminal record , current situation and so on . According to the job attribute , these 86 persons are divided into 7 categories that are worker , IT clerk , unemployed person , bank clerk , lawyer , teacher , and insurance company clerk . Now we list the results in Table 4 from the database using our joint entropy based strategy and mutual information based strategy . information of
Table 4 . Results of life insurance
Mutual Information ( 30 , 84 ) ( 44 , 66 ) ( 3 , 45 ) ( 43 , 84 ) ( 28 , 65 )
Joint Entropy ( 17 , 21 ) ( 41 , 70 ) ( 3 , 45 ) ( 44 , 66 ) ( 22 , 69 ) ( 29 , 58 ) ( 42 , 80 ) ( 28 , 65 ) ( 35 , 55 ) ( 36 , 55 ) ( 26 , 82 ) ( 43 , 84 ) ( 30 , 84 ) ( 13 , 55 ) ( 66 , 73 ) ( 62 , 84 )
In Table 4 , the numbers stand for the resident IDs . And some features mentioned in the last experiment are also obvious here . We now focus on several rules that have been confirmed that they contributed towards finding out the truth of this disappearance . 1 . 17→ 21 We mentioned this bridging rule in Section 1 . We divided the dataset into 7 clusters according to the job attribute . Then we found out this rule and forwarded it to the police . Following up on
Research Track Poster819 them including this clue , the police finally found that the truth of that disappearance case was a terrible murder case for insurance . This rule vividly shows that bridging rules should have wide applications in case investigation and insurance fraud detection . In addition , we also found two other bridging rules that have been useful to the insurance company for a sales promotion plan and the results were satisfactory . 2 . 44→ 66 In this rule , 44 is also an IT clerk and 66 a lawyer . The reason why such two persons were in a bridging rule is just because there were many similarities between received education , economic situation , family background , and income . In addition , these families are very close to each other . So we suggested that the insurance company carry out the same sales promotion plan when they decided to run a sales promotion policy aiming at this certain area . The insurance company sent a salesman to this area who , with a plan suitable for these two men , finally persuaded them to buy the same kind of insurance . 3 . 30→ 84 30 and 84 are an IT clerk and an insurance company clerk respectively . As they are neighbors and come from the same hometown , the insurance company decided to send 84 to persuade 30 to buy a kind of insurance . The result was of course that 84 succeeded . So we can see that bridging rules can be used not only in insurance fraud detection and case analysis , but also to help the insurance company design different plans towards different persons . 6 . CONCLUSION This paper has designed two efficient strategies for mining bridging rules between clusters in a database . Bridging rules are useful in many applications , for example , case analysis and insurance fraud detection . More specifically , we first designed two algorithms for mining bridging rules between clusters , and then proposed the interestingness of bridging rules . We have experimentally evaluated our algorithms and demonstrated that our approach is promising . In particular , we cannot simply employ existing association rule ( or frequent itemset ) mining algorithms to identify bridging rules between clusters in a database . Our future work will include ( 1 ) efficient pruning techniques , ( 2 ) algorithm scalability , and ( 3 ) the influence of distance between clusters on bridging rules . Intuitively , the farther the distance of clusters of antecedents and actions , the more the bridging rules are unexpected . But we still need experiments and theoretical analysis to confirm this possibility . two non linear metrics for measuring
Acknowledgment This work is partially supported by Australian large ARC grants ( DP0449535 , DP0559536 and DP0667060 ) , a China NSF major research Program ( 60496327 ) , a China NSF grant ( 60463003 ) , a National Basic Research Program of China ( 2004CB318103 ) , and an Overseas Outstanding Talent Research Program of Chinese Academy of Sciences ( 06S3011S01 ) .
7 . REFERENCES [ 1 ] J . Han and M . Kamber , Data Mining : Concepts and
Techniques , Morgan Kaufmann , 2000 .
[ 2 ] H . Liu , H . Lu , L . Feng and F . Hussain ( 1999 ) . Efficient
Search of Reliable Exceptions . PAKDD99 , pp194 204 .
[ 3 ] B . Padmanabhan and A . Tuzhilin ( 1998 ) . A Belief Driven Method for Discovering Unexpected Patterns . KDD98 , pp94100 .
[ 4 ] Xindong Wu , Chengqi Zhang and Shichao Zhang ( 2002 ) . Mining Both Positive and Negative Association Rules . ICML02 , pp658 665 .
[ 5 ] V . Barnett and T . Lewis ( 1994 ) . Outliers in Statistical Data . based on reverse nearest neighbor queries . SIGMOD00 , pp201 212 .
John Wiley & Sons , 1994 .
[ 6 ] M . Edwin and T . Raymond ( 1998 ) . Algorithms for Mining Distance Based Outlier in Large Datasets . VLDB98 , pp392403 .
[ 7 ] A . Arning , R . Agrawal and P . Raghavan ( 1996 ) . A Linear Method for Deviation Detection in Large Databases . In : Proc . 1996 Int . Conf . Knowledge Discovery and Data Mining , Portland , Oregon , August 1996 : 164 169 .
[ 8 ] T . Johnson , I.Kwok and R . T . Ng . ( 1998 ) . Fast Computation of 2 Dimensional Depth Contours . In : Proc . KDD98 , 1998 : 224 228 .
[ 9 ] Markus M . Breunig , Hans Peter Kriegel , Raymond T . Ng , and Jorg Sander ( 2000 ) . Identifying Density Based Local Outliers . SIGMOD00 , pp93 104 .
[ 10 ] S . Sarawagi , R . Agrawal and N . Megiddo
( 1998 ) . Discovery riven Exploration of OLAP Data Cubes . In : Proc . Sixth Int . Conf . On Extending Database Technology , Valencia , Spain , March 1998 .
[ 11 ] B . Liu , W . Hsu , H . Han and Y . Xia ( 2000 ) , Mining changes for real life applications . DaWaK00 , pp337346 .
[ 12 ] B . Liu , W . Hsu , L . Mun and H . Lee ( 1999 ) , Finding interesting patterns using user expectations . In : IEEE Transactions on Knowledge and Data Engineering , 11(6 ) : 817 832
[ 13 ] G . Karypis , E . Han , V . Kumar
( 1999 ) , CHAMELEON : A hierarchical clustering algorithm using dynamic modeling . IEEE Computer , 1999 : 6875 .
[ 14 ] S . Brin , R . Motwani and C . Silverstein ( 1997 ) . Beyond to association market correlations . SIGMOD97 , pp265 276 . baskets : Generalizing
[ 15 ] S . Bay and M . Pazzani ( 2001 ) . Detecting group differences : Mining contrast sets . Data Mining and Knowledge Discovery , 5 ( 3 ) : 213 246 , 2001 .
[ 16 ] S . Bay , M . Pazzani ( 2000 ) . Discovering and Describing Category Differences : What makes a discovered difference insightful ? In : Proceedings of the Second Annual Meeting of the Cognitive Science Society , 2000 .
[ 17 ] D . Eppstein , M . Paterson and F . Yao ( 1997 ) . On nearest neighbor graphs . Discrete Comput . Geom . , 17(1997 ) : 263 282 .
[ 18 ] F . Korn and S . Muthukrishnan ( 2000 ) . Influence sets rules
Research Track Poster820
