From : AAAI Technical Report WS 94 03 . Compilation copyright © 1994 , AAAI ( wwwaaaiorg ) All rights reserved .
Using Dynamic Time Warping to
FindPatterns in Time Series
Donald J . Bemdt James Clifford
Information Systems Department
Stern School of Business
New York University 44 West 4th Street
New York , New York 10012 1126 {dberndt , jclifford} @st ernnyuedu
April 26 , 1994
Abstract
Knowledge discovery in databases presents many interesting challenges within the ¢onte~t of providing computer tools for exploring large data archives . Electronic data .repositories are growing qulckiy and contain data from commercial , scientific , and other domains . Much of this data is inherently temporal , such as stock prices or NASA telemetry data . Detect£ug patterns in such data streams or time series is an important knowledge discovery task . This paper describes some pr~|~m;~,ry experiments with a dynamic prograrnm~,~g approach to the problem . The pattern detection algorithm is based on the dynamic time warping technique used in the speech recognition field . Keywords : dynamic programming , dynamic time warping , knowledge discovery , pattern analysis , time series .
1
Introduction
Almost every business transaction , from a stock trade to a supermarket purchase , is recorded by computer ; In the scientific domain , the Human Genome Projectis creating a database of every human 8enetlc sequence . NASA observation satellites can generate data at the rate of a terabyte per day . Overall , it has been estimated that the world data supply doubles every 20 months [ FPSM91 ] . Many databases , whether formed from streams of stock prices , or NASA telemetry , or patient monitors , are inherently temporal The challenge of knowledge discovery research is to develop methods for extracting valuable information from these huge repositories of data most of which will remain unseen by human eyes .
KDD 94
AAA1 94 Workshop on Knowledge Discovery in Databases
Page 359
The data on which our knowledge discovery tools operate can be characterized by the traditional distinction between categorical data and continuous data [ Ker86 ] . Categorical data are characterized by nominal scales and simple group membership . An example pattern based on categorical data would be"most residents of Manhattan are Democrats" . Continuous data may be ranked on ordinal scales , and differences become meaningful on interval and ratio scales . Queries on continuous data are more complex since they include relationships such as "less than" and aggregations such as averages or maxlmums . For instance , we might find patterns such as "the average salary of Democrats that subscribe to the New Yorker is greater than $50,000" .
Both categorical and continuous data can be extended by adding a temporal dimension creating time series data . The last decade has witnessed a tremendous growth of interest and in [ TCG+93 ] . Among the temporal research in the field of temporal databases , as illustrated some ( [CC8? ] ) directly model timedata models that have been proposed in the literature , series data ; the advantages of these models have recently been clarified in [ CCT94 ] . But before we can use the results of queries on time series , we must be able to detect temporal patterns such as "rising interest rates" , or the small pattern in Figure 6 , in the underlying time series data . This is an !nterest~ 8 sub problem within the context of discovering higherlevel relationships and is the focus of this preliminary paper . The detection of patterns in time series requires an approximate or "fuzzy" matching process . These patterns may then be used to construct higher Ievel rules such as "Democrats withsteeply rising salaries are likely to subscribe to the New Yorker" .
For example , consider the line graphs in Figure 1 depicting lynx and snowshoe hare populations over nearly a century [ Odu71 ] [ Cla73 ] . 1 What type of patterns emerge from the data ? One pattern seems to be that the "lynx population rises after an increase in the snowshoe hare population" fairly natural given the predator/prey relationship . In addition , the "~ynx population appears to be less volatile than the snowshoe hare population" . Lastly , there are two "spikes" in the hare popu/ation that might be explained by a third data stream perhaps they are assoclated with "fashion sense" as tracked by sales of rabbit fur garments! Of course , Figure 1 might represent data collected from any domain ( just replace the labels ) . One could imagine the hare population to be data tracking a computer industry stock index and the lynx population to be a particular of the index . issue being "pulled" by movements
Humans are very 8o0d at visually detecting such patterns , but programming machines to do the same is a difiicult problem , The difficulty arises in capturing the ability to match patterns with some notion of "fuzziness" . SimS!St approximate pattern detection tasks are found in several fields . Related wor]~ in s tatisilcs [ JDS8]’ signal processing [ Poo88 ] , genetic algorithms [ (]o189 ] [ Psc90 ] , and spgech recognition[~88 ] offer a variety of useful techniques .
1The ratio of predatoz to prey seems to large , but the data are derived ~om commercial trapping , not from se.ientifl¢ observation .
Page 360
AAAI 94 Workshop on Knowledge Discovery in Databases
KDD 94 hare
lynx
140
100
6O
2O
1845
1855
1865
1875
1885
1895
1905
1915
1925
1935 limein yam
Figure 1 : Changes in the Lynx and Snowshoe Here Populations Number of Pelts from the Hudson ’s Bay Company . as Determined by the
2 . Dynamic Time Warping
In particular , the problem of recognizing words in continuous human speech seems to include me~y of the important aspects of pattern detection in time series . Word recognition is usually bued on matching word templates assinst s waveform of continuous speech , converted into a discrete to s pprcTximately match words in spite of wide v~i~tions in t~m;ng and pronunciation . Recently , speech recosnition researchers have used dynamic programming as the basis for isolated and connected word recognition lain88 ] [ RL90 ] [ SC90 ] . time series . Successful recognition strategies a~e based on the ability
T
Figure 2 : An n by m Grid .
The technique of dynamic time warping ( DTW ) uses a dynamic progrsmmin8 approach
KDD 94
AAAI 94 Workshop on Knowledge Discovery in Databases
Page 361 to align the time series and a specific word template so that some distance measure is minimized . Since the time axis is stretched ( or compressed ) to achieve a reasonable fit , template may match a wide variety of actual time series . Specifically , tMk involves sea , chin8 a time series , S , for instwuces of a template , T . the pattern detection
S = si,82,,,~,8 , T tl,t=,,t#,t,~
( I ) ( 2 )
The sequences 8 and T can be atranged to form a n by m plane or grid ( see Figure 2 ) , where each grid point , ( i,j ) , path , W , maps or aligns the elements of S and T , such that the "distance" between them is minimized .
.corresponds to an alignment between elements a~ and tj . warping
( 3 ) That is , W is s sequence of grid points , where each wh corresponds to a point ( i,j)k , as shown in Figure 3.= For example , point ws in Figure 3 indicates that s= is aligned with t3 .
W = wl,w=,,wk
1
S n
Figure 3 : An Example Waxping Path .
In order to formulates dynamic programming problem , we must have a distance measure between two elements . Many distance measures ate possible two candidates for a distance s function , 6 , are the magnitude of the difference or the square of the difference ,
I tj I = =
( 4 ) ( 5 )
Once a distance measure is defined , we can formally define the dynamic time warping problem a minimization over potential watping paths based on the cumulative distance for each path , where 6 is a distance measure between two time series elements .
DTW(S,T ) = minw[~ 6(wl, ) ]
//=I
P
( 6 )
2When there is no timing di~erence the warpin8 path coincides with the diagonal llne , i : j . ~A given distance meuure allows warping paths to be ranked . It may also be useful to define relative ( ie percentage based ) distance measure= to make individual distances mote comparable . For example , consider comparing dktance between stock prices of $8 and $10 with that of $98 and $100 .
Page 362
AAAI 94 Workshop on Knowledge Discovery in Databases
KDD 94
In dynamic programming formulations , we need a stage variable , state variables , and decision variables that ideecribe legal state transitions [ LC?8 ] . The stage variable imposes a monotonic order on events and is simply time inour formulation . The state variables are the individual points on the grid as illustrated in Figure 2 . The decision variables are less easily recognized in our formulation , but correspond to the restrictions on permissible paths between two grid points . These restrictions serve to reduce the search space the space of possible warping paths . Searching through all possible warping paths is combinatorially explosive . Therefore , out of concern for efficiency , it is important to restrict the the space of possible warping paths some restrictions are outlined below [ SC90 ] . monotonicity The points must be monotonically ordered with respect to time , is x _< is and js a < 2s .
2 . continuity
The steps in the grid are confined to neighboring points , is is 1 <_ 1 and js is 1 <_ 1 .
3 . warping window
< Allowable points can be constrained to fell within a given warping window , [ is js I_ w , where w is a positive integer window width ( see Figure 3 ) .
4 . slope constraint
Allowable warping paths can be constrained by restricting excessively large movements in a single direction . the slope , thereby avoiding
5 . boundary conditions
.Lastly , boundary conditions further restrict ",.variant uses constrained endpoints , such as il = 1 , Jl = 1 and is = n , js = m . Rather than simply anchoring the points , we can relax the endpoint constraint by introducing an "offset" in the above conditions . Lastly , a starting point may be specified , with subsequent path constraints replac/ng a fixed ending point . the search space . The most restrictive
The dynamic programming formulation is based on the following recurrence relation , which defines the cumulative distance , ~/(i,j ) , for each point .
’~(i,j ) = 6(i,j ) rnin[~/(i 1,j ) , 7( i 1,j 1 ) , 7( i,J
( 7 ) That is , the cumulative distance is the sum of the distance between current elements ( specified by a point)and the minimum.of the cumulative distances of the neighboring points . The above formulation is a symmetric algorithm since both predecessor points off the diagonal are used . a The aynaml pr grammmg algorithm fillsin atab!e of cumulative distances as the computation proceeds , removing the need to re calculate partial path distances . Upon completlon , the previous points with the lowest cumulative distance . the optimal warping path can be found by tracing backward in the table choosing
4An asymmetric formulation would use 0nly one of the points , ( i I , j ) or ( i , j I ) . Experimental results suggest thatsymmetric algorithms perform better in the speech recognition domain [ SC90 ] .
KDD 94
AAAI 94 Workshop on Knowledge Discovery in Databases
Page 363
2.1 Measures of Fit Once the best warping path is found , a score describing the "fit" of the template and underlying time series segment must be calculated . The score is intended to quantify the degree of fit achievable by stretching or compressing the series emd template with regard to time . In addition , the score must allow comparisons so that matches can be ranked . We might be interested in comparisons of multiple matches of a single template against a long series , as wel/u in comparisons of the fit of various templates with a series .
One possible measure is based on the ratio of the cumulative warping path distance to a baseline distance . We have experimented with several baseline calculations , including a boundary around the time series segment . An example of such a boundary is shown in Figure 5 . In this example , the baseline is a relative baud centered around the series . For instance , a data point of 50 would be bounded by 25 and 75 , assuming the band width to be 100 % of the data value . The sum of these boundary intervals makes a reasonable baseline , with the score set to zero if the warping path distance exceeds the baseline ( thereby keeping the score in the [ 0,1 ] range ) .
3 .
Simple
Experiments
In order to illustrate the approach , we use the simple "mountain shaped" test patterns shown in Figure 4 . The collection starts With a mountain that increases in increments of 20 , with s subsequent patterns "/]attened" until we reach a horizontal line at 40 . synthetic values
8O
60
40
20
0 flat40
0
1
2 points
3
4 .
5
Figure 4 : A Collection of Mountain Shaped Patterns .
We ran a naive DTW algorithm on all combinations of mountain patterns . That is , each pattern acted as both a series and s template during the matching process , e The naive algorithm uses fixed endpolnts and some simple constraints on warping path slope ( including the monotonicity and continuity restrictions ) . The resulting scores are summarized in Table 1 .
SThe units in this example have no paxtieulax meaning . eThe values on either side of the diagonal axe different due to the baseline calculation being dependent on which pattern acts as the series .
Page 364
AAA1 94 Workshop on Knowledge Discovery in Databases
KDD 94 scores templat/e~e flat40 flat40 nmt5 m t10 nmt20
~ . ’1,0o 0.86 ! i.00 0.89 0.62
0.84 0.68 0.36 rant5 mntlO mnt20 0.61 0.73 0.85 1.00
0.76 0.91 1.00 0.81
Table 1 : Score Matrix for the "Mountain" Templates .
For example , consider the matching process with rant20 acting as the underlying series andmntlO the speci~tc template , The overall score is 0.85 , with the corresponding matrix of cumulative distances ( ~/ ) shown in Table 2 . Thewsrpin8 path representing the reasonably close fit is shown below , with the appropriate Table 2 cells highlighted .
( 6 , 6)(5 , 5)(5 , 4)(4 , 3)(3 , 3)(2 , 1)(0 , O )
( 8 )
The warping path is a sequenceof ( i,j ) element , a~ , and template element , tj . pairs , indicating an alignment between a series
6 5
2 1 i’
.f m,nIo/mt o distances ( 7 )
3O
50¸
9O 9O 70
9O 50 7O 110 130 9O 70 9O 7O 80 ’20 4O 60 7O 6O 8O 6O 20 !So 50 7O 100 60 So 10 30 7O 9O 9O 110 to 10 140 0 2o 180 6 1
9O 120 120 160 4
130 180 5
60 2 o
3
Table 2 : C mulative Distance Matrix for rant20 sad mntlO .
4
Predator/PreyExperiments
Consider again the time series in Figure 1 . The hare populationexhibits two "double topped" peaks which will form the basis for our pattern detection . These peaks may indicate some interesting phenomena , perhaps heavy lynx hunting for pelts caused a break in the normal spike shaped cycles . In the entirely diHerent domain of stock market technical analysis , involving the search for many such patterns , form is called a "double top reversal" [ LR78 ] , Figure 5 is a close up of the peak occurring near 1850 , including the boundary which would be used to calculate a baseline score as discussed in Section 21 this particular
KDD 94
AAAI 94 Workshop on Knowledge Discovery in Databases
Page 365 population in ~s 180
140 lO0 hare baseline
°°°°°° , %
°°°°°°°°’" , %
°.°°°*°°°°°°°°*° "°"°°
90 "*’°°’~ ,
°°°°°°°°°°’°°
90 %’"’ ,
~ °°°oo°°°°°°oooo .
6O
2O
°°°°
°°°°°°°°°°’i°°’°~°
1849 1850 1851 1852 1853
1854 1855 1856 1857 1858 lime in yean
Figure 5 : Double Top Peak in the Hare Population Near 1850 .
II
Figure 6 describes an example template for a double top peak . In our experiment , the template is specified in relative terms with respect tothe first point . This point serves as an anchor durin8 the matching process , i~eriting the starting value from the time series segment being considered . For instance , an anchor value of 20 from the underlying time series will result in a template instance of 20 , 40 , 60 , 80 , 70,70 , 80 , 60 , 40 , 20 , as illustrated in the following table : pattern scaling template instance
0
1
2
3
2.5
2.5
3
2
1
0
20 4O 6O 8O 7O 7O 8O 6O 4O 2O
After matehlng the template a]on8 the hare population series , again using the DTW
Igorithm described in Section 3 , the two highest scores were anchored at 1849 ( 0.87 ) and 1870 ( 086 ) These points correspond nicely with the double topped peaks in Figure 1 . Most other scores were substantially lower , with only a few reaching over 06 This matching problem is fa~ly di~cult since there are several area~ which might be classified as doublepeaked and the template is quite simple , A more complex template should be harder to match closely , and therefore be more selective . The graph of the scozes over the hare population data is shown in Figure 7 . The particular warping path anchored near 1850 is shown in Figure 8 , with the warping path alignments represented by dotted lines .
Page 366
AAAI 94 Workshop on Knowledge Discovery in Databases
KDD 94
3.O
2,$
2.O
|.S
1.0
0.5
0.0
O
I I
I
I
I i i i 4
Fisu:e 6 : An Example Double Top Templste Exp:essed in Relative Terms .
IitI .q tt l f011 ].0 O.9 0,8 0.7 0.6 0,5 0.4 O.3 O.2 0.! 0.01180
100 t I
:[ II
!
I v t
¯
1 1 i J ,
I
~
. t I
~ : ii i jrt ,t I If I I t tf
!
I t
, , , w I t
I I i I I tlt t:# I t t~ ,
; , ,
,,’ , , t I[
Jtoore hare
20 i
’
1~5
1~5 pepu~m~tbmJJtqds
186.5
1~S
!118S
1895
1905
1915
192.5
1935 time In yem
Figu:e 7 : Dynamic Time Wezping Scores snd Heze Populstion Dsts .
KDD 94
AAAI 94 Workshop on Knowledge Discovery in Databases
Page 367
Ix~tioa in thous~
I00 9O so 70 60 so 40 30 20 10 0
50~" ,/"
,,/ ,
’~’" s f.""
75 7 i,’" ""
90
9O
~ d""
6o 60
" . ,
, .
~
" , , hare alignments template
" , , ""~
""
1849
1850 1851
1852
1853
1854
1855
1856 1857
1858 flmein years
Figure 8 : The Series/Template Alignment Anchored Neax 1850 .
5 Conclusion
The knowledge discovery sub problem 0ffinding patterns in time series data is a challenging reseezch issue . It is certainly important if we consider how much data is inherently tempotad , such as stock prices,i patient information , or credit caxd transactions . Our preliminary experiments with techniques based on dynamic time waxping axe encouraging .
Ozce we can detect patterns such ass double top peak , we can express higher level relationships or "knowledge" as rules , For example , the following rule expresses one possible relationship , where tl and t2 represent s time interval . double.top(hare , tl , t2 ) , heavy.]zunting(lynz , tl , t2 )
( 9 ) to improve performance . Since the DTW algorithm
We plan to develop more refined DTW algorithms and evaluate them in the context of in exploring parallel a prototype knowledge discovery tooI . In addition , we are interested algorithms is based on independent matches of a template ag~nst segments of:s time series , we can divide the time series and use paxallel matching processes,,The granularity of the computations can be controlled by changing the time series to multiple processors . interval size . These independent tasks can then be distributed
Page 368
AAAI 94 Workshop on Knowledge Discovery in Databases
KDD 94
References [ A 88 ] William A . Ainsworth . Speech Recognition by Machine . Peter Peregrinus Ltd . ,
London , 1988 .
[ c087 ]
James Clifford and Albert Croker . The historical relational data model ( hrdm ) and algebra based On lifespanS’ In Proceedings of the International Conference on Data Engineering , pages 528 537 , Los Angeles , California , 1987 . IEEE Computer Society Press .
[ CCT94 ] J . Clifford , A . Croker , and A . Tuzhilin . On completeness of historical data models , ACM Transactious on Database Systerna , 19(1 ) , 1994 . relational
[ Cla?3 ] W . B . Clapham , Jr . Natural Ecosystems . Macmillan Publishing Company , New
York , 1973 .
[ FpSM9! ] William J . Prawley , Gregory Piatetsky Shapiro , and Christopher J . Matheus .
¯
Knowledge discovery in databases : An overview . In Gregory Piatetsky Shapiro ~ and William 3 . Prawley , editors , Knowledge Discovery in Databases , pages 1 27 .
The AAAI Press , Menlo Park , Csliforaia , 1991 .
[ Go189 ] David E . Goldberg . Genetic Algorithms in Search , Optimization , and Machine
Learning . Addlson Wesley Publishing Company , New York , 1989 .
[ JD88 ]
Anti K . Jsin and Richard C . Dubes . Algorithms for Clustering Data . Prentice Hall , Englewood Cliffs , New Jersey , 1988 .
[ KerS6]l~ed N . Kerlinger . Foundations of Behavioral Research . Holt , Rinehart and
Winston , New York , third edition , 1986 .
[ LC78 ]
[ LR78 ]
[ OduT1 ]
[ Pac90 ]
Robert E . Larson and John L . Castl . Principles of Dynamic Programming . Ms , eel Dekker Inc . , Basel , Switzerland , 1978 .
Jeffrey B . Little and Lucien Rhodes . Understanding Wall Street . Liberty Publishjng Company , Cockeysville , Maryland , 1978 .
EP Odum . Fandamentals of Ecology . W . B . Saunders Company , Philadelphia , third edition , 1971 .
Norman H . Packard . A genetic learning algorithm for the analysis of complex data . Complez Systems , pages 543 572 , 1990 .
[ PooSS]H . Vincent Poor . An Introduction
Verlag , New York , 1988 . to Signal Detection and Estimation . Spinger
[ RL90 ] ~awrence R . Rabiner and Stephen E . Levlnson . Isolated and connected word In Alex Waibel and Kai Pu Lee , recognition theory editors , Readings in Speech Recognition , pages 1!5 153 . Morgan Kaufmann Publishers , Inc . , San Mateo , California , 1990 . and selected applications .
KDD 94
AAAI 94 Workshop on Knowledge Discovery in Databases
Page 369
[ SC90 ]
Hiroski Sskoe and Seibi Chiba . Dynamic programming algorithm optimization for spoken word zecognRion . In Alex Wsibel and KaJ Pu Lee , editors , Readings in Speech Recognition , pages 159 165 . Morgan Kauf~ann Publishers , Inc . , San Mateo , Cslifornia , 1990 .
[ TCG+93 ] A . Tansel,J . Clifford , S . Gadia,S . Jsjodia , A . Segev , and R . Snodgr~s . Temporal
Do.fabasea : Theory , Design , and Implementation . Benjsmin/Cummings Publishing Company , Redwood City , California , 1993 .
Page 370
AAA1 9d Worl~hop on Knowledge Discovery in Databases
KDD 94
