A Model for Short Term Content Adaptation
Marco Benini
Alberto Trombetta
Centro di Ricerca Informatica
Dipartimento di Informatica e
Interattiva
Dipartimento di Informatica e
Comunicazione
Universit`a degli Studi dell’Insubria via Mazzini 5 , Varese , Italy
Comunicazione
Universit`a degli Studi dell’Insubria via Mazzini 5 , Varese , Italy albertotrombetta@uninsubriait
Michela Acquaviva
Centro di Ricerca Informatica
Interattiva
Dipartimento di Informatica e
Comunicazione
Universit`a degli Studi dell’Insubria via Mazzini 5 , Varese , Italy marcobenini@uninsubriait michelaacquaviva@uninsubriait
ABSTRACT This paper proposes a model for short term content adaptation whose aim is to satisfy the contingent needs of users by adjusting the information a web application provides on the basis of a short term user profile . The mathematical model results in the design of an adaptive filter that profiles users by observing their queries to the application and that adjusts the answers of the application according to the inferred user needs . Also , the mathematical model ensures the correctness of the filter , that is , the filter is guaranteed to exhibit a coherent short term adaptive behaviour .
Categories and Subject Descriptors H12 [ User/Machine Systems ] : Human factors ; H33 [ Information Search and Retrieval ] : Information filtering ; H54 [ Hypertext/Hypermedia ] : Navigation , User issues
General Terms Algorithms , Human factors
Keywords User modelling , Information filtering
1 .
INTRODUCTION
Among the many possibilities offered by the widespread use of the web , E learning , has proved to be more difficult than initially thought . One central difficulty lies in the lack of interaction and synchronisation between learner and teacher . The solution offered by the most successful E learning initiatives has resulted in a highly improved way of presenting contents , such as learning objects’ standards . Despite this , the problem still remains .
As a partial explication , one can point out that little or no effort has been spent in order to overcome the lack of personalisation of the content , in terms of learner needs . Aim of this work is to present a framework to model the interaction between a learner and an E learning service , and
Copyright is held by the author/owner . WWW2005 May 10(cid:150)14 , 2005 , Chiba , Japan ACM 1›59593›051›5/05/0005 . to model the adaptive behaviour the E learning service has to offer , in order to better satisfy the specific learner needs . The adaptive agent is a filter that intercepts user queries to the learning objects’ repository and uses them to define a corresponding user profile . Then , it adapts the repository ’s answer according to the adaptive strategy . The profile is a model of a user , and is devoted to code his interests .
In this work , we focus on the short term behaviour , being it the real novelty in our adaptive approach . In fact , the long term adaptive model is a natural extension of the short term model , and is comparable with many existing approaches . Under the hypothesis that the sequence of queries represents an attempt to satisfy an interest of the user , we expect that every query in the sequence refines the interest , until a satisfying result has been found . Hence , the transformation process implemented by the adaptive filter should result in a sequence of answers that are closer and closer to the satisfaction of the user interest , and such sequence should converge with the same speed as the sequence of queries . Therefore , the adaptive filter must be able to segment the flow of queries from a user in sequences , each converging to the full expression of a single interest , until such interest gets satisfied . In other words , it should sense the changes of interest in the flow of queries issued by the user . The filter provides families of transformations , such as ordering the elements of a multiple answer according to their closeness to the user interests . Such transformations are parametrised with the profile of the corresponding user . The property the adaptive model is required to satisfy is informally stated as to a small change in the profile , there corresponds a small change in the transformation . Hence the need for a mathematical study of the adaptive filter .
2 . A SHORT TERM ADAPTIVE MODEL
The adaptive filter receives a query from the user , then it analyses the query with the analyser algorithm and it forwards the query to the repository of the application , ie , to the part of the application deputed to answer queries , typically a database ; finally , the filter adapts the answer from the repository by means of the transformer algorithm . The goal of the adaptive strategy performed by the filter is to exhibit two behaviours : convergence and detection of changes of interest . The former means that if the sequence of queries approximates the user interest , then the series of transformed answers must be closer and closer to the sat
1034 isfaction of that interest . The latter behaviour , detection of change of interest , captures the situation where the user stops a sequence of queries and starts a new one , focused on a different interest .
In this respect , the user is modelled as a point in the profile space , denoted as Uprofile , the cube with edge [ ,1 ; 1 ] in the n th dimensional Euclidean space . Every coordinate of this space is uniquely associated with an attribute and its value denotes how strong is the user interest in the attribute .
Being a subspace of the Euclidean space , the profile space is equipped with a norm k : : : k that measures the length of a profile ( p1 ; : : : ; pn ) . Obviously , the associated distance function is d(a ; b ) = ka , bk , as usual , see , eg , [ 1 ] . The norm is defined as k(p1 ; : : : ; pn)k = ,Pn i 1=2 . i=1 p2
Moreover , the zero vector ~0 represents the neutral profile , modelling the user deprived from his interests .
The important point in our model is that a query can be interpreted as a profile . In fact , we assume that a query asks for metadata with a specified degree of confidence . Thus a profile can be immediately constructed : if a query asks for resources marked with the metadata a with a degree of confidence d , the corresponding profile will have the value d in the coordinate a ; if the query does not specify any value for a coordinate a , the profile will have the value 0 in a .
Therefore , given a sequence of queries q1 ; : : : ; qn , it is possible to associate to every query a corresponding profile , obtaining a sequence of query profiles ^q1 ; : : : ; ^qn . Thus , given an initial user profile p0 , the sequence of queries q1 ; : : : ; qn generates the series of user profiles p0 ; : : : ; pn+1 with the rule that pi+1 = ffpi + fiqi+1 , where ff + fi = 1 and ff ; fi > 0 . Hence , the new user profile is a weighted mean of the two old user profile and the query profile .
Consequently , the rule that identifies a change of interest is a lack of convergence in the sequence of profiles . A way to locally measure the convergence of the generated profile sequence is to observe if kpi+1 , pik > ffi=f ( i ) , where ffi is a constant threshold value and f is a monotone increasing function . For example , if f ( i ) = i then a sequence not violating the constraint converges with linear speed . In general , f measures the convergence speed of generated profiles .
Therefore , the analyser algorithm converts the input query q to a profile ^q , then it calculates the new profile n as the weighted mean of ^q and pi , the current user profile . If the distance between n and pi is too large , ie , greater than ffi=f ( i ) , then the analyser restarts a new query sequence , otherwise pi+1 becomes equal to n .
On the other hand , the transformer algorithm is designed according to the principle that a small variation in the user profile induces a small variation in the applied transformation . Thus , we assume that the filter is equipped with a set of transformations , and one of them is applied to the result according to the query and the user profile .
The transformation applied to the result depends on the query ; to capture this dependency , the set Q of possible queries is partitioned by an equivalence relation fl . Hence , the transformation space is the disjoint union of transformations : . = Fx2Q=fl fx(p ) j p 2 Uprofileg . The functions x : Uprofile ! ( Uanswer ! Uanswer ) are the transformations . They act by generating a concrete function from a user profile , that , when applied to an answer , produces the transformed result . The result is a point in the space Uanswer , the set of possible answers , usually identified with the set of valid XML documents . The link between the transformation space and the profile space is given by a constraint that ensures the preservation of convergence : let x 2 Q=fl be the selector of a transformation , let a 2 Uanswer be an answer from the repository , then we impose that , for every pa ; pb 2 Uprofile , dx(x(pa)(a ) ; x(pb)(a ) ) Kd(pa ; pb ) ;
( 1 ) where d is the distance function in the profile space , dx is the distance function in the answer space associated with the x transformation , and K is a ( small ) constant , possibly depending on a and x .
Henceforth , a transformation x is admissible iff is possible to associate a distance function dx satisfying the constraint ( 1 ) . In fact , if the distance function dx is chosen such that the metric space Uanswer is a Banach space , where every Cauchy sequence converges [ 1 ] , then the constraint ( 1 ) is a direct formalisation of the sentence \a small variation in the profile space induces a small variation in the transformation" , since the constraint ensures that there is an homeomorphism between the profile space and a suitable subspace of the transformation space .
As an example of admissible transformation , we consider the transformation that orders a list according to the proximity of its elements to the user interests . Precisely , an ordering transformation operates by sorting the list of elements ( r1 ; : : : ; rn ) according to a sorting key that is a continuous function f : Uprofile . Uprofile ! R , where R is the set of real numbers . To every element ri of the list ( r1 ; : : : ; rn ) is associated a point ^ri in the profile space , in a similar way as already described for converting queries into profiles . Since the function f is applied to the pair ( ^ri ; p ) , p being the user profile , the list is sorted according to a value depending on f , p and the examined element .
Moreover , the ordering transformation satisfies the constraint ( 1 ) . In fact , posing dx(a ; b ) as the minimal number of element swappings needed to transform the list a into the list b , it follows that dx is , indeed , a distance function . Since f is continuous , but sorting is a discrete function , a sufficiently small value ffl of d(pa ; pb ) implies that x(pa)(a ) = x(pb)(a ) , thus it follows that dx(x(pa)(a ) ; x(pb)(a ) ) n=ffl because no more than n swaps are needed to transform a list of length n into any of its permutations . Thus , posing K = n=ffl , the constraint ( 1 ) immediately follows .
3 . CONCLUSIONS
The contribution of this work is a mathematical model for short term content adaptation . In contrast with most existing approaches oriented to the long term observation of users , we have developed a model that is based on rough observations for a short period of time . Although this model is not precise as the long term counterparts , it is powerful enough to capture the basic user interests and it provides a mathematical frame to guarantee the correctness of adaptive manipulations on content .
4 . ACKNOWLEDGEMENTS
This work has been supported by the project \VICE : co munita virtuali per la formazione" , MIUR 449/97 .
5 . REFERENCES [ 1 ] K . J(cid:127)anich . Topologie . Springer Verlag , 1994 .
1035
