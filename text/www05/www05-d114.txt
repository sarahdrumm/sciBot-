Soundness Proof of Z Semantics of OWL Using Institutions
Dorel Lucanu
Faculty of Computer Science
( cid:147)AICuza(cid:148 ) University
Ias‚i , Romania
Yuan Fang Li and Jin Song Dong
School of Computing
National University of Singapore
Singapore dlucanu@infouaicro
[ liyf,dongjs]@compnusedusg
ABSTRACT The correctness of the Z semantics of OWL is the theoretical foundation of using software engineering techniques to verify Web ontologies . As OWL and Z are based on different logical systems , we use institutions to represent their underlying logical systems and use institution morphisms to prove the correctness of the Z semantics for OWL DL .
Categories and Subject Descriptors F.4 [ MATHEMATICAL LOGIC AND FORMAL LANGUAGES ] : Miscellaneous ; I24 [ Artificial Intelligence ] : Knowledge Representation Formalisms and Methods|Representation languages
General Terms Languages , Theory , Verification
Keywords OWL , Z , institution , comorphism of institutions 1 .
INTRODUCTION
In our previous works [ 2 ] , we proposed to use software engineering techniques in a combined approach to verify the correctness of Web ontologies . The validity of the combined approach relies on the correctness of the Z semantics of the ontology language . As OWL and Z are based on different logical systems ( description logics and first order logic ) , the proof of the correctness requires a high level device that is able to represent and relate different logical systems .
The notion of institutions [ 4 ] was introduced to formalize the concept of \logical systems" . Institution morphisms [ 3 ] captures the migration between logical systems . In this paper , we prove the correctness of the Z semantics 1 for OWL DL using institutions and institution morphisms , by representing the underlying logical systems of OWL DL and Z as institutions and applying institution comorphisms . 2 . THE OWL INSTITUTION O
We recall from [ 5 ] the definition of the institution formalizing the logic OWL DL . The OWL institution O is given by
1The semantics can be found at http://wwwcompnusedu sg/~liyf/OWL2Z.tex
Copyright is held by the author/owner . WWW 2005 , May 10(cid:150)14 , 2005 , Chiba , Japan . ACM 1›59593›051›5/05/0005 .
O = ( Sign(O ) ; sen(O ) ; Mod(O ) ; j=O ) . The definition of O follows mainly the lines described in [ 6 ] . The use of the institution theory offers several significant advantages : ability to work with structured ontologies , use of constraints to distinguish between OWL DL and OWL Full ontologies , and a solid foundation for tools extending , linking OWL languages with other formalisms similar to those presented in [ 2 ] .
Briefly , an OWL signature consists of a quadruple O = ( C ; R ; U ; I ) , where C is the set of concept ( class ) names , R and U are the sets of individual valued and data valued property names , respectively , and I is the set of individual names . Given an OWL signature , an O structure ( model ) is a ]]A ; ResA ; resA ) consisting of a set of tuple A = ( A ; [ [ resources ResA , a subset A ResA called domain , a function resA : N ( O ) [ D ! ResA associating a resource with each name in O or D , and an interpretation function [ [
]]A : C [ R [ U ! P(Res ) [ P ( Res ) . P ( Res ) . The set of O sentences is defined by :
F ::= C v C j C C j Disjoint(C ; : : : ; C ) j Tr(R ) j R v R j R R j U v U j U U j o : C j ( o ; o 0 ) : R j ( o ; v ) : U j o o 0 j o 6 o 0 where o and o 0 range over individuals names , v ranges over data values , C ranges over OWL class descriptions and restrictions and U and R range over datatype and objectproperties , respectively .
The details of the satisfaction relation can be found in [ 5 ] .
3 . THE INSTITUTION Z
We briefly recall from [ 1 ] the institution Z , formalizing the logic underlying the specification language Z .
A Z signature Z is a triple ( G ; Op ; ) where G is the set of the given set names , Op is a set of the identifiers , and is a function mapping the names in Op into types T ( G ) .
Given a Z signature Z = ( G ; Op ; ) , a Z structure ( model ) is a pair ( AG ; AOp ) where AG is a functor from G , viewed as a discrete category , to Set , and AOp is a set f(o ; v ) j o 2 Opg where v 2 AG ( ( o) ) . The functor AG is the standard extension of AG to AG : T ( G ) ! Set .
Given a Z signature Z , the set of Z sentences P are de fined by :
P ::= true j false j E 2 E j E = E j : P j P _ P j P ^ P j P ) P j 8 S :P j 9 S :P where E and S represent the sets of Z expressions and
Z schema expressions , respectively .
1048 The details of the Z environment , the satisfaction relation and the use of mathematical toolkit can be found in [ 1 ] . 4 . ENCODING O IN Z
The main idea is to associate a Z specification ( (O ; F ) with each OWL specification ( O ; F ) such that an ( O ; F )model can be extracted from each ( (O ; F ) model . The construction of ( (O ; F ) is given in two steps : we first associate a Z specification ( (O ) with each OWL signature O and then we add to it the sentences F translated via a natural transformation .
Since ( (O ; F ) can be seen as a Z semantics of ( O ; F ) , it includes a distinct subspecification ( Z ; ; P ; ) defining the main OWL concepts and the operations over sets . More precisely , we consider ( Z ; ; P ; ) as being the vertex of the colimit having as base the standard library , the specification of the data types , together with the Z specification about OWL DL [ 5 ] .
We define ( ff : Sign(O ) ! Sign(Z ) as follows . Let O = ( C ; R ; U ; I ) be an OWL signature . Then ( ff(O ) = ( G ; Op ; ) is defined as follows :
G = G ; ; Op = Op ; [ C [ R [ U [ I ; ( C ) = Resource for each C 2 C , ( R ) = Resource for each R 2 R , ( U ) = Resource for each U 2 U , ( o ) = Resource for each o 2 I .
If ’ : O ! O0 is an OWL signature morphism and ( ff(O ) = ( G ; ; Op ; ) and ( ff(O0 ) = ( G ; ; Op 0 ; 0 ) , then ( ff(’ ) : ( (O ) ! ( (O0 ) is the Z signature morphism ( id : G ; ! G ; ; ( ff(’)op : Op ! Op 0 ) such that ( ff(’)Op is the identity over the subset Op ; and ( ff(’)op(N ) = ’(N ) for each name N in O .
We extend ( ff to ( : Sign(O ) ! Th(Z ) by defining ( (O ) = ( (ff(O ) ; P ) , where P is P ; together with the following sentences : fC 2 Class ) j C 2 Cg [ fR 2 ObjectProperty j R 2 Rg [ fU 2 DatatypeProperty j U 2 Ug [ fo 2 Individual j o 2 Ig .
If O is an OWL signature , then ffO : sen(O)(O ) ! sen(Z)(((O ) ) is defined by : ffO( ? ) = Nothing , ffO(> ) = Thing , ffO(N ) = N for each name N in O ffO(C1 u C2 ) = intersectionOf(ffO(C1 ) ; ffO(C2) ) , . . . ffO(8 R:C ) = allValuesFrom(ffO(R ) ; ffO(C ) ) , . . . ffO(E ) = fffO(e ) j e 2 E g .
Lemma 1 . ff = fffO j O 2 Sign(O)g is a natural trans formation ff : sen(O ) ) ( ff ; sen(Z ) . 2
If O = ( C ; R ; U ; I ) is an OWL signature and A0 = ( A0 a ( ff(O) model , then fiO(A0 ) is the O model A = ( A ; [ [ ResA ; resA ) defined as follows :
G ; A0
Op ) ]]A ;
2The details of the proofs of this and following lemmas and theorem can be found in [ 5 ] .
G ( Resource ) ,
Op for each name N 2O , Op ,
ResA = A0 resA(N ) = v where ( N ; v ) 2 A0 A = v where ( Thing ; v ) 2 A0 if C 2 C , then [ [C ]]A = vC where ( instances ; v ) 2 A0 if R 2 R , then [ [R]]A = vR where ( subVal ; v ) 2 A0 and ( R ; vR ) 2 v , if U 2 U , then [ [U ]]A = vU where ( subDVal ; v ) 2 A0 and ( U ; vU ) 2 v .
Op and ( C ; vC ) 2 v ,
Op
Op where instances and subVal are the corresponding expansion functions . A is indeed an O model . For instance , if ( instances ; v ) 2 A0 Op , then v is the graph of the function defined in A0 by instances and vC is just the value of this function for the argument C . Since ;(instances ) = P(Resource.P(Resource) ) , it follows that vC A0 We obtain [ [C ]]A A applying the sentences in P ; . We extend fiO to a functor fiO : Mod0((ff(O ) ) ! Mod(O ) as follows : if h : A0 ! B 0 is a ( ff(O) homomorphism , then fiO(h ) is the O homomorphism fiO(h ) : fiO(A0 ) ! fiO(B 0 ) given by fiO(h ) = hResource .
G ( Resource ) .
Lemma 2 . fi = ffiO j O 2 Sign(O)g is a natural trans formation fi : ( ffop ; Mod(Z ) ) Mod(O ) .
Theorem 1 . ( ( ; ff ; fi ) : O ! Z is a simple theoroidal comorphism . 5 . CONCLUSION
In this paper , we demonstrated the soundness of the Z semantics for OWL through the use of institution morphisms . This allows us to use Z reasoners for proving properties of OWL ontologies . If e is a property of the OWL ontology ( O ; F ) and we prove that the Z encoding of ( O ; F ) satisfies the translation of e , ffO(e ) , then ( O ; F ) satisfies e by the satisfaction condition from the definition of the comorphism . The data type is a parameter for the OWL institution . This allows to use the built in Z data types for proving properties of the OWL ontologies . The correctness of the properties is then preserved by the institution morphism induced by the translation of the data type .
The paper exhibits also a practical way to put at work the theoretical results concerning the migration between logical systems . 6 . REFERENCES [ 1 ] H . Baumeister . Relating abstract datatypes and Z schemata .
In Recent Trends in Algebraic Development Techniques Selected Papers , volume 1827 of Lect . Notes in Comput . Sci . , pages 366{382 , Bonas , France , 2000 . Springer Verlag .
[ 2 ] J . S . Dong , C . H . Lee , Y . F . Li , and H . Wang . A Combined
Approach to Checking Web Ontologies . In Proceedings of 13th World Wide Web Conference ( WWW’04 ) , pages 714{722 , New York , USA , May 2004 .
[ 3 ] J . Goguen and G . Rosu . Institution morphisms . Formal
Aspects of Computing , 2002 .
[ 4 ] J . A . Goguen and R . M . Burstall . Introducing institutions . In Proc . Logics of Programming Workshop , number 164 in Lect . Notes in Comput . Sci . , pages 221{256 . Springer Verlag , 1984 .
[ 5 ] D . Lucanu , Y . F . Li , and J . S . Dong . Web Ontology
Verification and Analysis in the Z Framework . Technical Report TR 05 01 , University \Alexandru Ioan Cuza" of Iasi , Romania , January 2005 . http://thorinfouaicro/~tr/tr05 01ps
[ 6 ] P . F . Patel Schneider and I . Horrocks ( editors ) . OWL : Direct
Model Theoretic Semantics . http://wwww3org/TR/owl semantics/directhtml
1049
