OOLAM : an Opinion Oriented Link Analysis Model for
Influence Persona Discovery
Keke Cai1 , Shengha Bao1 , Zi Yang2 , Jie Tang2 , Rui Ma1 , Li Zhang1 , Zhong Su1
1IBM China Research Laboratory
2Department of Computer Sicence and Engineering
Tsinghua University , Beijing , China , 100001
1{caikeke , baoshhua , maruicrl , lizhang , suzhong}@cnibmcom
2yangzi@kegcstsinghuaeducn , jietang@tsinghuaeducn
ABSTRACT Social influence is a complex and subtle force that governs the dynamics of social networks . In the past years , lots of researches have been conducted to understand the spread patterns of social influence . However , most of existing approaches assume that they have as input to their problems the influence between individual users , but ignore the question of what kind of influence happens between them . As such one interesting and also fundamental question is raised here : “ in a social network , could the social connection reflect users’ influence from both positive and negative aspects ? ” To this end , an Opinion Oriented Link Analysis Model ( OOLAM ) is proposed in this research to characterize users’ influence personae to exhibit their distinguishing influence ability in the social network . In particular , three types of influence personae are realized and the problem of influence persona discovery is formally identified . Within the OOLAM model two factors , ie , opinion consistency and opinion creditability are defined to capture the persona information from public opinion perspective . Extensive experimental studies have been performed to demonstrate the effectiveness of the proposed approach on influence persona analysis using real web data sets .
Categories and Subject Descriptors H33 [ Information Storage and Retrieval ] : Information Search and Retrieval retrieval models
General Terms Algorithms , Measurement , Experimentation , Performance .
Keywords Influence Persona Discovery , Link Analysis , Opinion Consistency , Creditability Analysis .
1 .
INTRODUCTION
The social influence analysis studies people ’s influence by means of analyzing the social interactions between people and has attracted tremendous interest from both the sociology and the data mining research communities . For example , Domingos and Richardson [ 8 ] propose the influence maximization problem , in which the goal is to find a few “ influential ” members of the network . Kempe et al . [ 16 ] formalize the problem in discrete optimization and propose three cascade models for influence propagation . However , these approaches assume they have as input to their problems the positive link , but ignore the existing of some kind of negative link happening between individuals . One interesting and also fundamental question has recently begun to be widely investigated : “ in a social network , should the social interaction be described from both positive and negative aspects ? ” The answer is affirmative . As states in Leskovec et al . [ 23 ] recent studies on signed networks , arbitrary social interaction on the Web involves both positive and negative relationships , which can affect the structure of on line social networks .
The signed interactions between social individuals require us to reconsider the influence analysis problem , since the vast majority of social influence researches are based on positive assumption and the generalized influence is therefore positive oriented by default . The signed social networks decide the diversity of the social influence . It thus becomes an interesting problem of how to explore the diverse characteristics of a user ’s social influence from the signed social connections .
In this paper , we aim to develop a better understanding of social influence when the social relationships between people can be positive and negative . Inspired by the idea of persona in sociology studies [ 12 , 18 ] , which show that the effects of the social influence by users with different personae are different , we give a definition of social influence persona to describe the social role or character of a user played in a social network . More specifically , three kinds of influence personae , which occur widely in social network , are generalized from public opinion perspective , including Positive Persona , Negative Persona and Controversy Persona . Positive Persona describes one kind of users with high positive influence , where their social links from others always indicate the friendship , support or approval . Comparatively speaking , Negative Persona represents users with high negative influence , where their social links from others always express hostility , disagreement or distrust . This phe nomenon is very common in real life that for some person , most of the received attention is always negative . The last kind of persona is called as Controversy Persona , which represents a group of people who are liable to be challenged or supported by many . Generally , these three kinds of influence personae have similar and different features . The common characteristic is that all of them represent people with huge influence , while the difference lie in that they reflect people ’s influence from different perspectives .
The study in this work is referred to as influence persona discovery and two challenges are correspondingly identified . The first one is how to capture the influence from the interactions on signed social networks in a principled model . In this paper , this problem is explored from two aspects , namely who is involve in the interaction and what they have said during the interaction ? These two factors are derived from the common sense that people ’s influence can be convinced by the approvals gained from other reliable users . Two concepts of opinion consistency , which is to evaluate whether the social links from others are positive or not , and opinion creditability , which is to measure to what degree the social link from others can be trusted , are therefore proposed .
Another challenge is how to leverage these two pieces of opinion information for influence persona analysis . In this research , an Opinion Oriented Link Analysis Model ( OOLAM ) is proposed to quantitatively estimate the influence persona in the social network . Specifically , we construct a bipartite graph , of which two sets of nodes respectively represent different set of social units with positive and negative interactions . An iterative process is performed on the bipartite graph to calculate the social influence from two complementary directions until a stationary distribution is found . The OOLAM model finally generates two ranking lists to describe people ’s positive and negative influence , based on which different influence personae can be easily recognized . For example , the positive persona refers to those who have higher positive ranking but lower negative ranking .
To validate the proposed OOLAM model , a series of experiments have been conducted on four public datasets from two popular online social media sites , ie , Epinions ” 1 and Slashdot ” 2 , where the obvious link polarity are provided to describe the opinions of online users for each other . For quantitative evaluations , we borrow the experimental framework articulated by Leskovec et al . [ 22 ] for edge sign prediction , wherein the identified social influence persona is considered as additional features to describe the signed social link . Experiment results at one side strongly verify the effectiveness of the proposed model and at another side arise some interesting questions deserved to be further studied .
The rest of the paper is structured as follows . Section 2 introduces the state of the art of influence analysis . Section 3 gives the two hypotheses for our influence analysis in the context of social network . The proposed OOLAM model is then elaborated in Section 4 and distributed OOLAM algorithm is illustrated and discussed in Section 5 . Section 6 demonstrates the experimental results . Finally Section 7 concludes this work with pointing out possible future work .
2 . RELATED WORK
1http://wwwepinionscom 2http://slashdot.org
2.1 Signed Links in Social Network
Traditional studies in social network take the assumption that the interactions between social users are positive . However , the negative relationships inherently exist in real online networks , eg the negative vote on Wikipedia [ 4 ] , the distrust feedback on Epinion [ 14 ] , the “ foes ” declaration on Slashdot [ 3 , 20 , 21 ] , and other implicit disagreement hidden behind online discussion [ 28 ] . Recently , a lot of studies are involved in investigating both the positive and negative relationships in social context . Leskovec et al . [ 22 , 23 , 24 ] implemented a series exploration on this topic . They found that the interplay between positive and negative relationships indeed affects the structure of on line social networks and then defined a new theory of status to explain the observed edge signs [ 23 ] . Another problem they investigated is how to realize the prediction of positive and negative link given the underlying social networks [ 22 ] . A machine learning approach is then implemented based on a collection of features observed from link structure and social psychology . Controversial study is another research topic on soical issues . For example , works of Massa and Avesani [ 25 ] studied the global and local trust metrics for controversial user and suggested to use Local Trust Metrics to access the trustworthiness of a user .
2.2 Social Influence Analysis
Identifying influential users in the interactive network has been highlighted as a key issue for study . As graph theoretic approaches have been widely applied to solve this problem , influence analysis can be then transferred to a link analysis problem , wherein the directed links are used to represent the influences between each other .
Heuristics approaches for influence analysis focus on exploring the link structure . Network centrality measure is one of the most representative mechanisms . Network centrality [ 5 ] focused on node structure of a network and decided node importance based on its structure location . Different centrality measures have been applied , including degree centrality , closeness centrality , betweenness centrality , and eigenvector centrality [ 9 ] etc .
Graph theoretic approaches of PageRank [ 27 ] and HIT [ 17 ] are two popular algorithms adopted to solve influence or expertise ranking problem . PageRank algorithm measures the influence by analyzing the underlying hyperlink structure of entities and the HIT algorithm discovers authoritative and hub entities based on a mutual reinforcement principle . However , as mentioned in previous work [ 1 ] , these traditional webpage adaptive approaches do not work well for sparsely linked structures . Variations of PageRank and HITS have already been applied to solve this problem . Adding implicit links [ 19 ] to increase the link density is a widely applied solution .
In some studies , selecting the most influential entities is defined as a problem to find the maximization of information diffusion in the network by selecting a fixed number of nodes [ 13 ] . Two basic diffusion models have been widely applied , ie , linear threshold model [ 13 , 2 ] and cascade model [ 10 , 11 ] . These works studied the diffusion problem from different aspects but came to different conclusions . Java et [ 15 ] found that PageRank can be considered as an inal . expensive approximation to the greedy heuristic in selecting the initial target set for activation . In the study of [ 24 ] , a new scheme called “ Cost Effective Lazy Forward ” ( CELF ) is proposed in selecting new seeds . Chen et al . [ 6 ] proposed a new greedy algorithms and degree discount heuristics . Kempe et al . [ 16 ] presented a greedy approximation algorithm and proved that it is outperforming than the classic degree and centrality based heuristics in influence spread . Influence propagation method also has been studied in topiclevel social influence analysis , for example , in the study of Tang et al . [ 29 ] the Topical Affinity Propagation ( TAP ) is used to model the topic level social influence on large networks .
Although link based and probabilistic based approaches have been shown to be successful in ranking entity influence on the graph , most of them focus on the structure of graph and hardly consider the properties of entities . In the study of Agarwal et al . [ 1 ] , except the link structure , several post level statistics like blog post recognition , novelty , eloquence and comments etc information are also considered . Experiments proved that such object oriented statistic analysis is quite useful for influence analysis .
Approaches discussed above explored influence problem from various aspects , while the signed interactions between social individuals has been largely unexplored . This paper aims to give some initial explorations on influence analysis with consideration of the signed links in social network . There are crucial differences compared with previous approaches . Firstly , most previous graph based influence analysis algorithms assume that the presence of a link from u to v is an evidence that u is influenced by v [ 15 ] . However , it is not always a fact . Controversy in user discussion make it possible that link from u to v actually represents u disagrees with v . Secondly , traditional influence analysis approaches assume that the link from u to v is reliable . However , in reality , the links from an unreliable user , eg , a spammer , are most likely unreliable . Motivated by the observations above , we propose to incorporate opinion concept into influence analysis to reveal the intrinsic features of user influence in social connection .
3 . USER INFLUENCE THROUGH SOCIAL
INTERACTION
Before the introduction of detailed algorithm , we firstly give some notations involved in our social interaction and influence analysis .
3.1 Social Interaction
Basically , online social interaction can be explicit , such as the “ friends ” or “ foes ” relationship between users on Slashdot , or implicit , such as the reply relationship among users in online forums etc . But whatever kind of interaction , two kinds of elements are always involved , namely user and opinion . Figure 1 gives an example to illustrate the elements involved in the social interaction . In our following discussion , if not stated otherwise , we treat social interaction as directed .
As shown in Figure 1 , a response that is presented as the link between users represents a social action from one user to another . Furthermore , a response is said to be a positive response if it supports the opinion of the other one , else is said to be a negative response . A user is therefore said to have positive influence if he receives positive response , else is said to have negative influence . It can be seen from Figure p ositive resp o nse p ositiveinflu e nce s iti v o p e s n o p s r e e e i n fl u s iti v o p e c n e
User D n e g ative resp o nse n e g ativeinflu e nce e s n o p s r e e c n e e i n fl u a ti v g a ti v g e n e e n p ositive p ositiveinflu resp o nse e nce s o n e p s r e a ti v g e n e e n
User E e c n e
User F e i n fl u a ti v g
User A
User B
User C
Figure 1 : Elements involved in user social interaction .
1 that a user can simultaneously have positive and negative influence .
Based on the above definitions , the interactions between users can be represented by a user graph G = {A , E} , where A is the union of all users and ( ai , aj ) is a directed arc in E if user ai ∈ A has ever generated one or more social responses to user aj ∈ A . 3.2 User Influence and Opinion Consistency
Intuitively , the simplest way to measure the influence of a user is to count the number of responses he/she gets from others . It is perceived that the given remark exert much influence on social community if it receives much social attentions . However , such an approach does not consider a fact that not all responses are positive , so that users receiving many negative responses can be incorrectly regarded to have the same influence capability with those receiving many positive responses .
As defined in Wikipedia , “ Social influence occurs when an individual ’s thoughts or actions are affected by other people ” 3 . We then believe that a user with strong positive influence should be someone who can always induce others to behave in a similar way . Figure 2 gives an example to explain the effect of opinion consistency on user influence analysis . As shown in Figure 2 , although users A and B similarly get two responses from others , the influence of A is considered more positive since it gains more positive responses than B .
User A : This phone is very suitable for ladies , ( cid:171 )
User B : The screen of this camera is very clear
Re : User C : I think you are right,(cid:171 )
Re : User E : I think you are wrong(cid:171 )
Re : User D : fi(cid:87)(cid:75)(cid:76)(cid:78)fi(cid:86)(cid:171 )
Positive responses
Re : User F : fi(cid:71)(cid:182)(cid:87)fi(cid:87)(cid:75)(cid:76)(cid:78)fi(cid:86)(cid:171 )
Negative responses
Figure 2 : Opinion consistency in user discussions .
Opinion consistency can be captured directly or indirectly from online social interaction . For some social networks with explicit link signs , such as Slashdot etc , it is easy to get such consistency information through the tags labeled between users manually . However , for another kind of online 3http://enwikipediaorg/wiki/Social_influence resources with no explicit link signs , like online forums etc , more action is needed to infer the hidden opinion information from user discussion content . It can be imaged that user online discussions indeed can be considered as some kind of opinion exchange , from which the consistency between user ’s opinions can be captured . In this paper , two approaches are discussed for opinion consistency detection from text analysis perspective . Since this task is not the focus of our paper , we just briefly present the basic idea . Further studies will be discussed in future works .
Taking the forum discussion as an example , where user ’s social interaction is concretely manifested by the interactive messages , the approaches for opinion consistency detection are implemented as follows .
1 . Sentiment based consistency detection . Given a message MA that replies to message MB , sentiment based consistency detection will consider MA holding the same opinion with MB if and only if they shall the same sentiment about the discussed object . The accumulated consistency from interactive messages is then used to describe the opinion consistency between users . Sentiment based consistency detection is easy to be implemented , but its performance is limited by the development of sentiment analysis technique . To improve the detection accuracy , rule based approach can be considered .
2 . Rule based consistency detection . Observations from online discussions show that some agree and disagree indicators contained in messages can directly indicate the consistency ( or not ) between messages . Table 1 lists some examples of agree and disagree indicators captured from online forum . Obviously , rules based on sentiment indicators can always accurately capture user ’s opinion expressed through messages . However , compared with sentiment based consistency detection , rule based approach is lack of flexibility and scalability . So , it raises an interesting question of whether the result of rule based approach can be used to improve the traditional learning based approach for sentiment analysis . If the answer is affirmative , then the applicability of sentiment based consistency detection can be improved .
Table 1 : Examples of agree and disagree indicator
Agree indicator right out of my mouth sound promising likely correct well said could not agree with you more
Disagree without merit indicator bad idea obviously untrue you are wrong not necessarily true
Opinion consistency can differentiate social responses from positive and negative perspectives , but it treats all responses equally . Commonly , the statements from an influential expert are more reliable than those from an indifferent person .
Therefore , to decide the effect of responses on influence decision , opinion creditability is another important factor should be considered . 3.3 User Influence and Opinion Creditability Actually , the second assumption of opinion creditability refers to the idea that user ’s influence depends largely on the responsive users with high influence . Figure 3 illustrates this idea , where different creditability of users E and F make their responses to others produce different effects . Obviously , the approval from reliable user E to A is more convincible than that from unreliable user F to C . Influence of A is then proved . Similarly , the negative response from E to B convincingly negates B ’s influence , but it is not the same case for D because of the low creditability of F .
A
E
Consistent
Opinion
B
E
Inconsistent
Opinion
C
F
Consistent
Opinion
D
F
Inconsistent
Opinion
Reliable user
Reliable user
Unreliable
Unreliable user user
Figure 3 : Effect of opinion creditability on influence analysis .
4 . OOLAM MODEL FOR INFLUENCE PER
SONA DISCOVERY
After the discussion of two elements involved in our influence analysis , this section gives a detailed description of the opinion oriented link analysis model , followed by influence persona discovery . 4.1 Positive/Negative Reinforcement
In this paper , a bi partite graph model is proposed for user influence analysis , in which the social interaction among users will be observed from opinion consistency perspective and two kinds of reinforcement , namely positive and negative reinforcement , are studied on the basis of opinion creditability .
Based on the assumption of opinion consistency , we divide user graph G = {A , E} into two weighted graphs , GP = {AP , EP } and GN = {AN , EN } , where AP , AN ⊆ A and AP ∩ AN 6= null , ( aj , ai ) is a directed arc in EP if user aj ∈ AP has responded to user ai ∈ AP with positive opinion , similarly ( aj , ai ) is a directed arc in EN if user aj ∈ AN has responded to user ai ∈ AN with negative opinion . The weights wA N ( aj , ai ) associated with each link in GP and GN describe the response intensity from aj to ai . Generally , graph GP and GN reflect the positive and negative interaction among users respectively , based on which users will be assigned with two influence scores to describe their positive and negative characteristics on influence . These two conflicting scores are viewed as the determinative factors to define user ’s creditability . Basically , users with high positive influence and low negative influence are considered as creditable ones .
P ( aj , ai ) and wA
Figure 4 gives an example to illustrate the proposed model for user influence analysis . The observed objects consists of 10 users {a1 , a2 , . . . , a10} , which are divided into two graphs p(a2 ) a2 p(a5 ) a5 p(a1 ) a1 p(a4 ) a4 p(a1 ) n(a1 ) p(a2 ) n(a2 ) p(a3 ) a3 p(a6 ) p(a5 ) a6 n(a5 ) p(a8 ) n(a8 ) a7 p(a7 ) a8 p(a8 ) n(a9 ) a9 n(a5 ) a5 n(a1 ) a1 a8 n(a8 ) n(a2 ) a2 n(a10 ) a10
Figure 4 : OOLAM model .
GP and GN , where GP = {a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8} and GN = {a1 , a2 , a5 , a8 , a9 , a10} , the weight of the link represents the connectivity strength between users and the value of p(ai ) and n(ai ) represent the positive and negative influence score of user ai . Table 2 gives an example to explain the factors used for calculating p(a5 ) and n(a5 ) . The column of “ Weight of in link ” describes the positive and negative responses from others and the column of “ Opinion Creditability ” lists the creditability of each responsive user which is computed as the subtraction of its positive and negative influence score . Note that in our model , users only contained in graph GN will be assigned a small real value to limit its opinion affect on others . For example , opinion creditability of a10 is set to be ǫ , which is a small real value .
Table 2 : Examples of the influence factors in BiOOIA model
Weight of in link Opinion creditability p(a5 ) wA wA wA wA n(a5 ) wA wA wA
P ( a1 , a5 ) P ( a2 , a5 ) P ( a4 , a5 ) P ( a6 , a5 ) N ( a2 , a5 ) N ( a8 , a5 ) N ( a10 , a5 ) a1 : p(a1 ) − n(a1 ) a2 : p(a2 ) − n(a2 ) a4 : p(a4 ) a6 : p(a6 ) − n(a6 ) a2 : p(a2 ) − n(a2 ) a8 : p(a8 ) − n(a8 ) a10 : ǫ
4.2 OOLAM Algorithm
Let IAP = ( p(a1 ) , p(a2 ) , . . . , p(at ) ) and IAN = ( n(a1 ) , n(a2 )
, . . . , n(au ) ) as the positive and negative ranking of nodes in GP and GN , where t = |IAP | and u = |IAN | . The simplest approach based on the first assumption to evaluate p(ai ) and n(ai ) is to see how many positive and negative responses ai get from its neighbors in GP and GN . p(ai ) = X wA
P ( aj , ai )
( aj ,ai)∈EP n(ai ) = X wA
N ( aj , ai )
( aj ,ai)∈EP
( 1 )
( 2 )
To implement the idea of opinion creditability , we need to consider the creditability of the responsive user into Eq 1 and Eq 2 . Basically , user ’s opinion creditability R(ai ) is decided by its positive and negative influence score , namely p(ai ) and n(ai ) , and can be defined as :
R(ai ) = max(ǫ , p(ai ) − n(ai ) )
( 3 )
We define MAP and MAN as the adjacency matrix to de scribe user relationship in graph GP and GN :
MAP ( i , j ) = wA
P ( ai , aj )
MAN ( i , j ) = wA
N ( ai , aj )
( 4 )
( 5 )
Then the user influence scores can be calculated iteratively as below :
I k+1 AP = Rk ∗ MAP
I k+1 AN = Rk ∗ MAN
( 6 )
( 7 )
Further considering the damping factor d into ranking function , the equation is as follows :
I k+1 AP =
I k+1 AN =
1 − d t
1 − d u
+ d ∗ Rk ∗ MAP
+ d ∗ Rk ∗ MAN
( 8 )
( 9 )
The OOLAM algorithm is guaranteed to converge . For the ease of description , we simply assume R(ai = p(ai−n(ai . Then the convergence of OOLAM can be proofed as below : By subtracting Eq 9 from Eq 8 , we have : I k+1 AP − I k+1
AN =
(
1 − d u ⇒ Rk+1 = ( 1 − d)(
+ d ∗ Rk ∗ MAP ) − ( 1 t
1 u
−
1 − d t
+ d ∗ Rk ∗ MAN )
) + dRk(MAP − MAN )
( 10 )
Letting C = 1 u − 1
10 can be rewritten as : t and MAP N = MAP − MAN , the Eq
Rk+1 = ( 1 − d)C + dRkMAP N
( 11 )
Then the iteration of opinion creditability R has a similar form with the traditional PageRank [ 27 ] algorithm whose convergence has been proven before . As Rk converges , we can easily derive that I k+1 , which both depend AP on variable Rk only , will also converge . Note that PageRank acceleration approaches can also be applied here [ 26 ] . and I k+1 AN
In summary , the final OOLAM algorithm is shown as Al gorithm 1 . 4.3 User Influence Persona
The OOLAM model generates two ranking lists to describe user ’s influence characteristics from positive and negative perceptively , based on which three types of persona can be defined .
1 . Positive Persona . The first type of persona represents users whose opinions are always accepted by others . Relative high positive influence and low negative influence is the characteristic of this type persona .
2 . Controversy Persona . The second type of persona describes users who always raise controversial issues . The most characteristic of this type persona is that their positive influence and negative influence are finely balanced .
1
2
3
4
5
6
7
Algorithm 1 : Bi partite Opinion Oriented Link Analysis input output : positive and negative influence ranking lists
: Social interactions between users
Construct social network graph G based on user social interactions ; Divide G into two sub graphs GP and GN according to the opinion consistency between users ; Let R be the opinion reliability of each node in G , IAP and IAN be the ranking of nodes in positive and negative graph respectively ; foreach k ← 1 to n do
I k+1 AP I k+1 AN
= 1−d
= 1−d t + d ∗ Rk u + d ∗ Rk
∗ MAP
∗ MAN
Return IAP and IAN
3 . Negative Persona . Contrary to positive persona , the third type of negative user is with relative low positive influence and high negative influence . Opinions of this type of user are not always accepted by others . i g n k n a r e c n e u l f n i e v i t a g e N
2
1
N o n
I n fl u
I n fl u
4
3
Positive Persona e n ti a l u s e r s
Controversy
Persona
90 (cid:302) (cid:533 )
( cid:533 )
( cid:302 ) e n ti a l u s e r s
6
5
Negative Persona
( cid:534 )
Positive influence ranking
Figure 5 : Area division for influence persona discovery .
In this paper , a two dimensional coordinate system is efficiently used to depict these three types of personae . Based on the two generated influence ranking lists , each user can be mapped to a two dimensional coordinate point , where the x axis corresponds to user ’s positive influence ranking and y axis corresponds to the negative influence ranking . After the coordinate mapping , all the coordinate points can be divided into six areas , as shown in 5 . In this figure , points in green area 1 correspond to users with the first type of influence persona since their relative high positive influence and low negative influence . Similarly , points in yellow area 3 and red area 5 respectively represent users with most controversial and negative characteristic of influence . Obviously , compared with points in other 2 , 4 and 6 areas , points in these three areas are deserved to be noticed because of their significant characteristic of influence , and therefore go by the general name of influential users , while points in Area 2 , 4 and 6 are all treated as non influential users .
5 . DISTRIBUTED OOLAM ALGORITHM As a social network may contain millions of users and hundreds of millions of social ties between users , it is impractical
Phase Map Input Map Output / Reduce Input Reduce Output ai
Key Value ai aj hpk(ai ) , nk(ai)i h 1−d t + dRk(ai)wA 1−d u + dRk(ai)wA hpk+1(ai ) , nk+1(ai)i
P ( ai , aj ) , N ( ai , aj)i
Table 3 : Key value definitions for each computation phase to proceed a OOLAM algorithm from such a huge data using a single machine . To address this challenge , we deploy the learning task on a distributed system under the mapreduce programming model [ 7 ] . Map Reduce is a programming model for distributed processing of large data sets . In the map stage , each machine ( called a process node ) receives a subset of data as input and produces a set of intermediate key/value pairs . In the reduce stage , each process node merges all intermediate values associated with the same intermediate key and outputs the final computation results . Users specify a map function that processes a key/value pair to generate a set of intermediate key/value pairs , and a reduce function that merges all intermediate values associated with the same intermediate key .
For distributing the OOLAM Algorithm , we first duplicate a complete graph G onto each single process node , and a portion of nodes are assigned to each node at each iteration randomly and automatically for calculating the reliabilities IAP and IAN corresponding to that portion of nodes . And then , the map stage and the reduce stage can be defined as follows .
In the map stage , each process node scans the reliabilities pk(ai ) and nk(ai ) of the k th iteration . The map function is defined in Table 5 . We note that for each input key/value pair it issues a series of intermediate key/value pairs for each aj such that ( ai , aj ) ∈ EP ∩ EN . If ( ai , aj ) /∈ EP or ( ai , aj ) /∈ EN , the corresponding issued value takes 0 .
In the reduce stage , each process node collects all values associated with an intermediate key to generate new pair by summing up all the intermediate values , which corresponds to the input in the map phase for the next iteration . Thus , the one time map reduce process corresponds to one iteration in our Distributed OOLAM algorithm .
6 . EXPERIMENTAL STUDY
To quantitatively measure the performance of the proposed approach for influence persona discovery , we borrow the experimental framework articulated by Leskovec et al . , in which the machine learning approach is implmented for edge sign prediction by combining the evidence from various edge features . By treating influence persona as new features for classification , it is hoped to see that user associated influence persona can offer more evidence for social relationship prediction . In our experiments , the task of edge sign prediction is considered as a binary classification implemented by svmlight and classification accuracy is taken as the main measure for evaluation . 6.1 Experiment Setup
The experimental data are generated based on the public data released by Leskovec et al . [ 22 ] , which include four data sets from two popular online social media sites , ie ,
Epinions and Slashdot . These network data contain explicit signs of links to indicate the attitudes of online users for each other and is especially suitable for our experiments . Firstly , these network data reflect a sense of direct social relationship between users and secondly , the provided social relationships are assigned with explicit signs , the noise caused by opinion consistency detection therefore can be avoided . Table 4 shows the detailed statistics of these datasets . As stated in [ 22 ] , the overwhelming majority of the edges in the selected experimental data are positive and the random guessing can achieve approximately 80 % accuracy . To reduce the effect of randomness on classification , we follow the process of Leskovec et al . and create a balanced dataset with equal numbers of positive and negative edges for training and testing .
Table 4 : Dataset statistics
Name Epinions
Node
131,828
Edges Description 841,372 Epinions signed
Slashdot 1
77,350
516,575
Slashdot 2
82,140
54,9202
Slashdot 3
81,867
54,5671 social network Slashdot Zoo signed social network from November 6 2008 Slashdot Zoo signed social network from February 21 2009 Slashdot Zoo signed social network from February 16 2009
We implement the OOLAM algorithm and run on above datasets by setting damping factor d to 095 The algorithm converges after average 15 iterations . Based on the generated positive and negative ranking lists , we can easily assign each user with a kind of influence persona according to the rules introduced in Section 43 In the following analysis , we set k to the size of experimental data , and the angle of α , β , and γ to 30 , 30 and 45 , respectively . Table 5 gives the distribution of nodes in each area . It is easy to see that users in Area 2 , 4 and 6 actually represent the majority of web users that are always paid little attention by others . In contrast , the proportion of influential users in Area 1 , 3 and 5 is relatively small . The distribution of influential and non influential users follows a power law distribution , which indeed is a natural phenomenon in real situations .
Table 5 : Distribution of users in each area
Area1 Area2 Area3 Area4 Area5 Area6
Epinion 3,290 52,810 5,159 47,227 8,641 14,701
Slashdot1 3,280 26,735 7,448 21,750 9,582 8,555
Slashdot2 3,230 29,535 7,143 23,308 10,201 8,723
Slashdot3 3,263 29,390 7,137 23,211 10,154 8,712
6.2 Comparsion With Baseline Classifier
A baseline classifier is constructed by referring to the five basic degree features discussed in [ 22 ] . Specifically , given the edge E from node u to v , a 5 dimensional vector is constructed , where features of d+ in(v ) denote the in(v ) and d− out(u ) and d− number of positive and negative incoming links to v , features of d+ out(u ) represent the number of positive and negative outgoing links from u and feature C(u , v ) denotes the total number of common neighbors of u and v with no consideration of edge direction . Formally , E can be represented by the feature vector {d+ out(u ) , C(u , v)} . out(u ) , d− in(v ) , d− in(v ) , d+
Features involved in the baseline classifier aim to generalize the interaction characteristics between nodes . Comparatively , influence persona provides another kind of characteristics about nodes themselves . We therefore construct a compared classifier named IPClassifier , where the information about influence persona of the linked nodes is also leveraged to construct feature vector of edge . The basic idea is that a user with high positive influence is more likely to receive positive links from others , and vice versa . Then , given the edge E from node u to v , a 7 dimensional feature vector {d+ out(u ) , C(u , v ) , Ip(v ) , Ip(u)} is generated , where the new added features of Ip(v ) and Ip(u ) denote the influence persona of v and u respectively . out(u ) , d− in(v ) , d+ in(v ) , d−
The average accuracy of classification throughout the four datasets is shown in Figure 6 , where the results are compared between the baseline classifier and IPclassifier for different size of training and testing data . In the following figures of accuracy comparsion , the X axis represents the size of experimental data , 80 % of which is used for training and Y axis represents the classification accuracy . It can be seen from Figure 6 that IPClassifier significantly outperform the baseline classifier on all data sets . It is also noted that the performance of baseline classifier has no obvious change with the increase of training data , while the performance of IPclassifier has a dramatic improvement in the intial stage and gradually reaches a stable state . All these evidences demonstrate that the proposed approach for influence persona discovery is effective , which can efficiently describe the characteristic of online user from influence perspective .
6.3 Evaluation of Value of Link Polarity in In fluence Analysis
Earlier in the above discussion , influential analysis has been a key issue for study and a lot of graph theoretic approaches have been proposed successively . One natural and interesting question is then raised “ could the prediction performance be improved if the influence features are generalized from traditional influence model ? ” . To get the answer , a compared classifier based on traditional influence analyzer called TRIClassifier is constructed . As we know , traditional influence model always generate single ranking list . To incorporate such kind of influence information for prediction , the ranking list is firstly segmented into several sections and nodes belonging to the same sections are assigned with an unique section ID . Then , a 7 dimensional vector is constructed and formed as {d+ out(u ) , C(u , v ) , SID(v ) , SID(u)} , where SID(u ) and SID(v ) correspond to the section ID of nodes u and v . In our experiment , we apply PageRank algorithm to generate the ranking list . Basically , approach that is capable of solving influence or expertise ranking problem can be applied here . out(u ) , d− in(v ) , d+ in(v ) , d−
Figure 7 gives the comparisons between IPClassifier and TRIClassifier . We can see that the performance of TRIClassifier is even lower than that of the baseline classifier on most data sets . It reflects to some degree that traditional influence analysis approach cannot adapt very well to networks with significant signed edge . To this end , it is necessary to separately consider the positive and negative links between users for influence estimation .
6.4 Evaluation of Value of Positive/Negative
Reinforcement in Influence Analysis
Experiments above have proved the necessary of opinion polarity for influence analysis . As discussed above , another important factor needed to be considered in our analysis model , except the link polarity , is the interactions between the separated social graphs . Thus , another problem comes up “ whether such kind of information is helpful in depicting user ’s influence ? ” . In the following experiments , we will turn to this problem .
Given two graphs separated by link polarity , influence analysis with no consideration of mutual reinforcement is implemented as follows . Firstly , apply influence anlaysis on each graph independently , then , assign each graph node two independent scores , and finally calculate node influence persona by using the same approach defined in section 43 To distinguish with the influence persona defined in our approach , influence persona here is denoted as independent influence persona . By leveraging the independent influence persona into edge description , the third compared predictor named STRIClassifier is constructed . The feature vector of edge from u to v therefore can be described as {d+ in(v ) , in(v ) , d+ d− out(u ) , C(u , v ) , Iidp(u ) , Iidp(v)} , where Iidp(u ) and Iidp(v ) correspond to the independent influence persona of nodes u and v . out(u ) , d−
Figure 8 gives the classification accuracy of the compared approaches of IPClassifier and STRIClassifier . However , the result is not as expected . The peformance of IPClassifier and STRIClassifier are almost at the same level . It is an interesting phenomena deserved to be studied . Compared with STRIClassifier , IPClassifier will consider the mutual reinforcement between the separated graphs during influence estimation . The communication density between nodes therefore becomes very important . The statistics of nodes communication in graphs is shown in Figure 9 , from which some observations are summarized as follows . First , there is only small part of nodes with both positive and negative inlink . It means that majority of nodes in the two graphs have only one influence score . Second , limited transmission happens between nodes . It can been seen that only small part of nodes which have positive in link can transmit its positive influence to negative graph and similarly only small part of nodes which have negative in link can transmit its negative influence to positive graph . As a result , it severely restrains the implementation of influence reinforcement . The sparse communication between nodes directly result in similar performance of IPClassifier and STRIClassifier . It therefore raises an interesting issue for our future work that how to enhance the adaptability of the influence model to various data structure .
6.5 Scalability Performance
The distributed learning algorithm is also implemented under the Map Reduce programming model using the Hadoop platform4 . We perform the distributed train on 6 computer nodes ( 24 CPU cores ) with AMD processors ( 2.3GHz ) and 48GB memory in total .
4http://hadoopapacheorg/
120000
110000
100000
90000
80000
70000
60000
50000
40000
30000
20000
10000
0
Epinion
Slashdot1
Slashdot2
Slashdot3
Nodes in positive graph
Nodes with positive inlink
Nodes in negative graph
Nodes with negative inlink
Nodes with both positive and negative inlink
Nodes with positive inlink and negative outlink
Nodes with negative inlink and positive outlink
Figure 9 : Nodes distribution in the positive and negative graph .
We evaluate the speedup of the distributed learning algorithm on the cluster of 6 nodes using the complete data set with different sizes of nodes . Moreover , we perform the distributed learning algorithm on all the computational nodes , but with different size of data set . The results are shown in Figure 10(a ) and Figure 10(b ) . It is shown that when the size of data set increases to nearly one million edges , the distributed learning starts to show a good parallel efficiency ( speedup > 4 ) . This confirms that the distributed OOLAM algorithm like many distributed learning algorithms is preferable to large scale data sets .
4
3
2
1
1
2
3
4
5
6
4
3
2
1
0
0
5
10 x 106
( a ) Scalability performance using different number of nodes .
( b ) Scalability performance on data sets of different sizes .
Figure 10 : Scalability Performance .
7 . CONCLUSIONS AND FUTURE WORK
With the fast development of Web 2.0 , more and more Web users share their opinions online through various social channels . Such information is quite valuable in reflecting the social activities and draws large attention from both industry and academia . In this paper , an opinion oriented link analysis model is proposed for social influence analysis , wherein three kinds of influence persona are discovered . The contributions of this work can be summarized as follows .
1 . The proposal of deriving user influence persona from the public opinion ’s perspective . Three kinds of persona are studied based on their influence effects , ie , positive users , negative users and controversial users .
2 . The proposal of OOLAM algorithm for opinion oriented link analysis and the mapping between influence ranking and influence persona . It helps capture the user influence more accurately by propagating both positive influence and negative influence iteratively .
3 . The extensive experiment of influence persona discovery . Experiment results at one side strongly verify the effectiveness of the proposed model and at another side fl fl fl fl fl fl fl fl
( cid:86)(cid:72)(cid:79)(cid:76)(cid:72)fi(cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 ) ( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 )
( a ) Epinion
( cid:86)(cid:72)(cid:79)(cid:76)(cid:72)fi(cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 ) ( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 )
( cid:86)(cid:72)(cid:79)(cid:76)(cid:72)fi(cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 ) ( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 ) fl fl fl fl
( cid:708)(cid:709 )
( b ) Slashdot1
( cid:86)(cid:72)(cid:79)(cid:76)(cid:72)fi(cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 ) ( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 ) fl fl fl fl
( cid:708)(cid:709 )
( cid:708)(cid:709 )
( c ) Slashdot2
( cid:708)(cid:709 )
( d ) Slashdot3
Figure 6 : Classification Accuracy Compared between the baseline and IPClassifier . fl fl fl fl fl fl fl fl
( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:87)(cid:76 ) ( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 )
( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 ) ( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 ) fl fl fl fl
( a ) Epinion
( cid:708)(cid:709 )
( b ) Slashdot1
( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 ) ( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 )
( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 ) ( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 ) fl fl fl fl fffi
( cid:708)(cid:709 )
( cid:708)(cid:709 )
( c ) Slashdot2
( d ) Slashdot3
Figure 7 : Classification Accuracy Compared between IPClassifier and TRIClassifier . fl fl fl fl fl fl fl fl
( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 ) ( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 )
( cid:708)(cid:709 )
( a ) Epinion
( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 ) ( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 )
( cid:708)(cid:709 )
( c ) Slashdot2 fl fl fl fl fl fl fl fl
( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 ) ( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 )
( b ) Slashdot1
( cid:708)(cid:709 )
( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 ) ( cid:79)(cid:86)(cid:86)(cid:76)(cid:73)(cid:76)(cid:72)(cid:85 )
( d ) Slashdot3
( cid:708)(cid:709 )
Figure 8 : Classification Accuracy Compared between IPClassifier and STRIClassifier . arise some interesting questions deserved to be further studied .
Generally speaking , it is a first try on influence persona discovery and there is a still a long way to go . In future , we are to extend the adaptability of the proposed link analysis algorithm and study influence drifting in different types of forums .
8 . REFERENCES
[ 1 ] N . Agarwal , H . Liu , L . Tang , and P . S . Yu . Identifying the influential bloggers in a community . In M . Najork , A . Z . Broder , and S . Chakrabarti , editors , WSDM , pages 207–218 . ACM , 2008 .
[ 15 ] A . Java , P . Kolari , T . Finin , and T . Oates . Modeling the spread of influence on the blogosphere . In WWW 2006 Workshop on Weblogging Ecosystem : Aggregation , Analysis and Dynamics , 2006 . [ 16 ] D . Kempe , J . M . Kleinberg , and ´E . Tardos .
Maximizing the spread of influence through a social network . In L . Getoor , T . E . Senator , P . Domingos , and C . Faloutsos , editors , KDD , pages 137–146 . ACM , 2003 .
[ 17 ] J . M . Kleinberg . Authoritative sources in a hyperlinked environment . J . ACM , 46(5):604–632 , 1999 .
[ 18 ] D . Krackhardt . The Strength of Strong Ties : The
Importance of Philos in Organizations , pages 216–239 . Harvard Business School Press , Boston , MA .
[ 2 ] E . Berger . Dynamic monopolies of constant size . J .
[ 19 ] A . Kritikopoulos , M . Sideri , and I . Varlamis . Blogrank :
Comb . Theory , Ser . B , 83(2):191–200 , 2001 .
[ 3 ] M . J . Brzozowski , T . Hogg , and G . Szab´o . Friends and foes : ideological social networking . In M . Czerwinski , A . M . Lund , and D . S . Tan , editors , CHI , pages 817–820 . ACM , 2008 .
[ 4 ] M . Burke and R . Kraut . Mopping up : modeling wikipedia promotion decisions . In CSCW ’08 : Proceedings of the ACM 2008 conference on Computer supported cooperative work , pages 27–36 , New York , NY , USA , 2008 . ACM .
[ 5 ] M . Chau and J . J . Xu . Mining communities and their relationships in blogs : A study of online hate groups . International Journal of Man Machine Studies , 65(1):57–70 , 2007 .
[ 6 ] W . Chen , Y . Wang , and S . Yang . Efficient influence maximization in social networks . In J . F . E . IV , F . Fogelman Souli´e , P . A . Flach , and M . J . Zaki , editors , KDD , pages 199–208 . ACM , 2009 . ranking weblogs based on connectivity and similarity features . In AAA IDEA ’06 : Proceedings of the 2nd international workshop on Advanced architectures and algorithms for internet delivery and applications , page 8 , New York , NY , USA , 2006 . ACM .
[ 20 ] J . Kunegis , A . Lommatzsch , and C . Bauckhage . The slashdot zoo : mining a social network with negative edges . In J . Quemada , G . Le´on , Y . S . Maarek , and W . Nejdl , editors , WWW , pages 741–750 . ACM , 2009 . [ 21 ] C . Lampe , E . W . Johnston , and P . Resnick . Follow the reader : filtering comments on slashdot . In M . B . Rosson and D . J . Gilmore , editors , CHI , pages 1253–1262 . ACM , 2007 .
[ 22 ] J . Leskovec , D . P . Huttenlocher , and J . M . Kleinberg . Predicting positive and negative links in online social networks . In M . Rappa , P . Jones , J . Freire , and S . Chakrabarti , editors , WWW , pages 641–650 . ACM , 2010 .
[ 7 ] J . Dean and S . Ghemawat . Mapreduce : simplified data
[ 23 ] J . Leskovec , D . P . Huttenlocher , and J . M . Kleinberg . processing on large clusters . In OSDI’04 : Proceedings of the 6th conference on Symposium on Opearting Systems Design & Implementation , pages 10–10 , Berkeley , CA , USA , 2004 . USENIX Association .
[ 8 ] P . Domingos and M . Richardson . Mining the network value of customers . In KDD , pages 57–66 , 2001 .
[ 9 ] L . C . Freeman . Centrality in social networks :
Conceptual clarification . Social Networks , 1:215– 239 , 1979 .
[ 10 ] J . Goldenberg , B . Libai , and E . Muller . Talk of the network : A complex systems look at the underlying process of word of mouth . Marketing Letters , 3(12):211–223 , 2001 .
[ 11 ] J . Goldenberg , B . Libai , and E . Muller . Using complex systems analysis to advance marketing theory development . Academy of Marketing Science Review , 2001 .
[ 12 ] M . S . Granovetter . The Strength of Weak Ties . The
American Journal of Sociology , 78(6):1360–1380 , 1973 .
[ 13 ] D . Gruhl , D . Liben Nowell , R . V . Guha , and
A . Tomkins . Information diffusion through blogspace . SIGKDD Explorations , 6(2):43–52 , 2004 .
[ 14 ] R . Guha , R . Kumar , P . Raghavan , and A . Tomkins .
Propagation of trust and distrust . In WWW ’04 : Proceedings of the 13th international conference on World Wide Web , pages 403–412 , New York , NY , USA , 2004 . ACM .
Signed networks in social media . In E . D . Mynatt , D . Schoner , G . Fitzpatrick , S . E . Hudson , K . Edwards , and T . Rodden , editors , CHI , pages 1361–1370 . ACM , 2010 .
[ 24 ] J . Leskovec , A . Krause , C . Guestrin , C . Faloutsos , J . M . VanBriesen , and N . S . Glance . Cost effective outbreak detection in networks . In P . Berkhin , R . Caruana , and X . Wu , editors , KDD , pages 420–429 . ACM , 2007 .
[ 25 ] P . Massa and P . Avesani . Controversial users demand local trust metrics : An experimental study on epinions.com community . In M . M . Veloso and S . Kambhampati , editors , AAAI , pages 121–126 . AAAI Press / The MIT Press , 2005 .
[ 26 ] F . McSherry . A uniform approach to accelerated pagerank computation . In A . Ellis and T . Hagino , editors , WWW , pages 575–582 . ACM , 2005 .
[ 27 ] L . Page , S . Brin , R . Motwani , and T . Winograd . The pagerank citation ranking : Bringing order to the web . Technical Report 1999 66 , Stanford InfoLab , Nov . 1999 .
[ 28 ] B . Pang and L . Lee . Opinion mining and sentiment analysis . Foundations and Trends in Information Retrieval , 2(1 2):1–135 , 2007 .
[ 29 ] J . Tang , J . Sun , C . Wang , and Z . Yang . Social influence analysis in large scale networks . In KDD ’09 , pages 807–816 , 2009 .
