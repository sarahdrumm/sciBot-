REACTOR : A Framework for Semantic Relation Extraction and Tagging over Enterprise Data
Wei Shen1 , Jianyong Wang1 , Ping Luo2 , Min Wang2 , Conglei Yao2
1Department of Computer Science and Technology , Tsinghua University , Beijing , China
2HP Labs China , Beijing , China
1chen wei09@mailstsinghuaeducn , jianyong@tsinghuaeducn
2{ping.luo , min.wang6 , congleiyao}@hpcom
ABSTRACT Relation extraction from Web data has attracted a lot of attention in recent years . However , little work has been done when it comes to relation extraction from enterprise data regardless of the urgent needs to such work in real applications ( eg , E discovery ) . In this paper , we propose a novel unsupervised hybrid framework , called REACTOR ( abbreviated for a fRamework for sEmantic relAtion extraCtion and Tagging Over enteRprise data ) . We evaluate REACTOR over a real world enterprise data set and empirical results show the effectiveness of REACTOR . Categories and Subject Descriptors H33 [ Information Systems ] : Information Search and Retrieval General Terms Algorithms,Performance,Experimentation Keywords Relation extraction , relation tagging , enterprise data 1 .
INTRODUCTION
Relation Extraction ( RE ) is an important research area not only for information retrieval but also for Web mining and question answering . While most work on relation extraction has been focused on Web data , the amount of enterprise data has grown significantly during the past several years for all companies . These enterprise data contain numerous real world entities and these entities are connected by various types of relations . To make use of such rich information , it is desirable to build an entity relationship graph that can support efficient retrieval of entities and their relations . To achieve this goal , semantic relation extraction from enterprise data is an essential step .
However , the existing techniques on relation extraction cannot be applied directly to enterprise data due to the differences in the data characteristics : the enterprise data has much lower redundancy than Web data . Most existing techniques rely on the high redundancy nature of the Web data for an ample supply of related entities to achieve reasonable recall . The recall will fall dramatically when applying such techniques to the low redundancy enterprise data .
Copyright is held by the author/owner(s ) . WWW 2011 , March 28–April 1 , 2011 , Hyderabad , India . ACM 978 1 4503 0637 9/11/03 .
In this paper , we propose a novel unsupervised framework called REACTOR . It uses a statistical method in conjunction with classification and clustering techniques to extract semantic relations and can label the extracted relations with representative tags over enterprise data . Given an enterprise data set , REACTOR first adopts a statistical method to extract a set of representative entity pairs which contain both positive and negative examples for the classifier . Then we extract some features from the positive and negative examples to train the classifier which is in turn used to classify all the other entity pairs each of which appears in the same sentence as related or not . For each entity pair classified as related , a context vector consisting of the words formed from all its occurring sentences is generated , and a clustering algorithm is used to identify the semantic relations of entity pairs . Furthermore , to describe the relations for the entity pairs in each cluster , REACTOR employs a closed frequent sequence pattern mining algorithm to extract the representative tags . 2 . THE REACTOR FRAMEWORK
Given a text corpus , the goal of REACTOR is to extract all semantic relations between any two types of entities . We assume that entities of the two corresponding types in this corpus , Tm and Tn , are previously detected like many other relation extraction systems [ 1 ] . Figure 1 depicts the architecture of REACTOR , which has four modules including Seed Extractor , Classifier , Cluster , and Relation Tagging .
The Seed Extractor uses statistics to extract a set of representative entity pairs containing both positive and negative examples for the classifier . Specifically , the Seed Extractor computes the relatedness weight for each entity pair .ei , ejfi to assess the probability whether a relationship exists between these two entities as follows : weight(ei , ej ) = C(ei , ej ) log2
C(ei , ej )
C(ei)C(ej )
( 1 ) where C(ei , ej ) is the number of co occurrences of entities ei and ej , and C(ei ) , C(ej ) are the numbers of occurrences of entity ei , ej respectively in the corpus . Let pij be an entity pair .ei , ejfi which occurs within one sentence and P = {p11 , p12 , . . . , pij , . . .} be the set of all such entity pairs in the corpus . According to Formula 1 , we can calculate the relatedness weight wij for each entity pair pij which can tell us how strongly the entity pair pij is related . Then , the task of extracting positive seeds is to . ⊆ P , such that ∀pij ∈ extract a subset of k entity pairs P , we have wij ≥ wsv . On the contrary , P the task of extracting negative seeds is to extract a subset and ∀psv /∈ P
.
.
WWW 2011 – PosterMarch 28–April 1 , 2011 , Hyderabad , India121 Statistics ntity P air e i,e
E
< j>
S eed
Extractor
S eeds
R elated
Entity Pairs
C lassifier
C luster
C orpus
( c 1 , tag 1 1 , tag 1 2 , ) ( c 2 , tag 2 1 , tag 2 2 , )
( c k , tag k 1 , tag k 2 , )
C losed Frequent Sequences
R elation Tagging c 1 = ( p 1 1 , p 1 2 , , p 1 i , ) c 2 = ( p 2 1 , p 2 2 , , p 2 i , )
c k = ( p k 1 , p k 2 , , p k i , )
Figure 1 : The REACTOR Architecture
⊆ P , such that ∀pij ∈ P
and ∀psv /∈
of m entity pairs P P
, we have wij ≤ wsv . Then we use the seeds produced by Seed Extractor to train the classifier which is libsvm 1 used in the experiment . We define some domain independent features which can be used to capture the syntactic information and entity information for each sentence where the entity pair occurs . The features include : a ) The distance between the two entities ; b ) The type of the entity which appears first in the sentence ; c ) The part of speech tag sequences around the entities ; d ) The position and type of the other entities in the sentence . Then we use OpenNLP toolkits2 to annotate each sentence in the entire corpus with POS tags . Finally , each occurrence of the entity pair is presented to the trained classifier and the classifier labels each of them as related or unrelated .
After the classification , we get all related entity pairs . To extract the semantic relations , we assume that entity pairs occurring in the similar context likely have the same semantic relation and can be clustered into a group . We adopt a vector space model to represent the context of an entity pair . Before generating context vectors , we eliminate some nonessential phrases , such as stop words , prepositional phrases and modifiers . Meanwhile , we consider not only the bag of words between the entities but also those around the entities in the sentence within some distance . After generating the context vector for each entity pair , we use cosine similarity to measure the similarity between any two context vectors and then adopt the hierarchical clustering algorithm to further group the entity pairs . Finally , the entity pairs clustered into the same group are expected to have the same semantic relation .
To label the extracted relations , Relation Tagging module employs a closed frequent sequence mining algorithm to identify the closed frequent sequential patterns in all cooccurring sentences where the entity pairs of each cluster appear . In our work , we employ the BIDE algorithm to discover closed sequential patterns . Then we use these extracted patterns to label and describe the semantic relation held in each cluster . 3 . EXPERIMENTS
To evaluate the performance of REACTOR , we tested it on a large real world enterprise data set from HP in which 1http://wwwcsientuedutw/∼cjlin/libsvm/ 2http://opennlpsourceforgenet/
Table 1 : Evaluation results on the test data set
P
R
F
0.601 0.549 0.819 0.718 0.670 0.729
0.556 0.590 0.807 0.659 0.683 0.783
Domain
PEO
ORG PEO
PRO
Method Baseline
0.517 Ba Optimal 0.638 REACTOR 0.795 0.608 0.696 Ba Optimal REACTOR 0.846
Baseline there are over three million pages . We compared REACTOR with the clustering based method proposed in [ 1 ] . The usual metrics of Precision ( P ) , Recall ( R ) and F scores ( F ) on the clustering results were used to evaluate the performance of REACTOR in the same way as that in [ 1 ] . In the experiments , we considered the relations in two different domains . One is the PEOPLE ORGANIZATION ( PEOORG ) domain and another is the PEOPLE PRODUCT ( PEOPRO ) domain . To compare REACTOR with the baseline method and give a quantitative analysis , we randomly selected 500 entity pairs in PEO ORG domain and 250 entity pairs in PEO PRO domain respectively as the test data set . The baseline method needs three parameters including maximum context word length , the occurrence frequency threshold of entity pairs and the norm threshold for context vectors to filter the unreliable pairs . If we use the original setting of these thresholds introduced in [ 1 ] , all entity pairs in the test data set will be filtered out empirically and no entity pair is retained to start the clustering process , which also strongly reveals the low redundancy of the enterprise data and that the methods based on the high redundancy of Web corpus are not suitable to be applied to enterprise data set . Thereby , to compare REACTOR with the baseline method , we must change the threshold setting of the baseline method . The simplest way is to directly eliminate those thresholds and all entity pairs are retained for the clustering process which we refer to Baseline . And we also selected the optimal thresholds for the baseline method which can obtain the best F scores . This method is referred to Ba Optimal . The optimal thresholds are 10 in PEO ORG domain and 15 in PEO PRO domain for the maximum context word length , and 0 for both the occurrence frequency threshold and the norm threshold for both domains . Table 1 shows the experimental results of three different approaches in two different domains . It can be seen from the results that the overall Precision , Recall and F scores of REACTOR are significantly better than both Baseline and Ba Optimal in two different relation extraction tasks . 4 . ACKNOWLEDGMENTS
This work was supported in part by National Basic Research Program of China ( 973 Program ) under Grant No . 2011CB302206 , National Natural Science Foundation of China under grant No . 60833003 , an HP Labs Innovation Research Program award , the Okawa Foundation Research Grant , and the Program for New Century Excellent Talents in University under Grant No . NCET 07 0491 , State Education Ministry of China . 5 . REFERENCES [ 1 ] T . Hasegawa , S . Sekine , and R . Grishman . Discovering relations among named entities from large corpora . In Proceedings of ACL , pages 415–422 , 2004 .
WWW 2011 – PosterMarch 28–April 1 , 2011 , Hyderabad , India122
