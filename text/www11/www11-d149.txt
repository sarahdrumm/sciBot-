VoiSTV : Voice Enabled Social TV
Bernard Renger
AT&T Labs Research renger@researchattcom
Junlan Feng
AT&T Labs Research junlan@researchattcom
Harry Chang
AT&T Labs – Research harry_chang@researchattcom
Ovidiu Dan
Lehigh University ovd209@lehigh.edu Luciano Barbosa AT&T Labs – Research lbarbosa@researchattcom
ABSTRACT Until recently , the TV viewing experience has not been a very social activity compared to activities on the World Wide Web . In this work , we will present a Voice enabled Social TV system ( VoiSTV ) which allows users to interact , follow and monitor the main conversations related to a TV show while watching it . To make interaction easier , messages can be created using spoken language . In addition to that , VoiSTV also provides users with metadata information about TV shows such as trends , hot topics , popularity as well as aggregated sentiment of show related messages , all of which are valuable for TV program search and recommendation .
Categories and Subject Descriptors Interfaces and Presentation ] : User H52 Interfaces ; J.4 [ Computer Applications ] : Social and Behavioral Sciences
[ Information
General Terms Design , Human Factors
Keywords Social TV , social data mining , speech interface , Twitter , IPTV .
1 . INTRODUCTION We have seen the great success in the past three years of online social networks such as Facebook , Twitter , MySpace and LinkedIn . According to a Nielsen report [ 1 ] , social networks or blog sites are visited by three quarters of global consumers who go online . The phenomenal rise of social networks is also changing the way viewers perceive their TV viewing experience . Until recently , the TV viewing experience mainly centered around friends and family as opposed to the social media crowd on social media sites . However , with the burgeoning demand for Internetconnected TV sets , this lack of social experience during TV viewing to change . Cable providers , software is starting tweets companies , and hardware manufacturers are launching products with social TV functionalities , such as Verizon FiOS , Apple TV , Yahoo! TV , Google TV , Boxee , etc . Most of these systems allow users to read social media messages on the TV . However , the supported social functionalities are in its infancy . In this work , we will present a Voice enabled social TV system ( VoiSTV ) which allows users to interact , follow and monitor the main conversations ( tweets ) on Twitter1 related to a TV show while watching it . More specifically , VoiSTV first collects relevant for each show , by employing a novel bootstrapping algorithm based on machine learning to suggest query expansions and determine if a candidate tweet is truly relevant to a given TV show . Second , VoiSTV archives and mines the collected tweets in order to capture trending topics , detect sentiment on the tweets , as well as estimate the popularity of shows . The collected corpus along with the mined metadata is valuable for a number of TV applications such as TV program navigation , search , and recommendation . Third , VoiSTV presents its results in a graphical interface on the TV Set Top Box ( STB ) to enable Twitter access capabilities through the TV as well as to provide access to the archived corpus and metadata . From this interface , users can also post tweets using speech and send the recognized speech as a status update . The remainder of this paper is organized as follows . In Section 2 , we present the system architecture and describe the technology components and evaluations . Section 3 demonstrates how the system works using a few scenarios . We summarize the paper in Section 4 .
2 . VOISTV SYSTEM Figure 1 shows the architecture of the VoiSTV system . VoiSTV has three major function blocks : Data Manager , Data Mining Module and Application Manager . The Data Manager retrieves tweets relevant to TV shows and archives them . The challenge is to assure high quality data in terms of relevancy to the TV show . The Data Mining Module focuses on mining the archived data and estimates popularity , determines trends , and analyzes sentiment on tweets . The archived data and metadata generated from the Data Mining Module are then indexed . The created index is used by the Application Manager through search APIs . The Application Manager integrates the archived Twitter data , Twitter stream data , and the generated data from the Data Mining Module into an
1 Twitter is a micro blogging social networking Web site that has a large and rapidly growing user base [ 2 ] . interactive interface on the TV . It uses the Automatic Speech Recognition ( ASR ) technology to enable users to speak and post the tweets . The Data Manager and the Data Mining Module run in the backend independent of any user action on the STB , whereas real time interaction of the user with the STB . Below , we provide a more detailed description of each function block and the involved components . the Application Manager handles the
Figure 1 : The Architecture of the VoiSTV system
2.1 Data Manager The Data Manager takes the TV program sources as input and retrieves relevant tweets for each TV show through Twitter APIs by issuing queries . The core task of the Data Manager is to collect tweets relevant to each TV show with high precision and recall . Input : The messages on Twitter are in the form of tweets , which are short status updates ( of 140 characters or less ) . While the writing style and the lexicon of tweets are widely varied , much of them are similar to SMS text messages . Tweets are often highly ungrammatical , and filled with spelling errors . The 140 character limit also introduces shorthand notations and shortened URLs . There are a few special symbols allowed in tweets : hashtag ( eg , “ #obama ” , a topic tag provided by the user ) , username ( eg , @twUser ) , shortened URLs ( eg , “ http://bit.ly/9K4n9p ” ) , and the retweet symbol “ RT ” . There are over 50 million tweets per day . Challenges : There are a number of challenges in obtaining tweets relevant to a given TV show with high precision and recall . First , searching for tweets using only the show title as the keyword phrase might find many tweets not relevant to the TV show . For instance , some TV shows have titles with generic terms such as “ house ” and “ now ” . Using these keywords to search for relevant tweets will lead to a low precision collection . In fact , we found that a significant number of shows falling into this category . Second , there is an expression gap between languages used in tweets and authorized resources such as TV program databases such as IMDB . Users on Twitter refer to a TV show in various ways such as using a show related hashtag or nickname of the actor . Hence , we also face the challenge of low recall . This problem of low recall is more severe for shows with long titles , which most users on Twitter do not use because of the 140 character limit . The third and final challenge is the shortness and informality of tweets , which tends to make state of art text classification techniques fail because of the lack of information . This shortness of tweets coupled with spelling errors and nongrammatical writing styles make finding relevant tweets even more difficult . Crawler : As shown in Figure 1 , the goal of the crawler is to collect relevant tweets . We propose a bootstrapping approach using machine learning to collecting relevant tweets for a given TV show . We start with a small set of annotated data , where for a given show and a candidate message , we annotate the pair to be relevant or irrelevant . From this annotated data set , we train an initial classifier . The features are designed to capture the association between the TV program and the message . Second , using our initial classifier and a large dataset of unlabeled messages , we derive broader features for a second classifier to further improve precision . Additionally , some of our obtained features are also used to improve the recall of the system . We use nine features for the initial classifier , which capture if a tweet contains TV related terms such as episode , if the show title mentioned in the tweet is capitalized , as well as the text relevancy between the tweet and the Wikipedia page of the corresponding show . The second classifier extends the first one with five new features derived by running the first classifier on a large corpus of unlabeled messages . Details of these features will be published in a future technical paper . Evaluation : We annotated 3,000 tweets , which were randomly chosen from a tweet collection obtained using 3 show titles ( Fringe , Monk , Heroes ) as the queries . These tweets along with their associated show titles are provided to Amazon Mechanical Turk for annotation . After filtering , we kept 2,629 annotated tweets . We trained the classifiers on tweets associated with two shows and tested on the remaining one . We averaged the precisions over the three possible combinations . Precision is defined as the percentage of tweets classified as relevant that are annotated as relevant . We achieved 80.1 % precision for the first classifier and 84.3 % for the second classifier .
2.2 Data Mining Module The Data Mining Module indexes the collected tweets , analyzes them , and supports various types of searches . It provides aggregated statistics such as sentiment analysis , TV show popularity , word cloud , trending topics , and popular messages for each show to the TV application page hosted on the Application Manager and downloaded to the STB . Below , we elaborate on the key components . Index & Search : We have used the SOLR [ 7 ] full text search server to index the tweets . Along with standard metadata such as author , date , and text , we also store information on sentiment analysis , the ID of the shows mentioned in the message , and a normalized version of the text used for determining popular messages , as explained below . Our Search API can then query SOLR and return information to the STB . For instance , it returns relevant tweets for a given TV show , ranks the messages based on recency , provides the number of messages about a particular show for a given time window , returns tweets with positive and negative sentiment , generates a word cloud derived from the archived tweets from a given show , etc .
( non polar ) and
( polar ) and objective
Sentiment Analysis : We classified each tweet into one of three sentiment categories : Neutral , Positive , and Negative based on the approach described in [ 6 ] . We use a 2 step sentiment analysis method using noisy training data . We first classify tweets as subjective further distinguish polar tweets as positive and negative . We collected the training data from three popular Twitter sentiment detection Web sites . Our method achieved 81.9 % accuracy for subjectivity detection and 81.3 % for polarity detection ( positive vs . negative ) . Popular Messages : We developed a preliminary approach for estimating the popularity of Twitter messages . We define popularity to be the number of times we have seen the content of the message in the system ( usually multiple retweets of the same message ) . For each message we generate a normalized version by removing the word "RT" , removing mentions to usernames ( @user ) , and changing text to lowercase . We then generate a MD5 hash of this normalized version and store it along with the actual text [ 3 ] . Two messages with the same content will correspond to the same hash . SOLR is then able to return popular messages from a certain time window . For a given show , tweets are ranked in descending order based on the frequency of the hash . 2.3 Application Manager As Figure 1 shows , the Application Manager handles the real time interaction of the user with the system . It accepts input from a voice enabled remote control . Speech input from the remote control is converted into text using the AT&T Speech Mashup Portal [ 4 ] . In this section , we will describe the components inside the Application Manager including the STB , Speech Mashup Portal , and the Application Web Server . STB : The STB is the center point of the system from the user ’s point of view . Traditionally , the remote control is used for changing channels and navigating TV menus . In our system , users can navigate the TV menus , speak tweets by pressing a TALK button on the voice enabled remote , see the speech recognition output on the STB/TV , send tweets , reply to tweets and retweet tweets . The STB gets the speech recognition output by using the Speech Mashup Portal . Every time the user switches channels , the STB fetches the TV show information from the Electronic Program Guide ( EPG ) database , which contains schedule and show information for the upcoming 14 days , and uses the program name to retrieve tweets relevant to the current show through the Search APIs in the Data Mining Module . The STB displays the TV content ( high definition video ) and the relevant tweets on the same screen . Instead of tweets relevant to the current program , it can also show the users’ personal tweets on the same screen as the TV show . The STB also displays metadata information of TV shows provided by the Data Mining Module . Speech Mashup Portal : The STB streams the users’ speech to the Speech Mashup Portal which provides the speech recognition result . The underlying speech recognition engine is AT&T Watson [ 5 ] . The acoustic and language models of Watson were trained using SMS messages . The STB displays the recognition result and allows the user to confirm it before sending the tweet using the Twitter status update API .
Application Web Server : The role of the Application Web Server is to host the application web page that runs on the STB . Essentially all the capabilities described above about the STB are possible because of the Application Web Server . The Application Web Server also runs a web service to handle database requests to the EPG database for metadata for a given channel . This is needed in order to determine the show title currently playing on that channel .
3 . DEMONSTRATION This section will focus on what the user sees on the TV screen and how the user interacts with the TV and Twitter . The main menu options are Program Tweets , My Tweets , Program Trends , General Trends , and Send Tweets . The menu options are shown on the left and navigated by using the up and down arrows . Each menu option except the Send Tweets option has more options which can be reached by hitting the OK button . This reveals another level of menus with more options . The context window is to the right of the menu options . At the top level , the context window is the TV program being watched . As the user uses the arrow keys to move up or down , the bottom bar updates with relevant information . This section will focus on the Program Tweets , Send Tweets , and Program Trends options .
Figure 2 . Program Tweets 3.1 Option One : Program Tweets For the Program Tweets option , the tweets for the current program are shown in the bottom bar as shown in Figure 2 . Only one tweet is shown at a time . The user can see more tweets by using the right and left arrows . The left most tweet is the most recent tweet and the tweets are numbered so the user can keep track of which tweet is being displayed . As new tweets arrive for the current program being watched , the numbering will be updated appropriately while keeping the currently viewed tweet in the bottom bar . For example , if the user is viewing tweet 1 of 20 and a new one arrives , the numbering changes to 2 of 21 so that it is clear that a new one arrived and can be viewed by moving to the left using the left arrow key . If the user changes the channel , the video will change to the current program on the selected channel and the tweets in the bottom bar will be replaced with tweets relevant to the new program . If the user presses the OK button , more options will be shown for the Program Tweets selection . 3.2 Option Two : Send Tweets For the Send Tweets options , the bottom bar shows instructions on how to create a tweet using speech as shown in Figure 3 . The instructions indicate that the user should press the TALK button on the remote and speak the reply and then press the OK button to send the tweet reply . The speech result will appear in the bottom bar moments after speaking into the remote so the user has the option of confirming the speech result and can press the OK button to send the tweet reply if it is acceptable . Otherwise , the user can speak into the remote again to overwrite the last result .
Figure 3 . Send Tweet
3.3 Option Three : Program Trends As described above , the data mining backend is used to retrieve the most relevant program tweets . The Program Trends option gives the user access to much more information that is generated by the Data Mining component of our system . For example , the Summary option for Program Trends as shown in Figure 4 provides a chart showing the results of sentiment analysis ( negative , neutral , and positive ) , a word cloud containing words that occur most frequently in tweets about the current program , and a popularity chart that shows the number of tweets in the last week about the current program . The Top Tweets option shows the tweets about the current program that are retweeted the most . Recent tweets are the same tweets that were shown in the toplevel Program Tweets option . Finally , the Most Positive and Most Negative are the most positive and negative tweets about the show from the sentiment analysis .
4 . SUMMARY This paper describes VoiSTV , a Voice enabled Social TV system . It gives users access to online social media on the TV while watching TV . We discussed the challenges , described the key components and user interface for interacting with the system . We also evaluated our Data Manager components . Designing a study to evaluate the overall performance of VoiSTV is a challenging task and will be part of our future work .
Figure 4 . Program Trends Summary
5 . ACKNOWLEDGMENTS We would like to thank Mazin Gilbert , Behzad Shahraray , and Juergen Schroeter for their support and inspiring discussions on the ideas presented in this paper .
6 . REFERENCES [ 1 ] http://blognielsencom/nielsenwire/online_mobile/socialmedia accounts for 22 percent of time online/ [ 2 ] Haewoon Kwak , Changhyun Lee , Hosung Park , Sue Moon , ” What is Twitter , a social network or a news media ? ” , WW2010 , 2010 [ 3 ] Dobbertin , Hans , "The Status of MD5 After a Recent Attack" . CryptoBytes 2 ( 2 ) , 1996 [ 4 ] G . DiFabbrizio , T . Okken , and J . Wilpon , “ A Speech Mashup Framework for Multimodal Mobile Services , ” ICMI MLMI 2009 , Cambridge , MA , pp . 1 10 , November 2009 . [ 5 ] V . Goffin , C . Allauzen , E . Bocchieri , D . Hakkani Tür , A . Ljolje , S . Parthasarathy , M . Rahim , G . Riccardi , and M . Saraclar , “ The AT&T WATSON speech recognizer , ” IEEE International Conference on Acoustics , Speech and Signal Processing , 2005 . [ 6 ] L . Barbosa and J . Feng , “ Robust sentiment detection on Twitter from biased and noisy data , ” in Proceedings of the 23rd International Conference on Computational Linguistics ( COLING ) , 2010 . [ 7 ] D.Smiley , E.Rugh , “ Solr 1.4 Enterprise Search Server ” , ISBN10 : 1847195881 , 2009 [ 8 ] J . Rodriguez , L . Kuncheva , and C . Alonso . Rotation forest : A new classifier ensemble method . Pattern Analysis and Machine Intelligence , IEEE Transactions on , 28(10):1619–1630 , 2006 . [ 9 ] J . Quinlan . C4 . 5 : programs for machine learning . Morgan Kaufmann , 1993 .
