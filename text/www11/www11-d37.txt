Finding the Bias and Prestige of Nodes in Networks based on Trust Scores
Abhinav Mishra
Arnab Bhattacharya
Dept . of Computer Science and Engineering ,
Indian Institute of Technology , Kanpur ,
Dept . of Computer Science and Engineering ,
Indian Institute of Technology , Kanpur ,
India abhinavm@iitkacin
India arnabb@iitkacin
ABSTRACT Many real life graphs such as social networks and peer topeer networks capture the relationships among the nodes by using trust scores to label the edges . Important usage of such networks includes trust prediction , finding the most reliable or trusted node in a local subgraph , etc . For many of these applications , it is crucial to assess the prestige and bias of a node . The bias of a node denotes its propensity to trust/mistrust its neighbours and is closely related to truthfulness . If a node trusts all its neighbours , its recommendation of another node as trustworthy is less reliable . It is based on the idea that the recommendation of a highly biased node should weigh less . In this paper , we propose an algorithm to compute the bias and prestige of nodes in networks where the edge weight denotes the trust score . Unlike most other graph based algorithms , our method works even when the edge weights are not necessarily positive . The algorithm is iterative and runs in O(km ) time where k is the number of iterations and m is the total number of edges in the network . The algorithm exhibits several other desirable properties . It converges to a unique value very quickly . Also , the error in bias and prestige values at any particular iteration is bounded . Further , experiments show that our model conforms well to social theories such as the balance theory ( enemy of a friend is an enemy , etc )
Categories and Subject Descriptors H28 [ Database Applications ] : Data Mining
General Terms Algorithms , Design
Keywords Trust based networks , Bias , Prestige , Deserve , Social networks
1 .
INTRODUCTION
In online social networks such as Facebook ( wwwfacebook com ) , Youtube ( wwwyoutubecom ) , Twitter ( wwwtwitter com ) , etc . , people share different content such as messages , videos , songs , opinions , blogs , etc . In another important form of networks—peer to peer networks—files are shared .
Copyright is held by the International World Wide Web Conference Committee ( IW3C2 ) . Distribution of these papers is limited to classroom use , and personal use by others . WWW 2011 , March 28–April 1 , 2011 , Hyderabad , India . ACM 978 1 4503 0632 4/11/03 .
In both these cases , reputation of a peer matters ; otherwise a user may get exposed to objectionable content such as a virus . Thus , the trust that other users impart on a node is an important attribute of it . Slashdot ( wwwslashdotorg ) and Epinions ( wwwepinionscom ) are networks where explicit opinions of a user as trust and distrust are available . A network based on trust is quite different from other networks . An explicit link in a network such as Facebook , Youtube signifies that two nodes are close . However , in a trust based network , two nodes may be close and may be connected but the link may show distrust . More importantly , a neutral opinion in a trust based network is quite different from a no connection . Consider a simple example where node A has 1000 neutral opinions and 10 negative opinions about it and another node B has only 10 negaIt is intuitive that node A has a tive opinions about it . higher reputation . However , if the neutral opinion is modeled by the absence of an edge , the two nodes behave the same . This indicates that neutral opinion is not the same as a no connection . In other words , an edge with 0 weight is different from an edge that is absent . This poses new challenges for trust based networks as random walk based approaches [ 7 ] cannot be directly used .
Traditionally , techniques like HITS [ 10 ] and PageRank [ 14 ] give high rank to nodes with better connectivity . The situation changes dramatically in trust based networks as a highly disliked node may also be well connected but should have a low prestige . In a trust network , prestige of a node depends on the opinions of other nodes whereas trustworthiness of a node depends on how a node gives correct opinion about other nodes ( as against the opinion from other nodes in the network ) . This raises many interesting questions about the trust network . Is a node with higher prestige as trustworthy as another node ? In general , though , we expect the two attributes to be correlated .
In a rating system , such as IMDB ( wwwimdbcom ) , Slashdot ( wwwslashdotorg ) , Epinions ( wwwepinionscom ) , etc . , users rate an object . For example , a movie is an object in case of IMDB , and a user could be an object in case of networks such as Epinions and Slashdot . In the latter case , every user essentially rates other users and receive ratings from them . The prestige of a user is based on the opinion of other users , ie , opinion of other people in the form of inlinks a user gets . An opinion of an user about others is based on her ratings ( outlinks ) . Considering a user in isolation , we can say that her prestige depends on the quality of inlinks and truthfulness of a user who has rated her , and not
WWW 2011 – Session : Social Network AnalysisMarch 28–April 1 , 2011 , Hyderabad , India567 on quantity.1 The truthfulness , on the other hand , depends on the opinion she gives in the form of outlinks . We refer to truthfulness of a node as bias 2 and prestige of a node as deserve 3 . If a node is biased , then its opinion should not weigh significantly . Then , what another node deserves ( prestige ) relies more on nodes that are more truthful ( ie , have low bias ) . A node that gives only positive ratings irrespective of what other node deserves can be said to have a high bias . Similarly , a node receiving positive inlinks from highly biased nodes has a lower deserve value than a node receiving inlinks from truthful nodes .
We can observe that there is no direct relationship between bias and prestige of a node . For example , a node may receive all positive ratings ( has high deserve value ) and still gives an opinion about another node that differs from the opinions of all other nodes in the network .
In this paper , we present a model that computes the prestige and trustworthiness of nodes in a trust based network . It is based on the idea that the opinion of trustworthy nodes weigh more . We obtain the trustworthiness of a node by how well it computes the prestige of its neighbours . We show that our algorithm is fast ( O(km ) , where m is the number of edges in the network and k is the number of iterations ) , parameter free and converges to a unique solution . To the best of our knowledge , there is no other algorithm that accommodates both negative and positive links and is guaranteed to converge . We also bound the error which enables us to know the require number of iterations required to get the desired accuracy .
There might also be few special requirements in a trustnetwork such as high trustworthiness of special nodes [ 9 ] ( eg , celebrity profiles on Twitter , Facebook , etc. ) , resistant to malicious users where a user can try to disturb the network by giving wrong opinion [ 9 ] , etc . Further , there are different problems such as trust prediction [ 5 ] between two nodes who do not have any prior contact . Another similar problem is edge sign prediction [ 11 ] , where we try to predict whether there is a trust or distrust . We show that our algorithm fits in these problems . We also observe that the algorithm adheres well to social theories such as theory of balance ( “ enemy of an friend is a enemy ” , etc )
The paper is organized as follows . We present the related work in Section 2 . Section 3 describes the algorithm . In Section 4 , we present the proofs for convergence and errorbounds . We discuss various extensions of our method in Section 5 . Section 6 presents the experimental results before Section 7 concludes .
2 . RELATED WORK
Graph theoretic methods for ranking nodes in a network have gained popularity since the introduction of HITS [ 10 ] and PageRank [ 14 ] algorithms . Subsequently , a number of other methods have also been proposed . Most of these
1In random walk based techniques [ 7 ] , net quantity of inlinks matters as well . However , in a trust based network , we consider quality and truthfulness of an user as the main criteria . 2Actually , a node can have bias close to zero even if it is not fully truthful , but has given opposite opinions in both positive and negative manner ; we ignore such cases for ease of discussion . 3In the rest of the paper , we use the pair of terms bias and truthfulness , and deserve and prestige interchangeably . methods are usually a variant of eigenvector centrality measure [ 1 ] . For these , however , the edge weights needs to be non negative as Perron Frobenius [ 4 ] theorem relies on the non negativity . In a network , where an object can be rated based on explicit rating such as IMDB , Epinions , etc . , or where rating is derived as in the case of peer to peer networks , the non negativity can no longer be enforced . Moreover , by including negative weights , a convergence cannot be guaranteed as the matrix is not stochastic . The algorithm EigenTrust [ 9 , 15 ] removes negative entries by not considering negative ratings . Ranking has been done on trust based network as well while considering negative links , eg PageTrust [ 3 ] . However , convergence is not guaranteed as the matrix is not stochastic when negative links are included . It has been pointed out in [ 5 ] that by removing negative ratings one cannot distinguish between the no connection and distrust . It was also argued that shifting is not an answer either due to many reasons including the distortion of the semantics of zero score . The authors of [ 5 ] proposed an algorithm to compute trust/distrust between two objects . There have been studies on the social aspects of trust based networks . One important example is the balance theory [ 2 ] that considers relationships of type “ enemy of an enemy ” as a friend . Another popular theory is status theory [ 6 ] , where a positive link denotes higher status . These theories have been well evaluated in [ 11 , 12 ] .
3 . ALGORITHM TO COMPUTE BIAS AND
PRESTIGE OF A NODE
In this section , we first define the terms “ bias ” and “ prestige ” precisely before describing and analyzing an algorithm to compute them . We consider two types of trust based networks . In the first one , the users give both positive and negative scores ( not necessarily discrete values ) . Here , a more positive rating signifies a higher confidence , 0 is a neutral opinion , and negative rating signals a low confidence . Examples of such networks are Slashdot and Epinions . In the second type of networks , only non negative scores are given . In this case , a high positive score signifies more confidence and a low positive score less confidence . This type of rating is in practice for networks such as IMDB and Youtube . In both the models , it is not difficult to normalize the ratings , and keep them in the range of [ −1 , 1 ] for the former and [ 0 , 1 ] for the later . In our algorithm , a user can follow any model and can give rating either both positive and negative , or only non negative rating . From here on , we cover both such systems to rate under a generalized range of [ −1 , 1 ] . For non negative rating systems , rating would attain values ( normalized ) between 0 and 1 .
We model the above trust networks using graphs where the edge weight indicates the user opinion . If a user does not rate , then there is no edge . If a user gives neutral rating , it is denoted by the edge weight 0 . As discussed earlier , this is significantly different from a no connection , as the absence of an edge indicates that the user did not rate . Likewise for the later case , where user has to give only positive scores , the edge weights attain only non negative values . Here , an explicit 0 score implies very low confidence , but is again quite different from a no connection that signifies no rating . Formally , let G = {V , E} be a graph , where an edge eij ∈ E ( directed from node i to node j ) has weight wij ∈ [ −1 , 1 ] . We say that node i gives the trust score of wij to node j .
WWW 2011 – Session : Social Network AnalysisMarch 28–April 1 , 2011 , Hyderabad , India568 Figure 1 : Graph with edge weights indicating trust .
Let do(i ) denotes the set of all outgoing links from node i and likewise , di(i ) denotes the set of all incoming links to node i . In this work , we measure two attributes of a node : • Bias or Trustworthiness : This reflects the expected weight of an outgoing edge .
• Deserve or Prestige : This reflects the expected weight of an inlink from an unbiased node .
In the next section , we define these terms formally . 3.1 Definitions
The bias of a node is its propensity to trust/mistrust other nodes . Thus , the propensity or bias of a node can be measured by the difference between the rating a node provides to another node ( ie , the edge weight ) and the “ ground ” truth , ie , what the second node truly deserves ( this takes into account the trust by other nodes ) . The bias of a node i is given by
X
`
´ wij − deserve(j )
.
( 1 ) bias(i ) =
1
2|do(i)| j∈do(i )
Normalization is done to maintain the value of bias in the range of [ −1 , 1 ] . A node is truly truthful if it has a bias of 0 .
A node has a positive bias if it has a propensity to give positive outlinks , and a negative bias otherwise . A node giving a positive rating to other nodes that do not deserve such ratings values would attract a high bias . Using bias , the inclination of a node toward trusting/mistrusting is measured . It can also be used to understand the true nature of a node . If a highly biased node ( either positive or negative ) gives a rating , then such score should be given less importance . We can do so by reducing the effect of bias from each outlink a node gives . For example , if a node with a high positive bias gives a outlink with large positive weight , then the weight is reduced from this edge while calculating the rating of the other node . Similarly , negative weights from a negatively biased node are reduced . However , if a node has an edge whose weight has an opposite sign of that of the bias , we do not make any changes . Intuitively , when a person known to give a negative feedback in general , actually gives a positive feedback , then her opinion should weigh significantly . Therefore , if a node has a positive ( negative ) bias and has an edge with negative ( positive ) weight , then we do not make any change to the edge weight .
We introduce an auxiliary variable Xkj to measure the effect of bias of node k on its outgoing edge to node j per unit edge weight :
Xkj =
0
|bias(k)| if ( bias(k ) × wkj ) ≤ 0 otherwise
( 2 ) j
Node 1 Node 2 Node 3
Bias
Deserve
0.13 0.33
0.08 0.73
0.14 1.00
Table 1 : Final bias and deserve values for the nodes in the example graph in Figure 1 .
Iteration
Node 1 D B
Node 2 D B
Node 3 D B
0 1 2 3 4 5
1.00 0.10 0.12 0.13 0.13 0.13
1.00 0.00 0.30 0.33 0.33 0.33
1.00 0.25 0.01 0.08 0.08 0.08
1.00 0.80 0.75 0.73 0.73 0.73
1.00 0.25 0.16 0.15 0.14 0.14
1.00 0.00 0.75 1.00 1.00 1.00
Table 2 : Example showing the values of the graph ( Figure 1 ) after each iteration . ( B denotes bias and D denotes deserve . )
From the above expression , we can see that when bias and edge weight are of opposite signs , Xkj becomes zero and there is no effect of the bias . Otherwise , Xkj becomes the absolute value of the bias . There is an equivalent formulation of Xkj :
Xkj = max{0 , bias(k ) × sign(wkj)} .
( 3 )
We can now reduce the edge weight using the effect of fi kj is scaled from the old bias , ie , Xkj . The new weight w weight as follows : kj = wkj(1 − Xkj ) . fi w
( 4 )
If edge weight and bias are of opposite signs , the new weight remains the same , otherwise it is reduced .
The deserve value of a node represents the true trust a node deserves . We can use bias to define deserve . Deserve is the expected weight of an incoming link from an unbiased node . The deserve value depends on the quality of the inlinks and not on the quantity : deserve of a node with one quality inlink is equivalent to a node with many quality inlinks . This definition differs from the usual random walk based methods where the number of inlinks matter . For each inlink , we remove the effect of bias from the weight and then we compute the mean of all inlinks . The deserve of a node j is given by
X
` k∈di(j )
´ wkj(1 − Xkj )
.
( 5 ) deserve(j ) =
1|di(j)|
The deserve value lies in the range [ −1 , 1 ] .
An example network of three nodes is shown in Figure 1 . Note that , as in the case of real networks , not all nodes rank all other nodes . In fact , the graphs are only locally dense . Table 1 shows the final bias and deserve values of the nodes . The next section describes the algorithm to compute these values .
The above formulations of bias and deserve enable our model to handle the two main design problems in a trustbased network , namely , handling negative weights and distinguishing edge with zero weight ( ie , neutral opinion ) from a no connection ( ie , no edge ) .
WWW 2011 – Session : Social Network AnalysisMarch 28–April 1 , 2011 , Hyderabad , India569 3.2 Computing bias and deserve
In this section , we describe an algorithm to find the bias and deserve values of all nodes in the network . Note that the definitions as given in Eq ( 1 ) and Eq ( 5 ) are mutually recursive . Bias of a node depends on the deserve of its neighbors which in turn depends on the bias of their neighbors and so on . Thus , to solve this , we use the method of fixed point iteration .
We denote the bias and deserve of node i at iteration t by biast(i ) and deservet(i ) respectively . We use values obtained from iteration t to compute the values for iteration t + 1 . In subsequent sections , we prove that the system converges to an unique solution irrespective of the initial values . We also analyze error bounds that help in determining the number of iterations .
From the initial values of bias and deserve , deserve values at the next iteration are computed for all nodes . Then , using those values , the bias values are re estimated . Thus , deservet+1(i ) depends on biast(∗ ) ( actually , X t(∗) ) , which in turn is computed using deservet(∗ ) . Eq ( 1 ) and Eq ( 5 ) can be now re written as : deserve t+1
( j ) =
1|di(j)| t+1 bias
( i ) =
1
2|do(i)| j∈do(i )
X X k∈di(j )
` wkj(1 − X `
´ t kj ) wij − deserve t+1
( 6 )
´
( j )
( 7 )
Table 2 demonstrates how the values of bias and deserve are updated after each iteration for the example graph shown in Figure 1 . 3.3 Running time analysis The complexity of computing bias of a single node in a single iteration is given by O(|do||di| ) , where |d ∗| denotes the average degree of all nodes . Although this looks expensive , the amortized cost can be reduced substantially to O(m ) , where m is the total number of edges in the network .
At the start of a new iteration t , we first compute deservet(i ) for all nodes using Eq ( 6 ) . If m is the total number of edges , then computing deserve value for all nodes requires a total of O(m ) time . Using these deserve values , we then compute biast(i ) for all nodes using Eq ( 7 ) . This again requires an amortized total time of O(m ) . Thus , for k iterations , the total running time is O(km ) . Only if the graph is dense , the time grows to O(kn2 ) . However , for most trust based networks such as Slashdot , Epinions , IMDB , Youtube , etc . , the number of edges are more or less linear in the number of nodes . Thus , the algorithm runs in O(kn ) time .
4 . PROPERTIES OF THE ALGORITHM
In this section , we highlight certain desirable properties of the algorithm . We start with the proof that shows that the difference between the bias of a node at any iteration and its true bias is bounded , ie , the error at any iteration of the algorithm can be estimated up to a constant . Next , we show that this leads to a convergence of the algorithm to a unique value of bias . Since deserve of a node can be expressed in terms of biases of other nodes , this implies that the deserve values exhibit similar properties as well . 4.1 Error bounds
We first prove the error bound for bias . Suppose , b
( i ) is the true bias value of node i . Assuming that the value
∞ converges to an unique number ( proved in later sections ) , this is also the value of bias after infinite iterations . For any iteration t , the difference in the values is , therefore , |b ( j)− bt(j)| . Without loss of generality , among all nodes , assume that node i shows the largest deviation of the bias value , ie , |b ( j ) − bt(j)| . We will prove that ∞ this deviation is bounded by an inverse exponential function of the number of iterations :
( i ) − bt(i)| = maxj |b
∞
∞
∞
|b
( i ) − b t
( i)| ≤ 1 2t
The above claim will be proved using mathematical in duction and the following simple observation :
Observation 1 . The difference between the values of the effect of bias between any two iterations is at most 1 .
Proof . Consider the auxiliary variable X
∗ ∗∗ that measures the effect of bias . Since its value lies between 0 and 1 , the proof is immediate .
Theorem 1 . The maximum deviation of bias of a node at any iteration t from its true value is bounded by an inverse exponential function of t :
∞
|b
( i ) − b t
( i)| ≤ 1 2t .
( 8 )
Proof . We use mathematical induction for the proof .
The bias values can be expressed in the following way :
∞ b
( i ) = t+1 b
( i ) =
1
2|do(i)|
1
2|do(i)|
0 @wij − 1|di(j)| 0 @wij − 1|di(j)|
X j∈do(i )
X j∈do(i )
X k∈di(j )
X k∈di(j )
1 A 1 A
˛˛˛˛˛˛ ˛˛˛˛˛˛ wkj(1 − X
∞ kj ) wkj(1 − X t kj )
Basis : We first prove for t = 1 . |b
( i ) − b
( i)|
∞
1
˛˛˛˛˛˛ ˛˛˛˛˛˛ ˛˛˛˛˛˛
=
≤
1
2|do(i)|
1
2|do(i)|
≤
1
2|do(i)|
≤
1
2|do(i)|
=
=
1
2|do(i)| 1 2
.
X wkj(X
0 kj − X
∞ kj ) k∈di(j )
X k∈di(j )
|wkj|˛˛X
˛˛˛˛˛˛
1 A 1 ˛˛ A
∞ kj
0 kj − X 1 A
˛˛
∞ kj
0
˛˛X kj − X 1 A
[ ∵ |x.y| ≤ |x|.|y| ] X X j∈do(i ) j∈do(i )
X
X
0 @ 1|di(j)| 0 @ 1|di(j)| 0 @ 1|di(j)| [ ∵ |wkj| ≤ 1 ] 0 X @ 1|di(j)| „
X j∈do(i ) j∈do(i ) k∈di(j )
X k∈di(j )
1
«
[ using Observation 1 ] ( j)|
1|di(j)| .|d i j∈do(i )
Induction step : We assume the bound to be true for bt(i ) ,
WWW 2011 – Session : Social Network AnalysisMarch 28–April 1 , 2011 , Hyderabad , India570 ie , the tth iteration . In the ( t + 1)th iteration , |b
( i ) − b
∞ t+1
˛˛˛˛˛˛
( i)| = X
1
2|do(i)| j∈do(i )
≤
1
2|do(i)|
=
1
2|do(i)|
0 @ 1|di(j)| 0 X @ 1|di(j)| 0 @ 1|di(j)|
X j∈do(i ) j∈do(i )
X k∈di(j )
X
˛˛X
|T| k∈di(j )
X k∈di(j )
We now analyze the quantity
˛˛max{0 , b
T =
∞
( k ) × sign(wkj)} −max{0 , b wkj(X kj − X ∞
˛˛˛˛˛˛ t kj )
1 A 1 ˛˛ A t kj kj − X ∞ 1 A . ( k ) × sign(wkj)}˛˛
( 9 ) t
Consider the following cases :
∞
1 . b
( k ) and bt(k ) are of opposite sign : One of the maximum terms in T is 0 . Without loss of generality , assume |T| = bt(k)| . Since b ∞ ( k).bt(k ) < 0 , we have |b ( k)| + |bt(k)| . Therefore , T ≤ ( k ) − bt(k)| = |b ∞ ∞ |b ( k ) − bt(k)| . ( k)| + |bt(k)| ≤ |b ∞ ∞ ( k ) and bt(k ) are of same sign : Either |T| = 0 or ∞ |T| = |b ( i ) − bt(i)| . ∞
( k ) − bt(k)| . Therefore , |T| ≤ |b ∞
2 . b
From the above two facts , we can deduce that
Assume b1(i ) and b2(i ) to be the two bias values for node ( n)∗∗ for i . Denote the corresponding auxiliary variables by X bn(∗ ) . If δ(i ) =b 1(i)−b2(i ) is the difference between the two values , let M = maxi |δ(i)| be the maximum absolute value of difference for any node . The following theorem shows that M = 0 .
Theorem 2 . The difference between the two bias values of a node is zero , ie , the node has a unique bias .
Proof . Without loss of generality , assume that node p displays the maximum difference in bias . Thus , the maximum difference M is : M = |δ(p)|
˛˛˛˛˛˛
=
≤
1
2|do(p)|
1
2|do(p)|
X j∈do(p )
X
0 @ 1|di(j)| 0 @ 1|di(j)| j∈do(p ) [ ∵ |x.y| ≤ |x|.|y| ]
X k∈di(j )
X k∈di(j )
“
( 2 ) kj − X
( 1 ) kj
X wkj
|wkj||X
( 2 ) kj − X
( 1 ) kj |
˛˛˛˛˛˛
” 1 A 1 A
( 11 )
We now analyze the quantity K = |X kj − X kj|
2
1
= | max{0 , b1(k ) × sign(wkj)} −max{0 , b 2(k ) × sign(wkj)}|
Consider the following cases :
[ induction assumption ]
1 . b2(k).b1(k ) > 0 , b1(k).wkj < 0 and b2(k).wkj < 0 :
0 @ 1|di(j)|
1 A
1 2t
X k∈di(j )
Here , K = 0 .
2 . b2(k).b1(k ) > 0 , b1(k).wkj > 0 and b2(k).wkj > 0 : Here , K = |b1(k)− b2(k)| ≤ M ( as M is the maximum difference ) .
X j∈do(i )
|T| ≤ |b ∞
( i ) − b t
( i)| <
1 2t .
Therefore , continuing from Eq ( 9 ) ,
∞
|b
( i ) − b t+1
( i)| ≤
=
1
2|do(i)| 1 2t+1 .
Thus , the error is bounded by an inverse exponential function of t . 4.2 Proof of convergence
Using the above error bounds , we now show that the value of bias of a node converges . If b is the true value of bias , then we need to show that after a particular number of iterations c , the value of bias assigned by our algorithm is as close to b as desired , ie , for some → 0 . Using Eq ( 8 ) in Theorem 1 , we can set c > log2
.
( 10 )
Other iterative algorithms such as SimRank [ 8 , 13 ] also exhibits similar convergence and error bounding properties . 4.3 Proof of uniqueness
In this section , we show that the bias values obtained by the nodes at the end of the algorithm are unique . In other words , equation for bias has an unique solution . We prove the above claim using “ proof by contradiction ” . If the equation for bias does not have an unique solution , then we can expect at least two different values of bias for a node .
|b − b c
( i)| ≤ « „
1
3 . b2(k).b1(k ) < 0 : Without loss of generality , assume K = |b1(k)| . Also , |b1(k ) − b2(k)| = |b1(k)| + |b2(k)| . Together , we have M ≥ |b1(k ) − b2(k)| = |b1(k)| + |b2(k)| ≥K .
Therefore , it is always the case that K ≤ M . Using this in Eq ( 11 ) ,
0 @ 1|di(j)| 0 @ 1|di(j)| 0 @ 1|di(j)|
X j∈do(p )
X j∈do(p )
X j∈do(p )
X k∈di(j )
X k∈di(j )
X k∈di(j )
1 A 1 A
|wkj|K
|wkj|M 1 A
M
M =
1
2|do(p)|
≤
≤
=
1
2|do(p)|
1
2|do(p)|
M 2
.
The above inequality is possible if and only if M = 0 ( remember that M must be non negative ) . Hence , the bias of each node converges to a unique value .
5 . EXTENSIONS
In this section , we discuss some extensions of the algorithm . This includes handling special requirements and applications .
WWW 2011 – Session : Social Network AnalysisMarch 28–April 1 , 2011 , Hyderabad , India571 5.1 Ranking
Ranking a node in a graph is an important problem and has attracted a wide attention since the introduction of HITS [ 10 ] and PageRank [ 14 ] . Most of these ranking techniques are variant of the eigenvector centrality measure [ 1 ] . The eigenvector centrality measure relies on the computation of principal eigenvectors based on certain features of the node , eg , presence/absence of an edge , random walk probability , etc . The measure is grounded on the direct implication of the Perron Frobenius theorem [ 4 ] which depends on the fact that the matrix is non negative . However , by introducing negative edges , we can not use techniques that uses PerronFrobenius theorem .
As we have already seen , deserve provides a natural answer to this question . It is based on the principle that a node receiving positive ratings from unbiased or negatively biased nodes can be trusted more than the node receiving positive links from biased ( positive ) nodes . Thus , the deserve value of a node can be directly used for ranking . 5.2 Apriori notion of trust
In many networks , it is not uncommon to have few trusted nodes [ 9 ] . For example , in a peer to peer network , there may be a few trusted peers , such as “ verified accounts ” on Twitter ( wwwtwittercom ) , “ official groups ” on LinkedIn ( wwwlinkedincom ) , etc . Here , we want to have deserve as 1 or close to 1 for such nodes . At the same time , we may want to mark untrustworthy nodes with deserve value close to −1 . Formally , we want to assign deserve value between −1 and +1 to a particular set of nodes that are chosen apriori , but it should be done automatically and the network should not influence this rating significantly .
This can be accommodated easily in our model in the following way . Assume that a large number of hypothetical nodes ( around O(n2 ) where n is the total number of nodes ) are present . We refer this set of nodes as the trustset . We construct a clique out of it such that all the nodes in the trustset are connected to each other with a weight of +1 . This ensures that the bias of nodes in trustset is 0 . Now , we connect each node of this trustset to nodes for which we want to fix the deserve value . The weight of such an edge should be the desired deserve value . Due to the large size of the trustset , the deserve value of the apriori chosen nodes will get sufficiently close to the edge weights assigned to them . The computation is simple in the sense that the existing algorithm can be used without any modification . Using the symmetry of the nodes in the trustset , the bias and deserve values need to be calculated only for a single additional node . 5.3 Trust propagation
Trust propagation is another important problem in a trustbased network . In trust/mistrust propagation , we compute the trust score between two nodes that may not be connected directly . It was proposed in [ 5 ] to separate trust and mistrust matrix and then perform operations on them to obtain the transitive trust between two nodes . We observe that our model fits naturally in this framework . We can remove the bias from each link , redefine these matrices and continue with the rest of the operations as proposed in [ 5 ] . 5.4 Link classification
Another related problem is that of link classification where
Dataset Nodes Edges
Number of weakly connected components
Number of strongly connected components
Slashdot Epinions 131828 841372
82140 549202
1
5816
53599
88609
Table 3 : Parameters of the datasets . we try to predict the label of a directed link between two nodes to be either positive or negative . Machine learning techniques were proposed where various features based on degree of the vertex ( both in and out for positive and negative links ) and one step neighborhood properties were used for classification [ 11 ] . We can create additional features by removing bias from each edge . Similarly , we can remove bias while constructing features based on one step neighborhood properties . Additionally , we can add deserve of a node whose link is to be classified as another feature .
5.5 Effect of adversarial nodes
In any network , a very important issue is that of adversarial or malicious nodes . In a trust based network , for example , an adversarial node can maintain its bias artificially at 0 , even though it is not truthful . For example , it can rate nodes that deserve high positive values negatively and nodes that deserve high negative values positively , then it is possible that the bias which reflects the expected weight of an outgoing edge may come close to 0 . Such behavior cannot be directly tackled by our model .
Instead of bias , however , we can capture the variance that reflects the deviation of a node with respect to the network using higher order functions . We expect an adversarial node with bias artificially maintained at 0 to have a high variance .
X j∈do(i ) variance(i ) =
1|do(i)|
( deserve(j ) − wij )
2
A more sophisticated form of attack can be from a colluding group where nodes in the group give good ratings to each other and bad to rest . Under such conditions , it is possible for these nodes to keep their biases artificially close to zero and at the same time maintain a high deserve value . Once more , our base model cannot handle this attack and new strategies need to be developed for such attacks .
6 . EXPERIMENTS
In this section , we describe in detail the different experiments done on real trust based networks using our measures of bias and deserve .
6.1 Datasets
We used two real datasets , Epinions and Slashdot , for performing the experiments . The datasets are available from the Stanford Large Network Dataset Collection ( SNAP , http : //snapstanfordedu ) Table 3 shows the various statistics about the datasets . The Slashdot dataset is quite well connected while the Epinions dataset is not so with lots of
WWW 2011 – Session : Social Network AnalysisMarch 28–April 1 , 2011 , Hyderabad , India572 ( a ) Distribution of indegree mean for Slashdot .
( b ) Distribution of deserve for Slashdot .
( c ) Distribution of indegree mean for Epinions .
( d ) Distribution of deserve for Epinions .
Figure 2 : Comparison of indegree mean and deserve values . weakly connected components.4 Many of the weakly connected components in the Epinions dataset are very small . In a small graph , we can expect a high or low deserve value of a node , while the bias may still be zero . For example , consider a pair of nodes with just one directed edge . It is easy to see that the bias of one node will be zero and for the other node , it is undefined . Similarly , the deserve of one node will be the edge weight and for the other node , it is again undefined . While random walk based techniques will give low scores to nodes in such components due to their connectivity , in our model , they may get high deserve value based on their inlinks . However , in general , bias and deserve values do not make much sense if the graph is very small .
6.2 Distribution of bias and deserve
The first set of experiments measure the distribution of bias and deserve values of the nodes . The distribution of deserve values are compared against that of the indegree mean . The indegree mean for a node is defined as the average weight of incoming links . Figure 2 shows the histograms of the indegree mean and deserve value for both the datasets . In the datasets , the number of nodes with indegree mean 1 is very high ; the count of nodes with indegree mean −1 is also significant in number . In both the datasets , count of nodes with indegree mean as 1 is very high . This is pri
4A weakly connected component is a subgraph , where by replacing every directed edge with an undirected one , a path is obtained between every pair of vertices . marily because more than 80 % of the edges have positive weight .
However , the distribution of deserve is more smooth due to the removal of the effect of bias , especially for Slashdot . For Epinions , the distribution is not as smooth because of the presence of too many disconnected components of small size . In such small sized graphs , as previously discussed , if the edge weight is −1 or 1 , the deserve values become close to that as well .
Figure 3 shows the distribution of bias values . It can be observed that the distribution is mostly concentrated around 0 and is positively skewed . This indicates that a significant fraction of the edges have positive weights . The bias values have little correlation with the mean of the outgoing edge weights .
6.3 Comparison of bias versus deserve
In this section , we see the effect of bias versus deserve . Typically , we expect a node with high prestige to be more trustworthy , ie , have low bias . In case a node receives many positive inlinks but has outlinks that do not conform well with the opinion of other nodes , then we say that node has a high deserve score but has high bias .
In Figure 4 , we plotted the histogram of deserve versus bias . We divided the bias into many bins of equal sizes , and then we computed mean of deserve lying in that bin . Here , we consider only those nodes that have both deserve and bias values ( ie , having both incoming and outgoing links ) . In Figure 4(a ) , we can observe that nodes whose bias is
WWW 2011 – Session : Social Network AnalysisMarch 28–April 1 , 2011 , Hyderabad , India573 ( a ) Slashdot .
( a ) Epinions dataset .
( b ) Epinions .
( b ) Slashdot dataset .
Figure 3 : Distribution of bias values .
Figure 4 : Comparison of bias and deserve values . close to zero have high deserve value , showing the strong relationship between the bias and prestige . However in Figure 4(b ) , nodes that have high bias ( usually gives more positive links ) also have high deserve value . It shows that a node giving positive ratings is respected as well . 6.4 Comparison of deserve with ranking
The next set of experiments compare the ranking of nodes using the deserve values against that produced by the popular ranking algorithms such as PageRank [ 14 ] and HITS [ 10 ] . Since HITS and PageRank cannot handle negative weights , we removed the edges with negative weights and then conducted the experiments . The caveat , of course , is the inability of HITS and PageRank to properly rank nodes having significant number of negatively weighted links .
Figure 5 shows the comparison . Note that we have scaled the HITS and PageRank score by multiplying with 1000 . One common trend we observe is that nodes with less prestige have low HITS and PageRank score , and those with high deserve have high score . This shows that the ranking determined by the deserve values conform to the perception that more popular nodes have more prestige .
However , towards the end ( when deserve is also almost equal to 1 ) , there is a drop in the scores . This is partly due to our model . Even if a node has few connections but has a quality inlink , it will attract high prestige . The same is not true for the other two algorithms . Moreover , the two datasets have large number of strongly connected components and most of them are very small in size . The nodes in these small components have high prestige , but due to their small sizes , they have low score .
6.5 Analysis of error and convergence
The next set of experiments analyze the properties of the algorithm in terms of error and convergence . We benchmark two kinds of errors for each of bias and deserve values .
Let f ( t)(i ) denote the value of a node i ( can be either deserve or bias ) at iteration t . The first kind of error is the maximum error for any node , ie , it captures the worst case scenario : error(t ) = max i
( ∞ )
( i ) − f
( t )
( i)|
|f X i∈V
The second kind of error is the mean error over all nodes : error(t ) =
1|V |
|f
∞
( i ) − f
( t )
( i)| where V denotes the set of all nodes .
Figure 6 shows how the error decreases for both bias and deserve for the two datasets . The figures are plotted only till 9 iterations as the value essentially converges after that . The plot also confirms the fact that the error decreases exponentially , as analyzed in Section 42 6.6 Connection to balance theory
The final experiment shows how our model conforms with a well established social theory—balance theory . In balance theory , four relationships are deduced : ( i ) “ friend of a friend is a friend ” , ( ii ) “ friend of an enemy is an enemy ” , ( iii ) “ enemy of a friend is an enemy ” and ( iv ) “ enemy of an enemy is a friend ” . Interested readers are referred to [ 2 , 6 , 11 , 12 ] for a more detailed discussion on status and balance theory with respect to social networks .
WWW 2011 – Session : Social Network AnalysisMarch 28–April 1 , 2011 , Hyderabad , India574 ( a ) HITS authority scores for Epinions dataset .
( b ) HITS authority scores for Slashdot dataset .
( c ) PageRank scores for Epinions dataset .
( d ) PageRank scores for Slashdot dataset .
Figure 5 : Comparison of HITS and PageRank with deserve .
We consider an edge with a positive weight to represent friendship and similarly , an edge with negative weight to show animosity . To measure the conformity quantitatively , we utilize the concept of transitive trust [ 5 ] . It uses the four transitive relationships from the balance theory . For example , if i is a friend of j , and j is friend with k , then we expect i to be a friend of k . A direct connection from node i to node k is given by wik . For our experiments , this direct edge acts as the “ ground truth ” . We compute transitive trust for each of the four relationships of the form i → j → k given above for which a directed edge i → k exists . The weight of transitive trust from i to node k through node j is given by wijwjk . If these two weights are close , then transitive trust matches with direct connection , and we say that the network adheres well with the balance theory . Let S be the set of all occurrences of the form i → j → k where the direct edge i → k exists . We compute the error using the following quadratic function :
γ =
1 4|S|
{i,j,k}∈S
X
( wijwjk − wik )
2
.
Here , the number 4 in the denominator acts as a normalizing constant .
In this experiment , we measure such adherence to the balance theory . Initially , we compute the conformity of the graph using the above equation on the original network . Then , we remove the bias from each edge using Eq ( 2 ) , and re compute the error .
Table 4 shows the errors for both the datasets . Here , γo denotes the error for the original graph and γb denotes that
Relationship friend friend friend friend enemy enemy enemy friend enemy enemy enemy friend
Epinions γb γo 0.01 0.01 0.36 0.53 0.31 0.40 0.60 0.23
Slashdot γb γo 0.02 0.02 0.36 0.59 0.24 0.32 0.45 0.19
Table 4 : Error of conformity with balance theory . after removing the bias . Removing the bias always decreases the error except in the case of the relationship of the form “ friend of a friend is a friend ” where the error is negligible to start with . Thus , it can be concluded that capturing the bias of a node and taking action to remove it improves the conformity of the network with the balance theory .
7 . CONCLUSIONS
For many applications involving trust based networks , it is crucial to assess the prestige or bias of a node . Whereas bias denotes the propensity of a node to trust/mistrust its neighbours , prestige represents the true trust a node deserves . In this paper , we have proposed an algorithm to compute the bias and prestige of nodes in networks where the edge weight denotes the trust score . Unlike most other graph based algorithms , our method works even the edge weights are not necessarily positive . The algorithm exhibits it is efficient ( O(km ) running several desirable properties : time , where k is the number of iterations and m is the total number of edges in the network ) , the bias and prestige
WWW 2011 – Session : Social Network AnalysisMarch 28–April 1 , 2011 , Hyderabad , India575 ( a ) Bias for Epinions dataset .
( b ) Bias for Slashdot dataset .
( c ) Deserve for Epinions dataset .
( d ) Deserve for Slashdot dataset .
Figure 6 : Exponentially decreasing errors . values converge fast to unique values , and the error at any iteration is bounded . Experiments showed that our model conforms well to other graph ranking algorithms and social theories such as the balance theory . The algorithm , however , is prone to adversarial nodes and colluding groups . In future , we aim to tackle these and other forms of attacks . Also , the applicability of our method in a distributed setup will be explored in detail .
Acknowledgments : We thank the anonymous reviewers for their valuable comments that helped in improving the paper immensely . We also thank Praveen Reddy , Pavan Reddy , and Sumeet Khurana for stimulating discussions and incisive inputs .
8 . REFERENCES
[ 1 ] P . Bonacich . Factoring and weighting approaches to status scores and clique identification . J . Mathematical Sociology , 2:113–120 , 1972 .
[ 2 ] D . Cartwright and F . Harary . Structural balance : A generalization of Heider ’s theory . Psychological Review , 63:277–293 , 1956 .
[ 3 ] C . de Kerchove and P . V . Dooren . The PageTrust algorithm : How to rank web pages when negative links are allowed ? In SDM , pages 346–352 , 2008 .
[ 4 ] G . Golub and C . F . V . Loan . Matrix Computations .
Johns Hopkins University Press , 1996 .
[ 5 ] R . V . Guha , R . Kumar , P . Raghavan , and
A . Tomkins . Propagation of trust and distrust . In WWW , pages 403–412 , 2004 .
[ 6 ] F . Heider . Attitudes and Cognitive Organization . J .
Psychology , 21:107–112 , 1946 .
[ 7 ] B . D . Hughes . Random Walks and Random
Environments . Oxford University Press , 1996 . [ 8 ] G . Jeh and J . Widom . Simrank : A measure of structural context similarity . In KDD , pages 538–543 , 2002 .
[ 9 ] S . D . Kamvar , M . T . Schlosser , and H . Garcia Molina . The Eigentrust algorithm for reputation management in P2P networks . In WWW , pages 640–651 , 2003 .
[ 10 ] J . M . Kleinberg . Authoritative sources in a hyperlinked environment . J . ACM , 46(5):604–632 , 1999 .
[ 11 ] J . Leskovec , D . P . Huttenlocher , and J . M . Kleinberg . Predicting positive and negative links in online social networks . In WWW , pages 641–650 , 2010 .
[ 12 ] J . Leskovec , D . P . Huttenlocher , and J . M . Kleinberg .
Signed networks in social media . In CHI , pages 1361–1370 , 2010 .
[ 13 ] D . Lizorkin , P . Velikhov , M . Grinev , and D . Turdakov .
Accuracy estimate and optimization techniques for SimRank computation . Proc . VLDB Endowment , 1(1):422–433 , 2008 .
[ 14 ] L . Page , S . Brin , R . Motwani , and T . Winograd . The
PageRank citation ranking : Bringing order to the web . Technical report , Stanford Digital Library Technologies Project , 1998 .
[ 15 ] M . Richardson , R . Agrawal , and P . Domingos . Trust management for the semantic web . In ISWC , pages 351–368 , 2003 .
WWW 2011 – Session : Social Network AnalysisMarch 28–April 1 , 2011 , Hyderabad , India576
