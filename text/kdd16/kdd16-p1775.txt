User Identity Linkage by Latent User Space Modelling
Xin Mu⋆ , Feida Zhu♯ , Ee Peng Lim♯ , Jing Xiao† , Jianzong Wang† , Zhi Hua Zhou⋆
⋆National Key Laboratory for Novel Software Technology , Nanjing University , Nanjing 210023 , China
♯School of Information Systems , Singapore Management University , Singapore , 178902
†Ping An Technology ( Shenzhen ) Co.,Ltd , China
{mux , zhouzh}@lamdanjueducn , {fdzhu , eplim}@smuedusg ,
{xiaojing661 , wangjianzong347}@pingancomcn
ABSTRACT User identity linkage across social platforms is an important problem of great research challenge and practical value . In real applications , the task often assumes an extra degree of difficulty by requiring linkage across multiple platforms . While pair wise user linkage between two platforms , which has been the focus of most existing solutions , provides reasonably convincing linkage , the result depends by nature on the order of platform pairs in execution with no theoretical guarantee on its stability . In this paper , we explore a new concept of “ Latent User Space ” to more naturally model the relationship between the underlying real users and their observed projections onto the varied social platforms , such that the more similar the real users , the closer their profiles in the latent user space . We propose two effective algorithms , a batch model(ULink ) and an online model(ULink On ) , based on latent user space modelling . Two simple yet effective optimization methods are used for optimizing objective function : the first one based on the constrained concave convex procedure(CCCP ) and the second on accelerated proximal gradient . To our best knowledge , this is the first work to propose a unified framework to address the following two important aspects of the multi platform user identity linkage problem — ( I ) the platform multiplicity and ( II ) online data generation . We present experimental evaluations on real world data sets for not only traditional pairwiseplatform linkage but also multi platform linkage . The results demonstrate the superiority of our proposed method over the state of the art ones .
Keywords User identity linkage ; Latent User Space ; Social network
1 .
INTRODUCTION
The problem of User Identity Linkage ( UIL ) , which aims to identify the accounts of the same user across different social platforms , has recently been attracting an increasing amount of attention and effort due to both the significant research challenges and the immense practical value of the problem . For example , in [ 11 ] , Liu et al pointed out completeness , consistency and continuity as three major benefits for user profiling from successful user identity linkage , an essential task in today ’s social data enabled business intelligence . In industry , human centric data fusion from various sources has become a key component for most leading data intelligence companies such as Palantir1 . In a nutshell , the ability of integrating data across various platforms down to the granularity of individuals lies at the very core of the data driven analytical paradigm for business and consumer insight .
However , the methodologies and approaches adopted by the existing solutions have so far fallen short of successfully addressing the following two essential characteristics of this problem .
• Platform Multiplicity : The power of user identity linkage lies in piecing up information from multiple sources , typically more than two . However , most existing solutions have focused on pair wise user linkage between two platforms , ie , identifying the two accounts IDA and IDB for the same user on two platforms A and B respectively . For three or more platforms , existing methods would have to first match users between pairs of platforms and then integrate the matching results to derive the final user linkage across all platforms . Since different orders of such pair wise platform linkage , as demonstrated by our experiments in Section 6 , would lead to different final linkage results , it therefore raises serious concern for the result stability , especially when no theoretical bound has been known as yet .
• Online Data Generation : The existing approaches examine a snapshot of two platforms at a certain time point and compute the best possible linkage result with the current data . On the other hand , users generate content continually on social platforms . An intelligent linkage algorithm should be able to take advantage of the incremental data updates to continuously improve the linkage quality with much lower computational cost than re computing everything again from scratch at every data update .
To better address the two above mentioned challenges , we introduce in this paper a new concept Latent User Space , to more naturally model the reality . The main idea is to take advantage of the fact that , after all , underlying all these
1https://wwwpalantircom/
1775 different accounts that we try to link , there does exist this real user as a natural person , if these accounts indeed belong to the same user . We call each such an underlying user a “ user in itself ” , borrowing inspiration rooted in western Philosophy 2 . Every user in itself corresponds to a point in the latent user space . If a real user has accounts on multiple social platforms , each account is deemed simply as a projection of the underlying “ user in itself ” , which we may call it the “ user as observed ” . More specifically , all that are observed from the “ user as observed ” on a social platform , ie , profile , behaviour data , contents , etc . , are the projection of the “ user in itself ” constrained by the features and structures provided by the platform .
It follows from this model that when we project data from different platforms back to this space , the data points of the same user should be close to each other ( ideally , they should be projected back to a single data point ) . In essence , the more different the two users , the greater the distance between their data points in the latent user space .
Figure 1 gives an illustration with results on real data . We show four real users each with corresponding accounts on two popular Chinese social platforms , Renren and Weibo , denoted as ui and vi , 1 ≤ i ≤ 4 ( user profile images are blurred for privacy concerns ) . When their accounts from the two platforms are projected back to the underlying latent user space , it is clear that accounts belonging to the same user would project back to data points that are much closer to each other than data points from accounts belonging to different users ( the values along the edges denote the distances between data points in the latent user space , eg , the distance between u1 and v1 is 009 ) The details of distance calculation in the latent user space are given in Section 4 .
An important feature of our work is that , compared with previous work on UIL problem , our proposed Latent User Space frees the model from focusing on either the design of distance rules or building models depending on specific data forms , but rather on examining the intrinsic structure of user . While latent space has been introduced for analyzing dynamic social networks [ 19 ] . to our best knowledge , our work is the first to apply the latent user space for UIL problem across multiple social platforms .
Based on the Latent User Space concept , we propose ULink , a multi platform linking user identity framework based on modeling latent user space , and ULink On , an online framework for the same task . In ULink framework , we build the Latent User Space through projection matrix , and address this problem by jointly optimizing objective function with matching pair information , non matching pair information and intra platform relation constraints across different platforms . Inspired by Marginal Structured SVM , two efficient methods based on the concave convex procedure ( CCP ) and accelerated proximal gradient(APG ) are applied for solving the optimization problem . We further propose an online learning framework(ULink On ) by considering constrain of batch model . We conduct empirical studies on real social network data to show the effectiveness and efficiency of our approach . u
1 u
2 u
3 u
4 v
1 v
2 v
3 v
4
( a ) u
2
0.15 v
2
0.41
0.40
0.48
0.80
0.12 u
3
0.42
0.65
0.69
0.37 v
1
0.09 u 1
( b ) v
3 u
4
0.17 v
4
0.76
0.63
0.58
0.60
Latent User Space
Figure 1 : An illustration of latent user space . ( a ) Four users in Renren and Weibo data . ( b ) Latent user space
We summarize our key contributions as follows :
• We propose a new model for the multi platform user identity linkage problem based on a new concept of Latent User Space , which more naturally models the relationship among the underlying real user and the various accounts belonging to her on different platforms . It goes beyond pair wise platform user linkage treating user attributes ( user features ) as main direction to focusing on the intrinsic structure of the underlying user , which is particularly powerful in linkage settings with multiple platforms .
• To take advantage of the continual online generation of user data on social platforms , we extend our batch framework ULink to propose an online version , called ULink On , which is able to take advantage of the incremental data updates to continually improve the linkage quality . We also develop efficient optimization for ULink On .
• We conduct experiments on real world data sets to comprehensively evaluate the performance of our proposed algorithms . For both pairwise platform and multi platform settings , our algorithm have consistently outperformed the state of the art existing methods with greater stability . We provide discussions for some important aspects of our framework for future exploration .
2A notion in the Philosophy of Immanuel Kant , a “ thingin itself ” is what a thing really is as different from how it appears to us — an object as it would appear to us if we did not have to approach it under the conditions of space and time .
The rest of this paper is organised as follows : Section 2 examines the related work . We introduce the proposed framework in Section 4 and Section 5 . The experimental evaluation is detailed in Section 6 . We also give a discussion in Section 7 and conclude the paper in Section 8 .
1776 2 . RELATED WORK
A closely related problem long studied by database community is that of Record Linkage , which aims to find records in a data set across different data sources that refer to the same entity . The concept of modern record linkage originated from geneticist Howard Newcombe , who introduced odds ratios of frequencies and the decision rules for delineating matches and non matches[15 , 16 ] . A large number of algorithms , both supervised and unsupervised , have been developed in recent years to solve the record linkage problem , which can be grouped mainly into two types : deterministic linkage and probabilistic linkage . The former approach , which is often rule based and strives for exact one to one matching of user name and other user attributes[17 , 5 ] , usually works well for simple linkage problems or in the presence of special domain knowledge of the matching . Probabilistic linkage [ 18 ] , on the other hand , assigns probabilistic weighting to records and accepts record pairs with sufficiently high weights as linked pairs . [ 4 ] provided the formal mathematical foundations and some theoretical analysis . Despite the similarity with the record linkage problem , the UIL problem that we consider in this paper distinguishes itself with unique characteristics of social data to make possible breakthroughs previously unattainable .
The User Identity Linkage problem was initially formalized as connecting corresponding identities across communities in [ 27 ] , and was addressed with a web search based approach . Considering social network diversity and information asymmetry , many early works were proposed based on user information , including user profile based , user generatedcontent based and user behavior model based . User profilebased methods collect tagging information provided by users [ 7 ] or user profiles , eg , user name , description , location , etc . [ 24 , 10 , 29 ] . User generated content based ones collect personal identifiable information from user personal reading records[1 ] or user generated content . User behavior modelbased methods [ 28 ] analyze behavior patterns and build feature models from user names , language and writing styles . As most of these algorithms are often tailored to a particular pattern , they face serious challenges in identifying crossplatform linkage if required data patterns are not available on all platforms .
More recent approaches have been proposed in both supervised and unsupervised learning frameworks . [ 11 ] proposed a supervised multi objective learning framework to link up user accounts of the same natural person across different social network platforms . [ 9 ] studied link prediction methods for homogeneous networks based on massive unsupervised link indicators . To solve the collective link identification problem , [ 30 ] proposed a unified link prediction framework . [ 31 ] studied the multi network link prediction problem across partially aligned networks with a PU link prediction framework . However , Most existing solutions have focused on pair wise user linkage between two platforms . Even though a few of them can handle multiple platforms , the computation complexity is too high for practical applications and the models tend to depend on specific data forms , eg , location and friendship .
Other relevant approaches include subspace learning based approaches [ 25 ] , an important learning framework in multiview learning which aims to obtain a latent subspace shared by multiple views by assuming that the input views are generated from this subspace . The structured support vector
SYMBOL
Table 1 : Notations
DESCRIPTION
O
Si Pi d oi ni mi ui j wi
The set of real users in LUS ith social media platform
The set of users on Si
The user feature dimension in LUS ith user in LUS , oi ∈ Rd The number of users on Si
The user feature dimension on Si jth user on Si , ui j ∈ Rmi
The projection matrix for Si , wi ∈ Rd×mi machine[23 ] is a machine learning algorithm that generalizes the Support Vector Machine ( SVM ) classifier . [ 21 ] developed a method for structured margin classification , and an online framework was proposed by [ 14 ] .
Before introducing the detail of our proposed framework , we will give the formal definitions of many important concepts .
3 . PROBLEM FORMULATION
We formulate our problem in this section by first intro ducing the concept of latent user space as follows .
Definition 31 [ Latent User Space ( LUS ) ] We define the Latent User Space ( LUS ) as a triple ( O , A , D ) where O = {o1 , o2 , . . . , oN } is the set of all N real users each corresponding to a natural person , A = ( a1 , a2 , . . . , ad ) denotes the vector of d attributes by which every real user is represented , ie , oi = ( ai d ) , 1 ≤ i ≤ N , and D represents the distance function such that D(oi , oj ) is the distance between any two users oi , oj ∈ O .
2 , . . . , ai
1 , ai
We denote a set of e different social media platforms as S ={S1 , S2 , . . . , Se} , and for each Si ∈ S , Si = ( Pi , Fi ) where Pi = {u1 , u2 , . . . , uni } denotes the set of all user accounts on Si and Fi = ( f1 , f2 , . . . , fmi ) denotes the feature vector to represent each user such that uj = ( f j mi ) for 1 ≤ j ≤ ni .
2 , . . . , f j
1 , f j
We refer to every user x in LUS as a “ user in itself ” . For any platform Si , we refer to every user u on Si as a “ user asobserved ” , which corresponds to a “ user in itself ” x in LUS through the projection function of Si as defined below .
Definition 32 [ Projection Function ] We denote as Φi the projection function of Si such that for each oj ∈ O in latent user space , we have Φi(oj ) = Φi((aj d ) ) = ui k , ui the inverse function of Φi such that Φ−1 ( Φi(o ) ) = o holds for all o ∈ O and 1 ≤ i ≤ e . k ∈ Pi . We also denote as Φ−1
2 , . . . , aj
1 , aj i i
Notice that in general , the projection function Φi is unknown to us for a given social platform Si . The user identity linkage problem defined for multiple platforms is given as follows . It is clear that definitions for the same problem for two platform case as in [ 11 ] is just a special case of this more general definition .
Definition 33 [ Multi platform User Identity Linkage ( MUIL ) ] Given the latent user space ( O , A , D ) , a set of e social media platforms S ={S1 , S2 , . . . , Se} where each
1777 Si = ( Pi , Fi ) , the problem of Multi platform User Identity Linkage ( MUIL ) is to find a binary function f such that for any given vector ~u of user accounts ~u = ( u1 , u2 , . . . , ue ) , ui ∈ Pi , 1 ≤ i ≤ e f ( ~u ) = fl 1 ,
0 , if ∃ o ∈ O , st ui = Φi(o ) , 1 ≤ i ≤ e otherwise
The binary function f as in Definition 3.3 decides perfectly if a set of user accounts on various social platforms correspond to the same real user . In reality , however , such an ideal function is hard to identify as both the latent user space and true projection functions Φi are unknown . Our approach in this paper is therefore to turn the MUIL problem into an optimization problem by the intuition that the more similar the two real users oa , ob in latent user space , the smaller the distance when they are projected back from the social platforms to the latent user space , ie , D(Φ−1 ( Φi(oa) ) , Φ−1 j ( Φj(ob) ) ) for all 1 ≤ i , j ≤ e . Hence the following optimization version of the MUIL problem . i
Given the latent user space ( O , A , D ) , a set of e social media platforms S ={S1 , S2 , . . . , Se} where each Si = ( Pi , Fi ) , we solve the MUIL problem by finding a set of projection functions Φi , 1 ≤ i ≤ e such that for any given vector of user accounts ( u1 , u2 , . . . , ue ) , ui ∈ Pi , 1 ≤ i ≤ e corresponding to the same real user , ie , ∃o ∈ O such that ui = Φi(o ) for 1 ≤ i ≤ e . We search for projection functions Φi for the MUIL problem by minimizing following objective function : min
Φ−1 X1≤i,j≤e
D(Φ−1 i
( ui ) , Φ−1 j ( uj ) )
( 1 ) where ui and uj are same user on Si and Sj .
Considering that fully aligned networks hardly exist in the real world , in this paper , we also adopt the assumption of partially aligned social platforms as proposed in [ 31 ] . Table 1 summarizes the notations in this paper .
4 . PROPOSED METHOD 4.1 ULink Framework
Eqn.(1 ) is a direct way to model LUS to obtain inverse projection function Φ−1 . We would further consider the user relation in both LUS and the original space in our proposed ULink framework . l , uj
Let {ui
ρ(l)}L be a set of same user pairs(matching pairs ) for any two social media platforms Si and Sj , ρ(· ) is an index mapping function to represent ρ(l)th user in Sj matching lth user in Si . Let {ui k}U L be a set of different user pairs(non matching pairs ) . Following the definition 3.3 , we aim to obtain all projection matrix wz for each inverse function projection Φ−1 given same user pairs and different user pairs . The proposed framework ULink is to minimize objective function such that l , uj where , e represents the number of social platform , ξ is a slack variable . δ(· ) is a flexible constant which is regarded as intra platform relation in original space . B and C is the coefficient . Since the positive of the right side of constraint always make same user be close to each other , and different user be separated from each other in LUS . In particular , the greater the value of the difference between users in original space δ(· ) , the more apparent this relation . i
( ui lwT j ||2 kwT j ( uj i − uj l ) , Φ−1 ie , D(Φ−1 as the distance function D . ||ui δ(· ) throughout this work , ie , δ(uj
Specifically in this work , we take the Euclidean distance k ) ) = 2 . Euclidean distance is also considered for ρ(l)||2 2 . For ease of exposition , we can formulate Eqn.(2 ) on two platforms . x and y are used for representing the user on two platforms such as u1 and u2 , x ∈ Rm1 , y ∈ Rm2 . As mentioned above , {xi , yk}U L is the set of non matching pairs , and {xi , yΦ(i)}L is the set of matching pairs . The Eqn.(2 ) becomes :
ρ(l ) ) = ||uj k − uj k , uj min w1,w2,ξ
1 2
( ||w1||2
F + ||w2||2
ξik
F ) + C Xi Xk 1 − yρ(i)wT
2 ||2
||xiwT
1 − ykwT
2 − ||xiwT st ≥ Bδ(yρ(i ) , yk ) − ξik , ∀i , k ; ρ(i ) 6= k i ∈ {1 , 2 , , N } , k , ρ(i ) ∈ {1 , 2 , , M } , ξρ(i)k ≥ 0
2 ||2 2
( 3 ) where M and N are the number of users on two platforms . Ideally , we should consider all non matching pairs for modeling . However , this would result in exponential computational cost with the number of non matching pairs . Therefore , we select a limited number of non matching pairs as experimental set in this paper . We also give an analysis and discuss some feasible solutions for this problem in Section 7 . For convenience , we combine variables w1 , w2 to W =
1 wT wT 2 , W ∈ R(m1+m2)×d and matching pair vector dl = .xi −yΦ(i)fi , non matching pair vector dul = .xi −ykfi , dul , dl ∈ Rm1+m2 . Therefore , the optimization problem Eqn.(3 ) can be rewritten as min W,ξik
1 2
||W ||2
F + C Xi Xk 2 − ||dlW ||2
ξik st ||dulW ||2 i ∈ {1 , 2 , , N } , ρ(i ) , k ∈ {1 , 2 , , M } , ξik ≥ 0
2 ≥ Bδ(yρ(i ) , yk ) − ξik , ∀i , k ; ρ(i ) 6= k
( 4 ) It is a non trivial task to solve Eqn.(4 ) , because the constrains of Eqn.(4 ) are no longer convex , and the minimization is not a convex problem . However , it is interesting to note that our objective function is very similar to the stateof the art framework structural SVMs[8 ] , which is to learn the classifier w : min w,ξ
Ω(w ) + C X ξi st wT [ Ψ(xi , yi ) − Ψ(xi , yi ) ] ≥ δ(yi , yi ) − ξi , ∀i e
1 2
( min w,ξ
Xz=1 st D(Φ−1 k , uj i ≥ Bδ(uj
||wz||2
F ) + C X ξ l ) , Φ−1 j ( uj
( ui
ρ(l ) ) − ξkρ(l ) , ∀i , j , l , k i , j ∈ {1 , 2 , · · · , e} , i 6= j ; l ∈ {1 , 2 , · · · , ni} , k , ρ(l ) ∈ {1 , 2 , · · · , nj} , ρ(l ) 6= k ; ξ ≥ 0 k ) ) − D(Φ−1 i
( ui l ) , Φ−1 j ( uj
ρ(l) ) )
( 2 ) where , the structured input output pairs ( x , y ) ∈ X × Y , X and Y are the spaces of the input and output variables , δ(· ) is a loss function that quantifies the loss associated with predicting y when y is the correct output value . Furthermore , Ψ(· ) is a joint feature vector that describes the relationship between input x and structured output y , Ω(· ) is regarded as regular term and ξi is a slack variable . Inspired by this work , we adopt two simple yet effective strategies
1778 for handling this optimization problem . One is based on the constrained concave convex procedure(CCCP ) used in [ 20 ] , and the second is a gradient descent algorithm(accelerated proximal gradient[22] ) . The details will be given as follows . 4.2 Optimization
Smola etal [ 20 ] provide a strategy to use the constrained concave convex procedure for constrained problems . The idea of the concave convex procedure ( CCP ) can also be applied to the optimization problem of Eqn(4 )
Denote by fi , gj real valued convex and differentiable functions on a vector space X for all i ∈ {0 , . . . , n} , and let ci ∈ R for i ∈ {1 , . . . , n} . Then , the Constrained Concave Convex Procedure is defined : min x f0(x ) − g0(x ) st fi(x ) − gi(x ) ≤ ci , ∀i
Denote by Tn{f , x}(x′ ) the nth order Taylor expansion of f at location x , that is , T1{f , x}(x′ ) = f ( x)+ < x′ − x , ∇f ( x ) > . Thus , the above optimization problem can be replaced by finding xt+1 as the solution to the convex optimization problem until the convergence of xt : xt+1 = min f0(x ) − T1{g0 , xt}(x ) st fi(x ) − T1{gi , xt}(x ) ≤ ci , ∀i
Note that [ 20 ] presents the proof of its convergence , and shows this algorithm can be customized to various cases to efficiently solve the optimization problem .
It is clear that Eqn.(4 ) satisfies the conditions of Con strained CCP . we define : f0(W ) =
1 2
||W ||2
F + C Xi Xk
ξik fi(W ) = Bδ(yρ(i ) , yk ) − ξik + ||dlW ||2 2 gi(W ) = ||dulW ||2
2 , g0(W ) = 0 thus , each iteration requires solving the following optimization problem :
Wt+1 = min W,ξik
1 2
||W ||2
F + C Xi Xk
ξik st 2 ∗ dulWtW T ( dul)T − dlW W T ( dl)T − dulWtW T ≥ Bδ(yρ(i ) , yk ) − ξik , ∀i , k ; ρ(i ) 6= k i ∈ {1 , 2 , , N } , ρ(i ) , k ∈ {1 , 2 , , M } , ξik ≥ 0 t ( dul)T
( 6 ) Since Eqn.(6 ) is a convex optimization problem , a quadratically constrained quadratic program ( QCQP ) can be used to solve it . We use CVX : Matlab Software for Disciplined Convex Programming[6 ] to optimize this function . In summary , the sketch of the optimization process is described in Algorithm 1 .
Algorithm 1 ULink CCP 1 : initialize : W0 with a random value , B , C parameters 2 : Wt = W0 3 : repeat 4 : find Wt+1 as the solution of the optimization problem in Eqn.(6 )
5 : until convergence of Wt 6 : Obtain w1 and w2 by Wt+1
Another effective optimal algorithm Accelerated Proximal Gradient ( APG)[22 ] is used for solving our problem as follows .
According to Eqn.(4 ) , we define a symmetric positive semidefinite matrix Q : Q = W W T , Q ∈ R(m1+m2)×(m1+m2 ) . Thus , Eqn.(4 ) can be transformed to the following problem : min Q,ξik
1 2
Tr(Q ) + C Xi Xk
ξik st ( dul)Q(dul)T − ( dl)Q(dl)T ≥ Bδ(yρ(i ) , yk ) − ξik ∀i , k ; ρ(i ) 6= k , i ∈ {1 , 2 , , N } , ρ(i ) , k ∈ {1 , 2 , , M } ξik ≥ 0
( 7 )
Note that any feasible(or optimal ) solution to Eqn.(7 ) gives a feasible ( or optimal ) solution to Eqn.(4 ) , and vice versa[32 ] .
We can apply the accelerated proximal gradient ( APG ) method[12 ] to efficiently solve the primal form of Eqn(7 ) Let p(Q ) = 1 2 Tr(Q ) and f ( Q ) = C PiPk ξik . ξik = max {0 , Bδ(yΦ(i ) , yk ) + ( dl)Q(dl)T − ( dul)Q((dul)T } . We define : F ( Q ) = f ( Q ) + p(Q ) . The derivative of f is denoted by ∇f . [ 26 ] shows that ∇f is Lipschitz continuous on Q . For any symmetric positive semi definite matrix Z , consider the following QP problem of F ( Q ) at Z :
Aτ ( Q ; Z ) = f ( Z)+ < ∇f ( Z ) ; Q − Z >
+
τ 2
||Q − Z||2
F + p(Q )
( 8 )
=
τ 2
||Q − G||2
F + p(Q ) + f ( Z ) +
1 2τ
||∇f ( Z)||2 F where τ > 0 is a constant and G = Z − 1
τ ∇f ( Z ) . To minimize Aτ ( Q ; Z ) wrt Q , it is reduced to following :
Thus , take the derivative of the objective function , and get Q = G − 1 2τ I . Note that G can be decomposed by SVD as G = U GU T , and Q = U GU T − 1 2τ U U T , then Q = U ( G − 1 2τ I)U T . We use 0 to replace the negative entries in G − 1 2τ . Finally , the projection matrix W can be obtained by symmetric positive semi definite matrix Q . Note that convergence criteria for this optimal solution was given in [ 12 ] , which is a similar algorithm .
5 . FROM BATCH TO ONLINE
An intelligent linkage algorithm should be able to take advantage of the incremental data updates to continuously improve the linkage quality . In this section , we extend our batch framework(ULink ) to an online learning framework ( ULink On ) , and formalize our online framework(ULink On ) based on Eqn(7 )
Note that we assume one matching pair ( xt , yt)L and t)U L would arrive at every time one non matching pair ( xt , y′ stamp t . As mentioned before , let dl t be a pair of same user and a pair of different users at time t . We consider the objective function scale quadratically with ξ as follows : t and dul
1 2
Qt+1 = min Q,ξ st ( dul ≥ Bδ(y′ t )Q(dul t , yt ) − ξt
||Q − Qt||2
F +
1 2
Cξ2 t t )T − ( dl(t))Q(dl t)T
( 10 )
( 5 ) arg min
Q
τ 2
||Q − G||2
F + p(Q )
( 9 )
1779 Like Online Passive Aggressive algorithm[3 ] , the objective function in Eqn.(10 ) attempts to keep the norm of the change to the parameter vector as small as possible on each update , while incorporating the assumption of LUS .
Before optimize Eqn.(10 ) , we need to initialize a symmetric positive semi definite matrix Qt . Thus , the Lagrangian of the optimization problem Eqn.(10 ) is defined as :
L(Q , ξ ) =
||Q − Qt||2
1 2 + β(Bδ(y′ + ( dl t)Q(dl
F +
1 2
Cξ2 t t , yt ) − ξt t)T − ( dul t )Q(dul t )T )
( 11 ) where β ≥ 0 is a Lagrange multiplier . Setting the partial derivatives of L with respect to the elements of Q to zero , this yields :
Q = Qt − βH , H = ( dl t)T ( dl t ) − ( dul t )T ( dul t )
Setting the partial derivatives of the Lagrangian with re spect to ξ and setting that partial derivative to zero :
∂L(Q , ξ )
∂ξ
= Cξt − β = 0 ,
ξt =
β C
. we can rewrite Eqn(11 ) as ,
L(Q , ξ ) =
||Qt + βH − Qt||2
F +
1 2
C(
β C
)2
1 2 + β(Bδ(y′
+ ( dl t)Q(dl t , yt ) −
β C t)T − ( dul t )Q(dul t )T )
Setting the derivative β of the above to zero , this yields
β = where ,
V + Bδ(y′ 2Z − ||H||2 t , yt ) F + 1
C
Z = ( dl V = ( dl t)H(dl t)Qt(dl t)T − ( dul t)T − ( dul t )H(dul t )Qt(dul t )T t )T
( 12 )
( 13 )
As described above , the pseudo code for this algorithm is given in Algorithm 2
Algorithm 2 ULink On dl t , dul t
pairwise data ; B , C parameters
Input : Output : Q 1 : initialize : Qt symmetric positive semi definite matrix 2 : for t=1,2,· · · do 3 : 4 : 5 :
Calculate Z and V use ( 13 ) Calculate β use ( 12 ) Calculate Q = Qt − βH , where H = ( dl ( dul t)T ( dl t )T ( dul t ) − t ) .
6 : Qt=Q 7 : end for
Note that it is often the case that more than two platforms are involved for user linkage in the real applications . Yet , most previous works have focused on pair wise user linkage problem . If a third platform is needed to link with the existing platforms , many algorithms may suffer from optimization problem . For proposed batch model ( 4 ) and online model ( 10 ) , combining the alternative optimization technique into the CCP framework can be adopted to handle this problem , ie , we optimize one variable w1 by using the fixed other values w3 and w2 . One salient feature of our model is that we directly connect multiple platforms by considering diverse connection relationship , instead of integrating results from pair wise connections . Note that the optimization problem has been turned into one with one variable optimization , such that many algorithms can be used to solve this problem . In a nutshell , the sketch of the optimization process for proposed model is easy to be adapted to multiple social platforms , as demonstrated in our experiments with three platforms in Section 621
6 . EXPERIMENTAL EVALUATION 6.1 Experimental Setup Data Sets . We use the following four real data sets to assess the performance of all methods in comparison :
• Weibo ( http://wwwweibocom/ ) : Weibo is one of the most popular Chinese micro blogging websites with 450 million active users , akin to a hybrid of Twitter and Facebook .
• Renren ( http://wwwrenrencom/ ) : Renren is a leading real name social networking Internet platform in China , often dubbed as the Facebook of China with 162 million registered users .
• 36.cn ( http://www36cn/ ) : 36.cn is an online job hunting service in China serving more than 100 thousand businesses with user uploaded resumes .
• Zhaopin ( http://wwwzhaopincom/ ) : Zhaopin is an other publicly listed company providing online job hunting service in China with more than 22 million resumes .
For Weibo and Renren , the ground truth user linkage pairs across these two platforms are manually annotated . For the other three platforms ( Renren , 36.cn , and Zhaopin ) , the ground truth user linkage across the three platforms are provided by our industrial partner who have access to the users’ real names and emails . A summary of the ground truth information is given in Table 2 .
Table 2 : A summary of cross platform ground truth user linkage .
Data Set Weibo Renren
Weibo Renren 36.cn
Zhaopin
NA 2186 NA NA
2186 NA
11268 9495
36.cn NA
11268
NA 2698
Zhaopin
NA 9495 2698 NA
Renren & Zhaopin & 36.cn
835
Competing Algorithms . To evaluate the performance of ULink , we chose three state of the art supervised classifiers — HYDRA[11 ] , COSNET[33 ] and SVM[2 ] — and one nonparametric method of KNN , explained as follows :
1 . HYDRA [ 11]:a large scale social identity linkage framework via heterogeneous behavior modeling which learns the mapping function by multi objective optimization incorporating both supervised learning on pair wise ID linkage information and the cross platform structure consistency maximization .
1780 Table 3 : A summary of user features used for each data set .
Data Set
Weibo Renren 36.cn
Zhaopin
User Features gender ; birthday ; location ; educational background gender ; nationality ; birthday ; location ; educational background gender ; nationality ; birthday ; marital status ; degree ; work experience gender ; birthday ; mailing address ; educational background
2 . COSNET [ 33 ] : an algorithm that addresses the UIL problem by considering both local and global consistency ( network structure ) among multiple networks , which is useful in our setting as the requirement of global consistency of network structure is not satisfied for some data sets . The training set is composed of linked pairs and unlinked pairs . An efficient subgradient algorithm is developed to train the model by converting the original objective function into its dual form .
3 . SVM [ 2]:a binary prediction on user pairs using support vector machines on the proposed similarity calculation schemes for pairwise linkage setting . The training data is composed of linked pairs and unlinked pairs , which is represented by 1 and 1 as the label respectively .
4 . KNN : We use K Nearest Neighbor ( KNN ) as a nonparametric method as follows . When matching users between two platforms Si and Sj , we take the user feature vectors of both platforms to form a unified feature vector . For each testing user ui on Si , we use KNN to generate k = 5 nearest users on Sj as matching candidates . The final linkage is the result of majority voting .
5 . ULink CCP : our batch model with Constrained Con cave Convex Procedure optimization method .
6 . ULink APG : our batch model with Accelerated Prox imal Gradient Update optimization method .
7 . ULink On : our online version of the ULink model .
Experiment Settings . Table 3 lists the information used for each social platform . We adopt the bag of words model for raw text data processing , and replace with the value of 0 for missing attributes . All methods are executed in the MATLAB environment with the following implementations : LIBSVM package[2 ] is used for modeling SVM ; The codes for both HYDRA and COSNET are developed based on the original papers . We employ K Nearest Neighbor as predictive classifier in LUS .
Experiments are conducted for both pairwise and multiplatform ( eg , three platforms ) linkage settings . Each experiment is repeated for 10 times and both the mean and the standard variance of the performance are reported . The ground truth linked pairs are divided into 5 folds every time , 4 folds being the training set and 1 fold being the testing set . In the training set and testing set , non matching pairs are randomly sampled by setting two different ratios , 1:5 and 1:10 , between the ground truth matching pairs to nonmatching pairs . It is easy to set parameter B by 10n , n ∈ Z . A guide of setting d is mentioned in section 7 . The coefficient C in our algorithm , SVM and COSNET is selected via cross validation on the training data . For HYDRA , the parameter p , which determines how the model learned approximates the Utopia solution , is set as 5 according to the original paper . The two parameters , γL and γM , which determine the relative importance of the problems in HYDRA framework from a decision maker ’s perspective , are set by tuning on the validation set . For COSNET , the matching graph is generated with the relation between users . Evaluation Metrics . A well established and widely used evaluation metric in many real user linkage applications is to compare the top k candidates for user linkage . In this paper , we set k = 5 and evaluate all methods by computing top k precision for each test user as follows : h(x ) = k − ( hit(x ) − 1 ) k
.
N where hit(x ) represents the position of correct linked user in the returned top k users . Then precision , represented by the symbol “ hit precision ” , is calculated on N test users by PN h(xi ) . For example , given the result of top k users {y1 , y2 , , yk} for test data x , if y1 hits ground truth , hit(x ) = 1 , and h(x ) = 1 . Similarly , if y4 hits the ground truth , hit(x ) = 4 , and h(x ) = k−3 k . For the multiple platforms , average “ hit precision ” will be report . 6.2 Experimental Results
We first evaluate our algorithm for the batch data setting in Subsection 621 , including both the pair wise platform case and multi platform case , and then for the online data setting in Subsection 622 621 Batch Data Setting Pairwise Platform Case . This section illustrates the results of the user linkage problem for pairwise platform case on four real world data sets . Figure 2 and Figure 3 respectively show the performance on different ratio of unlinked pairs and linked pairs .
Summary . Our proposed ULink models — both ULinkCCP and ULink APG — have consistently produced higher hit precision in all data sets than any other method , with noticeable leading advantage over the rest except for the “ Weibo & Renren ” case . Among other competing methods , COSNET and HYDRA , both of which are partially based on the structure of SVM each with their own advance , show better performance than SVM in some data sets . While KNN needs no training and runs faster , its performance fell behind others in all sdata sets .
Detailed Analysis .
• HYDRA learns the linkage function via optimizing two objective functions , ie , the supervised learning using the reliable ground truth , and the structure consistency maximization by modeling the core social network behavior consistency . Its performance , as demonstrated by our experiments , hinges heavily upon the availability of the consistent structure of friendship
1781 ( a ) Weibo & Renren
( b ) Renren & 36.cn
( c ) Renren & Zhaopin
( d ) 36.cn & Zhaopin
Figure 2 : Pair wise platform user linkage comparison for batch data setting ( with ratio between the groundtruth matching pairs to non matching pairs being 1:5 ) .
( a ) Weibo & Renren
( b ) Renren & 36.cn
( c ) Renren & Zhaopin
( d ) 36.cn & Zhaopin
Figure 3 : Pair wise platform user linkage comparison for batch data setting ( with ratio between between the ground truth matching pairs to non matching pairs being 1:10 ) .
C >A >B
0
( a ) i n o s c e r p t i i h
0.6
0.3
0 0.0
SVM HYDRA
KNN ULink CCP
( b )
Figure 4 : User linkage on three platforms . ( a)Result of building model with different connection orders . A : Renren , B : 36.cn , C : Zhaopin . ( b ) Result of user linkage on three platforms . network across platforms . It performed worse than our ULink model in the three cases where such consistent structure is not available , and excelled for the Renren Weibo case , the only one where its hypothesis is supported . For example , in online job hunting data sets of Zhaopin and 36.cn where users are independent and observed social links are weak , the absence of the constraint of structure consistency critical for objective function optimization resulted in its degraded performance similar as SVM . On the other hand , it is also worth noting that the pre computation of affinity scores as a prerequisite for the building model imposes extra computation time upon HYDRA .
• COSNET is found to be in a similar situation as HYDRA . Its performance could rival ours in data sets where the matching graph based on friend relationship is available , as in Renren Weibo case , yet it fared not as well in all other data sets .
• SVM presents in general an average performance in all cases . The more important reasons why it is not a good choice for the MUIL problem are that , while it enjoys easy deployment for pairwise linkage classification , it suffers from a number of challenging issues including the high computational complexity if using Gaussian kernel , the difficulty in finding right parameters and missing values .
• KNN results in the worst performance in general although it is the simplest and fastest among all with no training required . On the other hand , this illustrates the significance of our proposed concept of latent user space ( LUS ) because , while applying KNN directly in the space defined by the feature vectors of the linking social platforms has been shown to work poorly , our ULink methods do achieve the best performance by applying KNN in the LUS .
• ULink CCP and ULink APG achieve the best performance in most of the data sets , making them in general the best choices for the MUIL problem . The factors of consideration when choosing between them are ( I ) ULink APG is a better choice in terms of time complexity when the number of dimensions is high ; and ( II ) The influence of initial condition of ULink CCP is smaller than ULink APG .
Multi Platform Case . We demonstrate in this part why existing solutions suffer from inherent defects when solving the user identity linkage problem on more than two platforms , driving home the importance of a new framework like our proposed ULink . which more naturally models the fundamental structure of the MUIL problem . Figure 4 shows the result of user identity linkage for multi platform case , ie , the three platforms of Renren , 36.cn and Zhaopin .
First of all , since existing solutions consider a pair of platforms at a time , one needs to derive the final user linkage result for the three platforms by integrating the results of
1782 0.7
0.5
ULink On PA I
0.7
0.5
ULink On PA I
0.7
0.5
ULink On PA I i i n o s c e r p t i h i i n o s c e r p t i h
0.7
0.5
ULink On PA I i i n o s c e r p t i h i i n o s c e r p t i h
0
0
300
600
900 1200 1500
0
0
300
600
900 1200 1500
0
0
300
600
900 1200 1500
0
0
300
600
900 1200 1500
Number of pairs
Number of pairs
Number of pairs
Number of pairs
( a ) Weibo & Renren
( b ) Renren & 36.cn
( c ) Renren & Zhaopin
( d ) 36.cn & Zhaopin
Figure 5 : Result of online framework in the different data sets . two pairwise linkage , ie , A → B and B → C . As shown in Figure 4 ( a ) , for different orders of integrating the pairwise linkage , all the final results of each competing algorithm exhibits noticeable inconsistency . This clearly illustrates the limitation of trying to handle the multi platform case with pairwise linkage approach , an worrying issue particularly important when no theoretical analysis is known as yet on the stability of the final linkage results thus obtained . Notice that the problem only gets exacerbated as the number of platforms involved increases .
Furthermore , in Figure 4 ( b ) , we take the best results among the different ordering for each method to compare with ULink CCP . In fact , different connection orders has already been considered in our ULink framework , so that ULink CCP still outperforms all the rest demonstrates that our model not only provides a stable linkage result unavailable from previous methods , but also offers a better one by a model of greater generality . In particular , the hypothesis of structure consistency is hard to be all satisfied for multi platform case , the performance of HYDRA is therefore similar as SVM . COSNET is not compared due to the unavailability of necessary information for building matching graph .
622 Online Data Setting In this part we show how our proposed ULink On model is able to benefit from new linkage information and improve performance in the online data setting . We notice that this is the first time an online model is proposed for the user identity linkage problem , we therefore choose the state ofthe art online learning algorithm Passive Aggressive ( PA)[3 ] for comparison 3 .
Figure 5 shows that ULink On is able to take advantage of new input of user pairs from incoming data stream to update and improve model — the hit precision of ULink On increases continuously with the increasing number of linkage pairs . In contrast , the performance of PA I does not exhibit similar improvement . We assume each incoming piece of data contains one linked pair and one unlinked pair , and verify algorithms on fixed test data set .
In a nutshell , two important characteristics of our proposed ULink On make it particularly useful for the online setting of the MUIL problem where new data input are constantly generated on various social platforms : ( I ) It has the ability to update model with improved performance with incremental new data input , eg , one linked pair and one
3The code used is from Online Multiclass Prediction toolbox at http://wwwcshujiacil/ shais/code/ unlinked pair ; and ( II ) It does not need to store a large amount of data for model construction .
7 . DISCUSSION
We discuss two further challenges of the MUIL problem , together with our solution in plan as future work .
( 1 ) One challenge for any learning algorithm to solve the MUIL problem is how to efficiently handle the exponentially large number of known non matching user pairs . This issue can be addressed in our framework by applying the cutting plane method[8 , 23 ] to the optimization problem — The constraints most violated are iteratively added to the set of cutting planes for model training until convergence . Alternatively , the latest ensemble method EasyEnsemble[13 ] can be used to build Ensemble Latent User Space model , which will not ignore useful information by under sampling , and obtain the final result by majority voting .
( 2 ) The curse of dimensionality has remained a challenging issue hard to be dealt away in the MUIL problem . In our framework , LUS is built through projection matrix with dimensions adjustable according to measures such as the separability of users . In particular , we can use user similarity as a measure to guide the setup of dimensions for a given platform before model training : the higher the user similarity , the larger the value of dimension d .
8 . CONCLUSION
This paper introduces the concept of Latent User Space to address in a unified ULink framework two important issues not yet sufficiently explored for the MUIL problem , ie , platform multiplicity and online data generation . The proposed batch framework ULink based on LUS could be easily shifted into online framework ULink On . Experiments on real world data sets have demonstrated the effectiveness of both the proposed batch mode algorithm and the online version , with user linkage results outperforming the stateof the art existing methods for both pairwise platform and multi platform settings .
Our future work would further advance the efficiency and scalability of our proposed framework with improved performance , and explore theoretical foundation for the latent user space model . It is also in our interest to extend the idea of Latent User Space to unsupervised learning framework .
Acknowledgment This research was partially supported by NSFC ( 61333014 , 61321491 ) , 973 Program ( 2014CB340501 ) , the Collaborative Innovation Center of Novel Software Technology and
1783 Methods of information in medicine , 30(2):117–123 , 1991 .
[ 18 ] M . Sadinle and S . E . Fienberg . A generalized fellegi–sunter framework for multiple record linkage with application to homicide record systems . Journal of the American Statistical Association , 108(502):385–397 , 2013 .
[ 19 ] P . Sarkar and A . W . Moore . Dynamic social network analysis using latent space models . ACM SIGKDD Explorations Newsletter , 7(2):31–40 , 2005 .
[ 20 ] A . J . Smola , S . Vishwanathan , and T . Hofmann .
Kernel methods for missing variables . In Proceedings of International Workshop on Artificial Intelligence and Statistics , pages 325–332 , 2005 .
[ 21 ] B . Taskar , D . Klein , M . Collins , D . Koller , and C . D .
Manning . Max margin parsing . In EMNLP , 2004 .
[ 22 ] K C Toh and S . Yun . An accelerated proximal gradient algorithm for nuclear norm regularized linear least squares problems . Pacific Journal of Optimization , 6(15):615–640 , 2010 .
[ 23 ] I . Tsochantaridis , T . Joachims , T . Hofmann , and
Y . Altun . Large margin methods for structured and interdependent output variables . Journal of Machine Learning Research , pages 1453–1484 , 2005 . [ 24 ] J . Vosecky , D . Hong , and V . Y . Shen . User identification across multiple social networks . In NDT , pages 360–365 , 2009 .
[ 25 ] C . Xu , D . Tao , and C . Xu . A survey on multi view learning . arXiv preprint arXiv:1304.5634 , 2013 .
[ 26 ] G X Yuan , C H Ho , and C J Lin . An improved glmnet for l1 regularized logistic regression . Journal of Machine Learning Research , 13(1):1999–2030 , 2012 .
[ 27 ] R . Zafarani and H . Liu . Connecting corresponding identities across communities . In ICWSM , 2009 .
[ 28 ] R . Zafarani and H . Liu . Connecting users across social media sites : a behavioral modeling approach . In KDD , pages 41–49 , 2013 .
[ 29 ] J . Zhang , X . Kong , and P . S . Yu . Transferring heterogeneous links across location based social networks . In WSDM , 2014 .
[ 30 ] J . Zhang and P . S . Yu . Integrated anchor and social link predictions across partially aligned social networks . In IJCAI , 2015 .
[ 31 ] J . Zhang , P . S . Yu , and Z H Zhou . Meta path based multi network collective link prediction . In KDD , 2014 .
[ 32 ] Y . Zhang and J . G . Schneider . Maximum margin output coding . In ICML , 2012 .
[ 33 ] Y . Zhang , J . Tang , Z . Yang , J . Pei , and P . S . Yu . Cosnet : Connecting heterogeneous social networks with local and global consistency . In KDD , 2015 .
Industrialization , Nanjing University ; the National Research Foundation , Prime Minister ’s Office , Singapore under its International Research Centres in Singapore Funding Initiative and Pinnacle lab for analytics at Singapore Management University . 9 . REFERENCES [ 1 ] L . Backstrom and J . Leskovec . Supervised random walks : predicting and recommending links in social networks . In WSDM , pages 635–644 , 2011 .
[ 2 ] C C Chang and C J Lin . LIBSVM : A library for support vector machines . ACM Trans . Intelligent Systems and Technology , 2:27:1–27:27 , 2011 . Software available at http://wwwcsientuedutw/ cjlin/libsvm . [ 3 ] K . Crammer , O . Dekel , J . Keshet , S . Shalev Shwartz , and Y . Singer . Online passive aggressive algorithms . Journal of Machine Learning Research , 7:551–585 , 2006 .
[ 4 ] I . P . Fellegi and A . B . Sunter . A theory for record linkage . Journal of the American Statistical Association , 64(328):1183–1210 , 1969 .
[ 5 ] S . J . Grannis , J . M . Overhage , and C . J . McDonald .
Analysis of identifier performance using a deterministic linkage algorithm . In AMIA , page 305 , 2002 .
[ 6 ] M . Grant and S . Boyd . CVX : Matlab software for disciplined convex programming , version 21 http://cvxr.com/cvx , Mar . 2014 .
[ 7 ] T . Iofciu , P . Fankhauser , F . Abel , and K . Bischoff . Identifying users across social tagging systems . In ICWSM , 2011 .
[ 8 ] T . Joachims , T . Finley , and C N J . Yu .
Cutting plane training of structural svms . Machine Learning , 77(1):27–59 , 2009 .
[ 9 ] D . Liben Nowell and J . Kleinberg . The link prediction problem for social networks . Journal of the American society for information science and technology , 58(7):1019–1031 , 2007 .
[ 10 ] J . Liu , F . Zhang , X . Song , Y I Song , C Y Lin , and
H W Hon . What ’s in a name ? : an unsupervised approach to link users across communities . In WSDM , pages 495–504 , 2013 .
[ 11 ] S . Liu , S . Wang , F . Zhu , J . Zhang , and R . Krishnan .
Hydra : Large scale social identity linkage via heterogeneous behavior modeling . In SIGMOD , 2014 .
[ 12 ] W . Liu and I . W . Tsang . Large margin metric learning for multi label prediction . In AAAI , 2015 .
[ 13 ] X Y Liu , J . Wu , and Z H Zhou . Exploratory undersampling for class imbalance learning . IEEE Trans . Systems , Man , and Cybernetics , Part B : Cybernetics , 39(2):539–550 , 2009 .
[ 14 ] R . McDonald , K . Crammer , and F . Pereira . Online large margin training of dependency parsers . In ACL , pages 91–98 , 2005 .
[ 15 ] H . Newcombe , J . Kennedy , S . Axford , and A . James .
Automatic linkage of vital records . Science , 130(3381):954–959 , 1959 .
[ 16 ] H . B . Newcombe . Handbook of record linkage : methods for health and statistical studies , administration , and business . Oxford University Press , Inc . , 1988 .
[ 17 ] L . Roos and A . Wajda . Record linkage strategies . Part
I : Estimating information and evaluating approaches .
1784
