Robust Influence Maximization
Wei Chen
Microsoft Research weic@microsoft.com
Tian Lin
Tsinghua University lint10@mailstsinghuaeducn
Zihan Tan
IIIS , Tsinghua University zihantan1993@gmail.com
Mingfei Zhao
IIIS , Tsinghua University mingfeizhao@hotmail.com
Xuren Zhou
The Hong Kong University of
Science and Technology xzhouap@cseusthk
ABSTRACT In this paper , we address the important issue of uncertainty in the edge influence probability estimates for the well studied influence maximization problem — the task of finding k seed nodes in a social network to maximize the influence spread . We propose the problem of robust influence maximization , which maximizes the worst case ratio between the influence spread of the chosen seed set and the optimal seed set , given the uncertainty of the parameter input . We design an algorithm that solves this problem with a solutiondependent bound . We further study uniform sampling and adaptive sampling methods to effectively reduce the uncertainty on parameters and improve the robustness of the influence maximization task . Our empirical results show that parameter uncertainty may greatly affect influence maximization performance and prior studies that learned influence probabilities could lead to poor performance in robust influence maximization due to relatively large uncertainty in parameter estimates , and information cascade based adaptive sampling method may be an effective way to improve the robustness of influence maximization .
Keywords social networks , influence maximization , robust optimization , information diffusion
1 .
INTRODUCTION
In social and economic networks , Influence Maximization problem has been extensively studied over the past decade , due to its wide applications to viral marketing [ 13 , 19 ] , outbreak detection [ 22 ] , rumor monitoring [ 6 ] , etc . For example , a company may conduct a promotion campaign in social networks by sending free samples to the initial users ( termed as seeds ) , and via the word of mouth ( WoM ) effect , more and more users are influenced by social links to join the campaign and propagate messages of the promotion . This problem is first introduced by Kempe et al . [ 19 ] under an Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page . Copyrights for components of this work owned by others than the author(s ) must be honored . Abstracting with credit is permitted . To copy otherwise , or republish , to post on servers or to redistribute to lists , requires prior specific permission and/or a fee . Request permissions from permissions@acmorg KDD ’16 , August 13 17 , 2016 , San Francisco , CA , USA cfl 2016 Copyright held by the owner/author(s ) . Publication rights licensed to ACM . ISBN 978 1 4503 4232 2/16/08 . . . $15.00 DOI : http://dxdoiorg/101145/29396722939745 algorithmic framework to find the most influential seeds , and they propose the independent cascade model and linear threshold model , which consider the social psychological factors of information diffusion to simulate such a random process of adoptions .
Since Kempe et al . ’s seminal work , extensive researches have been done on influence maximization , especially on improving the efficiency of influence maximization in the independent cascade model [ 11 , 10 , 16 , 4 , 28 ] , all of which assume that the ground truth influence probabilities on edges are exactly known . Separately , a number of studies [ 26 , 27 , 15 , 25 , 24 ] propose learning methods to extract edge influence probabilities . Due to inherent data limitation , no learning method could recover the exact values of the edge probabilities , and what can be achieved is the estimates on the true edge probabilities , with confidence intervals indicating that the true values are within the confidence intervals with high probability . The uncertainty in edge probability estimates , however , may adversely affect the performance of the influence maximization task , but this topic has left mostly unexplored . The only attempt addressing this question is a recent study in [ 18 ] , but due to a technical issue as explained in [ 18 ] , the results achieved by the study is rather limited .
σθ ( S ) σθ ( S∗
θ ) , where S∗
In this paper , we utilize the concept of robust optimization [ 3 ] in operation research to address the issue of influence maximization with uncertainty . In particular , we consider that the input to the influence maximization task is no longer edge influence probability on every edge of a social graph , but instead an interval in which the true probability may lie . Thus the input is actually a parameter space Θ , which is the product of all intervals on all edges . For any seed set S , let σθ(S ) denote the influence spread of S under parameter setting θ ∈ Θ . Then we define robust ratio of S as g(Θ , S ) = minθ∈Θ θ is the optimal seed set achieving the maximum influence spread under parameter θ . Intuitively , robust ratio of S indicates the ( multiplicative ) gap between its influence spread and the optimal influence spread under the worse case parameter θ ∈ Θ , since we are unsure which θ ∈ Θ is the true probability setting . Then our optimization task is to find a seed set of size k that maximize the robust ratio under the known parameter space Θ — we call this task Robust Influence Maximization ( RIM ) . It is clear that when there is no uncertainty on edge probabilities , which means Θ collapses to the single true parameter θ , RIM degenerates to the classical influence maximization problem . However , when uncertainty exists , solving RIM may be a more difficult task . In this paper , we first pro
795 pose an algorithm LUGreedy that solves the RIM task with a solution dependent bound on its performance , which means that one can verify its performance after it selects the seed set ( Section 3 ) . We then show that if the input parameter space Θ is only given and cannot be improved , it is possible √ that even the best robust ratio in certain graph instances n ) with n being the could be very small ( eg O(log n/ number of nodes in the graph ) . This motivates us to study sampling methods to further tighten parameter space Θ , and thus improving the robustness of our algorithm ( Section 4 ) . In particular , we study both uniform sampling and adaptive sampling for improving RIM performance . For uniform sampling , we provide theoretical results on the sample complexity for achieving a given robust ratio of the output seed set . For adaptive sampling , we propose an information cascade based sampling heuristic to adaptively bias our sampling effort to important edges often traversed by information cascades . Through extensive empirical evaluations ( Section 5 ) , we show that ( a ) robust ratio is sensitive to the width of the confidence interval , and it decreases rapidly when the width of the confidence interval increases ; as a result prior studies that learned edge probabilities may result in poor robust ratio due to relative large confidence intervals ( and thus high uncertainty ) ; ( b ) information cascade based adaptive sampling method performs better than uniform sampling and other baseline sampling methods , and can significantly improve the robustness of the influence maximization task .
In summary , the contribution of our paper includes : ( a ) proposing the problem of robust influence maximization to address the important issue of uncertainty in parameter estimates adversely impacting the influence maximization task ; ( b ) providing the LUGreedy algorithm that guarantees a solution dependent bound ; and ( c ) studying uniform and adaptive sampling methods to improve robust influence maximization .
Due to space constraint , the proofs of some technical results are omitted . The complete proofs of all results can be found in the full technical report [ 9 ] .
1.1 Additional Related Work
Influence maximization has been extensively studied and we already point out a number of closely related studies to our work in the introduction . For a comprehensive survey , one can refer to the monograph [ 8 ] . We discuss a few most relevant work in more detail here .
To the best of our knowledge , the study by He and Kempe [ 18 ] is the only attempt prior to our work that also tries to address the issue of uncertainty of parameter estimates impacting the influence maximization tasks . However , besides the similarity in motivation , the technical treatments are quite different . First , their central problem , called influence difference maximization , is to find a seed set of size k that maximizes the additive difference between the two influence spreads of the same seed set using different parameter values . Their purpose is to see how large the influence gap could be due to the uncertainty in parameter space . However , our goal is still to find the best possible seed set for influence maximization purpose , while considering the adverse effect of the uncertainty , and thus we utilize the robust optimization concept and use the worse case multiplicative ratio between the influence spread of the chosen seed set and the optimal seed set as our objective function . Second , their influence difference maximization turns out to be hard to approximate to any reasonable ratio , while we provide an actual algorithm for robust influence maximization that has both a theoretical solution dependent bound and performs reasonably well in experiments . Third , we further consider using sampling methods to improve RIM , which is not discussed in [ 18 ] .
In the context of robust optimization , Krause et al . ’s work on robust submodular optimization [ 20 ] is possibly the closest to ours . Our RIM problem can be viewed as a specific instance of robust submodular optimization studied in [ 20 ] . However , due to the generality of problem scope studied in [ 20 ] , they show strong hardness results and then they have to resolve to bi criteria solutions . Instead , we are working on a particular instance of robust submodular optimization , and their bi criteria solution may greatly enlarge the selected seed set size , which may not be allowed in our case . Furthermore , they work on finite set of submodular functions , but in our case our objective function is parametrized with θ from a continuous parameter space Θ , and it is unclear how their results work for the continuous case .
In a parallel work that will appear in the same proceeding , He and Kempe study the same subject of robust influence maximization [ 17 ] , but they follow the bi criteria approximation approach of [ 20 ] , and thus in general their results are orthogonal to ours . In particular , they use essentially the same objective function , but they work on a finite set of influence spread functions Σ , and require to find k · ln|Σ| seeds to achieve 1 − 1/e approximation ratio comparing to the optimal seed set of size k ; when working on continuous parameter space Θ , they show that it is equivalent to a finite spread function space of size 2n and thus requiring Θ(kn ) seeds for a bi criteria solution , which renders the bi criteria solution useless . Thus their bi criteria approach is suitable when the set of possible spread functions Σ is small .
Adaptive sampling for improving RIM bears some resemblance to pure exploration bandit research [ 5 ] , especially to combinatorial pure exploration [ 7 ] recently studied . Both use adaptive sampling and achieve some optimization objective in the end . However , the optimization problem modeled in combinatorial pure exploration [ 7 ] does not have a robustness objective . Studying robust optimization together with combinatorial pure exploration could be a potentially interesting topic for future research . Another recent work [ 21 ] uses online algorithms to maximize the expected coverage of the union of influenced nodes in multiple rounds based on online feedbacks , and thus is different from our adaptive sampling objective : we use feedbacks to adjust adaptive sampling in order to find a seed set nearly maximizing the robust ratio after the sampling is done .
2 . MODEL AND PROBLEM DEFINITION As in [ 19 ] , the independent cascade ( IC ) model can be equivalently modeled as a stochastic diffusion process from seed nodes or as reachability from seed nodes in random live edge graphs . For brevity , we provide the live edge graph description below . Consider a graph G = ( V , E ) comprising a set V of nodes and a set E of directed edges , where every edge e is associated with probability pe ∈ [ 0 , 1 ] , and let n = |V | and m = |E| . To generate a random live edge graph , we declare each edge e as live if flipping a biased random coin with probability pe returns success , declare e as blocked otherwise ( with probability 1 − pe ) . The randomness on all edges are mutually independent . We define the subgraph L
796 Algorithm 1 Greedy(G , k , θ ) Input : Graph G , budget k , parameter vector θ 1 : S0 ← ∅ 2 : for i = 1 , 2 , . . . , k do 3 : 4 : 5 : end for 6 : return Sk v ← arg maxv /∈Si Si ← Si−1 ∪ {v}
{σθ(Si−1 ∪ {v} ) − σθ(Si−1)} consisting of V and the set of live edges as the ( random ) live edge graph . Given any set S ⊆ V ( referred as seeds ) , let RL(S ) ⊆ V denote the reachable set of nodes from S in live edge graph L , ie , ( 1 ) S ⊆ RL(S ) , and ( 2 ) for a node v /∈ S , v ∈ RL(S ) iff there is a path in L directing from some node in S to v .
For convenience , we use parameter vector θ = ( pe)e∈E to denote the probabilities on all edges . The influence spread function σθ(S ) is defined as the expected size of the reachable set from S , that is
L
σθ(S ) :=
[ L ] · |RL(S)| ,
Pr θ where Prθ[L ] is the probability of yielding live edge graph L under vector θ . From [ 19 ] , we know that the influence spread function is non negative ( ∀S ⊆ V , σθ(S ) ≥ 0 ) , monotone ( ∀S ⊆ T ⊆ V , σθ(S ) ≤ σθ(T ) ) , and submodular ( ∀S ⊆ T ⊆ V , ∀v ∈ V σθ(S ∪ {v} ) − σθ(S ) ≥ σθ(T ∪ {v} ) − σθ(T ) ) .
The well known problem of Influence Maximization raised in [ 19 ] is stated in the following .
Problem 1
( Influence Maximization [ 19] ) . Given a graph G = ( V , E ) , parameter vector θ = ( pe)e∈E and a fixed budget k , we are required to find a seed set S ⊆ V of k vertices , such that the influence spread function σθ(S ) is maximized , that is ,
S
∗ θ := arg max S⊆V,|S|=k
σθ(S ) .
It has been shown that Influence Maximization problem is NP hard [ 19 ] . Since the objective function σθ(S ) is submodular , we have a ( 1 − 1 e ) approximation using standard greedy policy Greedy(G , k , θ ) in Algorithm 1 ( assuming a value oracle on function σθ(·) ) . Let Sg θ be the solution of Greedy(G , k , θ ) . As a convention , we assume that both optimal seed set S∗ θ in this paper are of fixed size k implicitly .
θ and greedy seed set Sg
On the other hand , it is proved by Feige [ 14 ] that such an approximation ratio could not be improved for k max cover problem , which is a special case of the influence maximization problem under the IC model .
However , the knowledge of the probability on edges is usually acquired by learning from the real world data [ 26 , 27 , 15 , 25 , 24 ] , and the obtained estimates always have some inaccuracy comparing to the true value . Therefore , it is natural to assume that , from observations of edge e , we can obtain the statistically significant neighborhood [ le , re ] , ie , the confidence interval where the true probability pe lies in with high probability . This confidence interval prescribes the uncertainty on the true probability pe of the edge e , and such uncertainty on edges may adversely impact the influence maximization task . Motivated by this , we study the problem of robust influence maximization as specified below .
Suppose for every edge e , we are given an interval [ le , re ] ( 0 ≤ le ≤ re ≤ 1 ) indicating the range of the probability , and the ground truth probability pe ∈ [ le , re ] of this edge is unknown . Denote Θ = ×e∈E[le , re ] as the parameter space of network G , and θ = ( pe)e∈E as the latent parameter vector . Specifically , let θ−(Θ ) = ( le)e∈E and θ+(Θ ) = ( re)e∈E as the minimum and maximum parameter vectors , respectively , and when the context is clear , we would only use θ− and θ+ . For a seed set S ⊆ V and |S| = k , define its robust ratio under parameter space Θ as g(Θ , S ) := min θ∈Θ
σθ(S ) σθ(S∗ θ )
,
( 1 ) where S∗ bility on every edge is given by θ .
θ is the optimal solution of size k when the proba
Given Θ and solution S , the robust ratio g(Θ , S ) characterizes the worst case ratio of influence spread of S and the underlying optimal one , when the true probability vector θ is unknown ( except knowing that θ ∈ Θ ) . Then , the Robust Influence Maximization ( RIM ) problem is defined as follows .
Problem 2
( Robust Influence Maximization ) .
Given a graph G = ( V , E ) , parameter space Θ = ×e∈E[le , re ] and a fixed budget k , we are required to find a set S ⊆ V of k vertices , such that robust ratio g(Θ , S ) is maximized , ie ,
S min θ∈Θ
∗ Θ := arg max S⊆V,|S|=k
σθ(S ) . σθ(S∗ θ ) The objective of this problem is to find a seed set S∗ g(Θ , S ) = arg max S⊆V,|S|=k
Θ that has the largest robust ratio , that is , S∗ Θ should maximize the worst case ratio between its influence spread and the optimal influence spread , when the true probability vector θ is unknown . When there is no uncertainty , which means Θ collapses to the true probability θ , we can see that the RIM problem is reduced back to the original influence maximization problem .
In RIM , the knowledge of the confidence interval is assumed to be the input . Another interpretation is that , it can be viewed as given an estimate of probability vector ˆθ = ( ˆpe)e∈E with a perturbation level δe on each edge e , such that the true probability pe ∈ [ ˆpe−δe , ˆpe +δe ] = [ le , re ] , which constitutes parameter space Θ = ×e∈E[le , re ] . Notice that , in reality , this probability could be obtained via edge samplings , ie , we make samples on edges and compute the fraction of times that the edge is live . On the other hand , we can also observe information cascades on each edge when collecting the trace of diffusion in the real world , so that the corresponding probability can be learned .
However , when the amount of observed information cascade is small , the best robust ratio maxS g(Θ , S ) for the given Θ can be low so that the output for a RIM algorithm does not have a good enough guarantee of the performance in the worst case . Then a natural question is , given Θ , how to further make samples on edges ( eg , activating source node u of an edge ( u , v ) and see if the sink node v is activated through edge e ) so that maxS g(Θ , S ) can be efficiently improved ? To be specific , how to make samples on edges and output Θ and S according to the outcome so that ( a ) with high probability the true value θ lies in the output parameter space Θ , where the randomness is taken according to θ , and ( b ) g(Θ , S ) is large . This sub problem is called Sampling for Improving Robust Influence Maximization , and will be addressed in Section 4 .
797 Algorithm 2 LUGreedy(G , k , Θ ) Input : Graph G = ( V , E ) , budget k , parameter space Θ =
×e∈E[le , re ] θ− ← Greedy(G , k , θ− ) θ+ ← Greedy(G , k , θ+ ) S∈
1 : Sg 2 : Sg 3 : return arg max
{σθ− ( S)}
Sg θ− ,Sg θ+
3 . ALGORITHM AND ANALYSIS FOR
RIM
Consider the problem of RIM , parameter space Θ = ×e∈E[le , re ] is given , and we do not know the true probability θ ∈ Θ . Let θ− = ( le)e∈E and θ+ = ( re)e∈E . Our first observation is that , when Θ is a single vector ( le = re , ∀e ∈ E ) , it is trivially reduced to the classical Influence Maximization problem . Therefore , we still have the following hardness result on RIM [ 19 , 14 ] :
Theorem 1 . RIM problem is NP hard , and for any ε > 0 , it is NP hard to find a seed set S with robust ratio at least 1 − 1 e + ε .
To circumvent the above hardness result , we develop algorithms that achieves reasonably large robust ratio . When we are not allowed to make new samples on the edges to improve the input interval , it is natural to utilize the greedy algorithm of submodular maximization in [ 19 ] ( ie , Algorithm 1 ) as the subroutine to calculate the solution . In light of this , we first propose Lower Upper Greedy Algorithm and the solution dependent bound for g(Θ , S ) , and then discuss g(Θ , S ) in the worst case scenario . 3.1 Lower Upper Greedy Algorithm
Given parameter space Θ = ×e∈E[le , re ] with the minimum and maximum parameter vectors θ− = ( le)e∈E and θ+ = ( re)e∈E , our Lower Upper Greedy algorithm ( LUGreedy(G , k , Θ ) ) is described in Algorithm 2 which outputs the best seed set SLU Θ for the minimum parameter vector θ− such that
SLU
Θ := arg max θ− ,Sg Sg θ+
S∈
{σθ− ( S)} .
( 2 )
To evaluate the performance of this output , we first define the gap ratio α(Θ ) ∈ [ 0 , 1 ] of the input parameter space to be
α(Θ ) :=
σθ− ( SLU Θ ) σθ+ ( Sg θ+ )
.
( 3 )
Then , LUGreedy achieves the following result :
Theorem 2
( solution dependent bound ) . Given a graph G , parameter space Θ and budget limit k , LUGreedy outputs a seed set SLU
Θ of size k such that 1 − 1 e
Θ ) ≥ α(Θ ) g(Θ , SLU
, where α(Θ ) :=
θ− ( SLU Θ ) σ θ+ ) . θ+ ( Sg σ
Proof . For any seed set S , g(Θ , S ) = minθ∈Θ
θ ) by definition . Obviously , it is a fact that σθ(S ) is monotone on θ for any fixed S . From the definition of optimal solutions
σθ ( S ) σθ ( S∗ and the greedy algorithm , we can get σθ(S∗ θ+ ) ≤ σ σθ+ ( S∗ g(Θ , S ) ≥ min θ∈Θ
θ ) ≤ σθ+ ( S∗ θ ) ≤
. Moreover , it can be implied that
θ+ ( Sg 1−1/e
1 − 1 e
σθ(S ) σθ+ ( Sg
θ+ )
.
θ+ )
1 − 1 e
,1 − 1 e
=
. = α(Θ),1 − 1
σθ− ( S ) σθ+ ( Sg θ+ ) e
Θ from LUGreedy , and it follows immediately
Use seed set SLU that g(Θ , SLU
Θ ) ≥ σ
θ− ( SLU Θ ) θ+ ( Sg θ+ ) σ We refer α(Θ)(1 − 1 e ) as the solution dependent bound of g(Θ , SLU Θ ) that LUGreedy achieves , because it depends on the solution SLU Θ . The good thing is that it can be evaluated once we have the solution , and then we know the robust ratio must be at least this lower bound . Note that the bound is good if α(Θ ) is not too small , and thus it in turn indicates that the influence spread σθ(SLU Θ ) we find has a good performance under any probability vector θ ∈ Θ .
Θ )/σθ+ ( Sg
( a ) Intuitively , Sg
It is worth remarking that the choice of using α(Θ ) = σθ− ( SLU θ+ ) as a measurement is for the following reasons : θ− is expected to be the best possible seed set we can find that maximizes σθ− ( · ) ; ( b ) Meanwhile , we consider Sg θ+ as a potential seed set for the later theoretical analysis ( in the proof of Theorem 6 ) , which requires the alignment of the same seed set for the numerator and denominator . Thus , α(Θ ) ≥ max{σθ− ( Sg In particular , when θ+ and θ− tend to the same value θ , RIM is tending towards the classical Influence Maximization , and thus the influence spread σθ(SLU Θ ) can be close to the best possible result σθ(Sg θ ) . The approach adopted by LUGreedy is similar to the sandwich approximation used in [ 23 ] .
θ+ )}/σθ+ ( Sg
θ− ) , σθ− ( Sg
θ+ ) .
The following example shows that for certain problem instances , the gap ratio α(Θ ) of LUGreedy could match the robust ratio g(Θ , SLU Θ ) , which also matches the best possible robust ratio max|S|=k g(Θ , S ) . i=1Ei where Ei = {(v1
Example 1 . Consider a graph G = ( V , E ) where the set of nodes are equally partitioned into 2k subsets V = ∪2k i=1Vi such that every Vi contains t + 1 nodes . Let Vi = {vj i | 1 ≤ i ) | 2 ≤ j ≤ t + 1} and set E = ∪2k i , vj j ≤ t + 1} . That is , every ( Vi , Ei ) forms a star with v1 i being the node at the center , all stars are disconnected from one another . For the parameter space we set the interval on every edge to be [ l , r ] . When LUGreedy selects k nodes , since all v1 i ’s have the same ( marginal ) influence spread , wlog , suppose that LUGreedy selects {v1 k} . Then if we set the true probability vector θ ∈ Θ st pe = l for every e ∈ ∪k i=1Ei , and pe = r for every e ∈ ∪2k i=k+1Ei , it is easy to check that max|S|=k g(Θ , S ) = g(Θ , SLU Θ ) = α(Θ ) = 1+tl 1+tr . The intuition from the above example is that , when there are many alternative choices for the best seed set , and these alternative seed sets do not have much overlap in their influence coverage , the gap ratio α(Θ ) is a good indicator of the best possible robust ratio one can achieve .
2 , . . . , v1
1 , v1
In the next subsection , we will show that the best robust ratio could be very bad for the worst possible graph G and parameter space Θ , which motivates us to do further sampling to improve Θ . 3.2 Discussion on the robust ratio
For the theoretical perspective , we show in this part that if we make no assumption or only add loose constraints to the
798 input parameter space Θ , then no algorithm will guarantee good performance for some worst possible graph G .
Theorem 3 . For RIM ,
1 . There exists a graph G = ( V , E ) and parameter space
Θ = ×e∈E[le , re ] , such that min θ∈Θ max |S|=k g(Θ , S ) = max |S|=k
2 . There exists a graph G = ( V , E ) , constant δ = Θ , 1 and parameter space Θ = ×e∈E[le , re ] where re−le ≤ δ for every e ∈ E , such that
= O n n
.
σθ(S ) σθ(S∗ θ ) k max |S|=k g(Θ , S ) = O
. n log n 1√ log n√
= O n
,
3 . Consider random seeds set ˜S of size k . There exists a graph G = ( V , E ) , constant δ = Θ and parameter space Θ = ×e∈E[le , re ] where re − le ≤ δ for every e ∈ E , we have n
σθ( ˜S )
σθ(S∗ θ ) max
Ω min θ∈Θ
E ˜S∈Ω where Ω is any probability distribution over seed sets of size k , and E ˜S∈Ω[· ] is the expectation of random set ˜S taken from the distribution Ω . n
In the first case , we allow the input Θ to be an arbitrary parameter space . It is possible that Θ = ×e∈E[0 , 1 ] for some graph G , which means there is no knowledge at all for edge probabilities . Then any seed set may achieve
approximation of the optimal solution in the worst O , k the parameter spaceflflθ+ − θ−flfl∞ ≤ δ , ie , for every e ∈ E , case . Intuitively , a selected seed set S may rarely activate other nodes ( ie , O(k) ) , while optimal solution ( to the latent θ ) may cover almost the whole graph ( ie , Ω(n) ) .
In the second case , an additional constraint is assumed on re − le ≤ δ , to see if we could obtain a better performance when δ is small . However , even though δ is in the order of O(1/n ) , the robust ratio can be as small as O(log n/n ) . The proof is related to the phase transition in the Erd˝os R´enyi graph for the emergence of giant component . In particular , if we have a graph G consisting of two disconnected , equal sized Erd˝os R´enyi random graphs with edge probabilities close to the critical value of generating a giant connected component , then whenever we select a seed in one component , that component could be just below the threshold resulting in O(log n ) influence spread while the other component is just above the threshold leading to Θ(n ) influence spread . Thus , the worst case ratio for any one node seed set is always O(log n/n ) . A similar discussion can be found in [ 18 ] .
In the third case , we allow the algorithm to be randomized , namely the output seed set ˜S is a random set of size k . Even in this case , the robust ratio could be as bad as O(log n/
√ n ) .
4 . SAMPLING FOR IMPROVING RIM
From the previous section , we propose LUGreedy algorithm to check the solution dependent bound of the robust ratio , and point out the worse case bound could be small if Θ is not assumed to be tight enough .
Theorem 3 in the previous subsection points out that the best possible robust ratio maxS g(Θ , S ) can be too low so that the output for RIM could not provide us with a satisfying seed set in the worst case . Then a natural question is : given the input Θ , can we make efficient samples on edges so that Θ is narrowed into Θ ( this means the true θ ∈ Θ with high probability ) and then output a seed set S that makes g(Θ , S ) large ? This problem is called Sampling for Improving RIM .
In this section we study both uniform sampling and adaptive sampling for improving RIM . According to the Chernoff ’s bound , the more samples we make on an edge , the narrower the confidence interval we get that guarantees the true probability to be located within the confidence interval with a desired probability of confidence . After sampling to get a narrower parameter space , we could use LUGreedy algorithm to get the seed set . 4.1 Uniform Sampling In Sampling for improving RIM , the goal is to design a sampling and maximization algorithm A that outputs Θ and S such that with high probability the robust ratio of S in Θ is large . After sampling edges , we can use Chernoff ’s bound to compute the confidence interval , and the confidence interval can be further narrowed down with more samples . However , the key issue is to connect the width of confidence interval with the stability of influence spread . We propose two ideas exploiting properties of additive and multiplicative confidence interval respectively to this issue , and incorporate into Uniform Sampling algorithm ( in Algorithm 3 ) with theoretical justification ( in Theorem 6 ) .
Our first idea is inspired by the following lemma from [ 12 ] to build the connection in the additive form .
Lemma 4
( Lemma 7 in [ 12] ) . Given graph G and parameter space Θ such that ∀θ1 , θ2 ∈ Θ , θ1 − θ2∞ ≤ δ , then , ∀S ⊆ V ,
|σθ1 ( S ) − σθ2 ( S)| ≤ mnδ .
2 nodes and n
We use a tight example ( in the order of |V | and |E| ) to illustrate the connection and give an insight of this lemma as follows . Consider graph G = ( V , E ) with |V | = n and |E| = m ( m * n ) . Let G be two disjoint cycles , each containing exactly n 2 edges . We arbitrarily assign the rest m − n edges between two cycles . Then , for every edge e in the cycle , the interval is le = re = 1 , and le = 0 , re = δ for those between two cycles , which constitutes Θ = ×e∈E[le , re ] . Suppose δ > 0 is sufficiently small , and let budget k = 1 . For any single node set S , it is easy to check that for θ− = ( le)e∈E , σθ− ( S ) = n 2 , and for θ+ = ( re)e∈E , σθ+ ( S ) ≈ n 2 n(m− n)δ in this case . As a comparison , from Lemma 4 , we know that |σθ+ ( S ) − σθ− ( S)| ≤ mnδ .
2 ( m−n)δ , thus |σθ+ ( S ) − σθ− ( S)| ≈ 1
2 + n
Therefore , the above lemma establishes the guidance that we may sample every edge for sufficient times to shrink their confidence intervals in Θ , and feed LUGreedy with Θ as same as solving RIM , then the performance is guaranteed by Theorem 2 , which matches our intuition that LUGreedy performs well with the satisfactory Θ .
On the other hand , our second idea is to use the multiplicative confidence interval to reduce the fluctuation of influence spread , then LUGreedy still applies . The next lemma is crucial to achieve this goal .
799 t
Algorithm 3 US RIM Input : Graph G = ( V , E ) , budget k , ( , γ ) Output : Parameter space Θout , seed set Sout 1 : for all e ∈ E do 2 : 3 : 4 : 5 : end for 6 : Θout ← ×e∈E[le , re ] 7 : Sout ← LUGreedy(G , k , Θout ) 8 : return ( Θout,Sout )
Sample e for t times , and observe x1 e , . . . , xt pe ← 1 e re ← min{1 , pe + δe} , le ← max{0 , pe − δe} i=1 xi t e , and set δe according to Theorem 6
Lemma 5 . Given graph G = ( V , E ) and parameter space If there exists λ ≥ 0 , for all edge e ∈ E , st , re ≤
Θ . ( 1 + λ)le , then for any nonempty set S ⊆ V , and
σθ+ ( S ) σθ− ( S )
≤ ( 1 + λ)n , max |S|=k min θ∈Θ
σθ(S ) σθ(S∗ θ )
≥ ( 1 + λ )
−n .
( 4 )
( 5 )
In this lemma , the ratio of influence spread can be bounded based on the relation of le and re in the multiplicative form . To unify both ideas mentioned above , we propose Uniform Sampling for RIM algorithm ( US RIM ) in Algorithm 3 , and the theoretical result is presented in Theorem 6 . Basically , the algorithm samples every edge with the same number of times , and use LUGreedy to obtain the seed set . We set different t and δe for the two ideas . Henceforth , we explicitly refer the first setting as Uniform Sampling with Additive form ( US RIM A ) , and the second one as Uniform Sampling with Multiplicative form ( US RIM M ) .
Theorem 6 . Given a graph G = ( V , E ) , budget k , and accuracy parameter , γ > 0 , let n = |V | and m = |E| , then for any unknown ground truth parameter vector θ = ( pe)e∈E , Algorithm US RIM outputs ( Θout,Sout ) such that g(Θout , Sout ) ≥
1 − 1 e
( 1 − ) , with Pr[θ ∈ Θout ] ≥ 1 − γ , where the randomness is taken according to θ , if we follow either of the two settings :
1 . Set t = 2m2n2 ln(2m/γ ) 2 . Assume we have p such that 0 < p ≤ mine∈E pe , set , and for all edge , set
, and for all e , set δe = k
2 mn ; k2 2
2n ln(1/1− ) + 1 t = 3 ln(2m/γ ) δe = 1 n pe log 1 γ . p k2 2 p 2
In general , the total number of samples summing up all edges is O( m3n2 log(m/γ ) ) for US RIM A , and O( mn2 log(m/γ ) ) for US RIM M with an additional constant p , the lower bound probability on all edge probabilities . The difference is that the former has a higher order of m , and the latter requires the knowledge of p and has an extra dependency on O(1/p ) . Since the sample complexity for both settings can be calculated in advance , one may compare the values and choose the smaller one when running the uniform sampling algorithm . An intuitive interpretation is that : ( 1 ) with high probability ( ≥ 1− γ ) , the algorithm always outputs an e − ) approximation solution guaranteed by US RIM A ; ( 1− 1 ( 2 ) if p = Ω( k2 m2 ) ( it is a loose assumption naturally satisfied in practice ) , we may choose US RIM M to achieve better sample complexity . 4.2 Non uniform and Adaptive Sampling
In a real network , the importance of edges in an influence diffusion process varies significantly . Some edges may have larger influence probability than others or connect two important nodes in the network . Therefore , in sampling it is crucial to sample edges appropriately . Moreover , we can adapt our sampling strategy dynamically to put more sampling effort on critical edges when we learn the edge probabilities more accurately over time . For convenience , given graph G = ( V , E ) , we define observation set M = {Me}e∈E as a collection of sets , where Me = {x1 e } denotes observed values of edge e via the first te samples on edge e . We allow that a parameter space Θ0 ⊆ ×e∈E[0 , 1 ] is given , which can be obtained by some initial samples M0 ( eg , uniformly sample each edge of the graph for a fixed number of times ) . e,··· , xte e , x2
The following lemma is used to calculate the confidence interval , which is a combination of additive and multiplicative Chernoff ’s Bound . We adopt this bound in the experiment since some edges in the graph have large influence probability while others have small ones , but using either additive or multiplicative bound may not be good enough to obtain a small confidence interval . The following bound is adapted from [ 1 ] and is crucial for us in the experiment . e , . . . , xte be samples of e in M = {Me}e∈E , and te be the sample e number . Given any γ > 0 , let confidence intervals for all edges be Θ = ×e∈E[le , re ] , such that , for any e ∈ E ,
Lemma 7 . For each e ∈ E , let Me = ( x1 le = min
+ ˆpe , 0
− ce e , x2
) c2 e 2
ˆpe + c2 e 4 re = max
ˆpe +
+ ce
+ ˆpe , 1
, c2 e 4 c2 e 2
3 te i=1 xi e te where ˆpe = γ . Then , with probability at least 1 − γ , the true probability θ = ( pe)e∈E satisfies that θ ∈ Θ .
, ce = te ln 2m
Our intuition for non uniform sampling is that the edges along the information cascade of important seeds determine the influence spread , and henceforth they should be estimated more accurately than other edges not along important information cascade paths . Thus , we use the following Information Cascade Sampling method to select edges . Starting from the seed set S , once node v is activated , v will try to activate its out neighbors . In other words , for every out edge e of v , denote te as the number of samples , then e will be sampled once to generate a new observation xte e based on the latent Bernoulli distribution with success probability pe , and te will be increased by 1 . The process goes on until the end of the information cascade .
We propose Information Cascade Sampling for RIM ( ICSRIM ) algorithm in Algorithm 4 , which adopts information cascade sampling described above to select edges .
Algorithm 4 is an iterative procedure . In the i th iteration , Lemma 7 is used to compute the confidence interval
800 Algorithm 4 ICS RIM(τ ) : Information Cascade Sampling Input : Graph G = ( V , E ) , budget k , initial sample M0 , threshold κ , γ .
Output : Parameter space Θout , seed set Sout 1 : i ← 0 2 : repeat 3 : Get Θi based on Mi ( see Lemma 7 ) . 4 : 5 : Mi+1 ← Mi 6 : 7 : 8 :
SLU Θi = LUGreedy(G , k , Θi ) for j = 1 , 2 , . . . , τ do
Do information cascade with the seed set SLU During the cascade , once v ∈ V is activated , sample Θi all out edges of v and update Mi+1
9 : end for i ← i + 1 10 : 11 : until α(Θi ) > κ 12 : Sout ← SLU Θi−1 13 : Θout ← Θi−1 14 : return ( Θout , Sout )
Since the robust ratio g(Θ , SLU
Θi from observation set Mi . Then according to Θi , we find the lower upper greedy set SLU Θi and use information cascade to update observation set Mi+1 by absorbing new samples . Θi ) cannot be calculated efficiently , we will calculate α(Θ ) ( defined in ( 3 ) ) instead . In our algorithm , we use a pre determined threshold κ ( κ ∈ ( 0 , 1 ) ) as the stopping criteria . Therefore , for Sout , guaranteed by Theorem 2 , and the true probability θ ∈ Θout holds with probability at least 1 − γ due to Lemma 7 . the robust ratio g(Θ , Sout ) ≥ α(Θ),1 − 1
> κ,1 − 1 e
is e
Compared with information cascade sampling method , calculating a greedy set is time consuming . Therefore in Algorithm 4 , we call LUGreedy once every τ rounds of information cascades to reduce the cost .
5 . EMPIRICAL EVALUATION
We conduct experiments on two datasets , Flixster1 and NetHEPT2 to verify the robustness of influence maximization and our sampling methods . 5.1 Experiment Setup 511 Data Description
Flixster . The Flixster dataset is a network of American social movie discovery service ( wwwflixstercom ) To transform the dataset into a weighted graph , each user is represented by a node , and a directed edge from node u to v is formed if v rates one movie shortly after u does so on the common movie . The dataset is analyzed in [ 2 ] , and the influence probability are learned by the topic aware model . We use the learning result of [ 2 ] in our experiment , which is a graph containing 29357 nodes and 212614 directed edges . There are 10 probabilities on each edge , and each probability represents the influence from the source user to the sink on a specific topic . Since most movies belong to at most two topics , we only consider 3 out of 10 topics in our experiment , and get two induced graphs whose number of edges are 1http://wwwcssfuca/∼sja25/personal/datasets/ 2http://researchmicrosoftcom/enus/people/weic/projectsaspx
23252 and 64934 respectively . For the first graph , probabilities of topic 8 are directly used as the ground truth parameter ( termed as Flixster(Topic 8) ) . For the second graph , we mix the probabilities of Topic 1 and Topic 4 on each edge evenly to obtain the ground truth probability ( termed as as Flixster(Mixed) ) . After removing isolated nodes , the number of nodes in the two graphs are 14473 and 7118 respectively .
In [ 2 ] , the probability for every edge ( u , v ) is learned by rating cascades that reach u and may or may not reach v , and in this cases we view that edge ( u , v ) are sampled . According to the data reported in [ 2 ] , on average every edge is sampled 318 times for their learning process . We then use 318 samples on each edge as our initial sample M0 .
NetHEPT . The NetHEPT dataset [ 11 ] is extensively used in many influence maximization studies . It is an academic collaboration network from the ” High Energy PhysicsTheory ” section of arXiv form 1991 to 2003 , where nodes represent the authors and each edge in the network represents one paper co authored by two nodes . It contains 15233 nodes and 58891 undirected edges ( including duplicated edges ) . We remove those duplicated edges and obtain a directed graph G = ( V , E),|V | = 15233,|E| = 62774 ( directed edges ) . Since the NetHEPT dataset does not contain the data of influence probability on edges , we set the probability on edges according to the weighted cascade model [ 19 ] as the ground truth parameter , ie , ∀e = ( v , u ) ∈ E , let xu be the in degree of u in the edge duplicated graph , ye be the number of edges connecting node v and u , then the true probability is pe = 1− ( 1− 1 )ye . Following the same baseline of Flixster , we initially sample each edge for 318 times as M0 . xu
512 Algorithms We test both the uniform sampling algorithm US RIM and the adaptive sampling algorithm ICS RIM , as well as another adaptive algorithm OES RIM ( Out Edge Sampling ) as the baseline ( to be described shortly ) . Each algorithm is given a graph G and initial observation set M0 . Note that the method to estimate the parameter space based on sampling results in Algorithm 3 and Algorithm 4 are different . In order to make the comparison meaningful , in this section , for all three algorithms , a common method according to Lemma 7 is used to estimate the parameter space . In all tests , we set the size of the seed set k = 50 . To reduce the running time , we use a faster approximation algorithm PMIA ( proposed in [ 10 ] ) to replace the well known greedy algorithm purposed in [ 19 ] in the whole experiment . The accuracy requirement γ = o(1 ) is set to be γ = m−0.5 where m is the number of edges .
US RIM . The algorithm is slightly modified from Algorithm 3 for a better comparison of performance . The modified algorithm proceeds in an iterative fashion : In each iteration , the algorithm makes τ1 samples on each edge , updates Θ according to Lemma 7 and computes α(Θ ) . The algorithm stops when α(Θ ) ≥ κ = 08 τ1 is set to 1000 , 1000 , 250 for NetHEPT , Flixster(Topic 8 ) , Flixster(Mixed ) , respectively to achieve fine granularity and generate visually difference of α(Θ ) in our results .
801 ICS RIM . As stated in Algorithm 4 , in each iteration , the algorithm do τ2 = 5000 times information cascade sampling based on the seed set from the last iteration , and then it updates Θ according to Lemma 7 , computes α(Θ ) and uses LUGreedy algorithm to compute the seed set for the next round . The algorithm stops when α(Θ ) ≥ κ = 08
OES RIM . This algorithm acts as a baseline , and it proceeds in the similar way to ICS RIM . Instead of sampling information cascades starting from the current seed set as in ICS RIM , OES RIM only sample out edges from the seed set . More specifically , in each iteration , the algorithm samples 5000 times of all out edges of the seed set from last iteration , for the three graphs respectively , and then it updates Θ according to Lemma 7 , computes α(Θ ) and uses LUGreedy algorithm to compute the seed set for the next round . Note that for OES RIM , α(Θ ) remains small ( with the increase of the number of samples ) and cannot exceed the threshold κ even the iteration has been processed for a large number of times , therefore we will terminate it when α(Θ ) is stable .
¯α as a Upper Bound
Theorem 2 shows that α(Θ),1 − 1 indicates that α(Θ),1 − 1
is a lower bound for is a reasonable indicator of the the robust ratio g(Θ , SLU Θ ) . We would also like to find some upper bound of g(Θ , SLU Θ ) : If the upper bound is reasonably close to the lower bound or match in trend of changes , it
513 e e robust ratio achieved by the LUGreedy output SLU θ ∈ Θ , we define ¯α(Θ , θ ) = ¯α(Θ , θ ) is an upper bound for g(Θ , SLU
Θ . For any σθ(LU Θ ) θ ) . The following shows that σθ ( Sg
Θ ) :
¯α(Θ , θ ) =
σθ(SLU Θ ) σθ(Sg θ )
≥ σθ(SLU Θ ) σθ(S∗ θ )
≥ min θ∈Θ
σθ ( SLU Θ ) σθ ( S∗ θ )
= g(Θ , SLU
Θ ) .
The next question is how to find a θ = ( θe)e∈E ∈ Θ to make the upper bound ¯α(Θ , θ ) as small as possible . In our experiments , we use the following two heuristics and take their minimum .
The first heuristic borrows the intuition from Example 1 , which says that the gap ratio α(Θ ) is close to the robust ratio g(Θ , SLU Θ ) when ( a ) there are two disjoint seed sets with similar influence spead , ( b ) their cascade overlap is small , and ( c ) the reachable edges from one seed set use lower end parameters values while the reachable edges from the other seed set use upper end parameters . Thus in our heuristic , we use PMIA algorithm to find another seed set S of k nodes when we remove all nodes in SLU Θ . We then Θ and S for an equal do information cascades from both SLU number of times . Finally , for every edge e , if it is sampled more in the information cascade with seed set SLU Θ than with S , we set θe = le , otherwise we set θe = re . The second heuristic is a variant of the first one , where we run a number of information cascades from SLU Θ , and for any edge e that is sampled in at least 10 % of cascades , we set θe = le , otherwise we set θe = re .
Other more sophisticated heuristics are possible , but it could be a separate research topic to find tighter upper bound for the robust ratio , and thus we only use the simple combination of the above two in this paper , which is already indicative . We henceforth use ¯α(Θ ) to represent the upper bound found by the minimum of the above two heuristics .
Figure 1 : α(Θ ) and ¯α(Θ ) for different widths of confidence interval W .
5.2 Results
521 α(Θ ) and ¯α(Θ ) with Predetermined Intervals In the first experiment we explore the relationship between the width of confidence interval Θ = ×e∈E[le , re ] and α(Θ ) together with ¯α(Θ ) . For a given interval width W , we set le = min{pe − W 2 , 1} ∀e ∈ E , where pe is the ground truth probability of e . Then we calculate α(Θ ) and ¯α(Θ ) . We vary the width W to see the trend of changes of α(Θ ) and ¯α(Θ ) . Figure 1 reports the result on the three graphs with seed set size k = 50 .
2 , 0} , re = max{pe + W
First , we observe that as the parameter space Θ becomes wider , the value of both α(Θ ) and ¯α(Θ ) become smaller , which matches our intuition that larger uncertainty results in worse robustness . Second , there is a sharp decrease of α(Θ ) between W ∈ [ 0 , 0.1 ] and a much slower decrease afterwards for all three graphs . The decrease of ¯α(Θ ) is not as sharp as that of α(Θ ) but the decrease also slows down with larger W after 02 The overall trend of α(Θ ) and ¯α(Θ ) suggests that the robust ratio may be sensitive to the uncertainty of the parameter space , and only when the uncertainty of the parameter space reduces to a certain level that we can obtain reasonable guarantee on the robustness of our solution .
As a comparison , we know that the average number of samples on each edge is 318 for the learned probabilities in the Flixster dataset . This corresponds to an average interval width of 0.293 for topic 8 and 0.265 for the mixed topic . At these interval widths , α(Θ ) values are approximately 0.04 and 0.08 respectively for the two graphs , and ¯α(Θ ) are approximately 0.12 and 0.2 respectively . This means that , even considering the upper bound ¯α(Θ ) , the robust ratio is pretty low , and thus the learned probabilities reported in [ 2 ] may result in quite poor performance for robust influence maximization .
Of course , our result of α(Θ ) and ¯α(Θ ) is only targeted at the robustness of our LUGreedy algorithm , and there could exist better algorithm having higher robustness performance at the same uncertainty level . Finding a better RIM algorithm seems to be a difficult task , and we hope that our study could motivate more research in searching for
802 Figure 2 : α(Θ ) and ¯α(Θ ) for different average number of samples per edge on graph NetHEPT .
Figure 3 : α(Θ ) and ¯α(Θ ) for different average number of samples per edge on graph Flixster(Topic 8 ) . such better RIM algorithms . Besides SLU Θ , we also independently test the classical greedy seed set Sg θ for θ = ( pe)e∈E on the lower parameter vector θ− ( that is θ− ( Sg θ ) σ θ+ ) versus θ+ ( Sg σ α(Θ) ) , and the average performance on each data point is 2.45 % , 1.05 % , 6.11 % worse than SLU Θ for Flixster(Mixed ) , Flixster(Topic 8 ) and NetHEPT , respectively . Therefore , it Θ outperforms σg shows that SLU θ in the worse case scenario , and henceforth we only use SLU Θ in the following experiments .
522 Results for Sampling algorithms Figures 2 , 3 and 4 reports the result of α = α(Θ ) and ¯α = ¯α(Θ ) for the three tested graphs respectively , when the average number of samples per edge increases . For better presentation , we trim all figures as long as α(US RIM ) = 07 ( For example , in Flixster(Topic 8 ) , US RIM requires 77318 samples in average for α to reach 0.8 , while ICS RIM only needs 33033 , and for OES RIM α sticks to 0118 ) For the sampling algorithms , after the i th iteration , the observation set is updated from Mi−1 to Mi , and the average number of samples per edge in the network is calculated . Markers on each curve in these figures represent the result after one iteration of the corresponding sampling algorithm . The results on all three graphs are consistent . First , for each pair of α(Θ ) and ¯α(Θ ) , even though there is still some gap , indicating either the lower bound or the upper bound may not be tight yet , the trends on both α(Θ ) and ¯α(Θ ) are consistent : Both increase with the number of samples , even with similar slopes at each point ; and among different algorithms , the ranking order and relative change are consistent with both α(Θ ) and ¯α(Θ ) . All these consistency suggests that gap ratio α(Θ ) could be used as an indicator for the robustness of Algorithm LUGreedy , and it is reasonable to use α(Θ ) in comparing the performance of different algorithms . Second , comparing the performance of three algorithms , we see that both US RIM and ICS RIM are helpful in improving the robust ratio of the selected seed set , and ICSRIM is better than US RIM , especially when the sample size increases . The baseline algorithm OES RIM , however , performs significantly poorer than the other two , even though it is also an adaptive algorithm as ICS RIM . The reason is
Figure 4 : α(Θ ) and ¯α(Θ ) for different average number of samples per edge on graph Flixster(Mixed ) . that , the lower upper greedy set SLU Θ changes little after a certain number of iterations in OES RIM , and thus only a small number of edges ( out edges of SLU Θ ) are repeatedly sampled . The probabilities on these edges are already estimated very accurately while other edge probabilities are far from accurate . It is the inaccurate edges that make α(Θ ) and the best robust ratio small . In contrast , ICS RIM uses information cascades to sample not only edges directly connecting to the seed set but also edges that can be potentially reached . This suggests that it is important for a sampling method to balance the sampling between critical edges and other potentially useful edges in order to achieve better robustness in influence maximization .
Overall , the results suggest that information cascade based sampling method stands out as a competitive choice when we can adaptively sample more edges to achieve better robustness . If adaptive sampling is not possible , predetermined uniform sampling may also perform reasonably well .
803 6 . CONCLUSION
In this paper , we propose the study of robust influence maximization to address the impact of uncertainty in edge probability estimates that would inevitably occur in practice to the influence maximization task . We propose the LUGreedy algorithm with a proven solution dependent bound , and further propose sampling methods , in particular information cascade based adaptive sample method to effectively reduce the uncertainty and increase the robustness of the LUGreedy algorithm . The experimental results validate the usefulness of the LUGreedy algorithm and the information cascade based sampling method ICS RIM . Moreover , the results indicate that robustness may be sensitive to the uncertainty of parameter space , and learning algorithms may need more data to achieve accurate learning results for robust influence maximization .
Our work opens up a number of research directions . First , it is unclear what could be the upper bound of the best robust ratio given an actual network and learned parameter space . Answering this question would help us to understand whether robust influence maximization is intrinsically difficult for a particular network or it is just our algorithm that does not perform well . If it is the latter case , then an important direction is to design better robust influence maximization algorithms . Another direction is how to improve sampling methods and learning methods to achieve more accurate parameter learning , which seems to be crucial for robust influence maximization . In summary , our work indicates a big data challenge on social influence research — the data on social influence analysis is still not big enough , such that the uncertainty level in model learning may result in poor performance for influence maximization . We hope that our work could encourage further researches to meet this challenge from multiple aspects including data collection , data analysis , and algorithm design .
Acknowledgment The research of Wei Chen is partially supported by the National Natural Science Foundation of China ( Grant No . 61433014 ) .
7 . REFERENCES [ 1 ] A . Badanidiyuru , R . Kleinberg , and A . Slivkins .
Bandits with knapsacks . In FOCS 2013 .
[ 2 ] N . Barbieri , F . Bonchi , and G . Manco . Topic aware social influence propagation models . Knowledge and information systems , 37(3):555–584 , 2013 .
[ 3 ] A . Ben Tal and A . Nemirovski . Robust optimization–methodology and applications . Mathematical Programming , 92(3):453–480 , 2002 .
[ 4 ] C . Borgs , M . Brautbar , J . T . Chayes , and B . Lucier .
Maximizing social influence in nearly optimal time . In SODA 2014 .
[ 5 ] S . Bubeck , R . Munos , and G . Stoltz . Pure exploration in finitely armed and continuous armed bandits . Theoretical Computer Science , 412:1832–1852 , 2011 . [ 6 ] C . Budak , D . Agrawal , and A . El Abbadi . Limiting the spread of misinformation in social networks . In WWW 2011 .
[ 7 ] S . Chen , T . Lin , I . King , M . R . Lyu , and W . Chen .
Combinatorial pure exploration of multi armed bandits . In NIPS 2014 .
[ 8 ] W . Chen , L . V . Lakshmanan , and C . Castillo .
Information and influence propagation in social networks . Synthesis Lectures on Data Management , 5(4):1–177 , 2013 .
[ 9 ] W . Chen , T . Lin , Z . Tan , M . Zhao , and X . Zhou .
Robust influence maximization . CoRR , abs/1601.06551 , 2016 .
[ 10 ] W . Chen , C . Wang , and Y . Wang . Scalable influence maximization for prevalent viral marketing in large scale social networks . In KDD 2010 .
[ 11 ] W . Chen , Y . Wang , and S . Yang . Efficient influence maximization in social networks . In KDD 2009 .
[ 12 ] W . Chen , Y . Wang , and Y . Yuan . Combinatorial multi armed bandit and its extension to probabilistically triggered arms . CoRR , abs/1407.8339 , 2014 .
[ 13 ] P . Domingos and M . Richardson . Mining the network value of customers . In KDD 2001 .
[ 14 ] U . Feige . A threshold of ln n for approximating set cover . Journal of the ACM ( JACM ) , 45(4):634–652 , 1998 .
[ 15 ] A . Goyal , F . Bonchi , and L . V . Lakshmanan . Learning influence probabilities in social networks . In WSDM 2010 .
[ 16 ] A . Goyal , W . Lu , and L . V . Lakshmanan . Celf++ : optimizing the greedy algorithm for influence maximization in social networks . In WWW 2011 .
[ 17 ] X . He and D . Kempe . Robust influence maximization .
In KDD 2016 .
[ 18 ] X . He and D . Kempe . Stability of Influence
Maximization . ArXiv e prints , Jan . 2015 .
[ 19 ] D . Kempe , J . Kleinberg , and ´E . Tardos . Maximizing the spread of influence through a social network . In KDD 2003 .
[ 20 ] A . Krause , H . B . McMahon , C . Guestrin , and
A . Gupta . Robust submodular observation selection . JMLR , 9:2761–2801 , 2008 .
[ 21 ] S . Lei , S . Maniu , L . Mo , R . Cheng , and P . Senellart .
Online influence maximization . In KDD 2015 .
[ 22 ] J . Leskovec , A . Krause , C . Guestrin , C . Faloutsos ,
J . VanBriesen , and N . Glance . Cost effective outbreak detection in networks . In KDD 2007 .
[ 23 ] W . Lu , W . Chen , and L . V . Lakshmanan . From competition to complementarity : comparative influence diffusion and maximization . In VLDB 2015 . [ 24 ] P . Netrapalli and S . Sanghavi . Learning the graph of epidemic cascades . In SIGMETRICS 2012 .
[ 25 ] M . G . Rodriguez , D . Balduzzi , and B . Sch¨olkopf .
Uncovering the temporal dynamics of diffusion networks . In ICML 2011 .
[ 26 ] K . Saito , R . Nakano , and M . Kimura . Prediction of information diffusion probabilities for independent cascade model . In Knowledge Based Intelligent Information and Engineering Systems , pages 67–75 . Springer , 2008 .
[ 27 ] J . Tang , J . Sun , C . Wang , and Z . Yang . Social influence analysis in large scale networks . In KDD 2009 .
[ 28 ] Y . Tang , X . Xiao , and Y . Shi . Influence maximization : near optimal time complexity meets practical efficiency . In SIGMOD 2014 .
804
