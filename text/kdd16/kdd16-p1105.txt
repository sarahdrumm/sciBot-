Asymmetric Transitivity Preserving Graph Embedding
Mingdong Ou
Tsinghua University oumingdong@gmail.com
Peng Cui
Tsinghua University cuip@tsinghuaeducn
Jian Pei
Simon Fraser University jpei@cssfuca
Ziwei Zhang
Tsinghua University
Wenwu Zhu
Tsinghua University zhangziwei1993@126.com wwzhu@tsinghuaeducn
ABSTRACT Graph embedding algorithms embed a graph into a vector space where the structure and the inherent properties of the graph are preserved . The existing graph embedding methods cannot preserve the asymmetric transitivity well , which is a critical property of directed graphs . Asymmetric transitivity depicts the correlation among directed edges , that is , if there is a directed path from u to v , then there is likely a directed edge from u to v . Asymmetric transitivity can help in capturing structures of graphs and recovering from partially observed graphs . To tackle this challenge , we propose the idea of preserving asymmetric transitivity by approximating high order proximity which are based on asymmetric transitivity . In particular , we develop a novel graph embedding algorithm , High Order Proximity preserved Embedding ( HOPE for short ) , which is scalable to preserve high order proximities of large scale graphs and capable of capturing the asymmetric transitivity . More specifically , we first derive a general formulation that cover multiple popular highorder proximity measurements , then propose a scalable embedding algorithm to approximate the high order proximity measurements based on their general formulation . Moreover , we provide a theoretical upper bound on the RMSE ( Root Mean Squared Error ) of the approximation . Our empirical experiments on a synthetic dataset and three realworld datasets demonstrate that HOPE can approximate the high order proximities significantly better than the state ofart algorithms and outperform the state of art algorithms in tasks of reconstruction , link prediction and vertex recommendation .
Keywords asymmetric transitivity , directed graph , high order proximity , graph embedding
1 .
INTRODUCTION
Nowadays , more and more applications are based on larger and larger networks and graphs . It is well recognized that
Figure 1 : Asymmetric Transitivity in Real Data . Given a pair of vertexes ( u , v ) , the horizontal axis is the Number of 2 hop paths from u to v . For the red ( or black ) curve with circle ( or star ) marker , the vertical axis represents the cumulative forward ( or backward ) transiting probability , that is the connection probability from u ( or v ) to v ( or u ) , when the number of 2 hop paths is less than corresponding horizontal axis value . The left figure is the statistics from the social network of Tencent Weibo , and the right figure is the statistics from the social network of Twitter . As the two red curves increases monotonically , we can claim that the more paths from u to v there are , the more probable it is that there exists an edge from u to v , which reflects the transitivity assumption . The forward connection probability is much larger than the backward connection probability , which reflects the asymmetry assumption . In summary , asymmetric transitivity can be widely observed in real datasets . graph data is sophisticated and challenging . To process graph data effectively , the first critical challenge is graph data representation , that is , how to represent graphs properly so that advanced analytic tasks , such as pattern discovery , analysis , and prediction , can be conducted efficiently in both time and space . However , graph representation in general remains an open problem .
Recently , the graph embedding paradigm [ 35 ] is proposed to represent vertices of a graph in a low dimensional vector space while the structures ( ie edges and other high order structures ) of the graph can be reconstructed in the vector space . With proper graph embedding , we can easily apply classic vector based machine learning techniques to process graph data . Meanwhile , it effectively facilitates the parallelization of graph analysis by decoupling highly correlated vertices into independent vectors . However , most of the existing graph embedding methods target on undirected
1105 ( cid:2873 )
0.09
0
( cid:152)(cid:2870 )
0.3
0.3
( cid:2871 )
0.3
( cid:2874 )
0.18
0.3
0.3
0
( cid:2872 )
0.3
( cid:4668)(cid:3047)(cid:481)(cid:2203)(cid:2870)(cid:2202)(cid:481 ) ( cid:2873)(cid:3046)(cid:481)(cid:2203)(cid:2874)(cid:2201)(cid:4669 )
HOPE
( cid:4668)(cid:2203)(cid:2871)(cid:2202)(cid:481)(cid:2203)(cid:2872)(cid:2202 ) } ( cid:2872)(cid:3046 ) ( cid:2870)(cid:3046 )
( cid:2203)(cid:2873)(cid:2202 )
( cid:2203)(cid:2201 ) ( cid:2203)(cid:2874)(cid:2202 ) ( cid:2871)(cid:3046 )
Figure 2 : Framework of Asymmetric Transitivity Preserving Graph Embedding . The left is a input directed graph , and the right is the embedding vector space of the left graph , which is learned by our algorithm . In the left directed graph , the solid arrows represent observed directed edges and the numbers along with the solid arrows are the edge weights . The numbers along with the dashed arrows is the Katz proximity , which is highly correlated with asymmetric transitivity . For example , according to asymmetric transitivity , the two paths , v1 → v3 → v6 and v1 → v4 → v6 , suggest that there may exist v1 → v6 . Then , the Katz proximity from v1 to v6 is relatively large , ie 018 On the other hand , because v6 → v1 is in the opposite direction , v1 → v3 → v6 and v1 → v4 → v6 do not suggest v6 → v1 . Then , the Katz proximity from v6 to v1 is small , ie 0 . i and ut In the embedding space , the arrows represent the embedding vectors of vertices , where row vectors us i represent the source vector and target vector of vi respectively . We use the inner product between us i and ut j ( ie us 6 are all zero vectors . We can find that the approximated proximity perfectly preserve the Katz proximity . For example , with respect to source vector us 5 , which preserves the rank order of corresponding Katz proximities .
) as the approximated proximity from vi to vj . Note that ut
1 , the inner product with target vector ut
6 is larger than with ut
1 , ut
2 , us
5 and us
. i · ut j graphs . Directed graphs , a natural and popularly used representation of data in many applications , such as social networks and webpage networks , are largely untouched .
Can we straightforwardly apply undirected graph embedding methods on directed graphs ? The answer is no due to a fundamentally different characteristic of directed graphs : asymmetric transitivity .
Transitivity is a common characteristic of undirected and directed graphs [ 29 ] ( see Figure 1 ) . In undirected graphs , if there is an edge between vertices u and w , and one between w and v , then it is likely that u and v are connected by an edge . Transitivity plays a key role in graph inference and analysis tasks , such as calculating similarities between nodes [ 16 , 14 ] and measuring the importance of nodes . Transitivity is symmetric in undirected graphs . However , transitivity is asymmetric in directed graphs . If there is a directed link from u to w and a directed link from w to v , there is likely a directed link from u to v , but not from v to u . More generally , If there is a directed path from u to v , there is likely a directed link from u to v , but not from v to u .
Preserving the symmetric transitivity in undirected graphs in an embedding space is natural and straightforward , as most of the distance metrics defined in the vector space possess the property of symmetric transitivity . However , how to preserve the asymmetric transitivity of directed graphs in a vector space is much more challenging .
Recently , a paucity of studies [ 37 , 20 , 3 , 2 , 24 ] focus on directed graph embedding . In order to reflect the asymmetric property in vector space , these methods design asymmetric metrics on the embedding vectors . Unfortunately , those asymmetric metrics are not fully transitive , which severely limit the capability of the learned embedding space in reflecting the structure of graphs as well as supporting graph inference and analysis .
In this paper , we tackle the challenging problem of asymmetric transitivity preserving graph embedding . Our major idea is that we learn two embedding vectors , source vector and target vector , for each node to capture asymmetric edges , as illustrated in Figure 2 . Then , for a directed link from v1 to v2 without the reverse link from v2 to v1 , we can assign similar values to v1 ’s source vector and v2 ’s target vector , and assign very different values to v1 ’s target vector and v2 ’s source vector . In this way , the feasibility of asymmetry transitivity is preserved . The key challenge is how well the asymmetric transitivity of directed graphs can be preserved in the embedding learning .
From the learning perspective , a good way is to let the learned embedding vectors directly approximate a target measure reflecting asymmetric transitivity of graphs . From the graph embedding pserspective , the property of asymmetric transitivity leads to the assumption that the more and the shorter paths from vi to vj , the more similar should be vi ’s source vector and vj ’s target vector . This assumption coincides with high order proximities of nodes in graphs , such as Katz [ 16 ] and rooted pagerank [ 30 ] . What is more , these high order proximities are defined to be asymmetric in
1106 directed graphs . Thus , in its place , we propose to use highorder proximities of nodes as the target measure , resulting in a novel directed graph embedding algorithm , High Order Proximity preserved Embedding ( HOPE ) .
In this model , we theoretically derive a general form covering multiple high order proximities . Interestingly , the general form is consistent with the formulation of generalized SVD . Based on this , we propose a scalable embedding algorithm for large scale graphs by avoiding the time consuming computation of high order proximities . Moreover , we derive a theoretical upper bound on the approximation error of HOPE , which is used to estimate the embedding quality in theory and determine embedding dimensions automatically . To verify the advantages of our algorithm , we conduct experiments on both synthetic data and 3 real datasets . The experiments show that our method consistently and significantly outperforms the state of the art baselines in several tasks , including high order proximity approximation , graph reconstruction , link prediction and vertex recommendation .
The main contributions of this paper are as follows : • We propose a high order proximity preserved embedding ( HOPE ) method to solve the challenging problem of asymmetric transitivity in directed graph embedding .
• We derive a general form covering multiple commonly used high order proximities , enabling the scalable solution of HOPE with generalized SVD .
• We provide an upper bound on the approximation er ror of HOPE .
• Extensive experiments are conducted to verify the usefulness and generality of the learned embedding in various applications .
The rest of the paper is organized as follows . In Section 2 , we review the related work . We develop our method in Section 3 and report the experimental results in Section 4 . We conclude the paper in Section 5 .
2 . RELATED WORK 2.1 Graph Embedding
Graph embedding technology has been widely studied in the fields of dimensionality reduction [ 15 , 27 , 33 , 1 , 8 ] , natural language processing [ 18 ] , network analysis [ 11 ] and so on .
For dimensionality reduction , adjacency matrices of graphs are constructed from the feature similarity ( distance ) between samples [ 35 ] . And the graph embedding algorithms aim to preserve the feature similarity in the embedded latent space . For example , Laplacian Eigenmaps ( LE ) [ 1 ] aims to learn the low dimensional representation to expand the manifold where data lie . Locality Preserving Projections ( LPP ) [ 8 ] is a linearization variant of LE which learns a linear projection from feature space to embedding space . Besides , there are many other graph embedding algorithms for dimensionality reduction , including non linear [ 33 , 27 ] , linear [ 15 , 6 ] , kernlized [ 28 ] and tensorized [ 36 ] algorithms . All of these algorithms are based on undirected graphs derived from symmetric similarities . Thus , they cannot preserve asymmetric transitivity .
In the field of natural language processing , the graph of words is often used to learn the representation of words [ 19 , 18 , 23 ] . Mikolov et . al . [ 19 ] propose to ultilize the context of words to learn representation , which has been proved equivalent to factorizing word context matrix [ 18 ] . Pennington et . al . [ 23 ] exploit a word word co occurrance matrix .
In network analysis , Hoff et . al . [ 11 ] first propose to learn latent space representation of vertexes in graph and the probability of a relation depends on the distance between vertexes in the latent space , and they apply it to link prediction problem [ 10 ] . Handcock et . al . [ 7 ] propose to apply the latent space approach to clustering in graph . And Zhu et . al . [ 37 ] propose to address the classification problem in graph with graph embedding model . While early graph embedding works focus on modeling the observed first order relationship ( ie edges in graph ) between vertexes , some recent works try to model the directed higher order relationships between vertexes in sparse graphs [ 24 , 2 ] . GraRep [ 2 ] is related to our work . But , it cannot fully capture transitivity . Moreover , it is not scalable for large scale graph . 2.2 Directed Graph
Theoretically , any type ( undirected and directed ) of graph can be represented as directed graph . So , modeling directed graph is a critical problem for graph analysis . Holland et . al . [ 12 ] propose the p1 distribution model to capture the structural properties in directed graph , including the atrractiveness and expansiveness of vertexes and the reciprocation of edges . Besides these properties , Wang et . al . [ 34 ] take the group information of vertexes into consideration . Recently , some works adopt graph embedding [ 4 , 26 , 25 , 21 ] to model directed graphs . Chen et . al . [ 4 ] learn the embedding vectors in Euclidean space with locality property preserved . Perrault Joncas et . al . [ 26 , 25 ] and Mousazadeh et . al . [ 21 ] learn the embedding vectors based on Laplacian type operators and preserve the asymmetry property of edges in a vector field . However , all of these methods cannot preserve asymmetry property in embedding vector space .
3 . HIGH ORDER PROXIMITY PRESERVED
EMBEDDING
In this section , we will derive how to preserve high order proximities in the embedding space . Before introducing the detailed derivation , we will clarify the symbols and definition that will be used . 3.1 Notations We define a directed graph as G = {V , E} . V is the vertex set . Let V = {v1,··· , vi,··· , vN} where N is the number of vertexes . E is the directed edge set . eij = ( vi , vj ) ∈ E represents a directed edge from vi to vj . The adjacency matrix is denoted as A . We define a high order proximity matrix as S , where Sij is the proximity between vi and vj . And U = [ Us , Ut ] is the embedding matrix , where the i th row , ui , is the embedding vector of vi . Us , Ut ∈ RN×K are the source embedding vectors and target embedding vectors respectively , where K is the embedding dimensions . For any matrix B , the lowercase symbol bi represents the i th row of B , and Bij represents the element at i th row and j th column .
1107 with probability α . The fomula is :
SRP R = α · SRP R
· P + ( 1 − α ) · I ij
( 7 ) , where α ∈ [ 0 , 1 ) is the probability to randomly walk to a neighbor , and P is the probability transition matrix satisfying that fi
N i=1 Pij = 1 .
Then , we can get :
SRP R = ( 1 − α ) · ( I − αP )
−1
So , for rooted PageRank ,
Mg = I − αP Ml = ( 1 − α ) · I
.
( 8 )
( 9 ) ( 10 )
Common Neighbors ( CN ) . SCN counts the number of vertexes connecting to both vi and vj . For directed graph , SCN is the number of vertexes which is the target of an edge from vi and the source of an edge to vj . Formally , ij ij
.
As Figure 2 shows , the embedding vectors can well pre
So , for common neighbors ,
( 1 )
SCN = A2
Table 1 : General Formulation for High order Proximity Measurements
Proximity Measurement
Katz
Personalized Pagerank
Common neighbors
Adamic Adar
3.2 Problem Definition
Ml β · A
Mg I − β · A I − αP ( 1 − α ) · I A · D · A
A2
I I
In this paper , we focus on the directed graph embedding problem . It aims to represent the vertexes in the numerical vector space , where asymmetric transitivity is preserved . As high order proximities are derived from asymmetric transitivity , we propose to preserve the asymmetric transitivity by approximating high order proximity . Formally , we adopt the L2 norm below as the loss function which need to be minimized : min'S − Us · Ut.'2
F serve the asymmetric transitivity . 3.3 High order proximities
Many high order proximity measurements in graph can reflect the asymmetric transitivity . Moreover , we found that many of them share a general formulation which will facilitate the approximation of these proximities , that is :
−1 S = M g
· Ml
( 2 )
, where Mg and Ml are both polynomial of matrices . Below , we will introduce some popular proximity measurements and transform them into this formulation .
Katz Index [ 16 ] . This index is an ensemble of all paths , which is a weighted summation over the path set between two vertexes . The weight of a path is a exponential function of its length . Actually , the formula of Katz index can also be written as a recurrent formula :
∞ .
SKatz =
β · Al = β · A · SKatz + β · A
( 3 ) l=1
, where β is a decay parameter . It determines how fast the weight of a path decay when the length of path grows . β should be properly set to preserve the series converging . Actually , β must be smaller than the spectral radius of adjacency matrix .
Then , we can get that :
SKatz = ( I − β · A )
−1 · β · A
, where I is a identity matrix .
For Katz index ,
Mg = I − β · A Ml = β · A
( 4 )
( 5 )
( 6 )
Rooted PageRank ( RPR ) . SRP R is the probability that a random walk from node vi will locate at vj in the steady state . Consider one step of a random walk from vi , the random walker randomly jumps to one of the neighbor of current node with probability α , and jumps back to vi ij
Mg = I Ml = A2
( 11 )
( 12 )
( 13 )
Adamic Adar ( AA ) . Adamic Adar is a variant of common neighbors . Unlike common neighbors , Adamic Adar assigns each neighbor a weight , that is the reciprocal of the degree of the neighbor . This means that the more vertexes one vertex connected to , the less important it is on evaluating the proximity between a pair of vertex . Formally ,
SAA = A · D · A
, where D is a diagonal matrix ,
.
Dii = 1/
( Aij + Aji ) j
.
So , for Adamic Adar ,
Mg = I Ml = A · D · A
( 14 )
( 15 )
( 16 ) ( 17 )
We list the corresponding formula of Mg and Ml of each proximity measurement in Table 1 . Note that Mg and Ml are both the polynomial of adjacency matrix or its variants . The above proximity measurements can be classified into two types , ie global proximity and local proximity . Global proximities , ie Katz index and rooted PageRank , are derived from a recurrent formula , which make the proximity can preserve global asymmetric transitivity . And local proximities , ie common neighbors and Adamic Adar , have no recurrent structure and just preserve the asymmetric transitivity in the local structure , which we call it local asymmetric transitivity . Intuitively , Mg is highly related to global asymmetric transitivity . Mg has a formulation like I− α· B , where α is a parameter and B is a transition matrix . The larger the alpha is , the easier the observed relationship ( the edges of the graph ) is to be transited in the graph . When α = 0 , the observed relationship can just transit in a subgraph whose range is limited by the order of Ml .
1108 N .
3.4 Approximation of High Order Proximity The objective in Equation ( 1 ) aims to find an optimal rank K approximation of the proximity matrix S . According to [ 13 ] , the solution is to perform SVD ( Singular Value Decomposition ) on S and use the largest K singular value and corresponding singular vectors to construct the optimal embedding vectors . Formally , if
S =
.
σivs i vt i
( 18 ) i=1
, where {σ1 , σ2,··· , σN} is the singular values sorted in decreasing order , vs i are corresponding singular vectors of σi , i and vt then , we can get the optimal embedding vectors as :
√ Us = [ √ Ut = [
σ1 · vs σ1 · vt
1,··· , 1,··· ,
√ σK · vs K ] √ σK · vt K ]
( 19 )
( 20 )
.
However , this solution need to calculate the proximity matrix S . Even for sparse adjacency matrix , the time complexity of matrix inversion is up to O(N 3 ) . And the matrix polynomial operation on adjacency matrix will make S much denser than adjacency matrix A which will also make the SVD on S very expensive . Thus , the solution is not feasible for large scale graphs .
As the calculation of S is the efficiency bottleneck and S is just the intermediate product in our problem , we propose a novel algorithm to avoid the calculation of S and learn the embedding vectors directly . As many proximity measurements have the general formulation in Equation ( 2 ) , we transform the original SVD problem into a generalized SVD problem [ 22 ] for proximity measurements with the general formulation .
According to [ 22 ] , it is easy to derive the following theo rem :
Theorem 1 . If we have the singular value decomposition of the general formulation
−1 g
M
· Ml = VsΣVt .
, whereV t and Vs are two orthogonal matrices ,
Σ = diag(σ1 , σ2,··· , σN )
.
Then , there exists a nonsingular matrix X and two diag onal matrices , ie Σl and Σg , satisfying that
Vt . Vs .
. l X = Σl M . g X = Σg
M
, where
,
1 , σl 1 , σg
Σl = diag(σl Σg = diag(σg
2,··· , σl N ) 2 ,··· , σg N ) 1 ≥ σl 2 ≥ ··· ≥σ l K ≥ 0 σl 1 ≤ σg 2 ≤ ··· ≤σ g 0 ≤ σg ∀i σl = 1 i
+ σg i
K
2
2 and
σi =
σl i σg i
( 21 )
Algorithm 1 High order Proximity preserved Embedding Require : adjacency matrix A , embedding dimension K , parameters of high order proximity measurementθ .
Ensure : embedding source vectors Us and target vectors
Ut .
1 : calculate Mg and Ml . 2 : perform JDGSVD with Mg and Ml , and obtain the gen} , 1 ,··· , σg 1,··· , vs K} 3 : calculate singular values {σ1,··· , σK} according to
K} and {σg eralized singular values {σl and the corresponding singular vectors , {vs and {vt
1,··· , vt
1,··· , σl
K} .
K
Equation ( 21 ) .
4 : calculate embedding matrices Us and Ut according to
Equation ( 19 ) and ( 20 ) .
As the generalized SVD can also derive the results of SVD , we can still use Equation ( 19 ) ( 20 ) to get the embedding vectors .
Complete generalized SVD will also achieve O(N 3 ) time complexity , which is not feasible for large scale graphs . As we only need the largest K singular values and corresponding singular vectors , we adopt a partial generalized SVD algorithm [ 9 ] , which we call it JDGSVD . This is an iterative Jacobi Davidson type algorithm which is very scalable when K ) N . Algorithm 1 lists the steps of our algorithm . 341 Complexity Analysis In this algorithm , we do not explicitly perform the polynomial operation on adjacency matrix in Ml and Mg , whose time complexity is up to O(N 3 ) . Because , in JDGSVD , we only need to multiply Mg and Ml with some thin matrices whose size isN × K . If we change the multiplication order , and first perform multiplication between adjacency matrix and thin matrix , the time complexity of this operation will reduce to O(m · K ) , where m is the number of non zero elements in adjacency matrix ( ie the number of edges in the graph ) and much smaller than N 2 in sparse graph . And , the total time complexity of JDGSVD is O(m· K 2 · L ) , where L is the iteration number . We can see that the time complexity is just linear with respect to the volumn of data ( ie the number of edges ) , which means that it is scalable for large scale graphs . 342 Approximation Error Finally , we give the error bound of our algorithm :
Theorem 2 . Given the proximity matrix , S , of a directed graph , and the embedding vectors , Us and Ut , learned by HOPPE . Then the approximation error is where {σi} are the singular values of S in descend order .
( 22 )
'S − Us · Ut'2
F =
'S − Us · Ut'2
F
'S'2
F
=
N .
σ2 i i=K+1 fi fi i=K+1 σ2 i=1 σ2
N
N i i
, and the relative approximation error is :
1109 Prove :
'S − Us · Ut'2
σi · vs i vt i
. − K . j=1
σj · vs j vt j
.'2
F
F = ' N . = ' N . N . i=1 i=K+1
σ2 i
= i=K+1
σi · vs i vt i
.'2
F and we have :
'S' = ' N . i=1
.
σi · vs i vt i
.' =
N . i=1
σ2 i
So , the relative approximation error is :
'S − Us · Ut'2
F
'S'2
F
= fi fi i=K+1 σ2 i=1 σ2
N
N i i
If S is low rank , then the singular values {σK+1,··· , σN} will be close to zero and the error will be very small . That is , the lower the rank of S is , the smaller the error is .
4 . EXPERIMENTS
We conduct experiments on a synthetic data and three real world datasets . We will first introduce the experiment setting , then show the results and analysis on the two types of datasets respectively . 4.1 Experiment Setting
411 Datasets We use four datasets , whose statistics are summarized in
Table 2 .
Table 2 : Statistics of datasets . |V | denotes the number of vertexes and |E| denotes the number of edges .
|V| |E|
Syn
10,000 144,555
Cora 23166 91500
SN Twitter
SN TWeibo
465,017 834,797
1,944,589 50,655,143
• Synthetic Data ( Syn ) : We generate the synthetic data by the forest fire model [ 17 ] . The model can generate powerlaw graphs . We can observe asymmetric transitivity in the generated graphs . As the time complexity of computation of some high order proximities ( eg Katz , RPR ) is too high , we generate small scaled synthetic data to allow for the computation of highorder proximities , so that we can evaluate the accuracy of high order proximity approximation . We randomly generate ten synthetic datasets .
• Cora1 [ 31 ] : This is a citation network of academic papers . The vertexes are academic papers and the directed edges are the citation relationship between papers .
1http://konectuni koblenzde/networks/subelj cora
• Twitter Social Network2 ( SN Twitter ) [ 5 ] : This dataset is a subnetwork of Twitter . The vertexes are users of Twitter , and the directed edges are following relationships between users .
• Tencent Weibo Social Network3 ( SN TWeibo ) : This dataset contains a subnetwork of the social network in Tencent Weibo4 , a Twitter style social platform in China . The vertexes are users and the directed edges are following relationship between users .
Due to high time complexity of calculating high order proximity measurements , we first evaluate the high order proximity approximation error on two small datasets , ie Synthetic Data and Cora , where it is feasible to calculate high order proximity . Furthermore , we conduct other application experiments on two large datasets , ie SN Twitter and SN TWeibo , to evaluate the performance of our algorithm in real large scale graphs . For Synthetic Data and Cora , the graph in each dataset is randomly separated into training set and testing set , and training set contains 80 % edges . All the reported performances are the average value on these ten datasets . For SN Twitter and SN TWeibo , we generate three datasets by randomly separated the graph into training graph and testing graph , where training graph contains 80 % edges and testing graph contains the rest edges . 412 Baseline Methods
• LINE [ 32 ] : This algorithm preserves the first order and second order proximity between vertexes . but it only can preserve symmetric second order proximity when applied to directed graph . We use vertex vectors as source vectors and context vectors as target vectors . We use LINE1 to represent LINE preserving first order proximity and LINE2 to represent LINE preserving second order proximity .
• DeepWalk [ 24 ] : this algorithm first randomly walks on the graph , and assumes a pair of vertexes similar if they are close in the random path . Then , the embedding is learned to preserve these pairwise similarities in the embedding .
• PPE ( Partial Proximity Embedding ) [ 30 ] : This algorithm first selects a small subset of vertexes as landmarks , and learns the embedding by approximating the proximity between vertexes and landmarks .
• Common Neighbors : We rank the links by the number of common neighbors . We use it for link prediction and vertex recommendation .
• Adamic Adar : We rank the links by the Adamic Adar values . We use it for link prediction and vertex recommendation .
In graph reconstruction , link prediction and vertex recommendation experiments , we adopt Katz as the target high order proximity for HOPE and PPE methods , as Katz has shown superior performance in related tasks in previous works , to approximate for HOPE and PPE . For PPE , we sample 1000 landmarks . For LINE and DeepWalk , we search the parameters grid search . 2http://konectuni koblenzde/networks/munmun twitter social 3http://wwwkddcup2012org/c/kddcup2012 track1/data 4http://tqqcom/
1110 0.012
0.01
0.008
0.006
0.004
0.002
E S M R
0
10
0.025
0.02
E S M R
0.015
0.01
0.005
0
10
Katz
5.55 x 10−3
Rooted PageRank
HOPPE PPE
E S M R
60
30
50
40
20 80 Embedding Dimension Rooted PageRank
70
90 100
HOPPE PPE
E S M R
10 20 30 40 50
60 70 80 90 100
Embedding Dimension
0.5 0.45
0.4 0.35
0.3
0.25 0.2
0.15
0.1
0.056
0.054
0.052
0.05
0.048
0.046
0.044
0.042
10
10
Common Neighbors
HOPPE PPE
E S M R
60
50
30
40
20 80 Embedding Dimension Common Neighbors
70
90 100
0.07
0.06
0.05
0.04
0.03
0.02
0.025
0.0245
0.024
10
HOPPE PPE
E S M R
0.0235
0.023
0.0225
0.022
0.0215
90 100
30
80 20 Embedding Dimension
40
50
60
70
Adamic−Adar
HOPPE PPE
30
20 80 Embedding Dimension
70
40
50
60
Adamic−Adar
90 100
HOPPE PPE
10 20 30 40 50
60 70 80 90 100
Embedding Dimension
HOPPE PPE
E S M R
5.5
5.45
5.4
5.35
5.3
5.25
10
30
20 80 Embedding Dimension
40
50
60
70
Katz
90 100
HOPPE PPE
E S M R
30
80 20 Embedding Dimension
40
50
60
70
90 100
0.0108
0.0108
0.0107
0.0107
0.0106
0.0106
0.0105
Figure 3 : Error of proximity approximation . We evaluate the errors of HOPE and PPE in approximating four proximity measurements , including Katz , RPR , Common Neighbors and Adamic Adar . First row is the results on Synthetic Data , and second row is the results on Cora . For Katz , β = 0.1 ; for RPR , α = 05
413 Evaluation Metrics In the experiments , we adopt RMSE , Precision@k and MAP ( Mean Average Precision ) as the evaluation metrics . RMSE is used to evaluate the approximation error of the proximity approximation algorithms , including HOPE and PPE . The formula of RMSE in our problem is :
'
RM SE =
'S − UsUt.'2
F
N 2
NRMSE ( Normalized RMSE ) is used to evaluate the relative error of the proximity approximation algorithms . The formula of NRMSE in our problem is :
'
'
F
'S − UsUt.'2 N 2ff 'S'2 F N 2
=
'S − UsUt.'2
F
'S'2
F
N RM SE =
Precision@k is used to evaluate the performance of link prediction , which measures the prediction precision of top k links . The formula of Precision@k is :
P recision@k =
|{(i , j)|(i , j ) ∈ Ep ∩ Eo}|
|Ep| where Ep is the set of top k predicted links , Eo is the set of observed links and | · | represents the size of set .
MAP is used to evaluate the performance of vertex recommendation , which measures the rank accuracy of recommended vertex list . The formula of MAP@k is : k fi fi j=1 Pi(j ) · δi(j ) fi k j=1 δi(j ) vi∈Vt AP ( i )
|Vt|
AP @k(i ) =
M AP @k =
4.2 High order Proximity Approximation
As we preserve asymmetric transitivity by approximating high order proximity , the error of approximation can evaluate how well we preserve asymmetric transitivity .
We evaluate the approximation error on Synthetic Data and Cora . Besides our algorithms , PPE can also approximate high order proximity . Here , we compare HOPE with PPE on four proximity measurements , including Katz , RPR , Common Neighbors and Adamic Adar . Figure 3 shows the RMSE with different number of embedding dimensions . When the number of embedding dimensions grows , the approximation error , RMSE , will decrease . We can see that HOPE achieves much lower RMSE than PPE on all the proximity measurements , which is stable in the ten randomly selected datasets . Especially on Katz , the error of HOPE is one order of magnitude smaller than the error of PPE . With the number of embedding dimensions growing , the error of both algorithms decreases but the margin between HOPE and PPE becomes larger . Although more embedding dimensions can make these two methods be able to incorporate more proximity information , PPE can only approximate a sub block of the proximity matrix , while HOPE can approximate the whole proximity matrix . Thus HOPE can take more advantage of the increased embedding dimension .
Furthermore , we evaluate how the rank ( more precisely , the condition number ) of proximity matrix will influence the approximation error . In section 342 , we have theoretically proven that the approximation error of our method is related to the rank of the promixity matrix . Here , we take Rooted PageRank as an example to empirically demonstrate the claim . The parameter α of RPR is highly related to the rank of RPR matrix ( ie SRP R ) . When α = 0 , SRP R = I , which is full rank . When α = 1 , all the rows of SRP R are the stationary distribution of transition matrix P , and the rank of SRP R is 1 . Intuitively , the larger α is , the lower the rank of SRP R tends to be . We use NRMSE to evaluate the relative error of RPR approximation . Figure 4 shows the NRMSE of HOPE with different α . The larger α is ,
1111 10 x 10−6 9.5
E S M R N
9
8.5
8
7.5
7
6.5
6 0
Synthetic Data
Cora
4.5 x 10−5 4
E S M R N
3.5
3
2.5
2
1.5
1
0.5 0
HOPPE
0.2
0.4
α
0.6
0.8
1
HOPPE
0.2
0.4
α
0.6
0.8
1
Figure 4 : Correlation between relative approximation error and the rank of proximity matrix . The parameter α of Rooted PageRank is highly related to the rank of proximity matrix . Here , we use α to simulate the rank of proximity matrix . The embedding dimension is 100 . the smaller the NRMSE is . This suggests that HOPE can achieve better performance on lower rank proximity matrix . 4.3 Graph Reconstruction
SN−TWeibo
HOPPE PPE Line1 Line2 DeepWalk Common Neighbors Adamic−Adar
104 k
SN−Twitter
106
HOPPE PPE Line1 Line2 DeepWalk Common Neighbors Adamic−Adar
1
0.8
0.6
0.4
0.2 k @ n o s i i c e r P
0
102 i k @ n o s c e r P i
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
102
104 k
106
Figure 5 : Precision@k of graph reconstruction on SN TWeibo and SN Twitter . We rank pairs of vertexes according to their reconstructed proximity and evaluate the reconstruction precision in top k pairs of vertexes .
As the representation of a graph , embedding vectors are expected to well reconstruct the graph . We evaluate the re construction ability on training sets of SN TWeibo and SNTwitter . We reconstruct the graph edges based on the reconstructed proximity between vertexes . For graph embedding algorithms ( ie HOPE , PPE , Line and DeepWalk ) , we use the inner product between embedding vectors to reconstruct the proximity matrix . For Common Neighbors and AdamicAdar , we directly calculate the proximity matrix . We rank the pairs of vertexes according to their corresponding reconstructed proximity . Then , we calculate the ratio of real links in top k pairs of vertexes as the reconstruction precision . As the number of possible pairs of vertexes ( N · ( N − 1 ) ) is too large in SN TWeibo and SN Twitter , we randomly sample about 0.1 % pairs of vertexes for evaluation .
Figure 5 shows the Precision@k with different k . HOPE significantly outperforms baselines . As mentioned above , PPE just approximates a sub block of proximity matrix . So , it works poorer than HOPE . Comparing with Line2 which directly reconstructs the directed links , HOPE still achieves much better performance . It may because HOPE uses highorder proximity as weight of directed edges , but LINE2 assigns equivalent weight for each directed edges . The edges in densely connected vertex clusters will obtain higher weights . Thus , these edges will be preserved first . Moreover , the number of these edges is larger than that in sparsely connected vertex clusters . Thus , HOPE may reconstruct more edges than Line2 . 4.4 Link Prediction
As asymmetric transitivity captures the correlation among edges , we can use it to predict missing edges in graphs . On the other hand , the performance of HOPE on link prediction can also reflect how well the asymmetric transitivity is preserved . This experiment is conducted on SN TWeibo and SN TWitter . We train the embedding vectors on training graphs , and evaluate the prediction performance on testing graphs . We randomly sample about 0.1 % pairs of vertexes for evaluation . Then , we rank them according to the inner product between embedding vectors ( for HOPE , LINE1 , LINE2 and PPE ) or the calculated proximity ( for Common Neighbors and Adamic Adar ) , and evaluate the prediction precision in top k pairs of vertexes .
Figure 6 shows the precision@k of link prediction with different k . Our algorithm , HOPE , outperforms the baselines significantly . Compared to Section 4.3 , the performance of PPE significantly decreases in prediction task . This is mainly because PPE only trains on partial proximity matrix , which is easy to overfit . Besides , we can see that all the curves converges to a point when k is large . This is because almost all the real edges have been correctly predicted by all the algorithms . 4.5 Vertex Recommendation
The setting of training procedure in this experiment is the same as link prediction . But , we evaluate the performance of algorithms from the vertex view , ie vertex recommendation performance . We randomly sample 1000 vertexes . For each vertex vi , we randomly hide 20 % outgoing links as groundtruth . Then we derive the top 100 vertexes with the highest proximity with vi as the candidates that vi will possible point to . After that , we use MAP@10 , MAP@50 and MAP@100 to evaluate the quality of recommendation . Table 3 shows the MAPs of different algorithms . HOPE outperforms the baseline algorithms .
1112 Table 3 : MAP of vertex recommendation on SN TWeibo and SN Twitter . For each vertex , the recommended vertex list is ranked according to the predicted proximity between vertexes . For embedding algorithms , we calculate the predicted proximity by performing inner product between embedding vectors .
Method
HOPE PPE LINE1 LINE2
DeepWalk
Common Neighbors
Adamic Adar
0
0.051 0.0635 0.1217 0.1173
0
0.051 0.0583 0.1031 0.0990
SN TWebio
SN Twitter
MAP@10 MAP@50 MAP@100 MAP@10 MAP@50 MAP@100 0.2295 0.0928
0.1869 0.0845
0.169 0.077 0.005 0.048 0.004 0.155 0.156
0.1000 0.0061 0.0209 0.0044 0.0006 0.0394 0.0455
0.0881 0.0077 0.0221 0.0043 0.0008 0.0379 0.0442
0.0766 0.0081 0.0221 0.0035 0.001 0.0369 0.0423
SN−TWeibo
5 . CONCLUSION
HOPPE PPE Line1 Line2 DeepWalk Common Neighbors Adamic−Adar
104 k
SN−Twitter
106
HOPPE PPE Line1 Line2 DeepWalk Common Neighbors Adamic−Adar
1
0.8
0.6
0.4
0.2 k @ n o s i i c e r P
0
102 k @ n o s i i c e r P
0.16 0.14 0.12 0.1 0.08 0.06 0.04 0.02 0
In this paper , we aim to preserve asymmetric transitivity in directed graphs , and propose to preserve asymmetric transitivity by approximating high order proximities . We propose a scalable approximation algorithm , called HighOrder Proximity preserved Embedding ( HOPE ) . In this algorithm , we first derive a general formulation of a class of high order proximity measurements , then apply generalized SVD to the general formulation , whose time complexity is linear with the size of graph . The empirical study demonstrates the superiority of asymmetric transitivity and our proposed algorithm , HOPE . Our future direction is to develop a nonlinear model to better capture the complex structure of directed graphs .
6 . ACKNOWLEDGEMENTS
This work was supported by National Program on Key Basic Research Project , No . 2015CB352300 ; National Natural Science Foundation of China , No . 61370022 , No . 61531006 , No . 61472444 and No . 61210008 . Thanks for the research fund of Tsinghua Tencent Joint Laboratory for Internet Innovation Technology .
7 . REFERENCES [ 1 ] M . Belkin and P . Niyogi . Laplacian eigenmaps and spectral techniques for embedding and clustering . In NIPS , volume 14 , pages 585–591 , 2001 .
[ 2 ] S . Cao , W . Lu , and Q . Xu . Grarep : Learning graph representations with global structural information . In Proceedings of the 24th ACM International on Conference on Information and Knowledge Management , pages 891–900 . ACM , 2015 .
[ 3 ] S . Chang , G J Qi , C . C . Aggarwal , J . Zhou , M . Wang , and T . S . Huang . Factorized similarity learning in networks . In Data Mining ( ICDM ) , 2014 IEEE International Conference on , pages 60–69 . IEEE , 2014 .
[ 4 ] M . Chen , Q . Yang , and X . Tang . Directed graph embedding . In IJCAI , pages 2707–2712 , 2007 .
[ 5 ] M . De Choudhury , Y R Lin , H . Sundaram , K . S . Candan ,
L . Xie , A . Kelliher , et al . How does the data sampling strategy impact the discovery of information diffusion in social media ? ICWSM , 10:34–41 , 2010 .
[ 6 ] R . A . Fisher . The use of multiple measurements in taxonomic problems . Annals of eugenics , 7(2):179–188 , 1936 .
[ 7 ] M . S . Handcock , A . E . Raftery , and J . M . Tantrum .
Model based clustering for social networks . Journal of the Royal Statistical Society : Series A ( Statistics in Society ) , 170(2):301–354 , 2007 .
102
104 k
106
Figure 6 : Precision@k of link prediction on SNTWeibo and SN Twitter . We rank pairs of vertexes according to their reconstructed proximity and evaluate the reconstruction precision in largest k pairs of vertexes .
Especially , the MAP@10 of HOPE achieves at least 88.5 % improvement and the MAP@50 of HOPE achieves at least 81.2 % improvement over all baseline algorithms . In most settings , the algorithms preserving directed high order relationship , including HOPE , Common Neighbors , AdamicAdar and PPE , outperforms LINE2 which only preserves directed first order relationship . This proves that preserving directed high order relationship is critical to capture the structure of directed graphs .
1113 [ 8 ] X . He , S . Yan , Y . Hu , P . Niyogi , and H J Zhang . Face
[ 29 ] T . A . Snijders , P . E . Pattison , G . L . Robins , and M . S .
Handcock . New specifications for exponential random graph models . Sociological methodology , 36(1):99–153 , 2006 .
[ 30 ] H . H . Song , T . W . Cho , V . Dave , Y . Zhang , and L . Qiu .
Scalable proximity estimation and link prediction in online social networks . In Proceedings of the 9th ACM SIGCOMM conference on Internet measurement conference , pages 322–335 . ACM , 2009 .
[ 31 ] L . ˇSubelj and M . Bajec . Model of complex networks based on citation dynamics . In Proceedings of the 22nd international conference on World Wide Web companion , pages 527–530 . International World Wide Web Conferences Steering Committee , 2013 .
[ 32 ] J . Tang , M . Qu , M . Wang , M . Zhang , J . Yan , and Q . Mei .
Line : Large scale information network embedding . In Proceedings of the 24th International Conference on World Wide Web , pages 1067–1077 . International World Wide Web Conferences Steering Committee , 2015 .
[ 33 ] J . B . Tenenbaum , V . De Silva , and J . C . Langford . A global geometric framework for nonlinear dimensionality reduction . Science , 290(5500):2319–2323 , 2000 .
[ 34 ] Y . J . Wang and G . Y . Wong . Stochastic blockmodels for directed graphs . Journal of the American Statistical Association , 82(397):8–19 , 1987 .
[ 35 ] S . Yan , D . Xu , B . Zhang , H J Zhang , Q . Yang , and S . Lin . Graph embedding and extensions : a general framework for dimensionality reduction . Pattern Analysis and Machine Intelligence , IEEE Transactions on , 29(1):40–51 , 2007 . [ 36 ] J . Ye , R . Janardan , and Q . Li . Two dimensional linear discriminant analysis . In Advances in neural information processing systems , pages 1569–1576 , 2004 .
[ 37 ] S . Zhu , K . Yu , Y . Chi , and Y . Gong . Combining content and link for classification using matrix factorization . In Proceedings of the 30th annual international ACM SIGIR conference on Research and development in information retrieval , pages 487–494 . ACM , 2007 . recognition using laplacianfaces . Pattern Analysis and Machine Intelligence , IEEE Transactions on , 27(3):328–340 , 2005 .
[ 9 ] M . Hochstenbach . A jacobi–davidson type method for the generalized singular value problem . Linear Algebra and its Applications , 431(3):471–487 , 2009 .
[ 10 ] P . D . Hoff . Multiplicative latent factor models for description and prediction of social networks . Computational and Mathematical Organization Theory , 15(4):261–272 , 2009 .
[ 11 ] P . D . Hoff , A . E . Raftery , and M . S . Handcock . Latent space approaches to social network analysis . Journal of the american Statistical association , 97(460):1090–1098 , 2002 . [ 12 ] P . W . Holland and S . Leinhardt . An exponential family of probability distributions for directed graphs . Journal of the american Statistical association , 76(373):33–50 , 1981 .
[ 13 ] J . Hopcroft and R . Kannan . Foundations of data science .
2014 .
[ 14 ] G . Jeh and J . Widom . Simrank : a measure of structural context similarity . In Proceedings of the eighth ACM SIGKDD international conference on Knowledge discovery and data mining , pages 538–543 . ACM , 2002 .
[ 15 ] I . Jolliffe . Principal component analysis . Wiley Online
Library , 2002 .
[ 16 ] L . Katz . A new status index derived from sociometric analysis . Psychometrika , 18(1):39–43 , 1953 .
[ 17 ] J . Leskovec , J . Kleinberg , and C . Faloutsos . Graphs over time : densification laws , shrinking diameters and possible explanations . In Proceedings of the eleventh ACM SIGKDD international conference on Knowledge discovery in data mining , pages 177–187 . ACM , 2005 .
[ 18 ] O . Levy and Y . Goldberg . Neural word embedding as implicit matrix factorization . In Advances in Neural Information Processing Systems , pages 2177–2185 , 2014 .
[ 19 ] T . Mikolov , I . Sutskever , K . Chen , G . S . Corrado , and
J . Dean . Distributed representations of words and phrases and their compositionality . In Advances in neural information processing systems , pages 3111–3119 , 2013 .
[ 20 ] K . Miller , M . I . Jordan , and T . L . Griffiths . Nonparametric latent feature models for link prediction . In Advances in neural information processing systems , pages 1276–1284 , 2009 .
[ 21 ] S . Mousazadeh and I . Cohen . Embedding and function extension on directed graph . Signal Processing , 111:137–149 , 2015 .
[ 22 ] C . C . Paige and M . A . Saunders . Towards a generalized singular value decomposition . SIAM Journal on Numerical Analysis , 18(3):398–405 , 1981 .
[ 23 ] J . Pennington , R . Socher , and C . D . Manning . Glove :
Global vectors for word representation . Proceedings of the Empiricial Methods in Natural Language Processing ( EMNLP 2014 ) , 12:1532–1543 , 2014 .
[ 24 ] B . Perozzi , R . Al Rfou , and S . Skiena . Deepwalk : Online learning of social representations . In Proceedings of the 20th ACM SIGKDD international conference on Knowledge discovery and data mining , pages 701–710 . ACM , 2014 .
[ 25 ] D . Perrault Joncas and M . Meila . Estimating vector fields on manifolds and the embedding of directed graphs . arXiv preprint arXiv:1406.0013 , 2014 .
[ 26 ] D . C . Perrault Joncas and M . Meila . Directed graph embedding : an algorithm based on continuous limits of laplacian type operators . In Advances in Neural Information Processing Systems , pages 990–998 , 2011 . [ 27 ] S . T . Roweis and L . K . Saul . Nonlinear dimensionality reduction by locally linear embedding . Science , 290(5500):2323–2326 , 2000 .
[ 28 ] B . Scholkopft and K R Mullert . Fisher discriminant analysis with kernels . Neural networks for signal processing IX , 1:1 , 1999 .
1114
