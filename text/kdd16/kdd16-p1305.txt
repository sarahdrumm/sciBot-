GMove : Group Level Mobility Modeling Using Geo Tagged
Social Media
Chao Zhang1 , Keyang Zhang1 , Quan Yuan1 , Luming Zhang2 , Tim Hanratty3 , and Jiawei Han1
1Dept . of Computer Science , University of Illinois at Urbana Champaign , Urbana , IL , USA
2Dept . of CSIE , Hefei University of Technology , Hefei , China
2Information Sciences Directorate , Army Research Laboratory , Adelphi , MD , USA
1{czhang82 , kzhang53 , qyuan , hanj}@illinois.edu 3timothyphanratty@mailmil
2zglumg@gmail.com
ABSTRACT Understanding human mobility is of great importance to various applications , such as urban planning , traffic scheduling , and location prediction . While there has been fruitful research on modeling human mobility using tracking data ( eg , GPS traces ) , the recent growth of geo tagged social media ( GeoSM ) brings new opportunities to this task because of its sheer size and multi dimensional nature . Nevertheless , how to obtain quality mobility models from the highly sparse and complex GeoSM data remains a challenge that cannot be readily addressed by existing techniques .
We propose GMOVE , a group level mobility modeling method using GeoSM data . Our insight is that the GeoSM data usually contains multiple user groups , where the users within the same group share significant movement regularity . Meanwhile , user grouping and mobility modeling are two intertwined tasks : ( 1 ) better user grouping offers better within group data consistency and thus leads to more reliable mobility models ; and ( 2 ) better mobility models serve as useful guidance that helps infer the group a user belongs to . GMOVE thus alternates between user grouping and mobility modeling , and generates an ensemble of Hidden Markov Models ( HMMs ) to characterize group level movement regularity . Furthermore , to reduce text sparsity of GeoSM data , GMOVE also features a text augmenter . The augmenter computes keyword correlations by examining their spatiotemporal distributions . With such correlations as auxiliary knowledge , it performs sampling based augmentation to alleviate text sparsity and produce high quality HMMs .
Our extensive experiments on two real life data sets demonstrate that GMOVE can effectively generate meaningful group level mobility models . Moreover , with context aware location prediction as an example application , we find that GMOVE significantly outperforms baseline mobility models in terms of prediction accuracy .
1 .
INTRODUCTION
Understanding human mobility has been widely recognized as a corner stone task for various applications , ranging from urban planning and traffic scheduling to location prediction and personalized activity recommendation . In the past few decades , the importance of this task has led to fruitful research efforts in the data mining Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page . Copyrights for components of this work owned by others than ACM must be honored . Abstracting with credit is permitted . To copy otherwise , or republish , to post on servers or to redistribute to lists , requires prior specific permission and/or a fee . Request permissions from permissions@acmorg KDD ’16 , August 13 17 , 2016 , San Francisco , CA , USA cfl 2016 ACM . ISBN 978 1 4503 4232 2/16/08 . . . $15.00 DOI : http://dxdoiorg/101145/29396722939793 community [ 7 , 27 , 13 , 4 , 26 ] . While most of the previous works use tracking data ( eg , GPS traces ) to discover human movement regularity , the recent explosive growth of geo tagged social media ( GeoSM ) brings new opportunities to this task . Nowadays , as GPS enabled mobile devices and location sharing apps are penetrating into our daily life , every single day is witnessing millions of geo tagged tweets , Facebook checkins , etc . Compared with conventional tracking data , GeoSM possesses two unique advantages for mobility modeling : ( 1 ) First , in addition to spatial and temporal information , each GeoSM record also includes text . Hence , a user ’s GeoSM history reveals not only how she moves from one location to another , but also what activities she does at different locations . ( 2 ) Second , the GeoSM data has a much larger size and coverage . Due to privacy concerns , gathering tracking data typically requires a huge amount of time and money to engage sufficient volunteers . In contrast , the GeoSM data naturally covers hundreds of millions of users and has a much larger volume .
Considering its multi dimensional nature and sheer size , it is clear that GeoSM serves as an unprecedentedly valuable source for human mobility modeling . Hence , we study the problem of using large scale GeoSM data to unveil human movement regularity . Specifically , we answer the following two questions :
• What are the intrinsic states underlying people ’s movements ? To name a few , a state could be working at office in the morning , exercising at gym at noon , or having dinner with family at night . We want each state to provide a unified view regarding a user ’s activity : ( 1 ) where is the user ; ( 2 ) what is the user doing ; and ( 3 ) when does this activity happen .
• How do people move sequentially between those latent states ? For example , where do people working in Manhattan usually go to relax after work ? and what are the popular sightseeing routes for a one day trip in Paris ? We aim to summarize people ’s transitions between the latent states in a concise and interpretable way .
Unveiling human mobility using GeoSM data can greatly benefit various applications . Consider traffic jam prevention as an example . While existing techniques [ 7 , 26 , 25 ] can detect sequential patterns to reflect the populace flow between geographical regions , the GeoSM data allows us understand populace flow beyond that . Suppose severe traffic jams occur frequently in a region R . With the mobility model learnt from massive GeoSM data , we can understand what are people ’s typical activities in R , which regions do people come from , and why do people take those trips . Such understandings can guide the government to better diagnose the root causes of traffic jams and take prevention actions accordingly . Another example application is context aware location prediction .
1305 Previous studies [ 15 , 14 , 4 ] typically use the spatiotemporal regularity of human mobility to predict the next location a person may visit . By leveraging GeoSM data , we can incorporate activity level transitions to infer what activities a user will engage subsequently . As such , the mobility models learnt from GeoSM can potentially improve context aware location prediction remarkably .
Despite its practical importance , the task of modeling human mobility with GeoSM data is nontrivial due to several challenges : ( 1 ) Integrating diverse types of data . The GeoSM data involves three different data types : location , time , and text . Considering the totally different representations of those data types and the complicated correlations among them , how to effectively integrate them for mobility modeling is difficult . ( 2 ) Constructing reliable models from sparse and complex data . Unlike intentionally collected tracking data , the GeoSM data is low sampling in nature , because a user is unlikely to report her activity at every visited location . Such data sparsity makes it unrealistic to train a mobility model for each individual . On the other hand , one may propose to aggregate the data of all users to train one single model , but the obtained model could then suffer from severe data inconsistency because different users can have totally different moving behaviors . ( 3 ) Extracting interpretable semantics from short GeoSM messages . The GeoSM messages are usually short . For example , any geo tagged tweets contain no more than 140 characters , and most geo tagged Instagram photos are associated with quite short text messages . It is nontrivial to extract reliable knowledge from short GeoSM messages and build high quality mobility models .
We propose GMOVE , an effective method that models human mobility from massive GeoSM data . GMOVE relies on the Hidden Markov Model ( HMM ) to learn the multi view latent states and people ’s transitions between them . To obtain quality HMMs from the highly sparse and complex GeoSM data , we propose a novel idea of group level mobility modeling . The key is to group the users that share similar moving behaviors , eg , the students studying at the same university . By aggregating the movements of likebehaved users , GMOVE can largely alleviate data sparsity without compromising the within group data consistency .
To achieve effective user grouping and mobility modeling , we find that these two sub tasks can mutually enhance each other : ( 1 ) better user grouping offers better within group data consistency , which helps produce more reliable mobility models ; and ( 2 ) better mobility models can serve as useful knowledge , which helps infer the group a user belongs to . Based on this observation , we develop an iterative framework , in which we alternate between user grouping and group level mobility modeling . We theoretically and empirically show that , such a process leads to better user grouping and mobility models after each iteration , and finally generates an ensemble of high quality HMMs .
Another important component of GMOVE is a text augmenter , which leverages keyword spatiotemporal correlations to reduce text sparsity . While each raw GeoSM message is short and noisy , we find that using millions of GeoSM records , we are able to extract the intrinsic correlations between keywords by examining their spatiotemporal distributions . Consider two users who are having dinner at the same Italian restaurant and posting tweets with two different keywords : “ pasta ” and “ pizza ” . Although these two keywords do not co occur in the same tweet , they are spatially and temporally close . We hence quantify the spatiotemporal correlations between keywords , and use such correlations as auxiliary knowledge to augment raw GeoSM messages . We show that such augmentation can largely reduce text sparsity and lead to highly interpretable states .
To summarize , we make the following contributions : 1 . We formulate the problem of mobility modeling using mas sive geo tagged social media ( Section 2 ) . To the best of our knowledge , this is the first study that attempts to use the multi dimensional ( spatial , temporal , textual ) information in GeoSM data to unveil human movement regularity .
2 . We propose a novel group level mobility modeling framework . Built upon an ensemble of HMMs ( Section 4 ) , it enables user grouping and mobility modeling to mutually enhance each other . As such , it effectively alleviates data sparsity and inconsistency to generate reliable mobility models .
3 . We design a strategy that leverages the spatiotemporal distributions to quantify keyword correlations as auxiliary knowledge ( Section 3 ) . By augmenting raw GeoSM messages with such knowledge , our method largely reduces text sparsity to produce interpretable latent states .
4 . We perform extensive experiments using two real data sets ( Section 5 ) . The results show that our method can produce high quality group level mobility models . Meanwhile , with context aware location prediction as an example application , we observe that our method achieves much better prediction accuracy compared with baseline mobility models .
2 . PRELIMINARIES
In this section , we formulate the problem of mobility modeling using geo tagged social media , and explore several characteristics of this problem to motivate the design of GMOVE . 2.1 Problem Description
A GeoSM record x is defined as a tuple ux , tx , lx , ex where : ( 1 ) ux is the user id ; ( 2 ) tx is the creating timestamp ( in second ) ; ( 3 ) lx is a two dimensional vector representing the user ’s location when x is created ; and ( 4 ) ex , which is a bag of keywords from a vocabulary V , denotes the text message of x . Let us consider a set of users U = {u1 , u2 , . . . , uM} . For a user u ∈ U , her GeoSM history is a sequence of chronologically ordered GeoSM records Su = x1x2 . . . xn . To understand u ’s mobility , one may propose to use the entire sequence Su . Nevertheless , the sequence Su is low sampling in nature , and the temporal gaps between some pairs of consecutive records can be very large , eg , several days . To generate reliable mobility models , we only use the dense parts in Su , which we define as trajectories .
DEFINITION 1
( TRAJECTORY ) . Given a GeoSM sequence S = x1x2 . . . xn and a time gap threshold ∆t > 0 , a subsequence S = xixi+1 . . . xi+k is a length k trajectory of S if S satisfies : ( 1 ) ∀1 < j ≤ k , txj − txj−1 ≤ ∆t ; and ( 2 ) there are no longer subsequences in S that contains S and meanwhile also satisfies condition ( 1 ) .
Figure 1 : An illustration of trajectory ( ∆t = 3 hours ) .
EXAMPLE 1 . In Figure 1 , given a user ’s GeoSM history S = x1x2x3x4x5 and ∆t = 2 hours , there are two trajectories : x1x2 and x4x5 . These trajectories correspond to the user ’s two moving behaviors : ( 1 ) having dinner at an Italian restaurant after work ; and ( 2 ) going to bar after taking exercises . x1x2x3x4x5t : 10 03 1:00PMl : ( 74.20 , 40.32)e : office , workt : 10 03 2:00PMl : ( 74.15 , 40.30)e : Italian , pizzat : 10 05 8:00AMl : ( 74.20 , 40.30)e : starbucks , coffeet : 10 07 6:30PMl : ( 74.25 , 40.28)e : gym , practicet : 10 07 8:00PMl : ( 74.18 , 40.22)e : bar , nightlife1306 A trajectory essentially leverages the time constraint to extract reliable moving behaviors in the GeoSM history . With the extracted trajectories , our general goal is to use them to understand the mobility of the users in U . Nevertheless , the number of trajectories of one single user is usually too limited to train a mobility model , while aggregating the trajectories of all the users in U could suffer from severe data inconsistency and result in an ambiguous model . To address the dilemma , we propose to study group level user mobility . Our key observation is that , aggregating the trajectories of like behaved users can largely alleviate data sparsity and inconsistency , and thus unveil the movement regularity for that group . Consider a group of students studying at the same university , they may share similar hotspots like classrooms , gyms , and restaurants . Many students also have similar moving behaviors , eg , moving from the same residence hall to classrooms , and having lunch together after classes . As another example , a group of tourists in New York may all visit locations like the JFK Airport , the Metropolitan Museum , the 5th Avenue , etc While the data of one individual is limited , the collective movement data from a group of like behaved people can be informative about their latent hotspots and the movement regularity . It is important to note that , one user can belong to several different groups , eg , a student may also go sightseeing in the city on weekends . Therefore , the users should be grouped softly instead of rigidly .
Based on the above observation , we formulate the problem of group level mobility modeling as follows . Given the set U of users and their trajectories extracted from historical GeoSM records , the task of group level mobility modeling consists of two sub tasks : ( 1 ) user grouping : softly group the users in U such that the members in the same group have similar moving behaviors ; and ( 2 ) mobility modeling : for each user group , discover the latent states that reflect the users’ activities from a multidimensional ( where what when ) view , and find out how the users move between those latent states .
2.2 Overview of GMOVE
GMOVE is built upon the Hidden Markov Model ( HMM ) , an effective statistical model for sequential data . Given an observed sequence S = x1x2 . . . xn , HMM defines K latent states Z = {1 , 2 , . . . , K} that are not observable . Each record xi(1 ≤ i ≤ n ) corresponds to a latent state zi ∈ Z , which has a probabilistic distribution that governs the generation of xi . In addition , the latent state sequence z1z2 . . . zn follows the Markov process , namely , the state zi only depends on the previous state zi−1 .
As discussed above , there exists a dilemma when applying HMM to understand the mobility of the users in U : training an HMM for each user is unrealistic due to data sparsity , while training one single HMM for all the users leads to an ambiguous model due to data inconsistency . Therefore , GMOVE performs group level mobility modeling by coupling the subtasks of user grouping and mobility modeling . It aims at dividing the users in U into like behaved user groups and training an HMM for each group . By aggregating the movement data within the same group , we can alleviate data sparsity without compromising data consistency .
Now the question is , how can we group the users such that the users within the same group have similar moving behaviors ? Our idea is that the sub tasks of user grouping and mobility modeling can mutually enhance each other : ( 1 ) better user grouping leads to more consistent movement data within each group , which can improve the quality of the HMM ; and ( 2 ) high quality HMMs more accurately describe the true latent states and the transitions between them , which helps infer which group a user should belong to . Hence , GMOVE employs an iterative framework that alternates between user grouping and HMM training . Later we will see , as the iteration continues , the user grouping gets more and more accurate , and the mobility models get more and more reliable , and such a process will finally converge to a stable solution .
Another important component of GMOVE is a text augmenter . When training an HMM for each group , we model each latent state to generate multidimensional ( spatial , temporal , and textual ) observations of the user ’s activity . While the spatial and temporal observations are clean , the major challenge in obtaining high quality latent states is that the text messages are mostly short and noisy . To address this problem , we observe that keywords’ spatiotemporal distributions can reveal their intrinsic correlations . The text augmenter thus quantifies the spatiotemporal correlations between keywords to obtain auxiliray knowledge . With such knowledge , it performs a weighted sampling process to augment raw text messages . Such augmentation can largely overcome text sparsity and suppress noise to help produce high quality HMMs .
Figure 2 : The framework of GMOVE .
Figure 2 summarizes the framework of GMOVE . Given the input trajectories , GMOVE consists of two major modules to produce group level mobility models . The first module is the text augmenter , which examines the spatiotemporal correlations between keywords to augment raw messages . With the augmented trajectories , the second module obtains an ensemble of HMMs by alternating between user grouping and HMM training . In the following , we elaborate these two module in Section 3 and 4 , respectively .
3 . TEXT AUGMENTATION
In this section , we describe GMOVE ’s text augmenter , which first computes keyword correlations and then performs sampling based text augmentation . Keyword correlation computation . Our computation of keyword correlation relies on spatiotemporal discretization . Let us consider a spatiotemporal space D that consists of three dimensions : ( 1 ) the longitude dimension x ; ( 2 ) the latitude dimension y ; and ( 3 ) the time dimension t . We partition D into Nx × Ny × Nt equal size grids , where Nx , Ny and Nt are pre specified integers that control discretization granularity . Based on such discretization , we define the concepts of grid density and signature for each keyword .
DEFINITION 2
( GRID DENSITY ) . Given a keyword w , the density of w in grid nx , ny , nt ( 1 ≤ nx ≤ Nx , 1 ≤ ny ≤ Ny , 1 ≤ nt ≤ Nt ) is defined as w ’s frequency in that grid , namely cw(nx , ny , nt )
, dw(nx , ny , nt ) = nx,ny ,nt cw(nx , ny , nt ) where cw(nx , ny , nt ) is the number of GeoSM records that contain w and meanwhile fall in grid nx , ny , nt .
DEFINITION 3
( SIGNATURE ) . Given a keyword w , its signature sw is a NxNyNt dimensional vector , where dw(nx , ny , nt ) is the value for the ( (nt−1)NxNy +(ny−1)Nx +nx) th dimension .
The signature of a keyword encodes how frequently that keyword appears in different spatiotemporal grids . Intuitively , if two keywords are semantically correlated ( eg , “ pasta ” and “ pizza ” ) , they are more likely to frequently co occur in the same grid and
Text AugmenterTrajectoriesMobility ModelsUser GroupingHMM Training1307 thus have similar signatures . Below , we measure the spatiotemporal correlation between two keywords by simply computing the similarity of their signatures .
DEFINITION 4
( KEYWORD CORRELATION ) . Given two keywords wi and wj , let swi and swj be their signatures . The spatiotemporal correlation between wi and wj , denoted as corr(wi , wj ) , is the cosine distance between swi and swj .
Sampling based augmentation . Definition 4 quantifies keyword correlations based on their spatiotemporal distributions . With Definition 4 , we further select out a set of vicinity keywords from the vocabulary for each keyword .
DEFINITION 5
( VICINITY ) . For any keyword w ∈ V , its vicinity Nw is Nw = {v|v ∈ V ∧ corr(w , v ) ≥ δ} where δ ≥ 0 is a pre specified correlation threshold .
The vicinity concept is important as it identifies other keywords that are highly correlated to the target keyword and suppresses noisy keywords . Based on Definition 5 , we are now ready to describe the text augmentation process . Given an input GeoSM record x , our goal is to augment the original text message ex by incorporating many other keywords that are semantically relevant to ex . As shown in Algorithm 1 , the augmentation simply performs sampling by using keyword correlation as auxiliary knowledge . Specifically , we first sample a keyword w from the original message based on normalized TF IDF weights , and then sample a relevant keyword v from w ’s vicinity . The probability of a keyword v being sampled is proportional to its spatiotemporal correlation with w , namely corr(w , v ) . We repeat the sampling process until the augmented message reaches a pre specified length L . Algorithm 1 : Text augmentation . Input : A GeoSM record x , the target length L . Output : The augmented text message of x . 1 Ax ← The original text message ex ; 2 while len(Ax ) < L do 3
T F−IDF ( w )
Sample a word w ∈ ex with probability Sample a word v ∈ Nw with probability
T F−IDF ( v ) ; v∈ex corr(w,v ) corr(w,u ) ;
4 u∈Nw
Add v into Ax ;
5 6 return Ax ;
4 . HMM ENSEMBLE LEARNING
In this section , we describe GMOVE ’s second module that learns an ensemble of HMMs . Below , we first present an iterative refinement framework in Section 4.1 , Then we introduce the procedures for the HMM training and user grouping in Section 4.2 and 4.3 , respectively . Finally , we prove the convergence of GMOVE and analyze its time complexity in Section 44 4.1 The Iterative Refinement Framework
To generate high quality group level HMMs , GMOVE employs an iterative refinement framework that performs the following steps : 1 . Initialization : Let U = {u1 , u2 , . . . , uM} be the user set , and G = {1 , 2 , 3 , . . . , G} be the G underlying user groups . ( a ) ∀u ∈ U , randomly generate an initial membership vecg=1 Mu(g ) = 1 , where Mu(g ) denotes tor Mu st G the probability that user u belongs to group g .
( b ) ∀g ∈ G , randomly initialize an HMM Hg . The ensem ble of the HMMs are denoted as H = {Hg|g ∈ G} .
2 . HMM Training : ∀g ∈ G , use the membership vectors to reweigh all input trajectories , such that the weights of user u ’s trajectories are set to Mu(g ) . Then refine every Hg to generate a new HMM ensemble , Hnew = {Hnew
|g ∈ G} .
3 . User Grouping : ∀u ∈ U , use Hnew to update u ’s membership vector such that the g th dimension is the posterior probability that user u belongs to group g , namely M new u ( g ) = p(g|u;Hnew ) . g
4 . Iterating : Check for convergence using the log likelihood of the input trajectories . If the convergence criterion is not met , then let
∀g , Hg ← Hnew g
; ∀u , Mu ← M new u ; and return to Step 2 .
4.2 HMM Training
In the HMM training step , the task is to use weighted trajectories to train a new HMM for each group . Below , we first define the HMM for generating the trajectories , and then discuss how to infer model parameters . 421 Group Level HMM Let us consider a trajectory S = x1x2 . . . xN . Each observation xn(1 ≤ n ≤ N ) is multidimensional : ( 1 ) ln is a two dimensional vector denoting latitude and longitude ; ( 2 ) tn is a timestamp ; and ( 3 ) en is a bag of keywords denoting the augmented message .
Figure 3 : An illustration of the HMM .
To generate the sequence x1x2 . . . xN , we assume there are K latent states Z = {1 , 2 , . . . , K} . As shown in Figure 3 , each observation xn corresponds to a latent state zn ∈ Z , and the sequence of the latent states z1zn . . . zN follows a Markov process parameterized by : ( 1 ) a K dimensional vector π that defines the initial distribution over the K latent states , ie , πk = p(z1 = k ) ( 1 ≤ k ≤ K ) ; and ( 2 ) a K × K matrix A that defines the transition probabilities among the K latent states . Suppose the ( n − 1) th ( n > 1 ) latent sate is zn−1 = j , then the n th state zn depends only on zn−1 . More formally , if the state zn−1 is j , the probability for the state zn to be k is given by Ajk , ie , p(zn = k|zn−1 = j ) = Ajk .
Meanwhile , a state zn generates xn by generating the location ln , the timestamp tn , and the keywords en independently , ie , p(xn|zn = k ) = p(ln|zn = k ) · p(tn|zn = k ) · p(en|zn = k ) . For each observation xn , we assume the following spatial , temporal , and textual distributions : ( 1 ) The location ln is generated from a bi variate Gaussian , ie , p(ln|zn = k ) = N ( ln|µlk , Σlk ) where µlk and Σlk are the mean and variance matrix for state k . ( 2 ) The timestamp tn is generated from a uni variate Gaussian , ie , p(tn|zn = k ) = N ( tn mod 86400|µtk , σtk ) , where µtk and σtk are the mean and variance for state k . Note that we convert the raw absolute timestamp tn ( in second ) into the relative timestamp in one day . ( 3 ) The keywords en are generated from a multinomial θev kv , where θkv is the probn is the number of v ’s distribution , ie , p(en|zn = k ) ∝ V ability of choosing word v for state k , and ev occurrences in en . v=1 n z1z2z3zN…x1x2x3xN1308 422 Parameter Inference When training the HMM for group g , let us use {S1 , S2 , . . . , SR} to denote the input trajectories , and each trajectory Sr(1 ≤ r ≤ R ) is associated with a weight wr , denoting the probability that the user of Sr belongs to group g . The group level HMM is parameterized by Φ = {π , A , µl , Σl , µt , σt , θ} . We use the ExpectationMaximization ( EM ) algorithm to estimate these parameters . It is important to note that , when applying EM to train the HMM for group g , we use the previous HMM Hg to initialize model parameters . Later we will see , such an initialization ensures the iterative framework of GMOVE obtains better HMMs after each iteration and finally converge .
Starting with the initial parameters , the EM algorithm alternates between the E step and the M step round by round1 to generate a new HMM . In the ( t + 1) th round E step , it utilizes the estimated parameters at the t th round Φ(t ) , and computes the expectation of the complete likelihood Q(Φ ) . In the M step , it finds a new estimation Φ(t+1 ) that maximizes the Q function . Below , we present the details of the E step and the M step . E Step . In the E step , the key is to compute the distribution of the latent states based on the old parameter set Φ(t ) . Given a trajectory Sr = xr,1xr,2 . . . xr,N , ∀1 ≤ n ≤ N , we first use the BaumWelch algorithm to compute two distributions :
α(zr,n ) =p(xr,1 , xr,2 , . . . , xr,n , zr,n ; Φ(t) ) , β(zr,n ) =p(xr,n+1 , . . . , xr,N|zr,n ; Φ(t) ) .
Here , α(zr,n ) can be computed in a forward fashion , and β(zr,n ) can be computed in a backward fashion :
α(zr,n ) =p(xr,n|zr,n )
α(zr,n−1)p(zr,n|zr,n−1 ) ,
β(zr,n ) = zr,n−1
β(zr,n+1)p(xr,n+1|zr,n+1)p(zr,n+1|zr,n ) . zr,n+1 where the initial distributions α(zr,1 ) and β(zr,N ) are :
α(zr,1 = k ) = πkp(xr,1|zr,1 = k ) , β(zr,N = k ) = 1 .
Based on α(zr,n ) and β(zr,n ) , we are now able to compute the following distributions for the latent states : ( 1 ) γ(zr,n ) : the distribution of the n th latent state for the r th trajectory ; and ( 2 ) ξ(zr,n−1 , zr,n ) : the joint distribution of two consecutive latent states in the r th trajectory . These two distributions are given by γ(zr,n ) = p(zr,n|Sr ) = α(zr,n)β(zr,n)/p(Sr ) , ξ(zr,n−1 , zr,n ) = p(zr,n−1 , zr,n|Sr ) =α(zr,n−1)p(xr,n|zr,n)p(zr,n|zr,n−1)β(zr,n)/p(Sr ) , where p(Sr ) =
α(zr,N ) . zr,N
M Step . In the M step , we derive the best estimation for the parameter set Φ(t+1 ) = {π , A , µg , Σg , µt , σt , θ} . Based on γ(zr,n ) and ξ(zr,n−1 , zr,n ) , let us define
R
N
R
N
K
Γk = wrγ(zk r,n ) ; Ξj = wrξ(zj r,n−1 , zi r,n ) . r=1 n=1 r=1 n=2 i=1
We update the parameters in Φ(t+1 ) as follows ( please see Ap pendix for the detailed derivation ) : 1We intentionally use two different terms , namely iteration and round , to distinguish the two different iterative processes : ( 1 ) GMOVE ’s iterative refinement framework ; and ( 2 ) the EM algorithm for HMM training . wrγ(zk r,1 ) ; r=1 r=1 r=1
1 Ξj
1 Γk
R R R R R R R
1 Γk
1 Γk
1 Γk r=1 r=1 r=1
1 Γk n=1 n=2
N N N N N N n=1 n=1 n=1
π(t+1 ) k
=
A(t+1 ) jk =
µ(t+1 ) lk
=
Σ(t+1 ) lk
=
µ(t+1 ) tk =
σ(t+1 ) tk
=
θ(t+1 ) kv = r=1 n=1
4.3 User Grouping
( 1 )
( 2 )
( 3 )
)(lr,n − µ(t+1 ) lk
)T ; wrξ(zj r,n−1 , zk r,n ) wrγ(zk r,n)lr,n wrγ(zk r,n)(lr,n − µ(t+1 ) lk wrγ(zk r,n)tr,n ; wrγ(zk r,n)(tr,n − µ(t+1 ) tk wrγ(zk r,n)ev r,n .
( 4 )
( 5 )
( 6 )
( 7 )
)2 ;
|Ju|
Once the new ensemble of HMMs , Hnew , are obtained , we use them to softly assign each user into the G groups . For each user u , we update the membership vector Mu such that the g th dimension is the posterior probability that u belongs to group g . Let us denote the set of u ’s trajectories as Ju , in which the j th ( 1 ≤ j ≤ |Ju| ) u . Based on the new HMM ensemble Hnew , the probtrajectory is Sj u|g;Hnew ) , can be comability of observing Sj puted using the forward scoring algorithm of HMM . Accordingly , the probability of observing Ju is given by : u given group g , p(Sj p(u|g;Hnew ) = p(Sj u|g;Hnew ) .
( 8 )
Using the Bayes’ theorem , we further derive the posterior prob ability that user u belongs to group g as follows : j=1 p(g|u;Hnew ) ∝ p(g)p(u|g;Hnew ) , from the membership vectors : p(g ) = where p(u|g;Hnew ) is given by Equation 8 , and p(g ) is estimated u∈U Mu(g)/|U| . Fiu ( g ) = nally , we obtain the new membership vector M new p(g|u;Hnew ) . 4.4 Discussions as M new u
Now we proceed to prove the convergence of GMOVE .
THEOREM 1 . The iterative refinement framework of GMOVE is guaranteed to converge .
PROOF . With Jensen ’s inequality , the log likelihood of the input trajectory data satisfies : l(H ) = log p(u , g ; H )
G G g=1 g=1 u∈U
≥ u∈U
= u∈U
Mu(g )
Mu(g ) log log
G g=1 p(u , g ; H ) Mu(g ) p(u , g ; H ) Mu(g )
( 9 )
( 10 )
( 11 )
1309 Recall that , after each iteration , GMOVE sets Mu(g ) to the posterior probability p(g|u;H ) . The quantity p(u , g;H)/Mu(g ) is thus a constant , and hence the equality in Equation 11 is guaranteed to hold . Such a property allows us to prove the log likelihood is non decreasing after each iteration . More formally , we have l(H ) =
≤ u∈U u∈U
G G g=1 g=1
M t u(g ) log p(u , g ; Hg )
M t u(g )
M t u(g ) log p(u , g ; Hnew g u(g )
M t
( 12 )
( 13 )
)
≤ l(Hnew )
In the above , the key step is Equation 13 . It holds because in its iterative refinement framework , GMOVE uses the parameters of the previous HMM ensemble to initialize the current HMM ensemble , which guarantees p(u , g;H ) to be non decreasing after the HMM refinement . As the total likelihood is non decreasing after every iteration , we have proved the convergence of our algorithm .
There is a tight connection between our iterative refinement framework and the traditional EM algorithm . The only difference between the two is that , in the EM algorithm , the constructed lower bound is typically convex and thus can be easily optimized to global optimum ; while in our case , the constructed lower bound is still non convex and we need to use yet another EM algorithm ( HMM refinement ) to optimize this lower bound . As the lower bound is non convex , we have to make sure the HMM training of every iteration initialize with the parameters learnt from the previous iteration , otherwise we may risk running into different local optimums and thus break the convergence guarantee of our algorithm .
5 . EXPERIMENTS
In this section , we evaluate the empirical performance of GMOVE . All the algorithms were implemented in JAVA and the experiments were conducted on a computer with Intel Core i7 2.4Ghz CPU and 8GB memory . 5.1 Data Sets
Our experiments are based on two real life data sets , both of which are crawled using Twitter Streaming API during 20141010 — 20141030 The first data set , referred to as LA , consists of 0.6 million geo tagged tweets in Los Angeles . After grouping the tweets by user id and extracting trajectories with a time constraint of three hours ( Definition 1 ) , we obtain around 30 thousand trajectories . The second data set , referred to as NY , consists of 0.7 million geo tagged tweets in New York , and there are 42 thousand trajectories after extracting with the three hour time constraint . The reason we choose these two cities is because we want to verify the performance of GMOVE on the data sets that have quite different population distributions — the populace of Los Angeles is spread out in many different districts , while the populace of New York is relatively concentrated in Manhattan and Brooklyn . 5.2 Illustrative Cases
In this subsection , we run GMOVE on LA and NY and use sev eral illustrative cases to verify its effectiveness . 521 Text Augmentation Results In the first set of experiments , we demonstrate the effectiveness of the text augmentation module of GMOVE . To this end , we randomly choose several tweets in both LA and NY , and use GMOVE to augment the raw tweet messages . Table 1 shows the augmentation results for four example tweets ( two from LA and two from
NY ) . As a preprocessing step , we performed stemming and stopwords removal for the raw tweets , and also discretize the spatiotemporal space by partitioning each dimension into ten bins . When augmenting each tweet , the correlation threshold is set to δ = 0.2 and the augmentation size is set to L = 100 . Table 1 : Text augmentation examples on LA and NY . The number beside each word in the augmented message denotes that word ’s number of occurrences in the augmented message .
Data Raw tweet message
Y’all just kobe fans not lakers . Let ’s go lakers!!
LA
NY
Fun night! sal http://t.co/wMibfyleTW
@ UniverHollywood
Studios
Nothing betterfresh off the oven! #Italian #bakery #pizza
My trip starts now! @ JFK Airport lakers(26 ) , universal(20 ) , stuhollywood(18 ) , fame(6 ) ,
Augmented message fans(11 ) , game(7 ) , kobe(19 ) , jeremy(6 ) , injury(8 ) , staples(8 ) , center(4 ) , nba(9 ) , bryant(12 ) fun(4 ) , dio(16 ) , night(5 ) , party(7 ) , people(13 ) , play(11 ) fresh(7 ) , oven(21 ) , italian(19 ) , bakery(12 ) , pizza(14 ) , bread(6 ) , cook(5 ) , food(12 ) , kitchen(4 ) jfk(24 ) , trip(9 ) , kennedy(14 ) , start(6 ) , now(3 ) , airport(12 ) international(5 ) , john(13 ) , terminal(8 ) , travel(6 ) ,
Examining Table 1 , we find that GMOVE ’s text augmenter is quite effective : given the short raw tweets , GMOVE generates semantically comprehensive messages by including relevant keywords that are not mentioned in the raw tweets . Consider the first tweet as an example . A fan of the Lakers ( a basketball team ) was posting to support his team . The original tweet message contains only three meaningful keywords : “ kobe ” , “ lakers ” , and “ fan ” . By computing the spatiotemporal correlations between different keywords , GMOVE successfully identifies several other keywords ( eg , “ game ” , “ staples ” , “ center ” ) that are relevant to the three seed keywords . The augmented tweet becomes much more semantically comprehensive , making it possible to connect with other Lakers related tweets to form high quality latent states . Similar phenomena are also observed on the other three tweets . 522 Group Level Mobility Models In this set of experiments , we exemplify the group level mobility models generated by GMOVE on LA and NY . We are interested in the following questions : ( 1 ) can GMOVE indeed discover highquality latent states and meaningful transitions among them ? and ( 2 ) do different group level mobility models reflect different mobility patterns ? To answer the above questions , we ran GMOVE on LA and NY with the following parameter settings : δ = 0.2 , L = 100 , G = 80 , and K = 10 . While GMOVE discovers 80 group level mobility models on both LA and NY , we choose two representative mobility models learnt on LA due to space limit . In Figure 4(a ) and 4(b ) , we visualize those two example mobility models .
Based on the keywords and locations of the latent states , we can say the mobility model in Figure 4(a ) likely corresponds to the trajectories of a group of UCLA students . This is because most latent states are centered around the UCLA campus , and meanwhile carry college life semantics ( eg , home , school , gym , friends ) . We have the following interesting findings from the mobility model : ( 1 ) First , the latent states are highly interpretable . For instance , the top keywords of state 1 are “ school ” , “ ucla ” , “ course ” , etc It clearly reflects the students’ on campus activities , such as attending classes , taking exams , and staying with friends . ( 2 ) Second , the transitions between latent states are practically meaningful . Still consider state 1 as an example . As shown by the transition matrix , after taking classes at campus , the top subsequent activities are go
1310 ( a ) The mobility model for the first user group ( students ) .
( b ) The mobility model for the second user group ( tourists ) .
Figure 4 : Two group level mobility models learnt by GMOVE on LA . For each model , we show ( 1 ) the geographical center of each latents state ; ( 2 ) the top eight keywords of each latent state ; and ( 3 ) the transition probability matrix among the ten states . ing back home ( state 0 & 8 ) , having dinner ( state 2 & 6 ) , and doing sports ( state 7 ) . Those transitions are all highly consistent with a student ’s lifestyle in real life , and thus reflects the high quality of the underlying group level HMM .
The mobility model shown in Figure 4(b ) probably corresponds to the activities of tourists in LA . Again , we find that the latent states ( eg , airport , hotel , Hollywood , beach ) are highly interpretable and the transitions ( eg , going to hotel from airport , having food after sightseeing ) are intuitive . More importantly , when comparing the mobility models in Figure 4(a ) and 4(b ) , one can clearly observe that these two models reflect totally different hotspots and moving behaviors . This phenomenon suggests that GMOVE can indeed effectively partition the users based on their behaviors , and generate highly descriptive HMMs for different groups . 5.3 Quantitative Evaluation
While GMOVE can be used for various real life applications , we choose context aware location prediction as an example to quantitatively evaluate the performance of GMOVE . 531 Experimental Setup Task description . Context aware location prediction aims at predicting the next location of a user , given the current observation of the user ’s movement . Formally , given a ground truth trajectory x1x2 . . . xN , we assume the sequence x1x2 . . . xN−1 is already known , and try to recover xN from a pool of candidate locations . The candidate pool , denoted as Cx is formed as follows : from all the geo tagged tweets , we select the ones whose geographical distance to xN is no larger than three kilometers and the temporal difference to xN is no larger than five hours . Once the candidate pool is obtained , we use the given mobility model to rank all the candidates in the descending order of visiting probability , and check whether the grouth truth record xN appears in the top k results ( k is an integer that controls the result list size ) .
Intuitively , the better a mobility model is , the more likely it can recover the ground truth record xN ( ie , xN should be ranked higher in the result list ) . Hence , we use the prediction accuracy to measure the performance of the given mobility model . Given T test trajectories , for each test trajectory , we use a mobility model to re trieve the top k results and see whether the ground truth record xN appears in the result list . Let T denote the number of trajectories for which the ground truth records are successfully recovered , then the prediction accuracy is Acc@k = T /T . On both LA and NY , we randomly choose 30 % trajectories as test data , and use the rest 70 % data for model training . Compared Methods . To compare with GMOVE , we implemented the following mobility models for context aware location prediction : ( 1 ) LAW [ 2 ] is a prevailing mobility model . Based on the displacement distribution , it models human mobility as a Lévy flight with long tailed distributions . ( 2 ) GEO is based on existing works [ 14 , 4 ] that train one HMM from the input trajectories . It uses only spatial information by assuming each latent state generates the location from a bi variate Gaussian . ( 3 ) SINGLE is an adaption of GMOVE , which does not perform user grouping , but trains one HMM using all the trajectories . ( 4 ) NOAUG is another adaption of GMOVE , which does not perform text augmentation .
When computing the visiting probability for any candidate location , both GEO and SINGLE simply use the obtained HMM and the forward scoring algorithm to derive the likelihood of the sequence . For GMOVE and NOAUG , they both produce an ensemble of HMMs , and each HMM provides a visiting probability for the candidate location . Hence , GMOVE and NOAUG need to first compute the membership vector for the target user based on her historical trajectories , and then use membership values as weights to derive a weighted score .
Note that , while there are other methods [ 15 , 16 , 6 , 21 ] optimized for location prediction ( eg , by using a supervised learning framework ) , we have not included them for comparison . This is because GMOVE is designed for mobility modeling , and we use contextaware location prediction as a quantitatively evaluation for the quality of the obtained mobility models . We do not claim GMOVE can outperform state of the art location prediction techniques . Parameter Settings . GMOVE has four major parameters : ( 1 ) the correlation threshold δ ; ( 2 ) the augmentation size L ; ( 3 ) the number of user groups G ; and ( 4 ) the number of latent states K . We study the effects of different parameters as follows : ( 1 ) δ = 0 , 0.1 , 0.2 , 0.3 , 0.4 , 0.5 ; ( 2 ) L = 0 , 20 , 40 , 60 , 80 , 100 ; ( 3 ) G = 5 , 10 , 20 ,
105932678401234567890123456789005010015020025030035040State 0schooluclacoursemidtermclassfooddrinkdamnfriendstayhomemorningcoffeedudeapartmentdayhallrunhousesleepsantamonicabeachsunsetdinnerbabyveniceshorelifepleasenightmusictonightbartbhnightlifeeveningmoviebeerlikesuckgymfootballteamgameplaybusterletbeatboyfoodrestaurantdinnergrilllovedeliworstcomewaiterchipotlehomerestsleeplivegamedrinkbedshowtimemisswaitdinnerfoodworstgrillrestaurantdeliciousamazinggatherlovefriendhahahadreamsongchildbirthdaydrinkkissbdaysnapchatState 1State 2State 3State 4State 5State 6State 7State 8State 9buyshopmallbeautifulhappymineapparelbagclothesdayState 0restaurantfoodamazingeatlunchgrillamericandelitogetherpancakehotelsleepmissbuildingcenterplazaflighthomecityinnvenicebeachpeoplelifespasunshinebeautifulsantamonicafoodclubnightmusicgirlnightclubmoneydrinksleepdancerocknighthotelliveloungeplacetaxishowersleepqueenterminallaxtravelairportinternationalcomeflylaxarrivalterminaltraindepartfoodtabletastesaladquietdelihotsteakdiningfameshoppingbuyshopclothescheapsalesnicewomenmallmenuniversalstudionightpartyhollywoodbusterfriendhappyhaloweenclubState 1State 2State 3State 4State 5State 6State 7State 8State 9foodrestaurantchinesemexicanspicyhometowntastechinatowndelicious0123456789012345678901234567890050100150200250300350400451311 30 , 40 , 50 , 60 , 70 , 80 , 90 , 100 ; ( 4 ) K = 3 , 4 , 5 , 10 , 15 , 20 , 25 , 30 . When studying the effect of one parameter , we fix the other parameters to their default values , as denoted by the bold numbers . 532 Prediction Accuracy Comparison . Figure 5 reports the accuracies of different mobility models for top k prediction on LA and NY . The parameters of GMOVE are set to the default values as such a setting offers the highest prediction accuracy . The parameters of all the other compared models are also carefully tuned to achieve the best performance .
( a ) Effect of δ
( b ) Effect of L .
( a ) LA
( b ) NY
Figure 5 : Prediction accuracy vs k .
As shown in Figure 5(a ) and 5(b ) , GMOVE significantly outperforms all the baseline methods on both LA and NY for different k values . Comparing the performance of GMOVE and SINGLE , we find that the prediction accuracy of GMOVE is about 12.7 % better on average . This suggests that there indeed exist multiple groups of people that have different moving behaviors . As SINGLE trains one model for all the input trajectories , it suffers from severe data inconsistency and mixes different mobility regularities together . In contrast , GMOVE employs the iterative refinement framework to perform group level mobility modeling . Such a framework effectively distinguishes different mobility regularities and thus achieves much better accuracy . Meanwhile , by examining the performance of GMOVE and NOAUG , we find that the text augmenter of GMOVE is also effective and improves the prediction accuracy by about 3 % . As aforementioned , while each raw tweet message is very short , the augmented message becomes much more semantically comprehensive . The augmentation process allows us to connect the tweets that are intrinsically relevant and thus generate higher quality HMMs . Another interesting finding is that the performance of SINGLE is consistently better than GEO and LAW . Such a phenomenon verifies the fact that integrating multiple ( spatial , temporal , and textual ) signals can better describe the users’ moving behaviors than using only spatial information , and thus achieve better location prediction accuracy . 533 Effects of Parameters . As mentioned earlier , there are four major parameters in GMOVE : δ , L , K , and G . After tuning those parameters on LA and NY , we find that the trends for all the four parameters are very similar on LA and NY . We only report the results on LA to save space .
We first study the effects of δ and L . Figure 6(a ) shows the prediction accuracy of GMOVE when δ varies from 0 to 05 As shown , the performance of GMOVE first increases with δ and then decreases . This phenomenon is expected : a too small correlation threshold tends to include irrelevant keywords in the augmentation process ; while a too large threshold constrains a keyword ’s vicinity to include almost only itself , making the augmentation ineffective . Figure 6(b ) shows the performance of GMOVE when the augmentation size L varies . We find that the prediction accuracy first increases with L and quickly becomes stable . This suggest that the augmentation size should not be set to a too small value in practice . We proceed to study the effects of G and K . Figure 6(c ) reports
( c ) Effect of G .
( d ) Effect of K .
Figure 6 : Effects of parameters ( LA , k = 3 ) . results when G increase from 5 to 100 . Not hard to observe , the prediction accuracy increases significantly with G before it gradually becomes stable . This is expected . In big cities like Los Angeles and New York , it is natural that there are a large number of user groups that have totally different lifestyles . When G increases , the GMOVE model fits better with the intrinsic data complexity , and thus improves the prediction accuracy . Figure 6(d ) shows the effect of K on the performance of GMOVE . Interestingly , we observe the performance of GMOVE is not sensitive to the number of latent states as long as K ≥ 5 . This suggests that when the user groups are fine grained enough ( eg , G = 80 ) , the number of “ hotspots ” for each group is usually limited in practice . 5.4 Efficiency Study
In the final set of experiments , we report the training time of GMOVE . When tuning the four parameters of GMOVE , we find that the training time of GMOVE does not change much with δ and L . Therefore , we only report the effects of G and K . Figure 7(a ) and 8(a ) show that the time cost of GMOVE generally increases with G , but scales well . This is a good property of GMOVE in situations where G needs to be set to a large number . In Figure 7(b ) and 8(b ) , we can see that the time cost increases superlinearly with K . This is mainly because of the intrinsic nature for HMM training , where time complexity of the EM algorithm is quadratic in K .
( a ) Running time vs G .
( b ) Running time vs K .
Figure 7 : Running time of GMOVE on LA .
6 . RELATED WORK
Generally , existing approaches on mobility modeling can be classified into three classes : pattern based , law based , and model based . Pattern based approaches mine regular mobility patterns from movement data . Existing studies have designed effective methods for mining different types of movement patterns . Specifically ,
12345k000015030045060AccuracyLawGeoSingleNoAugGMove12345k000008016024032040AccuracyLawGeoSingleNoAugGMove000102030405±0364036803720376Accuracy020406080100L0352036003680376Accuracy020406080100G027030033036Accuracy0612182430K03660369037203750378Accuracy020406080100G0816243240Training time ( sec)1e351015202530K012345Training time ( sec)1e41312 ( a ) Running time vs G .
( b ) Running time vs K .
Figure 8 : Running time of GMOVE on NY .
Giannotti et al . [ 7 ] define a T pattern as Region of Interest ( RoI ) sequence that frequently appears in the input trajectories . By partitioning the space , they use frequent sequential pattern mining to extract all the T patterns . Several studies have attempted to find a set of objects that are frequently co located . Efforts along this line include mining flock [ 11 ] , swarm [ 12 ] , and gathering [ 26 ] patterns . Meanwhile , there has also been study on mining periodic movement patterns . For instance , Li et al . [ 13 ] first use density based clustering to extract reference spots from GPS trajectories , and then detect periodic visiting behaviors at those spots .
While the above studies focus on pure GPS trajectory data , a number of studies mine mobility patterns from semantic trajectories [ 17 , 1 , 5 , 25 ] . Alvares et al . [ 1 ] first map the stops in trajectories to semantic places using a background map , and then extract frequent place sequences as sequential patterns . Zhang et al . [ 25 ] introduce a top down approach to mine fine grained movement patterns from semantic trajectories . Our work differs from these studies in two aspects . First , we consider unstructured text instead of structured category information . Second , instead of extracting a large number of patterns , we develop a statistical model that comprehensively and concisely summarizes people ’s moving behaviors . Law based approaches investigate the physical laws that govern human ’s moving behaviors . Brockmann et al . [ 2 ] find that human mobility can be approximated by a continuous time random walk model with long tail distributions . Gonzalez et al . [ 8 ] study human mobility using mobile phone data . They find that people periodically return to a few previously visited locations , and the mobility can be modeled by a stochastic process centered at a fixed point . Song et al . [ 20 ] report that around 93 % human movements are predictable due to the high regularity of people ’s moving behaviors . They [ 19 ] further propose a self consistent microscopic model to predict individual mobility . Model based approaches attempt to learn statistical models from movement data . Cho et al . [ 3 ] observe that a user usually moves around several centers ( eg , home and work ) at fixed time slots , and thus propose to model a user ’s movement as a mixture of Gaussians . Their model can further incorporate social influence based on the fact that a user is more likely to visit a location that is close to the locations of her friends . Wang et al . [ 21 ] propose a hybrid mobility model that uses heterogeneous mobility data for better location prediction . There are some studies [ 18 , 23 , 9 , 10 , 24 ] on geographical topic discovery , aiming to discover people ’s activities in different geographical regions and/or time periods . While our work also uses statistical models to unveil human mobility , it differs from the above studies in that it focuses on extracting the latent states of human movements as well as the sequential transitions .
The most relevant works to our study are those HMM based approaches [ 4 , 22 ] . Mathew et al . [ 14 ] discretize the space into equalsize triangles using Hierarchical Triangular Mesh . By assuming each latent state has a multinomial distribution over the triangles , they train an HMM on the input GPS trajectories . Deb et al . [ 4 ] propose the probabilistic latent semantic model , which essentially uses HMM to extract latent semantic locations from cell tower and bluetooth data . Ye et al . [ 22 ] use HMM to model user check ins on location based social networks . By incorporating the category information of places , their obtained HMM is capable of predicting the category of the next location for the user .
Although our proposed GMOVE method also relies on HMM , it differs from the above works in two aspects . First , none of the above studies consider text data for mobility modeling . In contrast , we simultaneously model spatial , temporal , and textual information to obtain interpretable latent states . Second , they perform HMM training with the movement data of either one individual or a given collection of users . GMOVE , however , couples the subtasks of user grouping and mobility modeling , and generates high quality user groups as well as group level HMMs .
7 . CONCLUSION
In this paper , we studied the novel problem of modeling human mobility using geo tagged social media ( GeoSM ) . To effectively unveil mobility regularities from the sparse and complex GeoSM data , we proposed the GMOVE method . Our method distinguishes itself from existing mobility models in three aspects : ( 1 ) it enables the mutual enhancement between the subtasks of user grouping and mobility modeling , so as to generate high quality user groups and reliable mobility models ; ( 2 ) it leverages keyword spatiotemporal correlations as auxiliary knowledge to perform text augmentation , which effectively reduces text sparsity present in most GeoSM data ; and ( 3 ) it integrates multiple ( spatial , temporal , and textual ) signals to generate a comprehensive view of users’ moving behaviors . Our experiments on two real life data sets show that the strategies employed by GMOVE are highly effective in generating quality mobility models . Meanwhile , using context aware location prediction as an example task , we found GMOVE can achieve much better prediction accuracy than baseline mobility models .
There are several future directions based on this work . First , we currently use a pre specified time constraint to extract reliable trajectories from raw GeoSM history . In the future , it is interesting to adapt GMOVE such that it can automatically infer the reliability of the transitions and extract trajectories from the raw data . Second , besides context aware location prediction , we plan to apply GMOVE for other tasks in the urban computing context . By the year 2030 , it is estimated over 60 % of the world population will be located within a city ’s boundary . One of the huge challenges facing many government organizations , including the US military , is understanding and preparing for complex urban environments . From disaster relief to anomaly movement detection , the challenges associated with operating within the so called mega cities are many . The ability to accurately model group level human mobility will dramatically improve the understanding of normal urban life patterns and help address such challenges .
8 . ACKNOWLEDGEMENTS
This work was sponsored in part by the US Army Research Lab . under Cooperative Agreement No . W911NF 09 2 0053 ( NSCTA ) , National Science Foundation IIS 1017362 , IIS 1320617 , and IIS1354329 , HDTRA1 10 1 0120 , and Grant 1U54GM114838 awarded by NIGMS through funds provided by the trans NIH Big Data to Knowledge ( BD2K ) initiative ( wwwbd2knihgov ) , and MIAS , a DHS IDS Center for Multimodal Information Access and Synthesis at UIUC . Luming Zhang is supported by the National Nature Science Foundation of China ( Grant No . 61572169 ) and the Fundamental Research Funds for the Central Universities . The views and
020406080100G0015304560Training time ( sec)1e351015202530K0015304560Training time ( sec)1e41313 conclusions contained in this document are those of the author(s ) and should not be interpreted as representing the official policies of the US Army Research Laboratory or the US Government . The US Government is authorized to reproduce and distribute reprints for Government purposes notwithstanding any copyright notation hereon .
9 . REFERENCES [ 1 ] L . O . Alvares , V . Bogorny , B . Kuijpers , B . Moelans , J . A . Fern , E . D .
Macedo , and A . T . Palma . Towards semantic trajectory knowledge discovery . Data Mining and Knowledge Discovery , 2007 .
[ 2 ] D . Brockmann , L . Hufnagel , and T . Geisel . The scaling laws of human travel . Nature , 439(7075):462–465 , 2006 .
[ 3 ] E . Cho , S . A . Myers , and J . Leskovec . Friendship and mobility : User movement in location based social networks . In KDD , pages 1082–1090 , 2011 .
[ 4 ] B . Deb and P . Basu . Discovering latent semantic structure in human mobility traces . In Wireless Sensor Networks , pages 84–103 . Springer , 2015 .
[ 5 ] R . Fileto , V . Bogorny , C . May , and D . Klein . Semantic enrichment and analysis of movement data : probably it is just starting! SIGSPATIAL Special , 7(1):11–18 , 2015 .
[ 6 ] H . Gao , J . Tang , and H . Liu . Mobile location prediction in spatio temporal context . In Nokia mobile data challenge workshop , volume 41 , page 44 , 2012 .
[ 7 ] F . Giannotti , M . Nanni , F . Pinelli , and D . Pedreschi . Trajectory pattern mining . In KDD , pages 330–339 , 2007 .
[ 8 ] M . C . Gonzalez , C . A . Hidalgo , and A L Barabasi . Understanding individual human mobility patterns . Nature , 453(7196):779–782 , 2008 .
[ 9 ] L . Hong , A . Ahmed , S . Gurumurthy , A . J . Smola , and
K . Tsioutsiouliklis . Discovering geographical topics in the twitter stream . In WWW , pages 769–778 , 2012 .
[ 10 ] B . Hu and M . Ester . Spatial topic modeling in online social media for location recommendation . In RecSys , pages 25–32 , 2013 .
[ 11 ] P . Laube and S . Imfeld . Analyzing relative motion within groups of trackable moving point objects . In GIScience , pages 132–144 , 2002 .
[ 12 ] Z . Li , B . Ding , J . Han , and R . Kays . Swarm : Mining relaxed temporal moving object clusters . PVLDB , 3(1):723–734 , 2010 .
[ 13 ] Z . Li , B . Ding , J . Han , R . Kays , and P . Nye . Mining periodic behaviors for moving objects . In KDD , pages 1099–1108 , 2010 .
[ 14 ] W . Mathew , R . Raposo , and B . Martins . Predicting future locations with hidden markov models . In UbiComp , pages 911–918 , 2012 .
[ 15 ] A . Monreale , F . Pinelli , R . Trasarti , and F . Giannotti . Wherenext : a location predictor on trajectory pattern mining . In KDD , pages 637–646 , 2009 .
[ 16 ] A . Noulas , S . Scellato , N . Lathia , and C . Mascolo . Mining user mobility features for next place prediction in location based services . In ICDM , pages 1038–1043 , 2012 .
[ 17 ] C . Parent , S . Spaccapietra , C . Renso , G . L . Andrienko , N . V .
Andrienko , V . Bogorny , M . L . Damiani , A . Gkoulalas Divanis , J . A . F . de Macêdo , N . Pelekis , Y . Theodoridis , and Z . Yan . Semantic trajectories modeling and analysis . ACM Comput . Surv . , 45(4):42 , 2013 .
[ 18 ] S . Sizov . Geofolk : latent spatial semantics in web 2.0 social media .
In WSDM , pages 281–290 , 2010 .
[ 19 ] C . Song , T . Koren , P . Wang , and A L Barabási . Modelling the scaling properties of human mobility . Nature Physics , 6(10):818–823 , 2010 .
[ 20 ] C . Song , Z . Qu , N . Blumm , and A L Barabási . Limits of predictability in human mobility . Science , 327(5968):1018–1021 , 2010 .
[ 21 ] Y . Wang , N . J . Yuan , D . Lian , L . Xu , X . Xie , E . Chen , and Y . Rui .
Regularity and conformity : Location prediction using heterogeneous mobility data . In KDD , pages 1275–1284 , 2015 .
[ 22 ] J . Ye , Z . Zhu , and H . Cheng . What ’s your next move : User activity prediction in location based social networks . In SDM , 2013 .
[ 23 ] Z . Yin , L . Cao , J . Han , J . Luo , and T . S . Huang . Diversified trajectory pattern ranking in geo tagged social media . In SDM , pages 980–991 , 2011 .
[ 24 ] Q . Yuan , G . Cong , Z . Ma , A . Sun , and N . M . Thalmann . Who , where , when and what : discover spatio temporal topics for twitter users . In KDD , pages 605–613 , 2013 .
[ 25 ] C . Zhang , J . Han , L . Shou , J . Lu , and T . F . L . Porta . Splitter : Mining fine grained sequential patterns in semantic trajectories . PVLDB , 7(9):769–780 , 2014 .
[ 26 ] K . Zheng , Y . Zheng , N . J . Yuan , and S . Shang . On discovery of gathering patterns from trajectories . In ICDE , pages 242–253 , 2013 .
[ 27 ] Y . Zheng , L . Zhang , X . Xie , and W Y Ma . Mining interesting locations and travel sequences from gps trajectories . In WWW , pages 791–800 , 2009 .
APPENDIX We derive the updating rules for the HMM parameters in the Mstep as follows . Given the weighted trajectories {S1 , S2 , . . . , SR} and the old paramter set Φ(t ) , the expectation of the complete likelihood is
Q(Φ ) =
= wrp(zr|Sr ; Φ(t ) ) ln p(Sr , zr|Φ ) wrp(zr|Sr ; Φ(t ) ) ln p(zr,1|π ) r=1 zr
R
R
R R r=1
+ zr zr r=1
+
N N n=2
K
( 14 )
( 15 )
( 17 )
( 18 )
( 19 ) wrp(zr|Sr ; Φ(t ) ) ln p(zr,n|zr,n−1 , A ) ( 16 ) wrp(zr|Sr ; Φ(t))zk r,n ln p(xr,n|Φ ) . r=1 zr n=1 k=1
Meanwhile , since zk r,n is a binary variable , we have :
γ(zk r,n ) =
ξ(zj r,n−1 , zk r,n ) = p(zr|Sr ; Φ(t))zk r,n p(zr|Sr ; Φ(t))zj r,n−1zk r,n zr zr
The three terms in Equation 15 , 16 , and 17 are independent , we can thus optimize the parameters π , A , and {µl , Σl , µt , σt , θ} separately . To optimize π , we need to maximize Equation 15 , namely
R R r=1
K zr r=1 k=1 f ( π ) =
=
K k=1 wrp(zr|Sr ; Φ(t ) ) wrγ(zk r,1 ) ln πk . zk r,1 ln πk
( 20 )
( 21 )
Using the Lagrange multiplier , we can easily obtain the updating rule for π ( Equation 1 ) that maximizes the above objective function . Now consider the optimization of A . With Equation 16 and 19 , we can write down the following objective function , which can be similarly optimized using use the Lagrange multiplier to produce Equation 2 :
R
N
K
K g(A ) =
ξ(zj r,n−1 , zk r,n ) ln Ajk
( 22 ) r=1 n=2 k=1 j=1
Finally , as the spatial , temporal , and textual observations are independent , the parameter sets {µkg , Σkg} , {µkt , Σkt} , and θk can be derived separately based on 17 . Recall that the spatial and temporal distributions are assumed to be Gaussian , we simply take the derivatives of the objective function and set them to zeros , which produces the updating rules in Equation 3 , 4 , 5 , and 6 . To optimize θk , we again combine Equation 18 with the Lagrange multiplier , and obtain the maximizer shown in Equation 7 .
1314
