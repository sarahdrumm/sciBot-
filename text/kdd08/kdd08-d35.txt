Community Evolution in Dynamic
Multi Mode Networks
School of Computing Informatics
Lei Tang , Huan Liu Arizona State University Tempe , AZ 85287 , USA
{L.Tang , HuanLiu}@asuedu
Jianping Zhang , Zohreh Nazeri
McLean , VA 22102 , USA
{jzhang , nazeri}@mitre.org
The MITRE Corporation
7515 Colshire Drive
ABSTRACT A multi mode network typically consists of multiple heterogeneous social actors among which various types of interactions could occur . Identifying communities in a multi mode network can help understand the structural properties of the network , address the data shortage and unbalanced problems , and assist tasks like targeted marketing and finding influential actors within or between groups . In general , a network and the membership of groups often evolve gradually . In a dynamic multi mode network , both actor membership and interactions can evolve , which poses a challenging problem of identifying community evolution . In this work , we try to address this issue by employing the temporal information to analyze a multi mode network . A spectral framework and its scalability issue are carefully studied . Experiments on both synthetic data and real world large scale networks demonstrate the efficacy of our algorithm and suggest its generality in solving problems with complex relationships .
Categories and Subject Descriptors J.4 [ Social and Behavioral Sciences ] : Sociology ; H33 [ Information Search and Retrieval ] : Clustering ; I53 [ Pattern Recognition ] : Clustering
General Terms Algorithms , Experimentation , Performance
Keywords Evolution , Multi mode Network , Community Evolution , Dynamic Network Analysis , Dynamic Heterogeneous Network
1 .
INTRODUCTION
Social network analysis [ 35 ] is attracting increasing attention in many fields besides sociology , including epidemiology [ 20 ] , intelligent analysis [ 5 ] , targeted marketing and issue
Queries relate
Users click
Ads
Figure 1 : Online Marketing recommendation systems [ 28 ] , etc . Most existing work concentrates on one mode network . That is , there is only one type of social actors ( nodes ) involved in the network and the ties ( interactions ) between actors are of the same type . This is common in a broad sense such as friendship network , Internet , phone call network , etc . However , some emerging applications such as web mining , collaborative filtering , and online targeted marketing involve more than one type of actors and multiple heterogeneous interactions between different types of actors . Such a network is called multi mode network ( also known as heterogeneous network ) [ 35 ] .
Take targeted marketing as an example . A three mode network can be constructed : users , queries , and online ads , as shown in Figure 1 . Note that in the figure , both queries and ads are also considered as “ social actors ” , though the user is still the major mode under consideration . There are different interactions among the three types of entities : Users issue queries when searching for his/her desired product ; users can click on those ads that seem interesting to him/her ; queries and ads are related to each other naturally by its semantic meanings . Intuitively , two users submitting similar queries or browsing related ads might share similar interest . Queries relating to ads of the same/similar product , and submitted by users within a single session are more likely to be related .
One way for one mode networks to handle the example above is to construct a similarity network on user profiles or queries . Multi mode network , by employing the relationship between different types of objects , could shed light for accurate online marketing with limited user information . The network might become more complicated if there are interactions between members of the same mode ( say , friendship networks between users , similarity networks between queries ) or attributes associated with certain objects ( like the product information of the ads ) .
677 citations
Papers
P r o c e e d n g s i h ip o r s u t h
A
Researc hers
P
C/Editors
Confere nce/
Journals words semantics
Figure 2 : Academic Publications
Another example of multi mode network is academic publications as shown in Figure 2 . Various kinds of related objects ( researchers , conference/journals , papers , words ) are considered . Scientific literature connects papers by citations ; and papers are published at different places ( conferences , journals , workshops , thesis , etc. ) ; Meanwhile , researchers are connected to papers through authorship . Some might also relate to each other by serving simultaneously as journal editors or the program committees of a conference . Moreover , each paper can focus on different topics , which are represented by words . Words are associated to each other based on semantics . At the same time , papers connect to different conferences , journals ( venues for publication ) . In other words , multiple types of objects exist in the same network , and objects relate to others ( either the same type or different types ) through different links . Several objects might have some attributes as well .
Within a multi mode network , different types of social actors tend to form groups or communities1 . For instance , users sharing similar interest are more likely to form the same group ; queries are clustered naturally if they are relating to similar products ; and ads are clustered if they aim at the same/similar products . A special case is when there exists a one to one correspondence relationship between groups of different modes ( user query ads ) , and the actors inside the the group interact with each other frequently . More generally , a user group could interact with multiple groups of another mode ( ie , users can have multiple interests , thus relating to various query groups ) . One mode network always assumes that the within group interaction are dense and between group interaction are sparse . Different from an one mode network , a community inside a multi mode network might have no within group interaction yet share similar patterns while interacting with groups of other modes .
Some work has been done to identify communities in a network of heterogeneous objects or multiple relations [ 33 , 23 , 25 ] in terms of multi type relational clustering . However , these methods concentrate on static networks . In reality , some networks tend to evolve gradually ; the communities inside a network could grow or shrink , and the membership for specific social actors can shift gradually [ 8 , 19 , 4 , 21 ] . In a multi mode network , actors of different modes evolve differ
1Group and community are interchangeable in this work . ently . For instance , in previous academic example , the interactions between different actors change every year . Within the network , researchers can divert their personal research interests , and the “ hot ” topics of a field could also change . On the contrary , the community of “ journals/conferences ” tends to be stable , but two venues could also be connected due to the topic change . For instance , social network analysis joins researchers from diverse fields recently , thus making those journals on social science becoming more related to transactions concentrating on data mining .
Facing heterogeneous actors with dynamic interactions , discovering the community evolution can benefit in various aspects : 1 ) to detect the user interest shift leading to more effective targeted marketing ; 2 ) to help browse a long history of network or literature by showing the long term trend ; 3 ) to detect suspicious financial online activities if the subject suddenly signals a drastic change in transaction pattern , etc . However , the problem becomes more challenging in dynamic multi mode networks as the evolution of each mode becomes correlated .
In this work , we propose a general model to identify community evolution in dynamic multi mode networks by adopting a spectral clustering framework . Essentially , the dynamic multi mode network consists of a series of network snapshots . We aim to find out how a community evolves . In this model , the effect of temporal change is adopted as a regularization term while performing the clustering . It can be shown that the interactions between two modes , and clustering result of neighboring time stamps can be considered as attributes in a sense , which connects dynamic multi mode network analysis to classical attribute based data mining . An iterative algorithm , which does not suffer from hardware constraints even with tens of thousands actors , is presented to find an optimal solution of the model . The experiments on both synthetic and real world large scale network data demonstrate the efficacy of our algorithm and suggest its generality in solving problems with complex relationships .
The paper is organized as follows . We present a general framework to find community evolution for dynamic multimode networks in Section 2 . An iterative solver is provided in Section 3 . After that , we also discuss how to handle an actor dying or a new actor joining the network , and other multi mode networks of diverse properties . In Section 5 , extensive experiments on both synthetic and real world data are conducted to study the efficacy and efficiency of our framework . We review some related literature in Section 6 and conclude in Section 7 .
2 . PROBLEM FORMULATION
We follow the framework presented in [ 23 ] . Given an m mode network with m types of actors
X(i ) = {xi ni} i = 1 , ··· , m
1 , xi
2,··· , xi where ni is the number of actors for Xi , we aim to find how the latent community evolves . In our framework , we only consider discrete time stamps by taking a series of snapshots , which is commonly adopted in network analysis with temporal information [ 4 , 21 ] . For snapshot at time t , a network N t is represented as multiple interactions between different i,j ∈ IRni×nj denotes the interaction between modes . Let Rt two modes of actors Xi and Xj at time stamp t , ki and kj denote the number of latent communities for Xi and Xj respectively . Ideally , the interaction between actors can be
678 approximated by the interactions between groups in the following form [ 24 , 12 ] : i,j ≈ C ( i,t)At Rt i,j(C ( j,t))T where C ( i,t ) ∈ {0 , 1}ni ×ki denotes latent cluster membership for Xi at time stamp t , and Ai,j represents the group interaction . In other words , the group identity determines how two actors interact , which is essentially making similar assumption as block models [ 27 ] . The difference is that block models deal with the problem from a probabilistic aspect and concentrate on one mode or two mode networks . Here we try to identify the block structure of multi mode networks via matrix approximation : i,j − C ( i,t)At min ||Rt st C ( i,t ) ∈ {0 , 1}ni ×ki
∗k = 1 ,
F i,j(C ( j,t))T||2 kiXk=1 C ( i,t ) kjXk=1
( 1 )
( 2 )
( 3 )
C ( j,t ) ∈ {0 , 1}nj ×kj
C ( j,t )
∗k = 1
The constraints in 2 and 3 force each row of the indicator matrix to have only one entry being 1 . That is , each actor belongs to only one community .
Naturally , for dynamic multi mode networks , the objective function without considering its temporal effect can be formulated as min
TXt=1 X1≤i<j≤m w(i,j ) a
||Rt i,j − C ( i,t)At i,j(C ( j,t))T||2
F
F2 : min a where w(i,j ) are the weights associated with different interactions . Unfortunately , the discreteness of the constraints in ( 2 ) and ( 3 ) makes the problem NP hard . A strategy that has been well studied in spectral clustering [ 37 ] is to allow the cluster indicator matrix to be continuous and relax the hard clustering constraint as follows :
( C ( i,t))T C ( i,t ) = Iki
Hence , the problem becomes
The formulation F1 does not consider the relationship between consecutive time stamps . But in reality , the clustering tends to evolve gradually . To get a smooth community evolution , we add a regularization term Ω which forces the clustering sequence to be as smooth as possible :
Ω =
1 2
TXt=2
||C ( i,t)(C ( i,t))T − C ( i,t−1)(C ( i,t−1))T||2
F
( 5 )
Here , the coefficient 1 2 is presented due to notational conveniences in later parts . Indeed , we are making a Markov assumption using this regularization . That is , current cluster should be similar to the clustering results in previous time stamp .
Note that we do not take the regularization as
Ω =
||C ( i,t ) − C ( i,t−1)||2
F
TXt=2 which seems more natural at first glimpse . Since C ( i,t ) is essentially equivalent under an orthogonal transformation as demonstrated in Theorem 1 , comparing them directly does not necessarily capture the difference between the cluster indicator at different time stamps . On the contrary , the regularization term ( 5 ) captures the difference of community structure of neighboring time stamps , and it is independent of the orthogonal transformation . With this regularization , the problem can be formulated as :
F a w(i,j )
||Rt i,j − C ( i,t)At i,j(C ( j,t))T||2
TXt=1Xi<j TXt=2 ||C ( i,t)(C ( i,t))T − C ( i,t−1)(C ( i,t−1))T||2 ( C ( i,t))T C ( i,t ) = Iki i = 1,·· · , m , t = 1,··· T
F ( 6 )
+
1 2 mXi=1 w(i ) b st with with w(i ) b being the trade off between the loss of interaction approximation and temporal regularization . The evolution is assumed to take effect gradually . Essentially , we aim to find a community structure which is consistent with the interaction matrix , whereas not too different from that of the previous time stamp .
F1 : min w(i,j )
TXt=1 X1≤i<j≤m
||Rt ( C ( i,t))T C ( i,t ) = Iki a st with i = 1,··· , m , t = 1,··· T Then we have the following theorem : i,j − C ( i,t)At i,j(C ( j,t))T||2
F
Theorem 1 . Let C ( i,t ) , 1 ≤ i ≤ m , 1 ≤ t ≤ T be a valid solution of F1 , then eC ( i,t ) as defined below eC ( i,t ) = C ( i,t)Q(i,t ) ( Q(i,t))T Q(i,t ) = Q(i,t)(Q(i,t))T = Iki , Q(i,t ) ∈ IRki ×ki , where is also a valid solution with the same objective value .
Proof . It suffices to show that the value of each single i,j , we term does not change . Given a solution C ( i,t ) and At i,j = ( Q(i,t))T At i,jQ(j,t ) , then can choose eAt which completes the proof . eC ( i,t)eAt i,j(eC ( j,t))T = C ( i,t)At i,j(C ( j,t))T
( 4 )
3 . EVOLUTIONARY CLUSTERING
Here , we give an effective iterative algorithm to solve the formation F2 in ( 6 ) . 3.1 Computation of A
Theorem 2 . If C ( i,t ) are given , the optimal group inter action matrix At i,j can be calculated as
At i,j = ( C ( i,t))T Rt i,jC ( j,t )
Proof . Since At i,j appears only in a single term , we can focus on the term to optimize At i,j . i,j(C ( j,t))T||2 F i,j ( C(j,t ) )T )(Rt i,j −C(i,t ) At
= tr[(Rt
||Rt i,j − C ( i,t)At i,j −C(i,t ) At i,j ( Rt
= tr[Rt i,j )T −2C(i,t ) At i,j ( C(j,t ) )T ( Rt i,j )T +At i,j ( C(j,t ) )T )T ] i,j )T ] i,j ( At
The 2nd line is obtained via the property that tr(AB ) = tr(BA ) and column orthogonality of C ( i,t ) and C ( j,t ) .
679 By setting the derivative with respect to At i,j to zero , it follows that
At i,j = ( C ( i,t))T Rt i,jC ( j,t )
The proof is completed . 3.2 Computation of C
Given the optimal At i,j , it can be verified that
||Rt = ||Rt i,j − C ( i,t)At i,j||2
F − ||(C ( i,t))T Rt i,j(C ( j,t))T||2 i,jC ( j,t)||2
F
F
Meanwhile , we have the temporal regularization term ||C ( i,t)(C ( i,t))T − C ( i,t−1)(C ( i,t−1))T||2 = tr “ C ( i,t)(C ( i,t))T + C ( i,t−1)(C ( i,t−1))T −2C ( i,t)(C ( i,t))T C ( i,t−1)(C ( i,t−1))T ” = 2ki − 2||(C ( i,t))T C ( i,t−1)||2 i,j||2
Since ||Rt transform F2 into the following objective :
F
F
F in ( 7 ) and ki in ( 8 ) are constants , we can
( 7 )
( 8 )
Algorithm : Evolutionary Multi mode Clustering
Input : R , ki , w(i,j ) Output : idx(i,t ) , C(i,t ) , At
, w(i ) a b i,j .
For t = 1 : T , i = 1 : m
1 . Generate initial cluster indicator matrix C(i,t ) . 2 . Repeat 3 . 4 . 5 . 6 . 7 . 8 . Until the relative change of the objective ( F3 ) ≤ ǫ . 9 . calculate At 10 . calculate the cluster idx(i,t ) with k means on C(i,t ) shrink / expand C(i,t±1 ) if necessary ; calculate P t i ( or M t i ) as in Theorem 3 ; i ( or eigen vectors of M t calculate SVD of P t update C(i,t ) as top left singular ( eigen ) vectors ; i,j as in Theorem 2 i ) ;
Figure 3 : Algorithm Description
So the problem boils down to a max trace problem with orthogonality constraint as in ( 4 ) . According to Ky Fan theorem [ 6 ] , this max trace problem has a closed form solution , which corresponds to the subspace spanned by the top ki eigen vectors of M t i .
Note that Mi is a square matrix of size ni × ni . When the number of actors in Xi is huge , direct calculating M t i and its eigen vectors could be problematic . Instead , we can represent M t i in the following matrix form : w(i,j ) a
||(C ( i,t))T Rt i,jC ( j,t)||2
F
M t i = P t i )T i ∗ ( P t
( 11 ) i is concatenated by the following matrices in column
F3 : max
TXt=1 mXl≤i<j≤m mXi=1 TXt=2
+w(i ) b
||(C ( i,t))T C ( i,t−1)||2
F
( 9 )
Note that C ( i,t ) is interrelated with both C ( j,t ) and C ( i,t−1 ) , and there is no direct solver in general . However , it can be shown that given C ( j,t ) and C ( i,t±1 ) , the optimal C ( i,t ) can be solved as follows :
Theorem 3 . Given C ( j,t ) and C ( i,t±1 ) , C ( i,t ) can be comi con puted as the top left singular vectors of the matrix P t catenated by the following matrices in column wise :
"√w
( i,j ) a Rt i,j C(j,t)ffi<j
,√w
( k,i ) a
( Rt k,i)T C(k,t)ffk<i
( i ) b
,qw
C(i,t±1)#
Proof . We only focus on those terms in the objective involving C ( i,t ) . Without loss of generality , we discuss the cases when 2 ≤ t ≤ T − 1 first . i,jC ( j,t)||2
F k,iC ( i,t)||2
F a a w(i,j ) w(k,i )
||(C ( i,t))T Rt
L = Xi<j +Xk<i ||(C ( k,i))T Rt b ||(C ( i,t))T C ( i,t−1)||2 b ||(C ( i,t+1))T C ( i,t)||2 i C ( i,t ) ”
= tr “ ( C ( i,t))T M t
+w(i ) +w(i )
F
F where M t i is defined as
M t i = Xi<j +Xk<i w(i,j ) a Rt i,jC ( j,t)(C ( j,t))T ( Rt i,j)T w(k,i ) a
( Rt k,i)T C ( k,t)(C ( k,t))T Rt k,i
+w(i ) +w(i ) b C ( i,t−1)(C ( i,t−1))T b C ( i,t+1)(C ( i,t+1))T where P t wise :
"√w
( i,j ) a Rt i,j C(j,t)ffi<j
,√w
( k,i ) a
( Rt k,i)T C(k,t)ffk<i
( i ) b
,qw
C(i,t±1)# is much smaller compared to M t i
( 12 ) For t = 1 or t = T , we only need to keep C ( i,t+1 ) or C ( i,t−1 ) respectively , instead of C ( i,t±1 ) . Typically the size of P t if the number of i clusters of each mode is small . Let the SVD of Pi as Pi = U ΣV , then Mi = U Σ2U T . That is , the top left singular vectors [ u1,··· , uki ] corresponds to the top eigen vectors of Mi , which completes the proof . Typically , we can use some methods like Arnoldi method [ 15 ] to calculate only its top left singular vectors , which could alleviate the computational burden for large scale sparse networks .
As can be seen in ( 12 ) , the clustering result of neighboring time stamps and clustering of interacted objects , essentially form weighted features for clustering of the i th mode . M t i , being the inner product of P t i , acts like a similarity matrix for clustering . Based on Theorem 3 , we can update the cluster indicator matrix iteratively based on the “ attributes ” obtained from the clustering results of related objects and neighboring time stamps . Given the cluster indicator matrix , one problem remains to be addressed is how to recover the discrete hard cluster based on cluster indicator matrix . k means has been shown to be an effective post processing method [ 3 ] . The overall description of the algorithm is presented in Figure 3 . In the algorithm , we specify the objective to be calculated via F3 , as direct calculation of the original formation F2 usually requires computation of dense matrices , which is not applicable for large scale multi mode networks .
4 . EXTENSIONS
Based on the framework proposed in previous section , it is easy to extend the model to handle other multi mode networks with various properties .
( 10 )
680 Actor Attributes . As we have shown in the introduction , a multi mode network might have attributes for certain modes of actors . In this situation , we can simply add the weighted attributes as features in P t i ( 12 ) when updating the cluster indicator matrix . That is :
P t i ="qw(i,j ) a Rt i,jC ( j,t)ffj6=i
,qw(i ) b C ( i,t±1),qw(i ) c F t i# where F t w(i ) i denotes the attributes for actors in mode i , and c denotes the weight . Within mode Interactions .
It is possible that there is within mode interaction in a complicated network , e.g , the paper citations in the example of academic publications ( Figure 2 ) . For undirected within mode interaction , we can just add interaction matrix to M t i ( 10 ) . For directed withinmode interaction Ri,i , we can construct a symmetric similarity matrix by averaging the commutative strength of interactions :
Rt symmetric = ( Rt i,i + ( Rt i,i)T )/2 , or compute a normalized similarity matrix following random walk as shown in [ 38 ] . As for one mode , actors within the same community tend to have dense within group interaction and sparse inter group interaction . This observation is naturally obeyed when the similarity matrix M t i is affected with within mode interaction for updating clustering .
Inactive and Emerging Nodes . Some actors might become inactive at a certain time period . Meanwhile , new actors might join the network at a specific time stamp . The framework presented in previous section focuses on cases where actors under study do not change . Here , we analyze more realistic cases where actors hibernate or join a network . Note that our derived algorithm just uses C ( i,t±1 ) as attributes for current time stamp . When an actor dies or hibernates at certain time stamp , we can delete the entry in C ( i,t±1 ) when updating C ( i,t ) . However , after deletion , the orthogonality constraints might not be satisfied . Since our framework is an approximation to the hard clustering , some tiny deviation from orthogonality does not affect the performance . On the other hand , when lots of actors become inactive , the total weights of remaining actors after removal is relatively small , thus affect less while calculating the similarity matrix M t i . This also makes sense since a drastic membership change denotes the latent community is experiencing an “ earthquake ” , thus it is not necessary to over regularize the temporal change .
When Xi at time stamp t has new actors , a reasonable way is to set the entries related to the new actors in similarity matrix ( computed by C ( i,t±1)(C ( i,t±1))T ) to be the average similarity as in[10 ] . We adopt a simple strategy in this case by setting the entries corresponds to the new nodes to 0 in C ( i,t±1 ) . As we know , the indicator matrix approximates the discrete cluster by 1/√ni [ 37 ] , where ni is the number of members in the cluster . Hence , setting the new actor ’s indicator matrix of neighboring time stamps to 0 , has the tendency to attach this new member to the large community . In some real world scenarios , the task is to track the cluster evolution in an online fashion . Then the algorithm could be modified accordingly . Instead of iteratively updating C ( i,t ) , we fix t . The corresponding i only involve fixed C ( i,t−1 ) and updating matrix P t does not involve C ( i,t+1 ) .
Online Clustering . i and M t
5 . EXPERIMENTS
In this section , we compare our proposed evolutionary method in Figure 3 with the method that does not consider any temporal information on both synthetic and real world data . For completeness , we include the results of both online and offline evolutionary methods . 5.1 Synthetic Data
Since typical real world data does not have the ground truth ( the latent community of each social actor at certain time stamp ) available , we resort to synthetic data as a proof of concept to show the efficacy of our algorithm . The synthetic network consists of three modes : A , B and C , with 2 , 3 and 4 clusters , and 50 , 100 , and 200 actors , respectively . The interactions occur between each of the two modes . To generate the interaction , we • Determine the latent community for each actor ; • Generate interactions following a Bernoulli distribution based on the group identity of interacted two actors .
To simulate the evolution , • The community membership is determined in the initial stage . Later in each time stamp , certain percentage of ( 5%−20 % ) actors change their group identity randomly ; • The probability of interaction between different groups is sampled with a Gaussian distribution centered on the probability of previous time stamp ;
• Uniform random noise is added in each time stamp . Three methods are compared : independent , online , and evolutionary spectral multi mode clustering . To study the property of the methods , we generate data of various noise level . For each level , 10 synthetic network are constructed . For simplicity , we set all the weights w(i,j ) b in ( 6 ) to 1 , and deem the algorithm to be converged if the relative objective change is less than 10−6 . Normalized mutual information ( NMI ) [ 31 ] is adopted to evaluate the clustering performance . NMI is a measure between 0 and 1 . NMI=1 when two clusters are exactly the same . The average performance of all the methods are reported in Table 1 . and wi a
It is evident that the performance deteriorates as the noise increases . When the noise level is low ( the left part of the table ) , all the methods perform similarly . When the noise is of medium level , our proposed evolutionary multi mode clustering approach outperforms the other two . Surprisingly , it is difficult to distinguish online clustering from independent clustering . This is probably due to the fact that we do not perform any parameter tuning .
To show the effect of parameter tuning , we choose one data set of medium noise level and apply both online clustering and evolutionary multi mode clustering with temporal weights wb varying from 0.01 to 1000 and wa fixed to 1 . As shown in Figure 4 , it might worsen the performance if the temporal weight is too large , that is , when the temporal regularization dominates . However , for all the three modes A , B and C , taking into account the temporal information could help clustering . This is implied when the temporal weight is within the range of 0.01 and 100 . It is noticed that complicated clustering structure ( eg mode C has more clusters than the other 2 modes ) requires a larger temporal weight . This could be suggestive for practical deployment . We also plot the average computation time in Figure 5 . Independent clustering takes the least time and online clus
681 Table 1 : NMI on synthetic data with three modes A , B and C over 10 runs . The noise are gradually increasing from left to right when generating the network . Bold entries denote the best one among the methods .
A
B
C
Independent Online Evolutionary Independent Online Evolutionary Independent Online Evolutionary
0.999 0.999 0.999 0.933 0.941 0.9377 0.8694 0.875 0.8678
0.999 0.999 0.999 0.9164 0.936 0.9269 0.84 0.8365 0.8296
0.994 0.994 0.994 0.9092 0.9068 0.911 0.8652 0.8644 0.868
B
0.9515 0.9544 0.966 0.8692 0.8771 0.885 0.7532 0.7601 0.77
0.9502 0.9487 0.96 0.8078 0.824 0.824 0.7042 0.7033 0.717
0.8579 0.8584 0.875 0.7251 0.7195 0.736 0.6094 0.6062 0.621
0.6666 0.675 0.6638 0.5603 0.5637 0.588 0.4742 0.4775 0.492
0.432 0.4234 0.4308 0.4286 0.4245 0.446 0.3469 0.3497 0.366
0.3086 0.309 0.3072 0.2987 0.298 0.308 0.2442 0.2453 0.251
0.2192 0.22 0.2026 0.1922 0.1904 0.196 0.1332 0.135 0.1343
1
0.8
0.6
0.4
0.2
0
0.42
0.4
0.38
0.36
0.34
0.32
0.3
A
Independent Online Evolutionary
0.1
10
1000
C
0.1
10
1000
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.7
0.6
0.5
0.4
0.3
0.2
0.1
10
1000
Average
0.1
10
1000
Figure 4 : Sensitivity to the temporal weights
250
200
150
100
50
) c e S i
( e m T n o i t a t u p m o C e g a r e v A
0
Independent Online Evolutionary
Noise Level −> Increases
Figure 5 : Average Computation Time tering is comparable . Evolutionary clustering requires more time compared with others . This is especially severe when the noise level is very high . In that case , the temporal smoothness is destroyed , thus our algorithm requires more iterations to find an optimal . 5.2 Real world Data
Two publicly available network data are selected : one is
Enron email corpus2 , and the other is DBLP data3 .
Enron data [ 18 ] provides email documents collected from 150 senior executives in the Enron company . Based on the email communication , we construct a three mode network ( user , email , words ) for each month . Here , we focus on users ( ie , email addresses ) who send and receive at least 5 emails , reducing the total number of users to 2,359 . In addition , we
2http://ciircsumassedu/%7Ecorrada/enron/ 3http://kdlcsumassedu/data/dblp/dblp infohtml remove top frequent words occurring in more than 19,000 documents , and those infrequent words with document frequency less than 10 , resulting in a vocabulary of 36 , 658 words . Due to the data collection problem , the initial stage yields low email traffic . Thus , we only consider the time period from April , 2001 to March 2002 . There are three interactions in each month : sender email , email receiver , and email words . The weight of email receiver is normalized by the number of receivers . For word frequency , we notice that some words occur very frequently in one email . To avoid the dominance of these bursty words , we set the weight of interaction to be log(word freq ) + 1 and then scale each email to unit length .
As for DBLP data , four modes are considered : papers , authors , terms ( words extracted from the title ) , and venues ( conference or journal names ) . We extract papers published between 1980 2004 , remove those papers without authors or venue information , and terms with low document frequency ( less than 20 ) and stop words , resulting in 491,726 papers , 347,013 authors , 2,826 venues , and 9,523 terms . Figure 6(b ) demonstrates the number of papers , active authors , venues , and terms in each year , respectively . 521 Evaluation Methodology Different from synthetic data , no ground truth of the community membership is available for real world data . Thus it is difficult to verify the performance of our proposed method directly using NMI as shown on the synthetic data . Instead , we present an approach to compare the relative performance of different methods . For convenience , we present the evaluation approach based on the Enron data here . Similar strategy can be derived for the DBLP data .
We follow the standard approach to split the Enron data of each month into two parts . The first half is used for training to obtain the clusters of users and words , and the remaining half is used to measure how the cluster approximates the interaction . Notice that there is no overlap between training and test documents , so the clustering result of emails cannot be verified . Therefore , we only focus on how the cluster of words and users approximate the interaction in the test data . Suppose we are given an interaction Remail,i between email and Xi ( being sender , receiver , or words ) for testing . Ideally , Remail,i can be factored into the following form
Remail,i = CemailAC T i where C denotes the cluster membership of different modes . To measure the quality of Ci , one natural solution is to use the approximation error Remail,i − CemailAC T i . A cluster indicator matrix can be constructed based on the cluster membership and then plugged into Ci to minimize the ap
682 Table 2 : Performance on Enron data based on one year network information . “ Inde ” in the first row represents clustering without any any temporal information ; “ Online ” represents an online version of evolutionary multimode clustering ; “ Evol ” in the last row represents our proposed evolutionary multi mode clustering . The bold entry in each column represents the best performance of the three approaches .
2001 04
2001 05
2001 06
2001 07
2001 08
2001 09
2001 10
2001 11
2001 12
2002 01
2002 02
2002 03
Inde
3222.7
Online
3248.6
2671.9
2660.3
1012.2
1040.8
1639.1
1640.1
1770.6
1738.6
1620.1
1680.6
Evol
3313.1
2719.6
1084.9
1656.2
1797.9
1702.2
4449.3
3057.2
4422.3
4370.7
2926.1
2979.3
1884.0
1904.0
1920.4
3205.9
3067.4
3156.7
969.4
968.9
801.2
814.5
1041.3
824.0
15000
10000
5000
0
Papers
105
104
Authors
106
105
104
103 1980 1985 1990 1995 2000 2005
103 1980 1985 1990 1995 2000 2005
Venues
104
103
102
Terms
105
104
2001_04 2001_06 2001_08 2001_10 2001_12 2002_02
101 1980 1985 1990 1995 2000 2005
103 1980 1985 1990 1995 2000 2005
Int . Conf . on Internet Computing WWW , ICWE , ICWS , APWeb , Web Intelligence , IEEE SCC , International Semantic Web Conference , J . Web Semantics
NIPS , COLT , ECML , ICML , ICANN , IJCIA , IWANN , Machine Learning , Inter . C . on Algorithmic Learning Theory , Int . J . Neural Syst . , Neural Computation , Int . J . Computational Intelligence and Applications .
( a )
( b )
( c )
Figure 6 : ( a ) : Emails sent each month on Enron data ; ( b ) Number of papers , active authors , venues and terms each year on DBLP data ; ( c ) Venue communities extracted from DBLP data in 2004 .
Table 3 : Performance on DBLP data ( ×104 )
Evolutionary
Year 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004
Independent Online 0.1279 0.1754 0.1733 0.1851 0.2167 0.2291 0.2598 0.2969 0.3224 0.3425 0.4034 0.4381 0.5071 0.5759 0.6618 0.6658 0.7944 0.9546 1.0110 1.0893 1.2337 1.5003 1.7911 2.2649 2.7717
0.1265 0.1695 0.1762 0.1789 0.2127 0.2403 0.2576 0.2855 0.3046 0.3534 0.4012 0.4389 0.4992 0.5610 0.6418 0.6885 0.7861 0.9470 1.0054 1.0939 1.2308 1.5123 1.7874 2.2491 2.7684
1
0.1371 0.1787 0.1839 0.1893 0.2261 0.2514 0.2535 0.3075 0.3238 0.3596 0.4242 0.4395 0.5187 0.5887 0.6576 0.7102 0.8110 0.9644 1.0098 1.0967 1.2549 1.5319 1.7828 2.2697 2.7807 proximation error . Note that the calculation of a hard clustering of Cemail might introduce more noise in the process , so we directly approximate Remail,i by C T in the following i form :
B ||Remail,i − BC T min i ||2
F
F , obtained when B = RC . Since ||R||2
It is not difficult to verify that the minimal value is ||R||2 F − ||RC||2 F is a constant , the cluster assignment that maximizes ||RC||2 F yields a low approximation error . Therefore , we adopt ||RC||2 F in measuring the quality of a clustering result . The larger the value , the better a cluster .
Note that this strategy , essentially , is to approximate the sparse interaction with group interaction blocks . Even with the true latent community structure , the approximation error could still be large . It is not appropriate to determine the significance of improvement by comparing the absolute value directly . Here , we adopt this measure mainly to compare the relative performance of different methods . 522 Performance Comparison For simplicity , we set all the input weights of the algorithm in Figure 3 to 1 . The number of communities of each mode is fixed to 50 and 20 for Enron and DBLP , respectively . The performance of different methods on Enron data are reported in Table 2 . Note that most of the time , our proposed method works best . Except three months : October , November 2001 , and January 2002 , in which independent multi mode clustering method works best . Note that during these three months , the email communication is abundant as shown in Figure 6(a ) . That is , when the training process has enough data , it is not necessary to consider any temporal information . Online clustering , as shown in the table , yields a limited improvement and sometimes could worsen the performance .
For DBLP data , as shown in Table 3 , evolutionary clustering often outperforms other two . Online clustering occasionally performs best , and usually better than clustering without temporal regularization . Independent clustering , which does not consider temporal smoothness , tends to overfit the training data with a poor latent community structure . In general , taking into account the temporal smoothness helps to extract a better community structure .
One question remains : dose our method find out meaningful community and evolutions in reality . In the first block of Figure 6(c ) , we show one example of venue community concentrating on Web extracted from our method , which is reasonably consistent with the topics associated with those conference and journals . To check the validity of our method
683 for detecting evolution , we focus on NIPS conference as an example . We found that NIPS is associated with Neural Network in 1995 , but is more aligned with machine learning later as shown in the second block of Figure 6(c ) . This indicates that our method can detect the evolution of community in multi mode networks and find out the latent community more accurately .
We also recorded the computation time for all the methods in Table 4 . Independent clustering converges quickly , while online clustering moderately increases the time , and evolutionary clustering costs most computational time . However , as seen in the table , the computational cost is of the same order on both data sets . We found out that independent cluster usually converges in 3 or 4 iterations , whereas evolutionary clustering requires less than 10 iterations .
Method Enron DBLP
Table 4 : Computation Time Independent 5.0699 × 103 2.1033 × 103
8.4974 × 103 2.6945 × 103
Online
Evolutionary 1.1076 × 104 5.0491 × 103
6 . RELATED WORK
There have been extensive works studying the structural property of interactions between actors . One probabilistic approach is the stochastic block model [ 27 ] , in which the link between actors is generated conditioned on the latent cluster membership of actors . Two actors within the same cluster are treated stochastically equivalent . That is , the interactions between ( A1 , B1 ) and ( A2 , B2 ) have the same probability if A1 and A2 , B1 and B2 belong to the same cluster , respectively . In classic block models , the number of clusters are fixed . The work in [ 17 ] replaces the constraint by assigning a Chinese restaurant process as a prior to generate cluster membership for each actor , thus the number of clusters can be automatically determined by assigning proper prior . Mixed block model is also developed [ 1 ] . Long et al [ 25 ] proposes a probabilistic framework similar to stochastic block model to handle multi mode networks with interactions and attributes . Typically , some MCMC technique is employed to approximate the inference . With the development of topic models [ 7 ] , it is also extended to model documents within a social network [ 39 ] , and the author/document , or sender/receiver/email interactions [ 34 , 26 ] . The model is typically specific for certain type of documents like Emails or papers .
Another attempt to model the structure is latent space model . Intuitively , latent space models map the social actors to a latent low dimensional space such that the actors whose positions are closer to each other are more likely to interact with each other [ 29 , 16 ] . However , existing latent space models mainly study one mode networks . Some works try to address the problem in multi mode networks . [ 14 ] essentially study a two mode network ( authors and words ) and maps both authors and words into the same Euclidean space .
Spectral relational clustering , which is most related to multi mode network , tries to discover the latent structure based on multiple relational tables . As the original problem of finding discrete cluster assignment ( eg , the entries of membership vector are either 0 or 1 ) is NP hard , spectral clustering relaxes the constraint to allow the membership vector to be continuous . The initial work of co clustering [ 11 , 36 , 24 ] tries to address the problem of clustering both words and documents simultaneously by taking the advantage of bipartite . [ 13 ] extends the problem to a star typed network with multiple heterogeneous data object , and proposes semi definite programming to solve the problem . [ 33 ] proposes reinforce clustering for multiple heterogeneous data objects . In [ 23 ] , a general spectral clustering framework is proposed to handle multi type relational clustering with different kinds of objects and attributes , and an alternating optimization algorithm is presented to find a local optimal . Temporal change of social networks has been attracting increasing attentions [ 8 , 2 ] . It is empirically observed that some real world networks are evolving [ 19 ] and some practitioners try to investigate how the network evolve and what could be a reasonable generative process to model the dynamics [ 21 ] or the critical factors to determine the group evolution [ 4 ] . On the other hand , clustering to handle evolutionary data is also developed . It is assumed that clustering result of current situation should be similar to previous time stamps . Instead of taking multiple snapshots of the data and independently clustering objects , evolutionary clustering finds out a sequence of clustering with temporal smoothness [ 9 , 10 , 22 ] . Latent space model with temporal change is also developed [ 30 ] , which aims to find an embedding that is consistent with the trade off between previous time stamp and current distance information extracted from the social network . [ 32 ] proposes a general framework to handle dynamic single mode network by casting it as a graph coloring problem and some greedy heuristics is developed to handle large scale data . All the aforementioned works are focusing on data with attributes or single mode network . In this work , we explore the community evolution in multi mode networks .
7 . CONCLUSIONS
In some real world applications , social actors of various types interact with each other resulting in a multi mode network . In such a network , different modes of social actors form their own community and tend to evolve gradually . In this work , we propose an evolutionary multi mode clustering algorithm to find community evolution in multi mode networks . Within this framework , it is easy to handle networks with attributes , within mode interactions , and hibernating and emerging social actors . We applied our framework to both carefully designed synthetic data sets and real world large scale multi mode networks . It is empirically demonstrated that our algorithm tends to find more accurate community information given a sequence of network snapshots . This is more likely when the collected interactions are few and noise is within medium level . Our algorithm can easily scale to large complicated multi mode networks of tens of thousands of nodes .
The shortcoming of the current framework is that it needs users to provide weights for different interactions and temporal information , as well as the number of communities in each mode . How to automatically determine the weights and number of communities is a challenging problem . Another possible extension is to consider the evolution of group interaction . Currently , our model only considers the group membership change . But the interactions between groups could also change gradually . How to capture both the microlevel evolution of actors and macro level evolution of groups simultaneously requires further research .
684 8 . ACKNOWLEDGMENTS
The work is in part supported by a MITRE research grant .
9 . REFERENCES [ 1 ] E . Airodi , D . Blei , S . Fienberg , and E . P . Xing . Mixed membership stochastic blockmodels . JMLR , 2008 .
[ 2 ] S . Asur , S . Parthasarathy , and D . Ucar . An event based framework for characterizing the evolutionary behavior of interaction graphs . In KDD , pages 913–921 , 2007
[ 3 ] F . R . Bach and M . I . Jordan . Learning spectral clustering . In NIPS , 2004 .
[ 4 ] L . Backstrom , D . Huttenlocher , J . Kleinberg , and X . Lan . Group formation in large social networks : membership , growth , and evolution . In KDD , 2006 .
[ 5 ] J . Baumes , M . Goldberg , M . Magdon Ismail , and
W . Wallace . Discovering hidden groups in communication networks . In 2nd NSF/NIJ Symposium on intelligence and Security Informatics , 2004 .
[ 6 ] R . Bhatia . Matrix Analysis . Springer , 1997 . [ 7 ] D . M . Blei , A . Y . Ng , and M . I . Jordan . Latent dirichlet allocation . J . Mach . Learn . Res . , 3:993–1022 , 2003 .
[ 8 ] R . Breiger , K . Carley , and P . Pattison , editors .
Dynamic Social Network Modeling and Analysis : Workshop Summary and Papers . 2003 .
[ 9 ] D . Chakrabarti , R . Kumar , and A . Tomkins .
Evolutionary clustering . In KDD , pages 554–560 , 2006
[ 10 ] Y . Chi , X . Song , D . Zhou , K . Hino , and B . L . Tseng .
Evolutionary spectral clustering by incorporating temporal smoothness . In KDD , pages 153–162 , 2007
[ 11 ] I . S . Dhillon . Co clustering documents and words using bipartite spectral graph partitioning . In KDD , pages 269–274 , 2001
[ 12 ] C . Ding , T . Li , W . Peng , and H . Park . Orthogonal nonnegative matrix t factorizations for clustering . In KDD , pages 126–135 , 2006
[ 13 ] B . Gao , T Y Liu , X . Zheng , Q S Cheng , and W Y
Ma . Consistent bipartite graph co partitioning for star structured high order heterogeneous data co clustering . In KDD , pages 41–50 , 2005
[ 14 ] A . Globerson , G . Chechik , F . Pereira , and N . Tishby . Euclidean embedding of co occurrence data . J . Mach . Learn . Res . , 8:2265–2295 , 2007 .
[ 15 ] G . H . Golub and C . F . V . Loan . Matrix Computation .
Johns Hopkins University Press , 1996 .
[ 16 ] M . S . Handcock , A . E . Raftery , and J . M . Tantrum .
Model based clustering for social networks . Journal Of The Royal Statistical Society Series A , 127(2 ) , 2007 .
[ 17 ] C . Kemp , T . L . Griffiths , and J . B . Tenenbaum .
Discoverying latent classes in relational data . Technical report , Massachusetts Institute of Technology , 2004 .
[ 18 ] B . Klimat and Y . Yang . The enron corpus : A new dataset for email classification research . In ECML , 2004 .
[ 19 ] G . Kossinets and D . J . Watts . Empirical analysis of an evolving social network . Science , 311(5757 ) , 2006 . [ 20 ] M . N . Lauren Ancel Meyers and B . Pourbohloul .
Predicting epidemics on directed contact networks . In Journal of Theoretical Biology , volume 240 , 2006 .
[ 21 ] J . Leskovec , J . Kleinberg , and C . Faloutsos . Graphs over time : densification laws , shrinking diameters and possible explanations . In KDD , pages 177–187 , 2005 .
[ 22 ] Y R Lin , Y . Chi , S . Zhu , H . Sundaram , and B . L .
Tseng . Facetnet : a framework for analyzing communities and their evolutions in dynamic networks . In WWW , pages 685–694 , 2008 .
[ 23 ] B . Long , Z . M . Zhang , X . W´u , and P . S . Yu . Spectral clustering for multi type relational data . In ICML , pages 585–592 , 2006 .
[ 24 ] B . Long , Z . M . Zhang , and P . S . Yu . Co clustering by block value decomposition . In KDD , 2005 .
[ 25 ] B . Long , Z . M . Zhang , and P . S . Yu . A probabilistic framework for relational clustering . In KDD , pages 470–479 , 2007 .
[ 26 ] A . McCallum , X . Wang , and A . Corrada Emmanuel .
Topic and role discovery in social networks with experiments on enron and academic email . Journal of Artificial Intelligence Research , ( 0):249–272 , 2007 . [ 27 ] K . Nowicki and T . A . B . Snijders . Estimation and prediction for stochastic blockstructures . Journal of the American Statistical Association , 96(455):1077–1087 , 2001 .
[ 28 ] J . Palau , M . Montaner , and B . Lopez . Collaboration analysis in recommender systems using social networks . In In Eighth Intl . Workshop on Cooperative info . Agents ( CIA’04 ) , 2004 .
[ 29 ] M . S . H . Peter D . Hoff , Adrian E . Raftery . Latent space approaches to social network analysis . Journal of the American Statistical Association , 2002 .
[ 30 ] P . Sarkar and A . W . Moore . Dynamic social network analysis using latent space models . SIGKDD Explor . Newsl . , 7(2):31–40 , 2005 .
[ 31 ] A . Strehl and J . Ghosh . Cluster ensembles — a knowledge reuse framework for combining multiple partitions . J . Mach . Learn . Res . , 3:583–617 , 2003 .
[ 32 ] C . Tantipathananandh , T . Berger Wolf , and
D . Kempe . A framework for community identification in dynamic social networks . In KDD , 2007 .
[ 33 ] J . Wang , H . Zeng , Z . Chen , H . Lu , L . Tao , and W Y
Ma . Recom : reinforcement clustering of multi type interrelated data objects . In SIGIR , 2003 .
[ 34 ] X . Wang , N . Mohanty , and A . McCallum . Group and topic discovery from relations and their attributes . In NIPS , pages 1449–1456 . 2006 .
[ 35 ] S . Wasserman and K . Faust . Social Netwok Analysis :
Methods and Applications . Cambridge University Press , 1994 .
[ 36 ] H . Zha , X . He , C . Ding , H . Simon , and M . Gu .
Bipartite graph partitioning and data clustering . In CIKM , pages 25–32 , New York , NY , USA , 2001 . ACM .
[ 37 ] H . Zha , X . He , C . H . Q . Ding , M . Gu , and H . D .
Simon . Spectral relaxation for k means clustering . In NIPS , pages 1057–1064 , 2001 .
[ 38 ] D . Zhou , J . Huang , and B . Sch¨olkopf . Learning from labeled and unlabeled data on a directed graph . In ICML , pages 1036–1043 , 2005 .
[ 39 ] D . Zhou , E . Manavoglu , J . Li , C . L . Giles , and
H . Zha . Probabilistic models for discovering e communities . In WWW , pages 173–182 , 2006 .
685
