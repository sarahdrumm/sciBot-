Model Based Document Clustering with a Collapsed Gibbs
Sampler
Daniel D . Walker and Eric K . Ringger
Natural Language Processing Lab
Computer Science Department
Brigham Young University
Provo , Utah , USA
{danl4,ringger}@csbyuedu
ABSTRACT Model based algorithms are emerging as a preferred method for document clustering . As computing resources improve , methods such as Gibbs sampling have become more common for parameter estimation in these models . Gibbs sampling is well understood for many applications , but has not been extensively studied for use in document clustering . We explore the convergence rate , the possibility of label switching , and chain summarization methodologies for document clustering on a particular model , namely a mixture of multinomials model , and show that fairly simple methods can be employed , while still producing clusterings of superior quality compared to those produced with the EM algorithm .
Categories and Subject Descriptors I53 [ Pattern Recognition ] : Clustering—Algorithms ; G.3 [ Probability and Statistics ] : Probabilistic algorithms
General Terms Algorithms , Experimentation , Performance
Keywords document clustering , Gibbs sampling , MCMC , EM , collapsed samplers , practical guidelines
1 .
INTRODUCTION
Document clustering is an unsupervised learning task that partitions a set of documents D = d1 , , dN to produce disjoint subsets called clusters . Members of the same cluster should be similar , while members of different clusters are dissimilar . Similarity and dissimilarity are subjective , and might refer to similarities based on topic , style , authorship , sentiment , or any number of criteria as dictated by the requirements of the specific clustering problem .
Practical applications of document clustering include the discovery of genres in large heterogeneous corpora , the automatic organization of document collections , novelty detection , exploratory data analysis , organizing search results , and text mining . Many of the same techniques that are used to cluster other types of data can be used for document clustering with varying degrees of success . The document feature space is high dimensional and sparse , distinguishing it from other data clustering problems and requiring techniques suited to these properties to achieve good results . Research interest is transitioning from vector space algorithms to statistical model based algorithms for clustering [ 1 , 10 , 19 , 24 , 25 ] . As this transition occurs , many questions involving the methodology of model based clustering need to be considered and answered . Although there are models that are more elaborate , and potentially more robust than the one presented here [ 19 ] , past research has focused mostly on developing new models and has not empirically explored the implications of the choices made during the implementation of a parameter estimation algorithm . This paper sets out to empirically investigate many of these questions and hopefully to serve as a set of guidelines for those who would apply MCMC ( Markov Chain Monte Carlo ) techniques to model based document clustering , allowing them to make informed decisions as they implement their own algorithms . Specifically , we explore the use of a collapsed Gibbs sampler on a mixture of multinomials document model .
We will show the empirical effects on cluster quality of using various sample summarization methods and will demonstrate that within chain label switching ( non identifiability ) does not appear to be an issue when using the collapsed sampler with our model . We also provide evidence that the sampler converges quickly , within a relatively small number of samples . Finally , we show that the collapsed sampler clustering algorithm presented here produces better clusters than an EM clustering algorithm on the same model , according to five cluster quality metrics .
2 . RELATED WORK
Many approaches have been proposed for clustering in general and document clustering in particular . Some of these techniques treat each datum as a vector in n dimensional space . These techniques use measures such as Euclidean distance and cosine similarity to group the data together using agglomerative clustering , k means clustering , and other similar methods .
Another set of techniques uses generative statistical models , such as Bayesian networks . These models usually include a latent variable denoting cluster assignment . One such model is the mixture of multinomials model [ 14 ] , which we employ in this paper . In this model , the values of the individual features of each document are assumed to be conditionally independent and exchangeable , given the label of the document . This is called the “ bag of words" assumption . The model is explained in Section 3 .
Many methods can be used to estimate parameters in order to conduct inference and produce clusterings in model based schemes . One such method is to begin with a random initialization of the parameters and then refine them using the EM algorithm . This approach has been shown superior to some vector space solutions , such as agglomerative clustering [ 14 ] . However , as a hill climbing algorithm EM is subject to becoming trapped by local maxima in the likelihood surface [ 3 ] . An alternative proposed in the literature is to use a Markov Chain Monte Carlo method , such as Gibbs sampling , to sample from the posterior distribution of the model parameters , given the data to be clustered [ 19 , 24 ] . This approach is more correct from a Bayesian perspective , and has been shown to perform better than maximum likelihood on some problems such as the estimation of parameters for probabilistic grammars [ 8 ] . Like EM , Gibbs is naturally attracted to higher points on the likelihood surface , which are more likely to be sampled from . Unlike EM , an MCMC sampler is capable of leaving local maxima to explore less likely configurations . In this way , it is able to transition from local maxima to other areas of high likelihood . Thus , regardless of initialization , a Gibbs sampler may eventually come close to a true global maxima of the distribution in question , while an unfortunate initialization of EM can preclude it from ever reaching that mode , regardless of the number of iterations of the algorithm that are run . Although MCMC based document clustering techniques have been compared with EM based techniques in the past by Banerjee and Basu [ 1 ] , their work did not hold the model constant .
Despite the apparent advantages of MCMC methods , it is not clear how one should proceed when applying these methods specifically to document clustering , where high dimensionality , sparseness , and large numbers of data points are the rule .
3 . MODEL
Figure 1 : Graphical representation of the generative document model used in this paper for clustering . Square nodes are constants , shaded nodes are observed values .
The model used here is a mixture of multinomials , with Dirichlet priors . The parameters of the model are distributed as follows :
θj ∼ λ ∼ zd ∼
Dirichlet(β )
Dirichlet(α )
Categorical(λ ) wd|zd ∼ M ultinomial(θj=zd )
This model is illustrated in Figure 1 . Here , w is a matrix represent ing the words in all M documents in the data . Document d from cluster j consists of a vector of N words wd , distributed according to a multinomial distribution parameterized by the vector θj . Assuming that zd = j , θj,v is the probability that word i of document d is the word v in the vocabulary V : p(wd,i = v ) = θj,v
Likewise , each zd is distributed according to a categorical distribution with parameter vector λ . This means that the prior distribution on the value of zd is given by : p(zd = j ) = λj
Since both λ and θ are latent variables in the model , we must select prior distributions for each . We choose the uniform Dirichlet distribution . This is also known as an uninformative Dirichlet prior and is achieved by setting the Dirichlet parameter vector ( in our case α and β ) to all ones . The uninformative distribution was chosen because we assume that a priori nothing is known about the word distributions for each class , nor about the marginal distribution of the document labels . As is common , we chose the Dirichlet because it is the conjugate prior for the Dirichlet .
Finally , it should be noted that the model includes an unexpressed parameter K , the number of mixture components . Other work has explored model selection [ 14 ] and automatic estimation of this parameter using a Dirichlet process prior [ 15 ] . In this work we do not focus on this aspect of the problem . We instead choose a suitable constant value of K for each data set used for experimentation .
4 . COLLAPSED SAMPLER
A collapsed sampler is one which eschews sampling all of the variables from the joint distribution . Instead , sampling is conducted over a simplified distribution from which all but the specific variables of interest have been marginalized out . Specifically , the variables which will not be sampled are marginalized from the complete conditionals of the variables that will be sampled . A complete conditional is the distribution of a single variable , conditioned on all of the other variables in the model .
In the case of clustering , the only specifically relevant variables are the hidden document cluster labels , z . There may be some reason to sample the values for the θ matrix as well , but this is not strictly part of the clustering task .
In addition to the storage benefit of not sampling from uninteresting variables , collapsed samplers have also been shown to converge relatively quickly because they contain fewer dependencies between sampled parameters and treat the marginalized parameters exactly [ 4 , 9 , 22 ] .
Collapsed samplers cannot be used in all cases but have the limiting requirement that the variables to be marginalized out must be marginalizable in closed form . Fortunately , conjugacy between the Dirichlet and Multinomial distributions makes this possible for the model shown in Figure 1 .
After marginalizing out θ , and λ , the complete conditional over the label zd for document d is : p(zd = j|w , z−d ) = p ( z , w ) p ( z−d , w )
( 1 ) where z−d = [ z1 , , zd−1 , zd+1 , zM ] . We also have omitted α and β from the conditions in each term for the sake of brevity . The right hand side of Equation ( 1 ) can also be expanded by explicitly showing that zd = j giving : p(zd = j|w , z−d ) = p ( zd = j , z−d , w ) p ( z−d , w )
( 2 ) input : A set of documents D , and the number of desired clusters K output : A sample matrix Z for d ← 1 to M do zd,0 ← draw(Uniform([1,,K] ) ) end i ← 1 while More samples are needed do for d ← 1 to M do zd,i = draw(p(z|w , z1,i , , zd−1,i , zd+1,i−1 , , zM,i−1 ) ) end i ← i + 1 end
Algorithm 1 : Collapsed Gibbs sampling algorithm .
In order to continue the derivation , it is necessary to have the marginalized joint distribution p(z , w ) . Because of the conjugacy between the Dirichlet distribution and the multinomial distribution , this consists of a product of Euler beta functions B(X ) : p(zd = j|w , z−d ) ∝
B ( α∗ )
B ( α−d∗ )
B ( βk∗ )
B`β−dk∗
´
( 3 ) where we assume , for the purpose of computing counts , that zd = j and that , k=1
KY KY k=1 h
α∗ = [ α1 + n1 , , αK + nK ] ,
βk∗ =
β1 + n1k , , β|V | + n|V |k i
,
α−d∗ = [ α1 + n1 , , αj + nj − 1 , , αK + nK ] , also ,
β−dj∗ = h
β1 + n1j − d1 , , β|V | + n|V |j − d|V |
, i and β−dk∗ = βk∗ for all other k . In addition , nj is the number of times that the label j has been applied to any document , nvj is the number of times that word v occurs in a document labeled j , and dv is the number of times that word v occurs in document d .
The derivation that produces this result is lengthy , and can be found in the Appendix . It follows a similar derivation for a related model , as presented in [ 19 ] . After simplifying we arrive at the following expression for the complete conditional for the label of document d : p(zd = j|w , z−d ) ∝ ( αj + nj − 1 )
( 4 )
B`βj∗´ ´ B`β−dj∗
Using Equation 4 , one may sample from p(zd = j|w , z−d ) , given the labelings of every other document . This complete conditional can now be used as part of a Gibbs sampling algorithm . The sampling algorithm used to conduct the experiments presented in this paper is shown in Algorithm 1 .
5 . EVALUATION
Using the Gibbs sampling algorithm described in Section 4 yields a matrix Z of samples for the documents in D , such that zd,i is the ith label sampled for the dth document in D .
In this section , we will discuss three issues as they relate to using
Z to choose a clustering for D .
1 . How long does it take to converge ?
2 . How many samples should be taken ?
3 . How should the collected samples be summarized ?
5.1 Experiments
In this section we show empirically the effects that various algorithmic choices have on cluster quality in the text document domain . We also compare the quality of clusters produced with Gibbs sampling to that of clusters produced with EM . The experiments described here were conducted on three data sets labeled by topic . The first data set is the 20 Newsgroups set which has become a standard in classification and clustering research [ 12 ] .
The second data set is a portion of the Enron e mail corpus which has been annotated and made available through LDC [ 2 ] . This set consists of about 5000 e mail messages from the Enron corpus , which have each been identified as being related to one of thirtytwo possible topics .
The third data set is a corpus of web pages annotated based on user tags found on the popular collaborative bookmarking website delicious [ 23 ] . Delicious allows users to tag each site they bookmark with a set of arbitrary tags . For this data set , 50 topics were selected , and each was converted to a delicious tag intuitively derived from the topic label . For example , one of the topics is “ Natural language processing" ; documents are assigned to this topic if they have been given the three tags “ natural" , “ language" and “ processing" . To be assigned to the topic “ Apple" , a page merely has to have been tagged with the single tag “ apple" .
We designed a feature selection process to facilitate topical clustering . Before clustering , each document undergoes feature extraction and vectorization . A list of stop words were first removed from each document . Next , an unsupervised feature selection process was conducted in which the TF IDF value for each word in each document was first calculated , then the 10 words in each document with the highest TF IDF value were added to the feature set . Finally , each document was converted to a feature vector where each element in the vector is the frequency with which a given feature occurs in that document .
To evaluate cluster quality , five metrics were chosen from the literature . These metrics are all external metrics , meaning that they require a reference , or gold standard , partitioning of the data . These metrics are the F Measure [ 20 ] , Variation of Information ( VI ) [ 13 ] , the Adjusted Rand Index ( ARI ) [ 11 ] , the V Measure [ 18 ] , and the Q2 metric [ 6 ] . These metrics will be used below in any experiments where the quality of various partitionings of the same data set are compared . 5.2 Convergence
MCMC sampling techniques are guaranteed to converge in the limit to the target distribution , given some reasonable assumptions . However , because consecutive draws in the chain can be highly correlated , the samples from the beginning of the chain can be highly influenced by the random initialization state . To correct this , MCMC algorithms often include a parameter called “ burn" or “ burn in" , which specifies the number of initial samples that should be discarded from the beginning of the chain to reduce the influence of random initialization on the samples used for parameter estimation and inference .
Some authorities recommend general rule of thumb guidelines as to how many samples should be burned . Gelman [ 7 ] recom
( a ) Enron likelihood time series .
( b ) Newsgroups likelihood time series .
( c ) Delicious likelihood time series .
Figure 2 : Example time series likelihood plots . The x axis is the sample number , the y axis is the joint likelihood p(w , z ) for that sample . mends burning up to 50 % of the collected samples , which is excessive when collecting samples is expensive , and when steady state is achieved rapidly . Principled diagnostics have been proposed to help choose good values for burn [ 16 ] . These diagnostics are mostly suited for the case where the variables being sampled are continuous , and they do not handle categorical variables well .
Because the variables being sampled in our algorithm are all categorical , we chose to avoid these formal diagnostics , and instead choose burn using likelihood time series plots . Although there is no direct proof that this should be the case , we have found that the point at which this plot appears to approach an asymptote corresponds with the convergence of the chain to steady state ( cf [ 9] ) . Several examples of these plots are shown in Figure 2 . After examining several such plots for each data set , it was decided that the burn should be 1000 samples for the Enron data , 100 samples for the 20 Newsgroups data , and 50 samples for the delicious data .
5.3 Identifiability
The model proposed in Section 3 does not contain any a priori knowledge of the clusters which are to be discovered through parameter estimation and inference . The labels applied by the clustering algorithm do not have any particular meaning before the clusters form , and are therefore completely interchangeable . For example , assume a data set with two distinct clusters , one consisting of documents about space exploration , and another consisting of documents about dogs . The model does not distinguish the case where all of the space exploration documents are labeled 1 and all of the dog related documents are labeled 2 from the case where all of the space exploration documents are labeled 2 and the dog documents are labeled 1 . This is known as non identifiability and can result in label switching during sampling .
Label switching is often a problem when clustering using MCMC techniques on mixture models . This is because it is possible for label switching to occur mid chain . In this event , averaging across multiple samples can be worse than taking any one individual sample as the chain summary , because the meaning of each label can change across multiple samples . Solutions to the non identifiability problem have been proposed . These often take the form of a relabeling scheme [ 17 , 21 ] , and often feel slightly ad hoc .
We wanted to determine the extent to which label switching occurs using the collapsed sampler with our model . If within chain la bel switching occurs often , then any summarization technique that attempts to use more than one sample will require steps for label switching diagnosis and compensation to be effective . To test for label switching , we ran a chain on the Enron data set , collecting a total of 6000 samples . The first sample after burn was stored as a reference iteration and we computed estimates for p(w|z ) given that sample . We used add one smoothing to calculate this estimate :
X u∈V nuj p0(w = v|z = j ) = nvj + 1
|V | + where nvj is the count of the number of times that word v occurs in a document where the label of that document in the current sample is j .
After that , for the ith sample after burn a new distribution pi over words is estimated in the same way . Next , we compute the Kullback Leibler divergence between p0(w|h ) and pi(w|j ) for all possible combinations of h and j . These values were then scaled to the range [ 0 , 1 ] by dividing by the maximum and plotted in a quilt plot such that the square at square ( h , j ) is the normalized value of the K L divergence between p0(w|z = h ) and pi(w|z = j ) .
This plot shows the similarity between clusters produced by different samples of the same MCMC chain . For example , the plot of p0 against itself will obviously always have zeros ( black squares ) along the diagonal , and various other random values in the offdiagonal cells . If label switching occurs in a chain , however , we would expect that for larger values of i , the plot of p0 against pi will begin to have higher values ( lighter squares ) along the diagonal . If labels h and j were to swap meaning , then we would expect ( j , j ) and ( h , h ) to have high divergence values , while ( j , h ) and ( h , j ) will both have divergence values close to zero .
The plots of p0 against p0 and p0 against p5000 for this experiment are shown in Figure 3 . It can be seen that , even after 5000 samples , the diagonal elements are still close to zero . In fact , the differences between the two plots are minor , only noticeable under close scrutiny . This indicates that little , if any , label switching is occurring in this chain . This result is not unique to the Enron data set , nor to this particular run of the algorithm , though we omit presenting others because of space constraints . This result is likely the result of the high dimensionality of the data , together with the relatively high correlation between variables .
( a ) Plot showing the distribution of words given the first sample after burn , p0 , against itself .
( b ) Plot showing p0 against p5000 .
Figure 3 : Plots the KL divergence of the distribution of p(w|z ) for the first sample after burn with the same distribution for the ith sample after burn . Values closer to zero are darker , values approaching 1 are lighter .
5.4 Summarizing Samples
We summarized sample chains produced by the collapsed sampler in three ways . The first method is called the marginal posterior method , because it considers the posterior distribution over labels for each document independent of all other documents . To summarize with the marginal posterior method the label selected for document d , ˆzd , is chosen to be the label which was most frequently assigned to that document during sampling :
X
ˆzd = argmax
δ ( zd,i , j ) j i where δ( ) is the Kronecker delta function , which returns one if its two arguments are the same and zero otherwise .
The second method is the MAP ( maximum a posteriori ) sample method . This method takes the sample ( a column vector Z·,i from Z ) with the highest posterior joint value as the selected partitioning of the data set . Since the priors specified in the model are uniform , this is the same as choosing the sample which maximizes the joint probability of the labeling and the data :
ˆz = argmax
Z·,i p(Z·,i , w )
The final method is the random method . In the random method , the sample at an arbitrary point in the chain is chosen to be the selected partitioning of the data set .
In order to determine which of these methods produces the best clusterings , 100 chains were run for 80 hours each on each of the three data sets on Dell Poweredge 1955s with two Dual core 2.6GHz Intel Xeon processors and 8 GB of RAM . Because of the imposed time limit , different numbers of samples were collected for each run , though chains for the same data set tended to have roughly the same number of samples . For each data set , we rounded the number of samples found in the shortest chain down to the nearest 10 . Consequently , the Social Bookmarking data chains had 200 samples each , the 20 Newsgroups chains had 750 samples each , and the Enron chains had 7300 samples each . The three summarization methods were then used to cluster the data given these 300 MCMC chains . The number K of clusters in each experiment was chosen to be the same as the number of natural classes for each data set : 50 for the Social Bookmarking data set , 20 for the Newsgroups data set , and 32 for the Enron data set . The metrics for the 100 chains , across each data set and summarization method pair were averaged . The results are shown in Tables 1 3 and indicate that there is little difference in the performance of the summarization methods .
Metric F Measure VI ARI V Measure Q2
Marginal MAP 0.38571 0.38591 3.74847 3.74822 0.22893 0.22860 0.47850 0.47867 0.72949 0.72938
Rand 0.38586 3.74871 0.228840 0.47859 0.72945
Table 1 : Results comparing the performance of the 3 summarization techniques on 100 chains of 200 samples each , produced using the Social Bookmarking data set .
Metric F Measure VI ARI V Measure Q2
Marginal MAP 0.42017 0.42174 2.16088 2.14728 0.27507 0.27730 0.55330 0.55637 0.73058 0.72918
Rand 0.42118 2.15931 0.27692 0.55405 0.72969
Table 2 : Results comparing the performance of the 3 summarization techniques on 140 chains of 750 samples each , produced using the 20 Newsgroups data set .
5.5 Comparison to EM Clustering
To compare the clusters produced by the collapsed Gibbs sampler to those produced by EM , an EM algorithm on the same model was used to cluster each of the three data sets 100 times from random starting points . The average values of the metrics computed on the partitionings produced by EM are compared with the averaged
Metric F Measure VI ARI V Measure Q2
Marginal 0.35023 3.50433 0.13499 0.32366 0.71328
MAP
0.35100 3.49994 0.13564 0.32348 0.71315
Rand 0.34989 3.50624 0.13461 0.32322 0.71309
Table 3 : Results comparing the performance of the 3 summarization techniques on 100 chains of 7300 samples each , produced using the Enron data set . metrics for the best summarizations produced by the Gibbs sampler in Tables 4 6 . It can be seen that the metrics consistently indicate that the Gibbs sampling algorithm produces better clusterings than EM .
Metric F Measure VI ARI V Measure Q2
Gibbs 0.38591 3.74822 0.22893 0.47867 0.72949
EM
0.30556 4.08036 0.16453 0.41225 0.69472
Table 4 : Results comparing the performance of the best configuration of the Gibbs sampling clustering algorithm to the performance of an EM clustering algorithm on the delicious data .
Metric F Measure VI ARI V Measure Q2
Gibbs 0.42174 2.14728 0.27730 0.55637 0.73058
EM
0.33012 2.60149 0.20405 0.44627 0.68064
Table 5 : Results comparing the Gibbs clustering algorithm to the EM clustering algorithm on the 20 Newsgroups data .
Metric F Measure VI ARI V Measure Q2
Gibbs 0.35100 3.49994 0.13564 0.32366 0.71328
EM
0.30351 3.86434 0.09739 0.27483 0.68704
Table 6 : Results comparing the Gibbs sampling clustering algorithm to the EM clustering algorithm on the Enron data .
5.6 Summaries Using Few Samples
The experiments from Section 5.4 and 5.5 show that , in general , the differences between the performance of the various summarization techniques is small compared to the performance of Gibbs versus that of EM .
This fact , coupled with the relatively short times needed for the sampler to reach steady state , suggests a simplified clustering strategy . Instead of letting the sampler converge and collecting many samples thereafter , it may possible to use the first sample after burn ( a prespecified number of samples ) as the clustering of the data . alt.atheism comp.graphics composms windowsmisc compsysibmpchardware compsysmachardware compwindowsx misc.forsale rec.autos rec.motorcycles recsportbaseball recsporthockey sci.crypt sci.electronics sci.med sci.space socreligionchristian talkpoliticsguns talkpoliticsmideast talkpoliticsmisc talkreligionmisc
00 1 1 1 0 0 0 0 0 0 9 56 0 0 0 1 0 0 0 0 0
01 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
02 1 17 1 3 1 11 21 2 0 0 1 890 26 4 1 1 27 3 59 42
03 10 20 10 59 95 10 500 941 972 35 8 11 614 78 41 3 17 5 6 15
04 14 3 4 3 2 3 15 34 19 929 910 30 6 24 7 16 888 290 529 183
05 0 1 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0
08 5 927 940 932 891 966 429 14 3 23 12 47 343 32 62 18 6 4 5 7
09 13 16 5 1 2 3 10 3 2 1 0 4 5 14 875 5 15 588 87 13
12 7 0 2 0 0 0 7 0 0 0 1 2 1 790 4 4 2 1 5 9
16 948 13 9 0 3 3 3 5 1 2 2 13 3 55 7 949 41 98 305 729
Table 7 : Example contingency table showing the relationship of natural classes to clusters produced by the collapsed Gibbs sampler , using the 100th sample as the summary for the 20 Newsgroups data .
The experiments thus far suggest that this approach will likely yield good results , while requiring significantly less time and fewer resources .
To evaluate the potential of this simplified clustering algorithm , a new set of summarizations was generated for the samples collected in the previous experiments . These were single sample summarizations that used samples at regular intervals as the clustering for the data set . For example , for the delicious data set , this process was repeated starting at the 10th sample , in increments of 10 samples up to the 200th sample . For each data set , the metrics produced for the summarizations based on the ith sample of each chain were averaged together . The results of this process are shown in Figure 4 .
These results support two points . First , they appear to indicate that the sampler really does converge to steady state quite quickly , although perhaps not quite as quickly as the likelihood time series plots suggested . Second , they show that , after a certain point , choosing a later sample will yield diminishing returns . For this particular data set , it appears that choosing the 200th sample will not necessarily yield better results than choosing the 100th . So , an acceptable algorithm for this data set would be to run the sampler long enough to collect 100 samples , and then use the last sample as the selected clustering of the data .
When the absolute best clustering is desired , longer chains should be run and either the marginal posterior , or MAP summarization method should be used . However , the short circuited strategy suggested here will require less time and yield competitive results . 5.7 Qualitative Confirmation
The external metrics used here attempt to measure the similarity between partitionings of the data . While they do tend to be useful for comparing clustering algorithm variations on the same data set , there is no way to know whether a clustering is actually good based solely on these numbers . The fact that the Gibbs sampler described here produces clusterings with better external metrics than the EM algorithm does not necessarily mean that these clusterings make sense . It could be the case that the EM algorithm is producing very poor clusterings , and the Gibbs algorithm is producing only slightly less poor clusterings .
In order to verify that the clusterings produced are sensible , we examined contingency tables for several runs of the Gibbs sampling algorithm on the various data sets . For the most part , the algorithm appears to make sensible partitionings of the data , though they are
( a ) Average ARI scores .
( b ) Average V Measures .
Figure 4 : Results for summarizers that take the sample at a fixed location in the chain as the clustering of the data on the delicious data set . not necessarily the same as those present in the reference partition . A randomly selected contingency table is shown in Table 7 . The clustering contains many empty or small clusters , such as clusters 1 , and 5 . We have culled the majority of these very small clusters from the table . The bulk of the data have been placed into seven clusters : 2 , 3 , 4 , 8 , 9 , 12 , and 16 . These clusters , for the most part , make a great deal of sense . For example , two of the clusters are fairly pure ; cluster 2 is mostly about cryptography , and cluster 12 is mostly about medical issues . The other clusters consist of intuitive groupings of the remaining classes . Cluster 3 has to do with automotive and electronic hardware . Cluster 4 has to do with politics and sports . Cluster 8 deals mostly with computer related topics . Cluster 9 is about space exploration and the middle east and Cluster 16 is about religion .
Another interesting way to view the contingency table is to examine how the classes end up distributed across the clusters . For example , the misc.forsale and sci.electronics documents are almost evenly split between the automotive and computer clusters . This makes sense because computer equipment and automobiles are the most likely products to be sold on newsgroups , and these are the types of forums where discussions of electronics would be most prevalent . Also interesting is the way that the talkpoliticsmideast class is divided into a politics cluster , a religious cluster and a cluster about space and the middle east .
In general these trends indicate that the partitions are of good quality , perhaps even better than the metric scores would suggest . Although the cluster labels do not match the gold standard perfectly , the clusters appear coherent and mostly correspond to a valid way of organizing the documents , one that a human annotator might settle on , if the newsgroup labels were withheld .
6 . CONCLUSION
The experiments show a great deal of promise for using MCMC methods over EM for clustering documents with a mixture of multinomials model .
The absence of label switching shows that summarization meth ods that use more than one sample in their summary ( like the marginal posterior method presented here ) can be quite effective in this domain . This simplifies clustering algorithms that use MCMC on a mixture of multinomials for clustering . However , it does indicate that the sampler is not sampling from the entire distribution , as that would necessarily involve a certain amount of label switching . This is most likely because of the large number of variables present in the model , together with a relatively high amount of correlation between those variables . This failure to explore other modes would not be acceptable for applications for which true estimates of the posterior distributions are needed . In the case of document clustering , however , the true objective is to maximize the quality of the partitions produced by the algorithm , not to maximize the accuracy of the posterior distribution estimates .
It appears that the marginal posterior summarization method was generally superior to the two single sample summarization techniques , except in the case of the Enron data set where the results were mixed , as can be seen in Table 3 . It is possible that this is due to the smaller number of documents in the Enron data . The resulting longer sample chains might have allowed the sampler to find MAP samples that were closer to the true MAP values . Although not optimal , much simpler summarization techniques yield partitionings of comparable quality .
In summary , we have found the following guidelines that practitioners may consult as they create their own sampler based clustering algorithms :
1 . The point at which likelihood plots approach an asymptote corresponds with the convergence of the chain to steadystate .
2 . Little or no label switching occurs with our model and data . The methodology from Section 5.3 can be used to verify the presence or absence of label switching .
3 . Once samples have been collected , there is little difference in the performance of reasonable summarization methods .
4 . The Gibbs sampling algorithm presented here consistently produces better clusterings than EM on the same model .
5 . Longer chains , together with either the marginal posterior , or MAP summarization methods produce the best results . However , much simpler strategies yield competitive results .
7 . FUTURE WORK
We were able to compare MCMC and EM in their more basic forms , but it would be informative to evaluate how other variants of these algorithms that are used in practice ( eg variational EM , and EM combined with local search techniques [ 5 ] ) perform in comparison .
In addition , while it is likely that the results presented here generalize to a broad class of situations where similar models are used on similarly sized data sets , it is important to evaluate how well they extend to more complex models , such as LDA .
Scalability is also an issue that needs to be addressed , as some real world data sets can be orders of magnitude larger than those used for experimentation here . It is unknown whether the results shown here scale to such large data sets .
Finally , an approach that combines EM and MCMC might perform better than either technique in isolation . One approach would be to first collect a limited number of samples using an MCMC sampler , and then to use a summary of these samples as a starting point for EM . This approach would leverage the exploratory power of a sampling based approach to find a more promising starting configuration to begin maximizing with EM . That is , instead of choosing a random hill to climb , MCMC helps find a hill that ’s likely to be one of the higher hills to climb .
8 . ACKNOWLEDGMENTS
We would like to thank Dr . Shane Reese and Robbie Haertel for their feedback and help related to the techniques and mathematical derivations presented in this paper .
9 . REFERENCES [ 1 ] A . Banerjee and S . Basu . Topic models over text streams : A study of batch and online unsupervised learning . In Procedings of the SIAM International Conference on Data Mining , Minneapolis , Minnesota , April 2007 .
[ 2 ] M . W . Berry , M . Brown , and B . Signer . 2001 topic annotated
Enron email data set , 2007 .
[ 3 ] D . M . Blei , A . Y . Ng , and M . I . Jordan . Latent Dirichlet allocation . Journal of Machine Learning Research , 3:993–1022 , 2003 .
[ 4 ] M H Chen , Q M Shao , and J . G . Ibrahim . Monte Carlo
Methods in Bayesian Computation . Springer , 2000 .
[ 5 ] I . S . Dhillon , Y . Guan , and J . Kogan . Iterative clustering of high dimensional text data augmented by local search . icdm , 00:131 , 2002 .
[ 6 ] B . Dom . An information theoretic external cluster validity measure . Technical Report RJ10219 , IBM , Oct . 2001 . [ 7 ] A . Gelman , J . B . Carlin , H . S . Stern , and D . B . Rubin .
Bayesian Data Analysis . Chapman & Hall/CRC , second edition , 2004 .
[ 8 ] S . Goldwater and T . L . Griffiths . A fully bayesian aproach to unsupervised part of speech tagging . In The 45th Annual Meeting of the Associaiton for Computational Linguistics ( ACL’07 ) , Prague , 2007 .
[ 9 ] T . L . Griffiths and M . Steyvers . Finding scientific topics . In Proceedings of the National Academy of Sciences , volume 101 ( suppl . 1 ) , pages 5228–5235 , 2004 .
[ 10 ] A . Haghighi and D . Klein . Unsupervised coreference resolution in a nonparametric bayesian model . In Proceedings of the 45th Annual Meeting of the Association of Computational Linguistics , pages 848–855 , Prague , Czech Republic , June 2007 . Association for Computational Linguistics .
[ 11 ] L . Hubert and P . Arabie . Comparing partitions . Journal of
Classification , 2(1):193–218 , Dec . 1985 .
[ 12 ] T . Joachims . A probabilistic analysis of the Rocchio algorithm with TFIDF for text categorization . In Machine Learning : Proceedings of the Fourteenth International Conference ( ICML’97 ) , pages 143–151 , 1997 .
[ 13 ] M . Meil˘a . Comparing clusterings—an information based distance . Journal of Multivariate Analysis , 98(5):873–895 , 2007 .
[ 14 ] M . Meil˘a and D . Heckerman . An experimental comparison of model based clustering methods . Machine Learning , 42(1–2):9–29 , Jan . 2001 .
[ 15 ] R . M . Neal . Markov chain sampling methods for Dirichlet process mixture models . Journal of Computational and Graphical Statistics , 9(2):249–265 , June 2000 .
[ 16 ] A . E . Raftery and S . M . Lewis . Implementing MCMC .
Markov Chain Monte Carlo in Practice , pages 115–130 , 1996 .
[ 17 ] S . Richardson and P . J . Green . On bayesian analysis of mixtures with an unknown number of components . Journal of the Royal Statistical Society . Series B , 59(4):731–792 , 1997 .
[ 18 ] A . Rosenberg and J . Hirschberg . V measure : A conditional entropy based external cluster evaluation measure . In Joint Conference on Empirical Methods in Natural Language Processing and Computational Language Learning , Prague , June 2007 .
[ 19 ] M . M . Shafiei and E . E . Milios . Latent Dirichlet co clustering . In ICDM ’06 : Proceedings of the Sixth International Conference on Data Mining , pages 542–551 , Washington , DC , USA , 2006 . IEEE Computer Society .
[ 20 ] M . Steinbach , G . Karypis , and B . Kumar . A comparison of document clustering techniques . Technical report , University of Minnesota , May 2000 .
[ 21 ] M . Stephens . Dealing with label switching in mixture models . Journal of the Royal Statistical Society : Series B , 64(4):795–809 , 2000 .
[ 22 ] Y . W . Teh , D . Newman , and M . Welling . A collapsed variational bayesian inference algorithm for latent Dirichlet allocation . In B . Schölkopf , J . Platt , and T . Hoffman , editors , Advances in Neural Information Processing Systems 19 , pages 1353–1360 , Cambridge , MA , 2007 . MIT Press .
[ 23 ] D . Walker and E . Ringger . New social bookmarking data set . http://nlpcsbyuedu/mediawiki/indexphp/Data #New_Social_Bookmarking , Oct . 2007 .
[ 24 ] S . Yu . Advanced Probabilistic Models for Clustering and
Projection . PhD thesis , Fakultät für Mathematik , Informatik und Statistik der Ludwig Maximilians Universität München , 2006 .
[ 25 ] J . Zhang , Z . Ghahramani , and Y . Yang . A probabilistic model for online document clustering with application to novelty detection . In Advances in Neural Information Processing Systems , pages 1617–1624 . MIT Press , 2005 .
APPENDIX A . DERIVATION OF COMPLETE CONDITIONAL
The derivation uses the following variables :
Number of documents in data set Length of document d The xth column of θ The nth word of document d the vocabulary The number of clusters/mixture components
δ ( zd , k ) , the number of documents labeled k .
M Nd θx wdn V K nk nkv
MX MX d
NdX
Now , change the product indices from products over documents and word sequences , to products over cluster labels and token counts this is possible because and
θzd,wdn =
θnkv kv , because they are products over the same quantities , in different orders .
Next , simplify by combining products , adding exponents and pulling constant multipliers outside of integrals .
−1(α )
= B
λαj +nk−1 j dλ · B
−K ( β )
. . .
θβ+nkv−1 kv dθ1 , . . . , dθK
( A 7 ) j=1 k=1 v=1
At this point we have integrals over terms that are in the form of the kernel of the Dirichlet distribution , we can therefore complete the integrals , leaving
Z
Z KY
|V |Y
KY p ( z , w|α , β ) = B
−1(α)B(α∗ ) · B
−K ( β )
B(βk∗ )
( A 8 )
Where α∗ and βk∗ are defined in Section 4 . Equation 3 is directly derived from Equation A 8 . k=1
We begin with the full joint distribution over the data , latent variables , and model parameters , given our fixed priors .
( δ ( zd , k ) · δ ( wdn , v) ) , the number of times word v occurs in n d documents with the label k .
KY
MY
NdY
! p ( λ , z , w , θ|α , β ) = p ( λ|α ) p ( θk|β ) p ( zd|λ ) p ( wdn|zd , θzd )
( A 1 )
Z
Z
. . . p ( λ|α )
KY k=1 k=1
MY p ( θk|β ) n=1 p ( wdn|zd , θzd )
!
NdY n=1 dλ , dθ1 , . . . , dθK
( A 2 )
=
. . . p ( θk|β ) p ( wdn|zd , θzd ) dλ , dθ1 , . . . , dθK p ( zd|λ ) d=1
! MY d=1
NdY MY n=1 p ( θk|β )
Next , integrate out λ and θ . p ( z , w|α , β ) =
Expand the nested product and then group like terms
Z Z
=
Z
KY k=1 p ( λ|α )
MY d=1 p ( λ|α ) p ( zd|λ ) dλ
Expand the multinomial and Dirichlet distributions
=
−1(α )
B
λαj−1 j
λzd dλ j=1 d=1
Z
Z
=
−1(α )
B
MY d=1 j=1
λzd =
KY
KY
MY
KY k=1
λαj−1 j
λnk k
KY Z KY k=1
Z
Z d=1 d=1 k=1
. . . p ( zd|λ )
MY Z KY 0@B Z KY 0@B Z KY |V |Y
Z
. . .
. . . k=1 k=1
λnk k dλ
NdY n=1 v=1
NdY p ( wdn|zd , θzd ) dθ1 , . . . , dθK
( A 3 )
( A 4 )
θzd,wdn dθ1 , . . . , dθK
( A 5 ) d=1 n=1
|V |Y v=1
θβv−1 kv
−1(β )
|V |Y
1A MY NdY 1A KY d=1 n=1
|V |Y
−1(β )
θβv−1 kv v=1 k=1 v=1
θnkv kv dθ1 , . . . , dθK
( A 6 )
