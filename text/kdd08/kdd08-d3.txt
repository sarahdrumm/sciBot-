A Family of Dissimilarity Measures between Nodes
Generalizing both the Shortest Path and the
Commute time Distances
Luh Yen &
Marco Saerens ISYS Unit – LSM
Université catholique de
Louvain , Belgium
{luhyen,marcosaerens}
@ucLouvain.be
Amin Mantrach IRIDIA laboratory
Université libre de Bruxelles ,
Belgium amantrac@ulbacbe
Masashi Shimbo Graduate School of Information Science
Nara Institute of Science and
Technology , Japan shimbo@isnaistjp
ABSTRACT This work introduces a new family of link based dissimilarity measures between nodes of a weighted , directed , graph that generalizes both the shortest path and the commute time ( or resistance ) distances . This measure , called the randomized shortest path ( RSP ) dissimilarity , depends on a parameter θ and has the interesting property of reducing , on one end , to the standard shortest path distance when θ is large and , on the other end , to the commute time distance when θ is small ( near zero ) . Intuitively , it corresponds to the expected cost incurred by a random walker in order to reach a destination node from a starting node , while maintaining a constant entropy ( related to θ ) spread in the graph . The parameter θ is therefore biasing gradually the simple random walk on the graph towards the shortest path policy . By adopting a statistical physics approach and computing a sum over all the possible paths , it is shown that the RSP dissimilarity from every node to a particular node of interest can be computed efficiently by solving two linear systems of n equations , where n is the number of nodes . On the other hand , the dissimilarity between every couple of nodes is obtained by inverting an n × n matrix . The proposed measure could be used for various graph mining tasks such as computing betweenness centrality , finding dense communities , etc , as shown in the experimental section .
INTRODUCTION
1 . Network link analysis is an important research topic that has been the subject of much recent work in various fields of science : applied mathematics [ 27 ] , social science [ 12 , 53 ] , physics [ 33 ] , computer science [ 11 ] . Within this framework , one key issue is the proper definition of a similarity/dissimilarity measure between the nodes of the network , taking both direct and indirect links into account .
1This work was supported by the STRATEGO project funded by the Region wallonne and by a grant from the Université catholique de Louvain , which permitted M . Shimbo to visit UCL .
Such a meaningful measure should consider two nodes as similar if there are many short paths connecting them ( for a short survey of the different link based dissimilarity measures proposed in the literature , see the related work section below ) . Once such a similarity matrix has been defined , it can be exploited for various mining tasks , for instance finding communities , outliers , important nodes , etc .
This paper proposes such a measure of dissimilarity between nodes , together with algorithms for computing it , by applying and extending ideas that appeared in [ 42 ] in the context of routing . The proposed measure will be called the randomized shortest path ( RSP ) dissimilarity and has three interesting properties . First , it has a clear , intuitive , interpretation in terms of a biased random walk on the graph . Second , it nicely generalizes the shortest path and the commute time distances ( also called the resistance distance ) by computing an intermediate dissimilarity depending on one parameter θ . When θ is large , the dissimilarity reduces to the standard shortest path distance while for θ = 0 , it reduces to the commutetime distance [ 13 , 23 ] . Third , the dissimilarity between a particular node and all the other nodes can be computed efficiently by solving two linear systems of n equations where n is the number of nodes . On the other hand , all pairs of nodes dissimilarity can be computed by inverting an n × n square matrix .
The definition of this similarity measure relies on a model inspired by the work of Akamatsu in transportation networks [ 1 ] , and extended recently by Saerens et al . in [ 42 ] in the framework of network routing . Consider a graph or network G where a positive cost is associated to each arc connecting two nodes . Consider further the infinite set of all possible paths ( including cycles ) between two nodes of interest . We define a biased random walk on the graph that favors short paths by associating a high probability of following these short paths and a small probability of following long paths . A Boltzmann probability distribution controlled by a parameter θ , having exactly this property , is assigned to this set of paths . It is shown that this choice minimizes the expected cost for reaching node j from node i when a constant cross entropy with respect to the natural , unbiased , random walk is spread in the graph . In this biased random walk model , the expected cost d(j|i ) incurred when reaching node j from node i can be computed efficiently by using standard linear algebra . We regard this quantity d(j|i ) as the directed dissimilarity between nodes i and j . The randomized shortest path ( RSP ) dissimilarity between nodes i and j is defined as the symmetrized quantity d(i , j ) = ( d(j|i ) + d(i|j))/2 .
1.1 Related work This section provides a short survey of the related work aiming to define meaningful link based similarities between the nodes of a graph , and taking the form of a dissimilarity measure or a kernel matrix . Similarity between nodes is also called relatedness in the literature and the most well known quantities measuring relatedness are co citation [ 48 ] and bibliographic coupling [ 22 ] .
More sophisticated measures have been proposed as well . In their pioneering work , Klein & Randic [ 23 ] proposed to use the effective resistance between two nodes as a meaningful distance measure . They call this quantity the resistance distance between nodes . Indeed , it can be shown that the effective resistance is a Euclidean distance [ 2 , 23 ] . The close link between the effective resistance and the commute time of a random walker on the graph was established in [ 8 ] while the links between the Laplacian matrix and the commute time ( as well as the Fiedler vector ) were studied in [ 43 ] . Therefore , the resistance distance is sometimes called the commute time distance .
Chebotarev & Shamis proposed in [ 9 , 10 ] a similarity measure between nodes integrating indirect paths , based on the matrix forest theorem . Interestingly , this quantity , called the “ regularized Laplacian kernel ” [ 13 ] , defines a kernel matrix and is related to the Laplacian matrix of the graph . Ito et al . [ 19 ] further propose the modified regularized Laplacian kernel , an extension of the regularized Laplacian kernel , by introducing a new parameter controlling importance and relatedness . Moreover , in [ 19 , 47 ] it is shown that the regularized Laplacian kernel overcomes some limitations of the von Neumann kernel [ 21 ] , when ranking linked documents . This modified regularized Laplacian kernel is also closely related to a graph regularization framework introduced by Zhou & Schölkopf in [ 58 ] . The exponential and von Neumann diffusion kernels , based this time on the adjacency matrix , are introduced in [ 21 , 46 ] . The defined kernel matrices are computed through a power series of the adjacency matrix of the graph ; they are therefore closely related to graph regularization models [ 24 ] .
Moreover , some authors recently considered similarity measures based on random walk or electrical concepts . For instance , Harel & Koren [ 18 ] investigated the possibility of clustering data according to some random walk related quantities , such as the probability of visiting a node before returning to the starting node . They showed that their algorithm is able to cluster arbitrary nonconvex shapes . White & Smyth [ 54 ] investigated the use of the average first passage time as a similarity measure between nodes . Their purpose was to generalize the random walk approach of Page et al . [ 7 , 34 ] by capturing a concept of “ relative centrality ” of a given node with respect to some other node of interest . A recent study , comparing several measures ( including the average first passage time ) for analyzing the proximity of nodes in a graph in the framework of co authorship networks , is presented in [ 28 ] .
On the other hand , Kondor & Lafferty [ 24 ] as well as Smola & Kondor [ 49 ] defined a graph regularization model related to the graph PCA introduced in [ 43 ] . This model results in the definition of a family of kernels on a graph that provide similarities between nodes , just as any other graph kernel [ 46 ] . An interesting attempt to learn the regularization operator in the context of semi supervised learning can be found in [ 61 ] . The result is a kernel on a graph maximizing kernel alignment to the labeled data . Still another approach has been investigated by Palmer & Faloutsos [ 35 ] who define a similarity function between categorical attributes , called “ refined escape probability ” , based on random walks and electrical networks . They show that this quantity provides a reasonably good measure for clustering and classifying categorical attributes .
[ 8 ] .
The “ commute time ” ( CT ) kernel has been introduced in [ 13 , 43 ] and was inspired by the already mentioned work of Klein & Randic [ 23 ] and Chandra et al . It takes its name from the average commute time , which is defined as the average number of steps a random walker , starting from a given node , will take before entering another node for the first time , and go back to the starting node . The CT kernel is defined as the inner product in a Euclidean space where the nodes are exactly separated by the commute time distance . An interesting method allowing to efficiently compute truncated commute time neighbors appears in [ 44 ] .
Almost at the same period , Qiu & Hancock [ 39 , 40 ] , Ham , Lee , Mika & Schölkopf [ 17 ] , Yen et al . [ 57 ] as well as Brand [ 6 ] defined the same CT embedding , preserving the commute time distance , and applied it to image segmentation and multi body motion tracking [ 39 , 40 ] , to dimensionality reduction of manifolds [ 17 ] , to clustering [ 57 ] as well as to collaborative filtering [ 6 ] , with interesting results . On the other hand , Zhou [ 59 , 60 ] uses the average first passage time between two nodes as a dissimilarity index in order to cluster them . He studies various greedy clustering techniques based on this dissimilarity index . Another similarity measure related to the average fist passage time appears in [ 52 ] . It is defined as the escape probability , that is the probability that a random walker starting from one node will visit the other node , before returning to the starting node . The resulting similarity is directed and closely related to the effective conductance between the two nodes . Also related is the measure investigated by Koren et al . [ 25 ] . In this work , the authors propose to replace the effective conductance by a cycle free effective conductance .
In two recent papers [ 30 , 31 ] , Nadler et al . as well as Latapy et al . [ 37 , 38 ] proposed a well formulated distance measure between nodes of a graph based on a diffusion process , called the “ diffusion distance ” . A valid kernel , called the “ Markov diffusion kernel ” has been derived from this diffusion distance in [ 14 ] . An application of the diffusion distance to dimensionality reduction and graph visualization appears in [ 26 ] . The natural embedding induced by the diffusion distance is called the “ diffusion map ” by Nadler et al . [ 30 , 31 ] . Moreover , in [ 37 , 38 ] , Pons & Latapy defined a hierarchical clustering approach for clustering the nodes according to the squared diffusion distance .
Two recent PageRank based attempts to define meaningful similarities between nodes appear in [ 16 , 36 , 51 ] . In these two last works , the authors propose a random walk with restart procedure while in the first work , Gori and Pucci define a random walk process starting from the node of interest , controlled by some pre computed correlation matrix between nodes . These two algorithms are thus inspired from the well known PageRank procedure [ 7 , 34 ] , adapted in order to provide relative similarities between nodes . Yet another PageRank inspired algorithm defining similarities between nodes was proposed in [ 4 ] . It provides a general way of computing similarities between the nodes of two different graphs . Applying this procedure to the same graph allows to find self similarities , that is , similarities between nodes of the same graph . Finally , a similarity between nodes based on the number of different paths connecting two nodes , and therefore on the maximum flow/minimum is studied in [ 29 ] . This measure has been tested in two collaborative recommendation tasks [ 13 ] , but did not perform well in this context . Finally , Tahbaz Salehi & Jadbabaie [ 50 ] introduce a one parameter family of algorithms that , as the algorithm developed in this work , recover both the Bellman Ford procedure for finding shortest paths as well as the iterative algorithm for computing the average fistpassage time . However , it is based on heuristic grounds and not on a well defined cost function to optimize .
1.2 Contributions & organization This work has three main contributions : ( i ) the randomized shortestpath ( RSP ) dissimilarity , generalizing both the shortest path and the commute time distances , is introduced ; ( ii ) it is shown that the RSP dissimilarity can be computed efficiently from the adjacency matrix of the graph , and ( iii ) the application of the RSP dissimilarity to two mining tasks , namely computing betweenness centrality and nodes clustering .
Section 2 develops the model as well as the procedure for computing the directed dissimilarity between two node , from which the RSP dissimilarity is derived as its symmetrized version . Section 3 describes an algorithm for computing the RSP dissimilarity between every pair of nodes . Section 4 presents some simple experiments on clustering and betweenness to demonstrate the properties of the dissimilarity . Section 5 is the conclusion .
2 . THE RSP DISSIMILARITY MEASURE The basis of the dissimilarity measure we propose is a new , biased , random walk model in which each path between two nodes of interest is assigned an independent probability of being followed , such that the incurred expected cost to go from one node to the other is minimized under a fixed degree of randomness . The dissimilarity measure will then be defined in terms of this expected cost to go , or the expected energy . We first introduce the notation and the natural ( or unbiased ) random walk on the graph .
2.1 Graph and natural random walk Consider a weighted directed graph or network , G , with a finite set of n nodes ( or vertices ) V and a set of arcs ( or edges ) E , without self loops . To each arc linking node k and node k0 ( denoted as k → k0 ) , we associate a weight ckk0 > 0 representing the immediate cost of following this arc . If there is no arc from k to k0 , we simply consider that ckk0 takes a large value , denoted by ∞ . The cost matrix C is the matrix containing the immediate costs ckk0 .
Given this cost matrix , a natural random walk on the graph will be defined in the following obvious way . The choice to follow an arc k → k0 will be made according to the transition probability of jumping from node k to its successor node k0 ∈ S(k ) , where S(k ) = {k0 | ( k → k0 ) ∈ E} is the set of successors of k . The transition probabilities defined on each node k will be denoted as pkk0 = P(k0|k ) for k0 ∈ S(k ) . For nodes k0 6∈ S(k ) , the corresponding transition probability will be set to zero , so pkk0 = 0 . The natural random walk will be defined by pref k0=1(1/ckk0 ) ) and the corresponding transition probability matrix containing pref kk0 is Pref . In other words , the random walker chooses to follow an arc with a probability proportional to the inverse of the immediate cost , therefore favoring locally arcs having a low cost . If , on the other hand , we are given an affinity ( adjacency ) matrix with elements akk0 indicating the affinity between node k and node k0 instead of C , the corresponding kk0 = ( 1/ckk0 )/(Pn costs are computed from ckk0 = 1/akk0 and the transition probabilities associated to each node are proportional to the affinities ( and then normalized ) . Notice that other relations ( not only the inverse relation ) between affinity and cost could be considered as well . These transition probabilities corresponding to the natural random walk on the graph will be used as reference probabilities later ; hence the addition of the superscript on the transition probability matrix Pref .
The rest of Section 2 deals with the problem of measuring the dissimilarity between a fixed pair of nodes . The computation of allpairs dissimilarities will be discussed in Section 3 .
2.2 Dissimilarity measures based on minimum expected energy
Suppose we are interested in the dissimilarity between a fixed pair of nodes i and j . We consider a random walk starting from node i and eventually reaching node j , at which point the walk is terminated . Thus node i is called the initial node , and j the destination node . To ensure termination upon reaching node j , we modify the graph structure and make j an absorbing node having no outgoing arcs except possibly to j itself ( cjk = ∞ , ∀k ∈ V ) . We also assume a problem structure ( the graph and costs ) such that any natural random walk will eventually reach the destination node j with probability one ; ie , termination is inevitable . The conditions for which this is true are , basically , related to the fact that the destination node can be reached in a finite number of steps from any potential initial node , hence this assumption does not restrict the applicability of the model severely . For a rigorous treatment , see for instance [ 3 ] . Let R be the set of all paths ( including cycles ) from node i to node j in the modified graph . R is generally an infinite ( but countable ) set . We define a probability distribution over set R representing the probability P(℘ ) of following path ℘ among all the paths from node i to j . Our idea is to seek the probability distribution minimizing the expected cost to go among all the probability distributions having a fixed relative cross entropy with respect to the natural random walk on the graph . We then use this expected cost as a dissimilarity measure .
E(℘ ) = Pτ ( ℘ )
Let us denote the total cost associated to path ℘ as E(℘ ) , henceforth referred to as the energy of that path . We assume that the total cost associated to a path is additive , ie , for a path ℘ = ( i = k0 , k1 , . . . , kτ ( ℘ ) = j ) represented as a sequence of nodes , t=1 ckt−1kt . Here , recall that ℘ ∈ R is a valid path from node i to node j in the modified graph in which j is made an absorbing node . Hence the path is finite , and every kt 6= j for any t 6= τ ( ℘ ) . Moreover , ckt−1kt 6= ∞ along that path .
We now derive the path probability distribution minimizing the expected energy for reaching node j from i , and subject to a fixed relative entropy ( Kullback Leibler divergence ) with respect to the reference probability . To be precise , we seek the solution ( probability distribution ) P(℘ ) to the following constrained optimization problem : 8>><>> : minimize X subject to X
℘∈R
P(℘)E(℘ )
P(℘ ) ln
P(℘ ) Pref(℘ )
= J0
( 1 )
℘∈R where Pref(℘ ) represents the probability of following the path ℘ when walking according to the natural random walk , ie , when using transition probabilities pref kk0 . J0 is provided a priori by the user , according to the desired degree of randomness he is willing to concede . In this work , the value of J0 will be adjusted according to a parameter value fixed by the user ; when J0 tends to 0 , we recover the natural random walk , while as J0 increases , the paths probability distribution will be more and more peaked around the shortest paths . By defining the Lagrange function
#
L =
P(℘)E(℘ ) + λ
P(℘ ) ln
P(℘ ) Pref(℘ )
− J0
"X #
℘∈R
X
℘∈R
"X
℘∈R
+ µ
P(℘ ) − 1 and observing that its derivative with respect to the path probabilities should vanish at the minimum , we obtain the following probability distribution
P(℘ ) =
=
Pref(℘ ) exp [ −θE(℘ ) ]
Pref(℘ ) exp [ −θE(℘ ) ]
X expˆ−θE(℘ ) + ln Pref(℘)˜ X expˆ−θE(℘ ) + ln Pref(℘)˜
℘∈R
℘∈R
( 2 )
( 3 )
( 4 ) where θ = 1/λ . Thus , as expected , short paths ( having small E(℘ ) ) are favored in that they have a large probability of being followed . In other words , the random walk is more and more biased towards the shortest path as θ increases .
With the probability distribution minimizing the expected energy at hand , we define the directed dissimilarity between i and j exactly as this minimum expected energy , and denote it by d(j|i ) . In other words , d(j|i ) is the expected cost incurred when reaching node j from node i , according to the probability distribution P(℘ ) provided by Equation ( 4 ) . We can also define a symmetric dissimilarity measure d(i , j ) through d(i , j ) = ( d(j|i ) + d(i|j))/2 . We call d(i , j ) the symmetric randomized shortest path ( RSP ) dissimilarity , or symmetric dissimilarity for short .
These dissimilarity measures depend on the parameter θ . From Equation ( 3 ) , when θ is large , the probability distribution on the paths is peaked on the shortest path . On the other hand , when θ is near zero , the exponential in Equation ( 3 ) tends to 1 and the Markov chain reduces to the natural random walk defined previously . In this case , the directed dissimilarity simply becomes the expected cost for reaching the destination node . Indeed , for θ = 0 , it has been shown that this expected cost d(j|i ) can be computed from the elements of the pseudoinverse of the Laplacian matrix of the graph for the natural random walk ; see Equation ( 18 ) in [ 13 ] . A little calculus shows that the symmetric quantity d(i , j ) = ( d(j|i ) + d(i|j))/2 becomes independent of the costs cij and is proportional to the commute time between nodes i and j . Therefore , the symmetric dissimilarity d(i , j ) provides the commute time distance , up to a proportional factor , when θ = 0 . Notice , however , that the symmetric RSP dissimilarity is a Euclidean distance when θ is near zero ( commute time distance ) , a distance when θ is large ( shortestpath distance ) , but it is not necessary a distance for intermediate values of θ . We indeed observed experimentally that the triangular inequality could not be respected for intermediate values of θ .
2.3 Partition function
We defined the directed dissimilarity d(j|i ) as the expected energy for reaching the destination node j from the initial node i , under the probability distribution given by Equation ( 4 ) . We show that this expected energy can be computed from a quantity , Z , defined as h−θE(℘ ) + ln Pref(℘ ) i
,
( 5 )
Z = exp
X
℘∈R and which corresponds to the partition function in statistical physics ( see [ 20 ] or any textbook in statistical physics ; for instance [ 41 , 45] ) .
The expected energy E = P X
∂(− ln(Z ) ) terms of the partition function via
E =
=
∂θ
℘∈R P(℘)E(℘ ) can be obtained in expˆ−θE(℘ ) + ln Pref(℘)˜
E(℘ ) ( 6 )
℘∈R
Z
The partition function is related to other quantities of interest as well . The expected number of transition steps through arc k → k0 is given by
ηkk0 =
=
∂(− ln(Z ) ) expˆ−θE(℘ ) + ln Pref(℘)˜
∂ckk0
1 θ
X
℘∈R
Z
( 7 )
( 8 )
δ(℘ ; k , k
0
) where δ(℘ ; k , k0 ) indicates to the number of times arc k → k0 is present in path ℘ , and thus the number of times the arc is traversed . The expected number of passages in node k is then provided by nX
ηk =
ηlk
( 9 ) l=1 which corresponds to the expected number of incoming transitions . We will use ηkk0 to compute the betweenness centrality measures [ 32 , 53 ] in Section 3 .
Notice that the definition for the partition function ( Equation ( 5 ) ) involves summation over ( generally an infinite number of ) paths in R . In Section 2.4 , we will discuss how to compute the partition function efficiently .
2.4 Efficient computation of the partition func tion
By applying the ideas introduced by Akamatsu [ 1 ] , let us show how the partition function Z can be computed from the cost matrix . Recall that we have changed the costs cjk to ensure that the random walk terminates at the destination node j ( see Section 22 ) The cost cost matrix C except that elements of row j consist entirely of ∞ . Consequently , the modified cost matrix takes the following form matrix after this change , denoted by eC , is identical to the original
24 Qc∞T
Rc eC=
35 j
( 10 )
The corresponding transition probabilities matrix for the natural random walk will be denoted by ePref ; it is obtained from Pref by replacing row j with 0T .
,
( 11 )
= exp h−θeC + lnePrefi
From the modified cost matrix eC , we build a new matrixfW , given h−θeC i by fW = ePref ◦ exp Now , since ln Pref(℘ ) =Pτ ( ℘ ) t=1 lnepref element ( i , j ) of the matrix fWt ( fW to the power t ) is [ fWt]ij = P kt−1kt , we easily observe that ℘∈R(t ) exp[−θE(℘ ) + ln Pref(℘ ) ] where R(t ) is the set of paths connecting the initial node i to the destination node j in exactly t steps . Consequently , the partition function is where the logarithm/exponential functions are taken elementwise and the operator ◦ is the elementwise ( Hadamard ) matrix product .
# " ∞X fWt Thus element i of the jth column of the matrixP∞ t=1fWt correthe series of powers offW providesP∞ t=1fWt = ( I −fW ) which converges if the spectral radius of fW , ρ(fW ) , is less than sponds to the partition function when starting from node i . Computing this infinite series for the problem at hand is relatively easy : −1 − I , h−θE(℘ ) + ln Pref(℘ ) i
∞X
X
1 , which depends on the parameter θ . Thus Z can be computed thanks to ( we assume i 6= j in the sequel ) = eT i ( I −fW )
( I −fW )
−1 − I
−1ej
℘∈R(t )
( 12 )
Z =
Z = h i exp t=1 t=1
= ij
−1 , the partition function is Z =
Now , if we pose eZ = ( I − fW ) [ eZ]ij =ezij . ij
( 13 ) linear systems of equations
2.5 Computing the main quantities From Equations ( 6 ) and ( 8 ) , we see that in order to obtain the quantities of interest , namely E and η , we have to compute the deriva to the one appearing in [ 42 ] ; see this paper for details ) . To compute these quantities , we only need the ith row and the jth column of tives of Z with respect to θ andeckk0 ( the calculus is quite similar matrix eZ , which are given by the column vectorsezi = eZTei and ezj =eZej . These vectors can be obtained by solving the following ( I −fW)Tezi = ei and ( I −fW)ezj = ej . Let us denote the elements ofeZ byezkk0 = [ eZ]kk0 . By definition , we have ezik = [ ezi]k and ezkj = [ ezj]k for any k . Z =ezij = [ ezi]j = [ ezj]i . i ( eC ◦fW)ezj ezij = ezikezk0j expˆ−θeckk0 + lnepref kk0˜ ∂eckk0 ezij h−θeckk0 + lnepref nX = ezik0ezk0j ezik exp ezij
( 15 ) for k 6= j . The expected number of passages through node k0 is
The expected number of passages through arc k → k0 is
Now for the expected energy or expected cost , we obtain
ηk0 = ezk0jezij
= −ezT
∂(− ln Z )
∂(− ln Z )
In particular ,
ηkk0 =
( 14 )
( 16 )
E = i kk0
1 θ
∂θ k=1 for k0 6= j . As stated earlier , the directed dissimilarity between node i and node j is defined as the expected cost incurred when reaching node j from node i : d(j|i ) = E . In Algorithm 1 , we
Algorithm 1 Computation of the directed dissimilarity between node i and node j . Input : Node i is the initial node while node j is the destination node . The graph has one single connected component containing n nodes . θ > 0 : the parameter controling randomness . C : the n × n cost matrix . Pref : the n × n reference transition probabilities matrix .
Output : The directed dissimilarity between nodes i and j , d(j|i ) . 1 . In matrix C , replace each entry of row j by ∞ and denote the product , and the exponential is taken elementwise . h−θeC(j)i resulting matrix by eC(j ) . 2 . fW(j ) = Pref ◦ exp 3 . if ρ(fW(j ) ) ≥ 1 then “ I −fW(j ) ” Tez(j ) andez(j ) with respect toez(j ) i )T “ eC(j ) ◦fW(j ) ” ez(j ) 7 . return d(j|i ) = − ( ez(j )
4 . 5 . end if 6 . Solve i = ei and
“ I −fW(j ) ” ez(j ) return The spectral radius is greater than one .
, where ◦ is the elementwise j = ej
. j j i
[ ez(j ) i
]j present the pseudocode for computing the directed dissimilarity between node i and node j . In the pseudocode , we added the super script ( j ) to variables eC,fW,ezi , andezj , to stress their dependence on the destination node j .
3 . COMPUTING DISSIMILARITIES
BETWEEN EVERY PAIR OF NODES
We now discuss how to compute the directed dissimilarity between every pair of nodes . Hence our objective is to compute the directed dissimilarity matrix D whose elements are given by [ D]ij = d(j|i ) . A straightforward approach would be to apply Algorithm 1 repeatedly for every pair of nodes i and j . But a better approach is desirable , as each run of Algorithm 1 involves solving ( I − fW)Tezi = ei and ( I −fW)ezj = ej ( Equation ( 13) ) , with different fW for different j . j ij
( 17 ) from d(j|i ) = − ( ez(j )
Let us first restate Equation ( 14 ) for a given pair of i and j , with an explicit superscript ( j ) added to variables to represent their dependence on j : i )T(eC(j ) ◦fW(j))ez(j ) ez(j ) By defining eZ(j ) = ( I − fW(j))−1,ez(j ) andez(j ) j =eZ(j)ej i = ( eZ(j))Tei and z(j ) ez(j ) Let W = Pref ◦ exp [ −θC ] . It is easy to see that fW(j ) can be 0T ) . Equivalently , eC(j ) is computed from C by replacing its jth that W andfW(j ) are related by W = fW(j)+ejwT j ; thusfW(j ) = computed from W by replacing its jth row by zeroes ( a zero row , row by a ∞T row . By defining wj = colj(W ) , we easily observe W − ejwT j . are computed
( 18 ) j i
Finally , we show how to compute efficiently all the entries of D in terms of Z = ( I − W)−1 . This is a simple application of the
,
( 19 )
Sherman Morrison formula [ 15 ] , −1 = A
( A + cdT )
−1 − A−1cdTA−1 which allows to computeeZ(j ) = ( I −fW(j))−1 in terms of Z = 1 + dTA−1c ( I − W)−1 . Indeed , from fW(j ) = W − ejwT fW(j ) ) = ( I − W ) + ejwT eZ(j ) = Z − ZejwT j , we have ( I − j . By setting A = ( I − W ) , c = ej
From Equation ( 14 ) , once the matrixeZ(j ) has been computed , the
„ I − zjwT j 1 + wT j zj and d = wj in Equation ( 19 ) , we obtain j Z j Zej
1 + wT
«
( 20 )
=
Z column j of the dissimilarity matrix D , dj = colj(D ) , is dj = −(eZ(j)(eC(j ) ◦fW(j))eZ(j)ej ) ÷ ( eZ(j)ej )
( 21 ) where ÷ is the elementwise division . In Algorithm 2 , the algorithm for computing the similarity between every node i and node j is detailed . The directed dissimilarity matrix is then defined by
˜ . The symmetrized dissimilarity that
D =ˆ d1 d2
··· dn will be used in the experiments and which reduces to the commutetime distance for a small θ is simply DRSP = ( D + DT)/2 .
Moreover , it is not hard to show that the expected number of passages through each arc and node can be computed by the same trick . For instance , let eN(j ) be the matrix containing as elements [ eN(j)]ik the expected number of passages through node k when starting from node i and ending in node j ( absorbing node ) . Using the same notation as in Algorithm 2 , this matrix can be computed by eN(j ) = ( Diag(ez(j ) j ) )
−1eZ(j)Diag(ez(j ) j )
( 22 )
From the expected number of passages through each arc when starting from node i and ending in j , η(j ) kk0 ( i , j ) ( see Equation ( 16) ) , a betweenness centrality measure can easily be computed in the same spirit as the random walk betweenness proposed by Newman in [ 32 ] . The RSP betweenness centrality of a node k will therefore be defined as the net flux entering in node k for all possible pairs of initial and destination nodes : bk =
1
2(n − 1)(n − 2 )
|η(j ) k0k(i , j ) − η(j ) kk0 ( i , j)|
X
X i,j:i6=j6=k k0∈N ( k ) where N ( k ) is the set of nodes adjacent to k . This betweenness reduces to Freeman ’s betweenness [ 53 ] based on shortest paths when θ → ∞ and is very similar in spirit to Newman ’s betweenness [ 32 ] when θ → 0 .
4 . EXPERIMENTAL RESULTS The experimental section aims to answer two important research questions , namely ( 1 ) Does the RSP dissimilarity behave correctly , according to our intuition . For instance , the dissimilarity should be highly correlated with the shortest path distance when θ → ∞ and with the commute time distance when θ → 0 . ( 2 ) Do the results obtained by using the RSP dissimilarity differ significantly from the results obtained when using the shortest path and the commutetime distances . Moreover , does the RSP dissimilarity show some added value in graph mining tasks . In order to investigate these questions , we performed three simple experiments .
First experiment . This first experiment aims at computing the linear correlation between the RSP dissimilarity , the shortest path and
Algorithm 2 Computation of the symmetric RSP dissimilarity matrix between all pairs of nodes . Input : The graph has one single connected component containing n nodes . θ > 0 : the parameter controling randomness . C : the n × n cost matrix . Pref : the n × n reference transition probabilities matrix .
Output : The symmetric RSP dissimilarity matrix DRSP . 1 . W = Pref ◦ exp [ −θC ] , where ◦ is the elementwise product , and the exponential is taken elementwise . return The spectral radius is greater than one .
2 . if ρ(fW(j ) ) ≥ 1 then
3 . 4 . end if 5 . Z = ( I − W)−1 6 . for j = 1 to n do 7 .
In matrix C , replace each entry of row j by ∞ and
In matrix W , replace each entry of row j by 0 and de
Define wj = colj(W ) and zj = colj(Z ) .
8 .
9 . denote the resulting matrix as eC(j ) . note the resulting matrix asfW(j ) . „ eZ(j ) = I − zjwT j = colj(eZ(j ) ) j ez(j ) 1 + wT j zj dj = −(eZ(j)(eC(j ) ◦fW(j))ez(j ) 14 . D =ˆ d1 d2 elementwise division . ··· dn
13 . end for
11 . 12 .
«
˜
10 .
Z j )÷ez(j ) j where ÷ is the
15 . return DRSP = ( D + DT)/2 the commute time distances for various graphs . Two examples of such correlations study are shown in Figures 1(a)–(b ) , for the graph constructed from documents belonging to five newsgroups ( a ; for details about the dataset and the graph construction , see [ 55 ] ) and for the IMDb graph ( b ; described in [ 56] ) . Notice that various other graphs were analyzed as well ( Zachary karate club , dolphins network , Florentine families , netscience co authorship network , etc ) ; the results and conclusions were similar but are not reported here . From Figures 1(a)–(b ) , we clearly observe that the RSP dissimilarity is highly correlated with the commute time distance when θ → 0 and with the shortest path distance when θ → ∞ ( actually , it is already met when θ = 15 ) . We also observe that for intermediate values of θ , the RSP dissimilarity still remains correlated with both the shortest path and the commute time distances . However , in a range of θ values of about [ 10−3 , 1 ] , the correlation of the RSP dissimilarity with the shortest path distance , and more obviously with the commute time distance , tend to stagnate and even eventually decrease . This somewhat counter intuitive behavior could be explained by the fact that some high probability paths promoted by the shortest path and the commute time policy could be conflicting , which results in a decrease in correlation .
Second experiment . This second experiment aims to compare the clustering results obtained on a graph nodes clustering task , for various values of θ . In this experiment , we used exactly the same methodology and datasets as in [ 56 ] . In summary , a kernel k means is performed on various graphs in order to retrieve the clusters , as detailed in [ 55 , 56 ] . Due to the lack of space , only the results on a newsgroup as well as on the IMDb datasets will be presented in this paper . To this aim , a kernel on a graph is derived from the RSP dis2 HDRSPH , where H = I − eeT/n similarity matrix , KRSP = − 1
( a )
( c )
( e )
( b )
( d )
( f )
Figure 1 : ( a) (b ) Linear correlation between the RSP dissimilarity , the commute time distance and the shortest path distance , obtained on the Newsgroup ( left ) and the IMDb ( right ) datasets , for 0 < θ ≤ 20 . ( c) (d ) Correct clustering rates ( averaged on 20 runs ) obtained by the RSP kernel k means and the sigmoid RSP kernel k means , for the Newsgroup ( left ) and the IMDb ( right ) datasets , in function of 0 < θ ≤ 20 . ( e) (f ) Linear correlation between RSP , Freeman ’s and Newman ’s betweenness measures , obtained on the Dolphins ( left ) and the Netscience ( right ) datasets , for 0 < θ ≤ 20 . .
10−610−510−410−310−210−110010100102030405060708091thetacorrelation ratenewsgroupcommute timeshortest path10−610−510−410−310−210−110010100102030405060708091thetacorrelation rateimdbcommute timeshortest path10−610−510−410−310−210−11001010808108208308408508608708808909thetaclustering ratenewsgroupRSP kernelsigmoid RSP kernel10−610−510−410−310−210−11001010707107207307407507607707807908thetaclustering rateimdbRSP kernelsigmoid RSP kernel10−610−510−410−310−210−110010108082084086088090920940960981thetabetweenness correlation ratedolphinsNewman ’s betweennessFreeman ’s betweenness10−610−510−410−310−210−110010108082084086088090920940960981thetabetweenness correlation ratenetscienceNewman ’s betweennessFreeman ’s betweenness is the centering matrix and e is a column vector full of ones . This is the standard way for obtaining a similarity from a dissimilarity [ 5 ] when the dissimilarity matrix contains square distances . Indeed , the commute time distance is the square of the Euclidean commutetime distance , which is Euclidean ( see [ 13 , 43 ] for details ) . Thus , when θ is small , the commute time kernel , the natural kernel associated to the Euclidean commute time distance – which takes the form of the pseudoinverse of the Laplacian matrix [ 13 ] – is obtained . Notice that the matrix KRSP is not necessarily semi positive definite ; for instance , the shortest path distance is not Euclidean . In Figures 1(c ) and ( d ) , the correct classification rate , averaged on 20 runs , is displayed in terms of parameter θ for the newsgroup and the IMDb datasets respectively . The results are reported for two different settings of the clustering algorithm : with and without the computation of a sigmoid transform of the kernel matrix . Indeed , it has been observed that the sigmoid transform on kernels allows to improve the performances of the clustering [ 55 , 56 ] . First , we observe that when θ → 0 , the clustering performances of the basic algorithm are poor . But the application of the sigmoid transform allows to smoothen the curve and raise the performance for small values of θ to a competitive clustering rate . Second , we observe that the best results are obtained for an intermediate value of θ , where the dissimilarity need not to be a distance and thus KRSP is not actually a valid kernel matrix . The results obtained for intermediate values of θ are usually better or comparable to those obtained with the commute time ( θ → 0 ) and the shortest path ( θ → ∞ ) kernels . Finally , it can be observed that the kernel associated to the shortest path distance also offers good performances , despite the fact that the distance is not Euclidean , which was unexpected . Tests on various other datasets show that the value of θ for which the clustering rate is the highest strongly depends on the properties and the structure of the graph . But , in general , the best performances are obtained for θ ∈ [ 10−3 , 1 ] .
Third experiment . The last experiment aims to compare the RSP betweenness ( see the end of Section 3 ) , computed for various values of θ , with the well known Freeman ’s [ 53 ] betweenness as well as with Newman ’s [ 32 ] betweenness . The linear correlation between the RSP betweenness and Freeman ’s + Newman ’s betweenness are reported in Figure 1(e)–(f ) for two datasets , the dolphins graph and the netscience co authorship network . The same test has been performed on various other networks , with comparable results . By examining the figures , we observe that the correlations vary smoothly when θ varies in the range ]0 , 20 ] . Moreover , it is clear that the RSP betweenness comprises both Freeman ’s and Newman ’s betweenness . However , since the results of the three betweenness measures remain highly correlated , the added value of our RSP betweenness is somewhat questionable in this context .
Discussion of the results . Let us now come back to our research questions . The experiments clearly show that the symmetric RSP dissimilarity behaves as expected , although the fact that the correlation between the RSP dissimilarity and the commute time distance is not always monotonically decreasing when θ increases is somewhat counter intuitive and deserves further investigations . It also appears that the parameter θ influences significantly the results and could be considered as a meta parameter to be tuned . For instance , the clustering benefit from the tuning of θ . However , this is less clear for the RSP betweenness centrality measure , for which the betweenness based on the shortest path and the betweenness based on the natural random walk are already highly correlated .
5 . CONCLUSIONS
This work introduced a new family of dissimilarity measures between the nodes of a weighted , directed , graph that generalizes both the shortest path and the commute time distances . It depends on a meta parameter , θ , biasing gradually the simple random walk on the network towards the shortest path policy . Simple experiments involving graph mining tasks showed that performances could be improved by tuning the meta parameter θ .
In future work , comparisons between this dissimilarity measure and other popular choices , mentioned in the related work , will be performed on collaborative recommendation and semi supervised classification tasks . We will also try to tackle Markov decision processes through the sum over paths statistical physics framework . Still another application of this formalism results in the definition of a correlation measure between nodes of the graph . Indeed , the second order derivative of the partition function with respect to the immediate costs provides a covariance measure between nodes . In short , two nodes are correlated if they often occur in the same path . Finally , links between the proposed sum over paths framework and the matrix forest theorem will be investigated as well .
6 . REFERENCES [ 1 ] T . Akamatsu . Cyclic flows , markov process and stochastic traffic assignment . Transportation Research B , 30(5):369–386 , 1996 .
[ 2 ] R . B . Bapat . Resistance distance in graphs . The Mathematics Student ,
68:87–98 , 1999 .
[ 3 ] D . P . Bertsekas . Dynamic Programming and Optimal Control .
Athena Scientific , 2000 .
[ 4 ] V . D . Blondel and P . V . Dooren . A measure of similarity between graph vertices , with application to synonym extraction and web searching . SIAM Review , 46(4):647–666 , 2004 .
[ 5 ] I . Borg and P . Groenen . Modern multidimensional scaling : Theory and applications . Springer , 1997 .
[ 6 ] M . Brand . A random walks perspective on maximizing satisfaction and profit . Proceedings of the 2005 SIAM International Conference on Data Mining , 2005 .
[ 7 ] S . Brin and L . Page . The anatomy of a large scale hypertextual Web search engine . Computer Networks and ISDN Systems , 30(1–7):107–117 , 1998 .
[ 8 ] A . K . Chandra , P . Raghavan , W . L . Ruzzo , R . Smolensky , and
P . Tiwari . The electrical resistance of a graph captures its commute and cover times . Annual ACM Symposium on Theory of Computing , pages 574–586 , 1989 .
[ 9 ] P . Chebotarev and E . Shamis . The matrix forest theorem and measuring relations in small social groups . Automation and Remote Control , 58(9):1505–1514 , 1997 .
[ 10 ] P . Chebotarev and E . Shamis . On proximity measures for graph vertices . Automation and Remote Control , 59(10):1443–1459 , 1998 .
[ 11 ] D . J . Cook and L . B . Holder . Mining graph data . Wiley and Sons ,
2006 .
[ 12 ] W . de Nooy , A . Mrvar , and V . Batagelj . Exploratory Social Network
Analysis with Pajek . Cambridge University Press , 2005 .
[ 13 ] F . Fouss , A . Pirotte , J M Renders , and M . Saerens . Random walk computation of similarities between nodes of a graph , with application to collaborative recommendation . IEEE Transactions on Knowledge and Data Engineering , 19(3):355–369 , 2007 .
[ 14 ] F . Fouss , L . Yen , A . Pirotte , and M . Saerens . An experimental investigation of graph kernels on a collaborative recommendation task . Proceedings of the 6th International Conference on Data Mining ( ICDM 2006 ) , pages 863–868 , 2006 .
[ 15 ] G . H . Golub and C . F . V . Loan . Matrix Computations , 3th Ed . The
Johns Hopkins University Press , 1996 .
[ 16 ] M . Gori and A . Pucci . A random walk based scoring algorithm with application to recommender systems for large scale e commerce . Proceedings of the 12th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining , 2006 .
[ 17 ] J . Ham , D . Lee , S . Mika , and B . Scholkopf . A kernel view of the dimensionality reduction of manifolds . Proceedings of the 21st
International Conference on Machine Learning ( ICML2004 ) , pages 369–376 , 2004 .
[ 18 ] D . Harel and Y . Koren . On clustering using random walks .
Proceedings of the conference on the Foundations of Software Technology and Theoretical Computer Science ; Lecture Notes in Computer Science , 2245:18–41 , 2001 .
[ 19 ] T . Ito , M . Shimbo , T . Kudo , and Y . Matsumoto . Application of kernels to link analysis . Proceedings of the eleventh ACM SIGKDD International Conference on Knowledge Discovery and Data Mining , pages 586–592 , 2005 .
[ 20 ] E . T . Jaynes . Information theory and statistical mechanics . Physical
Review , 106:620–630 , 1957 .
[ 21 ] J . Kandola , N . Cristianini , and J . Shawe Taylor . Learning semantic similarity . Advances in Neural Information Processing Systems ( NIPS ) 15 , pages 657–664 , 2002 .
[ 22 ] M . M . Kessler . Bibliographic coupling between scientific papers .
American Documentation , 14(1):10–25 , 1963 .
[ 23 ] D . J . Klein and M . Randic . Resistance distance . Journal of
Mathematical Chemistry , 12:81–95 , 1993 .
[ 24 ] R . I . Kondor and J . Lafferty . Diffusion kernels on graphs and other discrete structures . Proceedings of the 19th International Conference on Machine Learning , pages 315–322 , 2002 .
[ 25 ] Y . Koren , S . North , and C . Volinsky . Measuring and extracting proximity in networks . Proceedings of the SIGKDD International Conference on Knowledge Discovery and Data Mining , pages 245–255 , 2006 .
[ 26 ] S . Lafon and A . B . Lee . Diffusion maps and coarse graining : A unified framework for dimensionality reduction , graph partitioning , and data set parameterization . IEEE Transactions on Pattern Analysis and Machine Intelligence , 28(9):1393–1403 , 2006 .
[ 27 ] A . N . Langville and C . D . Meyer . Google ’s PageRank and Beyond : The Science of Search Engine Rankings . Princeton University Press , 2006 .
[ 28 ] D . Liben Nowell and J . Kleinberg . The link prediction problem for social networks . Journal of the American Society for Information Science and Technology , 58(7):1019–1031 , 2007 .
[ 29 ] W . Lu , J . Janssen , E . Milos , N . Japkowicz , and Y . Zhang . Node similarity in the citation graph . Knowledge and Information Systems , 11(1):105–129 , 2006 .
[ 30 ] B . Nadler , S . Lafon , R . Coifman , and I . Kevrekidis . Diffusion maps , spectral clustering and eigenfunctions of fokker planck operators . Advances in Neural Information Processing Systems ( NIPS ) 18 , pages 955–962 , 2005 .
[ 31 ] B . Nadler , S . Lafon , R . Coifman , and I . Kevrekidis . Diffusion maps , spectral clustering and reaction coordinate of dynamical systems . Applied and Computational Harmonic Analysis , 21:113–127 , 2006 . [ 32 ] M . Newman . A measure of betweenness centrality based on random walks . Social Networks , 27 ( 1):39–54 , 2005 .
[ 33 ] M . Newman . The structure and dynamics of networks . Princeton
University Press , 2006 .
[ 34 ] L . Page , S . Brin , R . Motwani , and T . Winograd . The pagerank citation ranking : Bringing order to the web . Technical Report 1999 0120 , Computer Science Department , Stanford University , 1999 .
[ 35 ] C . Palmer and C . Faloutsos . Electricity based external similarity of categorical attributes . Proceedings of the 7th Pacific Asia Conference on Knowledge Discovery and Data Mining ( PAKDD’03 ) , pages 486–500 , 2003 .
[ 36 ] J Y Pan , H J Yang , C . Faloutsos , and P . Duygulu . Automatic multimedia cross modal correlation discovery . Proceedings of the 10th ACM SIGKDD international conference on Knowledge Discovery and Data Mining , pages 653–658 , 2004 .
[ 37 ] P . Pons and M . Latapy . Computing communities in large networks using random walks . Proceedings of the International Symposium on Computer and Information Sciences ( ISCIS2005 ) . Lecture Notes in Computer Science , Springer Verlag , 3733:284–293 , 2005 .
[ 38 ] P . Pons and M . Latapy . Computing communities in large networks using random walks . Journal of Graph Algorithms and Applications , 10(2):191–218 , 2006 .
[ 39 ] H . Qiu and E . R . Hancock . Image segmentation using commute times . Proceedings of the 16th British Machine Vision Conference
( BMVC 2005 ) , pages 929–938 , 2005 .
[ 40 ] H . Qiu and E . R . Hancock . Clustering and embedding using commute times . IEEE Transactions on Pattern Analysis and Machine Intelligence , 2007 .
[ 41 ] L . Reichl . A modern course in statistical physics , 2nd ed . Wiley ,
1998 .
[ 42 ] M . Saerens , Y . Achbany , F . Fouss , and L . Yen . Randomized shortest path problems : Two seemingly unrelated problems . Manuscript submitted for publication , 2007 .
[ 43 ] M . Saerens , F . Fouss , L . Yen , and P . Dupont . The principal components analysis of a graph , and its relationships to spectral clustering . Proceedings of the 15th European Conference on Machine Learning ( ECML 2004 ) . Lecture Notes in Artificial Intelligence , vol . 3201 , Springer Verlag , Berlin , pages 371–383 , 2004 .
[ 44 ] P . Sarkar and A . Moore . A tractable approach to finding closest truncated commute time neighbors in large graphs . Proceedings of the 23rd Conference on Uncertainty in Artificial Intelligence ( UAI ) , 2007 .
[ 45 ] E . Schrodinger . Statistical thermodynamics , 2nd ed . Cambridge
University Press , 1952 .
[ 46 ] J . Shawe Taylor and N . Cristianini . Kernel Methods for Pattern
Analysis . Cambridge University Press , 2004 .
[ 47 ] M . Shimbo and T . Ito . Kernels as link analysis measures . In Mining Graph Data , D . Cook and L . Holder ( editors ) . John Wiley & Sons , pages 283–310 , 2006 .
[ 48 ] H . Small . Co citation in the scientific literature : a new measure of the relationship between two documents . Journal of the American Society for Information Science , 24(4):265–269 , 1973 .
[ 49 ] A . J . Smola and R . Kondor . Kernels and regularization on graphs . In
M . Warmuth and B . Schölkopf , editors , Proceedings of the Conference on Learning Theory ( COLT ) , pages 144–158 , 2003 .
[ 50 ] A . Tahbaz and A . Jadbabaie . A one parameter family of distributed consensus algorithms with boundary : from shortest paths to mean hitting times . In Proceedings of IEEE Conference on Decision and Control , pages 4664–4669 , 2006 .
[ 51 ] H . Tong , C . Faloutsos , and J Y Pan . Random walk with restart : fast solutions and applications . To appear in Knowledge and Information Systems , 2007 .
[ 52 ] H . Tong , Y . Koren , and C . Faloutsos . Fast direction aware proximity for graph mining . Proceedings of the ACM SIGKDD international conference on Knowledge Discovery and Data Mining ( KDD ) , pages 747–756 .
[ 53 ] S . Wasserman and K . Faust . Social Network Analysis : Methods and
Applications . Cambridge University Press , 1994 .
[ 54 ] S . White and P . Smyth . Algorithms for estimating relative importance in networks . Proceedings of the ninth ACM SIGKDD International Conference on Knowledge Discovery and Data mining , pages 266–275 , 2003 .
[ 55 ] L . Yen , F . Fouss , C . Decaestecker , P . Francq , and M . Saerens . Graph nodes clustering based on the commute time kernel . In Proceedings of the 11th Pacific Asia Conference on Knowledge Discovery and Data Mining ( PAKDD 2007 ) . Lecture notes in Computer Science , volume LNAI4426 , pages 1037–1045 , 2007 .
[ 56 ] L . Yen , F . Fouss , C . Decaestecker , P . Francq , and M . Saerens .
Link based community detection based on the sigmoid commute time kernel . Manuscript submitted for publication , 2008 .
[ 57 ] L . Yen , D . Vanvyve , F . Wouters , F . Fouss , M . Verleysen , and
M . Saerens . Clustering using a random walk based distance measure . In Proceedings of the 13th European Symposium on Artificial Neural Networks ( ESANN2005 ) , pages 317–324 , 2005 .
[ 58 ] D . Zhou and B . Scholkopf . Learning from labeled and unlabeled data using random walks . Proceedings of the 26th DAGM Symposium , ( Eds . ) Rasmussen , pages 237–244 , 2004 .
[ 59 ] H . Zhou . Distance , dissimilarity index , and network community structure . Physical Review E , 67(061901 ) , 2003 .
[ 60 ] H . Zhou . Network landscape from a brownian particle perspective .
Physical Review E , 67(041908 ) , 2003 .
[ 61 ] X . Zhu , J . Kandola , J . Lafferty , and Z . Ghahramani . Graph kernels by spectral transforms . In Semi supervised learning , O . Chapelle , B . Scholkopf and A . Zien ( editors ) , pages 277–291 . MIT Press , 2006 .
