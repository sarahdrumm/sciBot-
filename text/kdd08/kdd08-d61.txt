Get Another Label ? Improving Data Quality and Data Mining
Using Multiple , Noisy Labelers
Victor S . Sheng ssheng@sternnyuedu
Foster Provost fprovost@sternnyuedu
Panagiotis G . Ipeirotis panos@sternnyuedu
Department of Information , Operations , and Management Sciences
Leonard N . Stern School of Business , New York University
ABSTRACT This paper addresses the repeated acquisition of labels for data items when the labeling is imperfect . We examine the improvement ( or lack thereof ) in data quality via repeated labeling , and focus especially on the improvement of training labels for supervised induction . With the outsourcing of small tasks becoming easier , for example via Rent A Coder or Amazon ’s Mechanical Turk , it often is possible to obtain less than expert labeling at low cost . With low cost labeling , preparing the unlabeled part of the data can become considerably more expensive than labeling . We present repeated labeling strategies of increasing complexity , and show several main results . ( i ) Repeated labeling can improve label quality and model quality , but not always . ( ii ) When labels are noisy , repeated labeling can be preferable to single labeling even in the traditional setting where labels are not particularly cheap . ( iii ) As soon as the cost of processing the unlabeled data is not free , even the simple strategy of labeling everything multiple times can give considerable advantage . ( iv ) Repeatedly labeling a carefully chosen set of points is generally preferable , and we present a robust technique that combines different notions of uncertainty to select data points for which quality should be improved . The bottom line : the results show clearly that when labeling is not perfect , selective acquisition of multiple labels is a strategy that data miners should have in their repertoire ; for certain label quality/cost regimes , the benefit is substantial .
Categories and Subject Descriptors H28 [ Database Applications ] : Data mining ; I52 [ Design Methodology ] : Classifier design and evaluation
General Terms Algorithms , Design , Experimentation , Management , Measurement , Performance
Keywords data selection , data preprocessing
1 .
INTRODUCTION
There are various costs associated with the preprocessing stage of the KDD process , including costs of acquiring features , formulating data , cleaning data , obtaining expert labeling of data , and so on [ 31 , 32 ] . For example , in order to build a model to recognize whether two products described on two web pages are the same , one must extract the product information from the pages , formulate features for comparing the two along relevant dimensions , and label product pairs as identical or not ; this process involves costly manual intervention at several points . To build a model that recognizes whether an image contains an object of interest , one first needs to take pictures in appropriate contexts , sometimes at substantial cost .
This paper focuses on problems where it is possible to obtain certain ( noisy ) data values ( “ labels ” ) relatively cheaply , from multiple sources ( “ labelers ” ) . A main focus of this paper is the use of these values as training labels for supervised modeling.1 For our two examples above , once we have constructed the unlabeled example , for relatively low cost one can obtain non expert opinions on whether two products are the same or whether an image contains a person or a storefront or a building . These cheap labels may be noisy due to lack of expertise , dedication , interest , or other factors . Our ability to perform non expert labeling cheaply and easily is facilitated by on line outsourcing systems such as Rent A Coder2 and Amazon ’s Mechanical Turk,3 which match workers with arbitrary ( well defined ) tasks , as well as by creative labeling solutions like the ESP game.4
In the face of noisy labeling , as the ratio increases between the cost of preprocessing a data point and the cost of labeling it , it is natural to consider repeated labeling : obtaining multiple labels for some or all data points . This paper explores whether , when , and for which data points one should obtain multiple , noisy training labels , as well as what to do with them once they have been obtained .
Figure 1 shows learning curves under different labeling qualities for the mushroom data set ( see Section 41 ) Specifically , for the different quality levels of the training data,5 the figure shows learning curves relating the classification accuracy of a Weka J48 model [ 34 ] to the number of training data . This data set is illustrative because with zero noise labels one can achieve perfect classification after some training , as demonstrated by the q = 1.0 curve .
Figure 1 illustrates that the performance of a learned model
This setting is in direct contrast to the setting motivating active learning and semi supervised learning , where unlabeled points are relatively inexpensive , but labeling is expensive . 2 http://wwwrentacodercom
1
3
4
5 http://wwwmturkcom http://wwwespgameorg The test set has perfect quality with zero noise .
614 100 y c a r u c c A
90
80
70
60
50
40
1 q=1.0 q=0.9 q=0.8 q=0.7 q=0.6 q=0.5
80
40 Number of examples ( Mushroom )
120 160
200
240 280
Figure 1 : Learning curves under different quality levels of training data ( q is the probability of a label being correct ) . depends both on the quality of the training labels and on the number of training examples . Of course if the training labels are uninformative ( q = 0.5 ) , no amount of training data helps . As expected , under the same labeling quality , more training examples lead to better performance , and the higher the quality of the training data , the better the performance of the learned model . However , the relationship between the two factors is complex : the marginal increase in performance for a given change along each dimension is quite different for different combinations of values for both dimensions . To this , one must overlay the different costs of acquiring only new labels versus whole new examples , as well as the expected improvement in quality when acquiring multiple new labels . This paper makes several contributions . First , under gradually weakening assumptions , we assess the impact of repeatedlabeling on the quality of the resultant labels , as a function of the number and the individual qualities of the labelers . We derive analytically the conditions under which repeatedlabeling will be more or less effective in improving resultant label quality . We then consider the effect of repeated labeling on the accuracy of supervised modeling . As demonstrated in Figure 1 , the relative advantage of increasing the quality of labeling , as compared to acquiring new data points , depends on the position on the learning curves . We show that even if we ignore the cost of obtaining the unlabeled part of a data point , there are times when repeated labeling is preferable compared to getting labels for unlabeled examples . Furthermore , when we do consider the cost of obtaining the unlabeled portion , repeated labeling can give considerable advantage .
We present a comprehensive experimental analysis of the relationships between quality , cost , and technique for repeatedlabeling . The results show that even a straightforward , roundrobin technique for repeated labeling can give substantial benefit over single labeling . We then show that selectively choosing the examples to label repeatedly yields substantial extra benefit . A key question is : How should we select data points for repeated labeling ? We present two techniques based on different types of information , each of which improves over round robin repeated labeling . Then we show that a technique that combines the two types of information is even better .
Although this paper covers a good deal of ground , there is much left to be done to understand how best to label using multiple , noisy labelers ; so , the paper closes with a summary of the key limitations , and some suggestions for future work .
2 . RELATED WORK
Repeatedly labeling the same data point is practiced in applications where labeling is not perfect ( eg , [ 27 , 28] ) . We are not aware of a systematic assessment of the relationship between the resultant quality of supervised modeling and the number of , quality of , and method of selection of data points for repeated labeling . To our knowledge , the typi cal strategy used in practice is what we call “ round robin ” repeated labeling , where cases are given a fixed number of labels—so we focus considerable attention in the paper to this strategy . A related important problem is how in practice to assess the generalization performance of a learned model with uncertain labels [ 28 ] , which we do not consider in this paper . Prior research has addressed important problems necessary for a full labeling solution that uses multiple noisy labelers , such as estimating the quality of labelers [ 6 , 26 , 28 ] , and learning with uncertain labels [ 13 , 24 , 25 ] . So we treat these topics quickly when they arise , and lean on the prior work .
Repeated labeling using multiple noisy labelers is different from multiple label classification [ 3 , 15 ] , where one example could have multiple correct class labels . As we discuss in Section 5 , repeated labeling can apply regardless of the number of true class labels . The key difference is whether the labels are noisy . A closely related problem setting is described by Jin and Ghahramani [ 10 ] . In their variant of the multiple label classification problem , each example presents itself with a set mutually exclusive labels , one of which is correct . The setting for repeated labeling has important differences : labels are acquired ( at a cost ) ; the same label may appear many times , and the true label may not appear at all . Again , the level of error in labeling is a key factor .
The consideration of data acquisition costs has seen increasing research attention , both explicitly ( eg , cost sensitive learning [ 31 ] , utility based data mining [ 19 ] ) and implicitly , as in the case of active learning [ 5 ] . Turney [ 31 ] provides a short but comprehensive survey of the different sorts of costs that should be considered , including data acquisition costs and labeling costs . Most previous work on cost sensitive learning does not consider labeling cost , assuming that a fixed set of labeled training examples is given , and that the learner cannot acquire additional information during learning ( eg , [ 7 , 8 , 30] ) . Active learning [ 5 ] focuses on the problem of costly label acquisition , although often the cost is not made explicit . Active learning ( cf . , optimal experimental design [ 33 ] ) uses the existing model to help select additional data for which to acquire labels [ 1 , 14 , 23 ] . The usual problem setting for active learning is in direct contrast to the setting we consider for repeated labeling . For active learning , the assumption is that the cost of labeling is considerably higher than the cost of obtaining unlabeled examples ( essentially zero for “ pool based ” active learning ) .
Some previous work studies data acquisition cost explicitly . For example , several authors [ 11 , 12 , 16 , 17 , 22 , 32 , 37 ] study the costly acquisition of feature information , assuming that the labels are known in advance . Saar Tsechansky et al . [ 22 ] consider acquiring both costly feature and label information . None of this prior work considers selectively obtaining multiple labels for data points to improve labeling quality , and the relative advantages and disadvantages for improving model performance . An important difference from the setting for traditional active learning is that labeling strategies that use multiple noisy labelers have access to potentially relevant additional information . The multisets of existing labels intuitively should play a role in determining the examples for which to acquire additional labels . For example , presumably one would be less interested in getting another label for an example that already has a dozen identical labels , than for one with just two , conflicting labels .
3 . REPEATED LABELING : THE BASICS
Figure 1 illustrates that the quality of the labels can have a marked effect on classification accuracy . Intuitively , using repeated labeling to shift from a lower q curve to a higher q curve can , under some settings , improve learning considerably . In order to treat this more formally , we first introduce some terminology and simplifying assumptions . 3.1 Notation and Assumptions
We consider a problem of supervised induction of a ( binary ) classification model . The setting is the typical one , with some important exceptions . For each training example .yi , xifi , procuring the unlabeled “ feature ” portion , xi , incurs cost CU . The action of labeling the training example with a label yi incurs cost CL . For simplicity , we assume that each cost is constant across all examples . Each example .yi , xifi has a true label yi , but labeling is error prone . Specifically , each label yij comes from a labeler j exhibiting an individual labeling quality pj , which is P r(yij = yi ) ; since we consider the case of binary classification , the label assigned by labeler j will be incorrect with probability 1 − pj .
In the current paper , we work under a set of assumptions that allow us to focus on a certain set of problems that arise when labeling using multiple noisy labelers . First , we assume that P r(yij = yi|xi ) = P r(yij = yi ) = pj , that is , individual labeling quality is independent of the specific data point being labeled . We sidestep the issue of knowing pj : the techniques we present do not rely on this knowledge . Inferring pj accurately should lead to improved techniques ; Dawid and Skene [ 6 ] and Smyth et al . [ 26 , 28 ] have shown how to use an expectationmaximization framework for estimating the quality of labelers when all labelers label all available examples . It seems likely that this work can be adapted to work in a more general setting , and applied to repeated labeling . We also assume for simplicity that each labeler j only gives one label , but that is not a restrictive assumption in what follows . We further discuss limitations and directions for future research in Section 5 . 3.2 Majority Voting and Label Quality
To investigate the relationship between labeler quality , number of labels , and the overall quality of labeling using multiple labelers , we start by considering the case where for induction each repeatedly labeled example is assigned a single “ integrated ” label ˆyi , inferred from the individual yij ’s by majority voting . For simplicity , and to avoid having to break ties , we assume that we always obtain an odd number of labels . The quality qi = P r( ˆyi = yi ) of the integrated label ˆyi will be called the integrated quality . Where no confusion will arise , we will omit the subscript i for brevity and clarity .
321 Uniform Labeler Quality We first consider the case where all labelers exhibit the same quality , that is , pj = p for all j ( we will relax this assumption later ) . Using 2N + 1 labelers with uniform quality p , the integrated labeling quality q is :
' fi
N . i=0 q = P r(ˆy = y ) =
2N + 1 i
· p2N +1−i · ( 1 − p)i
( 1 ) which is the sum of the probabilities that we have more correct labels than incorrect ( the index i corresponds to the number of incorrect labels ) .
Not surprisingly , from the formula above , we can infer that the integrated quality q is greater than p only when p > 05 When p < 0.5 , we have an adversarial setting where q < p , and , not surprisingly , the quality decreases as we increase the number of labelers .
Figure 2 demonstrates the analytical relationship between y t i l a u q d e t a r g e t n
I
1 0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 p=1.0 p=0.9 p=0.8 p=0.7 p=0.6 p=0.5 p=0.4
1
3
5
7
9
11
13
Number of labelers
Figure 2 : The relationship between integrated labeling quality , individual quality , and the number of labelers .
0.3 0.25 0.2 0.15 0.1 0.05 0 0.05 0.1 0.15 0.2 t n e m e v o r p m i y t i l a u Q p=1.0 p=0.9 p=0.8 p=0.7 p=0.6 p=0.5 p=0.4
3
5 7 9 11 13
Number of labelers
Figure 3 : Improvement in integrated quality compared to single labeling , as a function of the number of labelers , for different labeler qualities . the integrated quality and the number of labelers , for different individual labeler qualities . As expected , the integrated quality improves with larger numbers of labelers , when the individual labeling quality p > 0.5 ; however , the marginal improvement decreases as the number of labelers increases . Moreover , the benefit of getting more labelers also depends on the underlying value of p . Figure 3 shows how integrated quality q increases compared to the case of single labeling , for different values of p and for different numbers of labelers . For example , when p = 0.9 , there is little benefit when the number of labelers increase from 3 to 11 . However , when p = 0.7 , going just from single labeling to three labelers increases integrated quality by about 0.1 , which in Figure 1 would yield a substantial upward shift in the learning curve ( from the q = 0.7 to the q = 0.8 curve ) ; in short , a small amount of repeated labeling can have a noticeable effect for moderate levels of noise .
Therefore , for cost effective labeling using multiple noisy labelers we need to consider : ( a ) the effect of the integrated quality q on learning , and ( b ) the number of labelers required to increase q under different levels of labeler quality p ; we will return to this later , in Section 4 .
322 Different Labeler Quality If we relax the assumption that pj = p for all j , and allow labelers to have different qualities , a new question arises : what is preferable : using multiple labelers or using the best individual labeler ? A full analysis is beyond the scope ( and space limit ) of this paper , but let us consider the special case that we have a group of three labelers , where the middle labeling quality is p , the lowest one is p − d , and the highest one is p + d . In this case , the integrated quality q is :
( p − d ) · p · ( p + d ) + ( p − d ) · p · ( 1 − ( p + d))+ ( p − d ) · ( 1 − p ) · ( p + d ) + ( 1 − ( p − d ) ) · p · ( p + d ) = + 3p2 − d2
−2p3
+ 2pd2 d m u m i x a M
0.5 0.45 0.4 0.35 0.3 0.25 0.2 0.15 0.1 0.05 0
0.5
0.6
0.7
0.8
Individual labeling quality p
0.9
1
Figure 4 : Repeated labeling improves quality when d is below the curve ( see text ) .
When is this quantity greater than that of the best labeler p + d ? We omit the derivation for brevity , but Figure 4 plots the values of d that satisfy this relationship . If d is below the curve , using multiple labelers improves quality ; otherwise , it is preferable to use the single highest quality labeler . 3.3 Uncertainty preserving Labeling
Majority voting is a simple and straightforward method for integrating the information from multiple labels , but clearly with its simplicity comes a potentially serious drawback : information is lost about label uncertainty . In principle , an alternative is to move to some form of “ soft ” labeling , with the multiset of labels resulting in a probabilistic label for an example [ 25 ] . One concern with soft labeling is that even in cases where , in principle , modeling techniques should be able to incorporate soft labeling directly ( which would be true for techniques such as naive Bayes , logistic regression , tree induction , and beyond ) , existing software packages do not accommodate soft labels . Fortunately , we can finesse this .
Consider the following straightforward method for integrating labels . For each unlabeled example xi , the multiplied examples ( ME ) procedure considers the multiset of existing labels Li = {yij} . ME creates one replica of xi labeled by each unique label appearing in Li . Then , for each replica , ME assigns a weight 1/|Li| , where |Li| is the number of occurrences of this label in Li . These weighted replicas can be used in different ways by different learning algorithms , eg , in algorithms that take weights directly ( such as cost sensitive tree [ 29] ) , or in techniques like naive Bayes that naturally incorporate uncertain labels . Moreover , any importance weighted classification problem can be reduced to a uniform weighted classification problem [ 35 ] , often performing better than handcrafted weighted classification algorithms .
4 . REPEATED LABELING AND MODELING The previous section examined when repeated labeling can improve quality . We now consider when repeated labeling should be chosen for modeling . What is the relationship to label quality ? ( Since we see that for p = 1.0 and p = 0.5 , repeated labeling adds no value . ) How cheap ( relatively speaking ) does labeling have to be ? For a given cost setting , is repeated labeling much better or only marginally better ? Can selectively choosing data points to label improve performance ? 4.1 Experimental Setup
Practically speaking , the answers to these questions rely on the conditional distributions being modeled , and so we shift to an empirical analysis based on experiments with benchmark data sets .
To investigate the questions above , we present experiments on 12 real world datasets from [ 2 ] and [ 36 ] . These datasets were chosen because they are classification problems with a moderate number of examples , allowing the development of
Data Set #Attributes #Examples Pos Neg bmg expedia kr vs kp mushroom qvc sick spambase splice thyroid tic tac toe travelocity waveform
41 41 37 22 41 30 58 61 30 10 42 41
2417 3125 3196 8124 2152 3772 4601 3190 3772 958 8598 5000
547 417 1669 4208 386 231 1813 1535 291 332 1842 1692
1840 2708 1527 3916 1766 3541 2788 1655 3481 626 6756 3308
Table 1 : The 12 datasets used in the experiments : the numbers of attributes and examples in each , and the split into positive and negative examples . learning curves based on a large numbers of individual experiments . The datasets are described in Table 1 . If necessary , we convert the target to binary ( for thyroid we keep the negative class and integrate the other three classes into positive ; for splice , we integrate classes IE and EI ; for waveform , we integrate class 1 and 2 . )
For each dataset , 30 % of the examples are held out , in every run , as the test set from which we calculate generalization performance . The rest is the “ pool ” from which we acquire unlabeled and labeled examples . To simulate noisy label acquisition , we first hide the labels of all examples for each dataset . At the point in an experiment when a label is acquired , we generate a label according to the labeler quality p : we assign the example ’s original label with probability p and the opposite value with probability 1 − p .
After obtaining the labels , we add them to the training set to induce a classifier . For the results presented , models are induced with J48 , the implementation of C4.5 [ 21 ] in WEKA [ 34 ] . The classifier is evaluated on the test set ( with the true labels ) . Each experiment is repeated 10 times with a different random data partition , and average results are reported . 4.2 Generalized Round robin Strategies
We first study the setting where we have the choice of either : • acquiring a new training example for cost CU + CL , ( CU for the unlabeled portion , and CL for the label ) , or
• get another label for an existing example for cost CL . We assume for this section that examples are selected from the unlabeled pool at random and that repeated labeling selects examples to re label in a generalized round robin fashion : specifically , given a set L of to be labeled examples ( a subset of the entire set of examples ) the next label goes to the example in L with the fewest labels , with ties broken according to some rule ( in our case , by cycling through a fixed order ) .
421 Round robin Strategies , CU ' CL When CU ' CL , then CU + CL . CL and intuitively it may seem that the additional information on the conditional label distribution brought by an additional whole training example , even with a noisy label , would outweigh the costequivalent benefit of a single new label . However , Figure 1 suggests otherwise , especially when considered together with the quality improvements illustrated in Figure 3 .
Figure 5 shows the generalization performance of repeatedlabeling with majority vote ( MV ) compared to that of single labeling ( SL ) , as a function of the number of labels acquired y c a r u c c A
100 95 90 85 80 75 70 65 60 55 50
100
1100
2100
3100
4100
Number of labels ( mushroom , p=0.6 )
SL ML
5100
( a ) p = 0.6 , #examples = 100 , for MV 100 95 90 85 80 75 70 65 60 55 50
SL MV y c a r u c c A
50
800
1550 2300 3050 3800 4550 5300
Number of labels ( mushroom , p=0.8 )
( b ) p = 0.8 , #examples = 50 , for MV
Figure 5 : Comparing the increase in accuracy for the mushroom data set as a function of the number of labels acquired , when the cost of an unlabeled example is negligible , ie , CU = 0 . Repeated labeling with majority vote ( MV ) starts with an existing set of examples and only acquires additional labels for them , and single labeling ( SL ) acquires additional examples . Other data sets show similar results . for a fixed labeler quality . Both MV and SL start with the same number of single labeled examples . Then , MV starts acquiring additional labels only for the existing examples , while SL acquires new examples and labels them .
Generally , whether to invest in another whole training example or another label depends on the gradient of generalization performance as a function of obtaining another label or a new example . We will return to this when we discuss future work , but for illustration , Figure 5 shows scenarios for our example problem , where each strategy is preferable to the other . From Figure 1 we see that for p = 0.6 , and with 100 examples , there is a lot of headroom for repeated labeling to improve generalization performance by improving the overall labeling quality . Figure 5(a ) indeed shows that for p = 0.6 , repeated labeling does improve generalization performance ( per label ) as compared to single labeling new examples . On the other hand , for high initial quality or steep sections of the learning curve , repeated labeling may not compete with single labeling . Figure 5(b ) shows that single labeling performs better than repeated labeling when we have a fixed set of 50 training examples with labeling quality p = 08 Particularly , repeated labeling could not further improve its performance after acquiring a certain amount of labels ( cf . , the q = 1 curve in Figure 1 ) . The results for other datasets are similar to Figure 5 : under noisy labels , and with CU ' CL , round robin repeatedlabeling can perform better than single labeling when there are enough training examples , ie , after the learning curves are not so steep ( cf . , Figure 1 ) .
422 Round robin Strategies , General Costs We illustrated above that repeated labeling is a viable alter native to single labeling , even when the cost of acquiring the “ feature ” part of an example is negligible compared to the cost of label acquisition . However , as described in the introduction , often the cost of ( noisy ) label acquisition CL is low compared to the cost CU of acquiring an unlabeled example . In this case , clearly repeated labeling should be considered : using multiple labels can shift the learning curve up significantly . To compare any two strategies on equal footing , we calculate generalization performance “ per unit cost ” of acquired data ; we then compare the different strategies for combining multiple labels , under different individual labeling qualities .
We start by defining the data acquisition cost CD :
CD = CU · Tr + CL · NL
( 2 ) to be the sum of the cost of acquiring Tr unlabeled examples ( CU · Tr ) , plus the cost of acquiring the associated NL labels ( CL · NL ) . For single labeling we have NL = Tr , but for repeated labeling NL > Tr .
We extend the setting of Section 421 slightly : repeatedlabeling now acquires and labels new examples ; single labeling SL is unchanged . Repeated labeling again is generalized round robin : for each new example acquired , repeated labeling acquires a fixed number of labels k , and in this case NL = k·Tr . ( In our experiments , k = 5 . ) Thus , for round robin repeatedlabeling , in these experiments the cost setting can be described compactly by the cost ratio ρ = CU , and in this case CD = ρ · CL · Tr + k · CL · Tr , ie , CL CD ∝ ρ + k
( 3 )
We examine two versions of repeated labeling , repeated labeling with majority voting ( MV ) and uncertainty preserving repeatedlabeling ( ME ) , where we generate multiple examples with different weights to preserve the uncertainty of the label multiset as described in Section 33
Performance of different labeling strategies : Figure 6 plots the generalization accuracy of the models as a function of data acquisition cost . Here ρ = 3 , and we see very clearly that for p = 0.6 both versions of repeated labeling are preferable to single labeling . MV and ME outperform SL consistently ( on all but waveform , where MV ties with SL ) and , interestingly , the comparative performance of repeated labeling tends to increase as one spends more on labeling .
Figure 7 shows the effect of the cost ratio ρ , plotting the average improvement per unit cost of MV over SL as a function of ρ . Specifically , for each data set the vertical differences between the curves are averaged across all costs , and then these are averaged across all data sets . The figure shows that the general phenomenon illustrated in Figure 6 is not tied closely to the specific choice of ρ = 3 .
Furthermore , from the results in Figure 6 , we can see that the uncertainty preserving repeated labeling ME always performs at least as well as MV and in the majority of the cases ME outperforms MV . This is not apparent in all graphs , since Figure 6 only shows the beginning part of the learning curves for MV and ME ( because for a given cost , SL uses up training examples quicker than MV and ME ) . However , as the number of training examples increases further , then ( for p = 0.6 ) ME outperforms MV . For example , Figure 8 illustrates for the splice dataset , comparing the two techniques for a larger range of costs .
In other results ( not shown ) we see that when labeling quality is substantially higher ( eg , p = 0.8 ) , repeated labeling still is increasingly preferable to single labeling as ρ increases ; however , we no longer see an advantage for ME over MV . These results suggest that when labeler quality is low , inductive modeling often can benefit from the explicit representation
70
65
60
55
50
90 85 80 75 70 65 60 55 50
75
70 65
60 55
50
85 80 75 70 65 60 55 50 y c a r u c c A y c a r u c c A y c a r u c c A y c a r u c c A
MV ME SL
6480 y c a r u c c A
85 80 75 70 65 60 55 50
80
100 y c a r u c c A
90
80
70
60
50
6480
80
80
80
1680 Data acquisition cost ( bmg , p=0.6 )
3280
4880
1680
3280
4880
Data acquisition cost ( kr vs kp , p=0.6 )
80
880
1680
2480
3280
4080
4880
5680
Data acquisition cost ( qvc , p=0.6 )
80
100 y c a r u c c A y c a r u c c A
90
80
70
60
75
70
65
60
55
50
80
100 y c a r u c c A y c a r u c c A
90
80
70
60
70
65
60
55
50
80
80
1680
3280
4880
Data acquisition cost ( spambase , p=0.6 )
1680 Data acquisition cost ( thyroid , p=0.6 )
4880
3280
1680
3280
4880
Data acquisition cost ( travelocity , p=0.6 )
6480
80 y c a r u c c A y c a r u c c A
70 65 60 55 50 45 40
80 75 70 65 60 55 50
80
80
6480
6480
1680 Data acquisition cost ( expedia , p=0.6 )
3280
4880
1680
3280
4880
Data acquisition cost ( mushroom , p=0.6 )
1680 Data acquisition cost ( sick , p=0.6 )
4880
3280
1680 Data acquisition cost ( splice , p=0.6 )
3280
4880
880
480 2080 Data acquisition cost ( tic tac toe , p=0.6 )
1680
1280
1680
3280
4880
Data acquisition cost ( waveform , p=0.6 )
6480
6480
6480
6480
2480
6480
Figure 6 : Increase in model accuracy as a function of data acquisition cost for the 12 datasets ; ( p = 0.6 , ρ = 3 , k = 5 ) . SL is single labeling ; MV is repeatedlabeling with majority voting , and ME is uncertaintypreserving repeated labeling . of the uncertainty incorporated in the multiset of labels for each example . When labeler quality is relatively higher , this additional information apparently is superfluous , and straight majority voting is sufficient . 4.3 Selective Repeated Labeling
The final questions this paper examines are ( 1 ) whether selective allocation of labeling resources can further improve performance , and ( 2 ) if so , how should the examples be selected . For example , intuitively it would seem better to augment the label multiset {+,− , +} than to augment {+ , + , + , + , +} . 431 What Not To Do The example above suggests a straightforward procedure for selective repeated labeling : acquire additional labels for those examples where the current multiset of labels is impure . Two natural measures of purity are ( i ) the entropy of the multiset of labels , and ( ii ) how close the frequency of the majority label is to the decision threshold ( here , 05 ) These two measures rank the examples the same . Unfortunately , there is a clear problem : under noise these measures do not really measure the uncertainty in the estimation of the class label .
) L S r e v o V M
( t n e m e v o r p m i y c a r u c c A
0.12
0.1
0.08
0.06
0.04
0.02
0
1:1
2:1
3:1
Cost ratio ( ȡ )
4:1
5:1
Figure 7 : The average improvement per unit cost of repeated labeling with majority voting ( MV ) over single labeling ( SL ) .
MV ME y c a r u c c A
80
75
70
65
60
55
50
0 8
0 8 8
0 8 6 1
0 8 4 2
0 8 2 3
0 8 0 4
0 8 8 4
0 8 6 5
0 8 4 6
0 8 2 7
0 8 0 8
0 8 8 8
0 8 6 9
Data acquisition cost ( splice , p=0.6 )
0 8 4 0 1
0 8 2 1 1
0 8 0 2 1
0 8 8 2 1
Figure 8 : The learning curves of MV and ME with p = 0.6 , ρ = 3 , k = 5 , using the splice dataset . For example , {+ , + , +} is perfectly pure , but the true class is not certain ( eg , with p = 0.6 one is not 95 % confident of the true label ) . Applying a small sample shrinkage correction ( eg , Laplace ) to the probabilities is not sufficient . Figure 9 demonstrates how labeling quality increases as a function of assigned labels , using the ( Laplace corrected ) entropy based estimation of uncertainty ( ENTROPY ) . For small amounts of repeated labeling the technique does indeed select useful examples to label , but the fact that the estimates are not true estimates of uncertainty hurts the procedure in the long run—generalized round robin repeated labeling ( GRR ) from Section 4.2 outperforms the entropy based approach . This happens because most of the labeling resources are wasted , with the procedure labeling a small set of examples very many times . Note that with a high noise level , the long run label mixture will be quite impure , even though the true class of the example may be quite certain ( eg , consider the case of 600 positive labels and 400 negative labels with p = 06 ) More pure , but incorrect , label multisets are never revisited .
432 Estimating Label Uncertainty For a given multiset of labels , we compute a Bayesian estimate of the uncertainty in the class of the example . Specifically , we would like to estimate our uncertainty that the true class y of the example is the majority class ym of the multiset . Consider a Bayesian estimation of the probability that ym is incorrect . Here we do not assume that we know ( or have estimated well ) the labeler quality,6 and so we presume the prior distribution over the true label ( quality ) p(y ) to be uniform in the [ 0 , 1 ] interval . Thus , after observing Lpos positive labels and Lneg negative labels , the posterior probability p(y ) follows a Beta distribution B(Lpos + 1 , Lneg + 1 ) [ 9 ] .
We compute the level of uncertainty as the tail probability below the labeling decision threshold . Formally , the uncertainty is equal to the CDF at the decision threshold of the Beta distribution , which is given by the regularized incomplete beta xj(1 − x)α+β−1−j . function Ix(α , β ) = In our case , the decision threshold is x = 0.5 , and α = j!(α+β−1−j)!
α+β−1 j=a
( α+β−1)! ff
6
Doing so may improve the results presented below . y t i l a u q g n i l e b a L
0.95
0.9
0.85
0.8
0.75
0.7
0.65
0.6
0
400
800
1200
1600
2000
Number of labels ( waveform , p=0.6 )
ENT ROPY GRR
Figure 9 : What not to do : data quality improvement for an entropy based selective repeated labeling strategy vs . round robin repeated labeling . y t i l a u q g n i l e b a L
1 0.95 0.9 0.85 0.8 0.75 0.7 0.65 0.6
0
0.99 0.97 0.95 0.93 0.91 0.89 0.87 0.85
0 y t i l a u q g n i l e b a L
GRR LU
400
800
1200
1600
Number of labels ( waveform , p=0.6 )
( a ) p = 0.6
GRR LU
800
400 1600 Number of labels ( waveform , p=0.8 )
1200
MU LMU
2000
MU LMU
2000
( b ) p = 0.8
Figure 10 : The data quality improvement of the four strategies ( GRR , LU , MU , and LMU ) for the waveform dataset .
Lpos + 1 , β = Lneg + 1 . Thus , we set :
( 4 )
SLU = min{I0.5(Lpos , Lneg ) , 1 − I0.5(Lpos , Lneg)} We compare selective repeated labeling based on SLU to round robin repeated labeling ( GRR ) , which we showed to perform well in Section 42 To compare repeated labeling strategies , we followed the experimental procedure of Section 4.2 , with the following modification . Since we are asking whether label uncertainty can help with the selection of examples for which to obtain additional labels , each training example starts with three initial labels . Then , each repeated labeling strategy iteratively selects examples for which it acquires additional labels ( two at a time in these experiments ) .
Comparing selective repeated labeling using SLU ( call that LU ) to GRR , we observed similar patterns across all twelve data sets ; therefore we only show the results for the waveform dataset ( Figure 10 ; ignore the MU and LMU lines for now , we discuss these techniques in the next section ) , which are representative . The results indicate that LU performs substantially better than GRR , identifying the examples for which repeated labeling is more likely to improve quality . 433 Using Model Uncertainty A different perspective on the certainty of an example ’s label can be borrowed from active learning . If a predictive
Data Set GRR MU
LU LMU bmg qvc sick
62.97 80.61 expedia kr vs kp 76.75 mushroom 89.07 64.67 88.50 72.79 69.76 89.54 59.59 64.29 65.34 tic tac toe travelocity waveform splice thyroid spambase
71.90 84.72 76.71 94.17 76.12 93.72 79.52 68.16 93.59 62.87 73.94 69.88
64.82 81.72 81.25 92.56 66.88 91.06 77.04 73.23 92.12 61.96 67.18 66.36
68.93 85.01 82.55 95.52 74.54 93.75 80.69 73.06 93.97 62.91 72.31 70.24 average
73.65
78.77
76.35
79.46
Table 2 : Average accuracies of the four strategies over the 12 datasets , for p = 06 For each dataset , the best performance is in boldface and the worst in italics . model has high confidence in the label of an example , perhaps we should expend our repeated labeling resources elsewhere . • Model Uncertainty ( MU ) applies traditional active learning scoring , ignoring the current multiset of labels . Specifically , for the experiments below the modeluncertainty score is based on learning a set of models , each of which predicts the probability of class membership , yielding the uncertainty score :
SM U = 0.5 −
P r(+|x , Hi ) − 0.5 m i=1
( 5 ) where P r(+|x , Hi ) is the probability of classifying the example x into + by the learned model Hi , and m is the number of learned models . In our experiments , m = 10 , and the model set is a random forest [ 4 ] ( generated by WEKA ) . m .
1
Of course , by ignoring the label set , MU has the complementary problem to LU : even if the model is uncertain about a case , should we acquire more labels if the existing label multiset is very certain about the example ’s class ? The investment in these labels would be wasted , since they would have a small effect on either the integrated labels or the learning . • Label and Model Uncertainty ( LMU ) combines the two uncertainty scores to avoid examples where either model is certain . This is done by computing the score SLM U as the geometric average of SLU and SM U . That is :
√
SM U · SLU
SLM U =
( 6 )
Figure 10 demonstrates the improvement in data quality when using model information . We can observe that the LMU model strongly dominates all other strategies . In high noise settings ( p = 0.6 ) MU also performs well compared to GRR and LU , indicating that when noise is high , using learned models helps to focus the investment in improving quality . In settings with low noise ( p = 0.8 ) , LMU continues to dominate , but MU no longer outperforms LU and GRR .
434 Model Performance with Selective ML So , finally , let us assess whether selective repeated labeling accelerates learning ( ie , improves model generalization performance , in addition to data quality ) . Again , experiments are conducted as described above , except here we compute y c a r u c c A
80 75 70 65 60 55 50
100 90 80 70 60 50 y c a r u c c A y c a r u c c A y c a r u c c A
90
80
70
60
50
85 80 75 70 65 60
100 95 90 85 80 75 70 y c a r u c c A y c a r u c c A
80 75 70 65 60 55 50
GRR LU
MU LMU
0
200
400
800 1000 1200 1400 1600
600 Number of labels ( bmg )
0
400 y c a r u c c A
90
80
70
60
50
100
90
80
70
60 y c a r u c c A
0
400
0
200
0
400
0
400
800
1200
1600
2000
0
Number of labels ( kr vs kp )
400
600
800
1000 1200
Number of labels ( qvc )
800
1200
1600
Number of labels ( spambase )
1400
2000
800
1200
1600
2000
Number of labels ( thyroid )
0
400
0
400
0
100
100 y c a r u c c A y c a r u c c A y c a r u c c A y c a r u c c A
90
80
70
60
80 75 70 65 60 55 50
70
65
60
55
50
80 75 70 65 60 55 50
800
1200
Number of labels ( sick )
800
1200
Number of labels ( splice )
1600
2000
1600
2000
200
500 Number of labels ( tic tac toe )
300
400
600
2000
0
400
800
1200
1600
2000
0
400
Number of labels ( travelocity )
800
1200
1600
Number of labels ( waveform )
Figure 11 : Accuracy as a function of the number of labels acquired for the four selective repeated labeling strategies for the 12 datasets ( p = 06 ) generalization accuracy averaged over the held out test sets ( as described in Section 41 ) The results ( Figure 11 ) show that the improvements in data quality indeed do accelerate learning . ( We report values for p = 0.6 , a high noise setting that can occur in real life training data.7 ) Table 2 summarizes the results of the experiments , reporting accuracies averaged across the acquisition iterations for each data set , with the maximum accuracy across all the strategies highlighted in bold , the minimum accuracy italicized , and the grand averages reported at the bottom of the columns .
The results are satisfying . The two methods that incorporate label uncertainty ( LU and LMU ) are consistently better than round robin repeated labeling , achieving higher accuracy for every data set . ( Recall that in the previous section , round robin repeated labeling was shown to be substantially better than the baseline single labeling in this setting . ) The performance of model uncertainty alone ( MU ) , which can be viewed as the active learning baseline , is more variable : in three cases giving the best accuracy , but in other cases not
7
From [ 20 ] : “ No two experts , of the 5 experts surveyed , agreed upon diagnoses more than 65 % of the time . This might be evidence for the differences that exist between sites , as the experts surveyed had gained their expertise at different locations . If not , however , it raises questions about the correctness of the expert data . ” even reaching the accuracy of round robin repeated labeling . Overall , combining label and model uncertainty ( LMU ) is the best approach : in these experiments LMU always outperforms round robin repeated labeling , and as hypothesized , generally it is better than the strategies based on only one type of uncertainty ( in each case , statistically significant by a one tailed sign test at p < 0.1 or better ) .
1600
2000
800
1200
Number of labels ( expedia )
400
800
1200
1600
Number of labels ( mushroom )
2000
5 . CONCLUSIONS , LIMITATIONS , AND
FUTURE WORK
Repeated labeling is a tool that should be considered whenever labeling might be noisy , but can be repeated . We showed that under a wide range of conditions , it can improve both the quality of the labeled data directly , and the quality of the models learned from the data . In particular , selective repeated labeling seems to be preferable , taking into account both labeling uncertainty and model uncertainty . Also , when quality is low , preserving the uncertainty in the label multisets for learning [ 25 ] can give considerable added value .
Our focus in this paper has been on improving data quality for supervised learning ; however , the results have implications for data mining generally . We showed that selective repeated labeling improves the data quality directly and substantially . Presumably , this could be helpful for many data mining applications .
This paper makes important assumptions that should be visited in future work , in order for us to understand practical repeated labeling and realize its full benefits . • For most of the work we assumed that all the labelers have the same quality p and that we do not know p . As we showed briefly in Section 322 , differing qualities complicates the picture . On the other hand , good estimates of individual labelers’ qualities inferred by observing the assigned labels [ 6 , 26 , 28 ] could allow more sophisticated selective repeated labeling strategies . • Intuitively , we might also expect that labelers would exhibit higher quality in exchange for a higher payment . It would be interesting to observe empirically how individual labeler quality varies as we vary CU and CL , and to build models that dynamically increase or decrease the amounts paid to the labelers , depending on the quality requirements of the task . Morrison and Cohen [ 18 ] determine the optimal amount to pay for noisy information in a decision making context , where the amount paid affects the level of noise . • In our experiments , we introduced noise to existing , benchmark datasets . Future experiments , that use real labelers ( eg , using Mechanical Turk ) should give a better understanding on how to better use repeatedlabeling strategies in a practical setting . For example , in practice we expect labelers to exhibit different levels of noise and to have correlated errors ; moreover , there may not be sufficiently many labelers to achieve very high confidence for any particular example . • In our analyses we also assumed that the difficulty of labeling an example is constant across examples . In reality , some examples are more difficult to label than others and building a selective repeated labeling framework that explicitly acknowledges this , and directs resources to more difficult examples , is an important direction for future work . We have not yet explored to what extent techniques like LMU ( which are agnostic to the difficulty of labeling ) would deal naturally with example conditional qualities . • We also assumed that CL and CU are fixed and indivisible . Clearly there are domains where CL and CU would differ for different examples , and could even be broken down into different acquisition costs for different features . Thus , repeated labeling may have to be considered in tandem with costly feature value acquisition . Indeed , feature value acquisition may be noisy as well , so one could envision a generalized repeated labeling problem that includes both costly , noisy feature acquisition and label acquisition . • In this paper , we consider the labeling process to be a noisy process over a true label . An alternative , practically relevant setting is where the label assignment to a case is inherently uncertain . This is a separate setting where repeated labeling could provide benefits , but we leave it for future analysis . • In our repeated labeling strategy we compared repeatedlabeling vs . single labeling , and did not consider any hybrid scheme that can combine the two strategies . A promising direction for future research is to build a “ learning curve gradient ” based approach that decides dynamically which action will give the highest marginal accuracy benefit for the cost . Such an algorithm would compare on the fly the expected benefit of acquiring new examples versus selectively repeated labeling existing , noisy examples and/or features .
Despite these limitations , we hope that this study provides a solid foundation on which future work can build . Furthermore , we believe that both the analyses and the techniques introduced can have immediate , beneficial practical application .
Acknowledgements Thanks to Carla Brodley , John Langford , and Sanjoy Dasgupta for enlightening discussions and comments . This work was supported in part by the National Science Foundation under Grant No . IIS 0643846 and by an NSERC Postdoctoral Fellowship .
References [ 1 ] Baram , Y . , El Yaniv , R . , and Luz , K . Online choice of active learning algorithms . Journal of Machine Learning Research 5 ( Mar . 2004 ) , 255–291 .
[ 2 ] Blake , C . L . , and Merz , C . J . UCI repository of machine learning http://wwwicsuciedu/~mlearn/MLRepositoryhtml , databases . 1998 .
[ 3 ] Boutell , M . R . , Luo , J . , Shen , X . , and Brown , C . M . Learning multi label scene classification . Pattern Recognition 37 , 9 ( Sept . 2004 ) , 1757–1771 .
[ 4 ] Breiman , L . Random forests . Machine Learning 45 , 1 ( Oct . 2001 ) ,
5–32 .
[ 5 ] Cohn , D . A . , Atlas , L . E . , and Ladner , R . E . Improving generalization with active learning . Machine Learning 15 , 2 ( May 1994 ) , 201–221 .
[ 6 ] Dawid , A . P . , and Skene , A . M . Maximum likelihood estimation of observer error rates using the EM algorithm . Applied Statistics 28 , 1 ( Sept . 1979 ) , 20–28 .
[ 7 ] Domingos , P . MetaCost : A general method for making classifiers cost sensitive . In KDD ( 1999 ) , pp . 155–164 .
[ 8 ] Elkan , C . The foundations of cost sensitive learning . In IJCAI
( 2001 ) , pp . 973–978 .
[ 9 ] Gelman , A . , Carlin , J . B . , Stern , H . S . , and Rubin , D . B . Bayesian Data Analysis , 2nd ed . Chapman and Hall/CRC , 2003 . [ 10 ] Jin , R . , and Ghahramani , Z . Learning with multiple labels . In
NIPS ( 2002 ) , pp . 897–904 .
[ 11 ] Kapoor , A . , and Greiner , R . Learning and classifying under hard budgets . In ECML ( 2005 ) , pp . 170–181 .
[ 12 ] Lizotte , D . J . , Madani , O . , and Greiner , R . Budgeted learning of naive bayes classifiers . In UAI ) ( 2003 ) , pp . 378–385 .
[ 13 ] Lugosi , G . Learning with an unreliable teacher . Pattern Recogni tion 25 , 1 ( Jan . 1992 ) , 79–87 .
[ 14 ] Margineantu , D . D . Active cost sensitive learning .
In IJCAI )
( 2005 ) , pp . 1622–1613 .
[ 15 ] McCallum , A . Multi label text classification with a mixture model trained by EM . In AAAI’99 Workshop on Text Learning ( 1999 ) . [ 16 ] Melville , P . , Provost , F . J . , and Mooney , R . J . An expected utility approach to active feature value acquisition . In ICDM ( 2005 ) , pp . 745–748 .
[ 17 ] Melville , P . , Saar Tsechansky , M . , Provost , F . J . , and Mooney , R . J . Active feature value acquisition for classifier induction . In ICDM ( 2004 ) , pp . 483–486 .
[ 18 ] Morrison , C . T . , and Cohen , P . R . Noisy information value in utility based decision making . In UBDM’05 : Proceedings of the First International Workshop on Utility based Data Mining ( 2005 ) , pp . 34–38 .
[ 19 ] Provost , F . Toward economic machine learning and utility based data mining . In UBDM ’05 : Proceedings of the 1st International Workshop on Utility based Data Mining ( 2005 ) , pp . 1–1 .
[ 20 ] Provost , F . , and Danyluk , A . Learning from Bad Data . In Proceedings of the ML 95 Workshop on Applying Machine Learning in Practice ( 1995 ) .
[ 21 ] Quinlan , J . R . C4.5 : Programs for Machine Learning . Morgan
Kaufmann Publishers , Inc . , 1992 .
[ 22 ] Saar Tsechansky , M . , Melville , P . , and Provost , F . J . Active feature value acquisition . Tech . Rep . IROM 08 06 , University of Texas at Austin , McCombs Research Paper Series , Sept . 2007 .
[ 23 ] Saar Tsechansky , M . , and Provost , F . Active sampling for class probability estimation and ranking . Journal of Artificial Intelligence Research 54 , 2 ( 2004 ) , 153–178 .
[ 24 ] Silverman , B . W . Some asymptotic properties of the probabilistic teacher . IEEE Transactions on Information Theory 26 , 2 ( Mar . 1980 ) , 246–249 .
[ 25 ] Smyth , P . Learning with probabilistic supervision . In Computational Learning Theory and Natural Learning Systems , Vol . III : Selecting Good Models , T . Petsche , Ed . MIT Press , Apr . 1995 .
[ 26 ] Smyth , P . Bounds on the mean classification error rate of multiple experts . Pattern Recognition Letters 17 , 12 ( May 1996 ) .
[ 27 ] Smyth , P . , Burl , M . C . , Fayyad , U . M . , and Perona , P . Knowledge discovery in large image databases : Dealing with uncertainties in ground truth . In Knowledge Discovery in Databases : Papers from the 1994 AAAI Workshop ( KDD 94 ) ( 1994 ) , pp . 109–120 . [ 28 ] Smyth , P . , Fayyad , U . M . , Burl , M . C . , Perona , P . , and Baldi , P . Inferring ground truth from subjective labelling of Venus images . In NIPS ( 1994 ) , pp . 1085–1092 .
[ 29 ] Ting , K . M . An instance weighting method to induce costsensitive trees . IEEE Transactions on Knowledge and Data Engineering 14 , 3 ( Mar . 2002 ) , 659–665 .
[ 30 ] Turney , P . D . Cost sensitive classification : Empirical evaluation of a hybrid genetic decision tree induction algorithm . Journal of Artificial Intelligence Research 2 ( 1995 ) , 369–409 .
[ 31 ] Turney , P . D . Types of cost in inductive concept learning . In Proceedings of the ICML 2000 Workshop on Cost Sensitive Learning ( 2000 ) , pp . 15–21 .
[ 32 ] Weiss , G . M . , and Provost , F . J . Learning when training data are costly : The effect of class distribution on tree induction . Journal of Artificial Intelligence Research 19 ( 2003 ) , 315–354 .
[ 33 ] Whittle , P . Some general points in the theory of optimal experimental design . Journal of the Royal Statistical Society , Series B ( Methodological ) 35 , 1 ( 1973 ) , 123–130 .
[ 34 ] Witten , I . H . , and Frank , E . Data Mining : Practical Machine Learning Tools and Techniques , 2nd ed . Morgan Kaufmann Publishing , June 2005 .
[ 35 ] Zadrozny , B . , Langford , J . , and Abe , N . Cost sensitive learning by cost proportionate example weighting . In ICDM ( 2003 ) , pp . 435–442 .
[ 36 ] Zheng , Z . , and Padmanabhan , B . Selectively acquiring customer information : A new data acquisition problem and an active learning based solution . Management Science 52 , 5 ( May 2006 ) , 697–712 .
[ 37 ] Zhu , X . , and Wu , X . Cost constrained data acquisition for intelligent data preparation . IEEE TKDE 17 , 11 ( Nov . 2005 ) , 1542– 1556 .
