Using Predictive Analysis to Improve
Invoice to Cash Collection
Sai Zeng
Prem Melville
Christian A . Lang
IBM TJ Watson Research Center
IBM TJ Watson Research Center
IBM TJ Watson Research Center
Hawthorne , NY , 10523
Yorktown Heights , NY , 10598
Hawthorne , NY , 10523 saizeng@usibmcom pmelvil@usibmcom langc@usibmcom
Ioana Boier Martin
IBM TJ Watson Research Center
Hawthorne , NY , 10523 ioana@usibmcom
Conrad Murphy
IBM Ireland murphyco@ieibmcom
ABSTRACT It is commonly agreed that accounts receivable ( AR ) can be a source of financial difficulty for firms when they are not efficiently managed and are underperforming . Experience across multiple industries shows that effective management of AR and overall financial performance of firms are positively correlated . In this paper we address the problem of reducing outstanding receivables through improvements in the collections strategy . Specifically , we demonstrate how supervised learning can be used to build models for predicting the payment outcomes of newlycreated invoices , thus enabling customized collection actions tailored for each invoice or customer . Our models can predict with high accuracy if an invoice will be paid on time or not and can provide estimates of the magnitude of the delay . We illustrate our techniques in the context of real world transaction data from multiple firms . Finally , simulation results show that our approach can reduce collection time up to a factor of four compared to a baseline that is not model driven .
Categories and Subject Descriptors G.3 [ Probability and Statistics ] : correlation and regression analysis , experimental design . I.3 [ Simulation and Modeling ] : Applications . J.1 [ Administrative Data Processing ] : Business , Financial .
General Terms Design , Economics , Experimentation , Performance .
Keywords Accounts Receivable , Payment Collection , Order Invoice to Cash , Predictive Modeling , Knowledge Discovery.1 to Cash ,
1 . INTRODUCTION The Order to Cash ( O2C ) process describes a composite business process that comprises the necessary steps to fulfill an order for a good or service , from order entry to payment receipt . While the number and nature of such steps may vary depending on the type and size of the firm , most O2C processes follow a similar highlevel workflow as illustrated in Figure 1 .
Customer Acquisition
Order
Credit
Order
Management
Management
Fulfillment
Customer
Billing
Collections Management
Deductions/
Dispute
Management
Payment
Cash
Management
Application
Figure 1 . Typical order to cash process
In this paper we concentrate on the invoice to cash process , ie two highlighted steps of Figure 1 . It constitutes the core of the collections activities and deal with account prioritization , customer contact activities , collection calls , escalation , and resolution of disputes . Most often , these steps are processed manually and hence , slow , expensive , and inaccurate , despite their importance to the business . Moreover , the collection actions are typically generic and do not take into account customer specifics , eg , all customers are contacted at fixed intervals , even though some have always paid on time ; while it is generally true that the later a customer is contacted the less likely the invoices will get paid on time , repeated contacting of “ good ” customers may lead to lower customer satisfaction . Such inefficiencies in current practices lead to significant delays in AR collections or even to failure to collect before write off deadlines .
The effectiveness of AR collections can be significantly improved through better management of the collection steps . For instance , taking preemptive actions on invoices that are likely to become delinquent can drive down the collection time . Furthermore , by prioritizing delinquent invoices for actions based on the expected time of payment , one can optimize the use of collections resources . In this paper we focus on the task of predicting the payment outcomes of newly created invoices , thus enabling more effective collections management .
2 . INVOICE OUTCOME PREDICTION There are many metrics used the collection effectiveness of a firm [ 9 ] . For instance , Average Days Delinquent measures the average time from invoice due date to the paid date , ie , the average days invoices are overdue . A related metric , Days Sales Outstanding ( DSO ) expresses the average time in days that receivables are outstanding , computed as : to measure
Most commonly used metrics are functions of the time taken to collect on invoices . If one can predict the outcome of an invoice , one can use this information to drive the collection process so as to improve on a desired collection metric . For instance , if one can identify invoices that are likely to be delinquent at the time of creation , one can attempt to reduce the time to collection by proactively trying to collect on these invoices . Typically , collections departments wait until invoices are delinquent to start taking collection actions , such as sending out reminders or making phone calls . However , one could significantly benefit from preemptively contacting potentially delinquent accounts . Furthermore , even after an invoice is past due , it is beneficial to know which invoices are likely to be paid sooner than later , if no action is taken . Given that resources for collections activities are often limited , one may choose to prioritize invoices based on estimating how late a payment will be ; eg , it makes more business sense to contact a customer who is likely to pay 90 days late , than one who would pay within 30 days without contact .
We formulate the invoice outcome prediction task as a supervised learning problem : given instances of past invoices and their outcomes , build a model that can predict when a newly created invoice will be paid , if no action is taken . In particular , each instance is classified into one of five classes : on time , 1 30 days late , 31 60 days late , 61 90 days late , and more than 90 days late ( or 90+ days late ) . These five classes are commonly used in the payment collection business , where each class corresponds to a customized collection strategy . Data instances correspond to features representing invoices , which are described in detail below . to using
This formulation corresponds the Average Days Delinquent as the collections performance metric . However , if the objective is to maximize a different performance metric , that can be done by using an alternative target ( class ) variable that is correlated with this metric . For example , one may use the Collection Effectiveness Index ( CEI ) , which compares what was collected in a given period to what was available to collect , defined as :
In this case , invoices can be labeled based on the actual amounts collected in a specified time period .
2.1 Data Preprocessing The analysis in this paper is done on invoice records for four firms , including two fortune 500 companies . Three of these firms are competitive in the markets for supplying high tech equipments for telecommunication , networking , and IT services . The fourth firm specializes in online advertising placement and scheduling services . The summary of invoice records is presented in Table 1 . These data sets cover invoices created from March 2004 to February 2005 . When these data sets , we differentiate invoices of first time customers from those of returning customers , because their payment behaviors are very different , moreover , there is additional historical information available for invoices of returning customers . In this paper , we use the term first time invoices to refer to the invoices from firsttime customers . Likewise , returning invoices are invoices from returning customers . Table 1 shows that the majority of invoices of three firms ( A , B and D ) are returning invoices while C has the majority of its invoices billed to first time customers . learning from
Table 1 . Summary of data sets
Firm
A B C D
# of invoices 40908 109589 22701 8474
# of returning invoices ( % ) 32871 ( 80.35 ) 94047 ( 85.82 ) 5564 ( 24.51 ) 5873 ( 69.31 )
# of first time invoices
8037 15542 17137 2601
Our input data consists of a set of invoices at the end of the collections cycle . Each invoice is described by 54 features that capture information such as order details , terms and conditions , sales representative information , etc . We begin by eliminating features that are specific to an invoice , such as invoice IDs . We then remove leakage variables – features that provide information about the class label that one would not have at the time of creation of an invoice , such as invoice closing date and number of contacts . Finally , we filter out features that have too many missing values or have unique values , such as invoice types . This leaves us with only three meaningful features , named as invoicelevel features that represent an invoice ( see Table 2 ) : invoice base amount , payment terms , and invoice category . Given the number of days delinquent , computed based on invoice close date and due date , each invoice/instance is labeled with one of the five class labels : on time , 1 30 days late , 31 60 days late , 61 90 days late , and more than 90 days late ( or 90+ days late ) .
The three invoice level features are insufficient for effective modeling . However , a large number of invoices are for returning customers , which is especially true for firms with large accounts such as A and B , where more than 80 % of the invoices are for returning customers . Based on this observation , we develop additional features that ( a ) capture the transaction history of a customer , eg , the percentage of invoices paid late in the past ; and ( b ) reflect the current status of the customer's accounts , eg the sum of base amounts of all invoices currently outstanding . Table 2 lists all these historical and aggregate features that are generated ( features numbered 4 17 ) . These features provide a significant amount of information that can be leveraged for predicting the outcome on a new invoice . However , such information is not available for first time customers , or for the first invoices of customers . Therefore , in this paper we focus primarily on building predictive models for the invoices of returning customers . However , for completeness , in Section 3.3 we also discuss the task of modeling on invoices without history .
No . 1 . 2 . 3 .
4 .
5 .
6 .
7 .
8 .
9 .
10 .
11 .
12 .
13 .
14 .
15 .
16 .
17 .
Table 2 . Summary of features
Feature Invoice base amount Payment term Category
Number of total paid invoices Number of invoices that were paid ate
Ratio of paid invoices that were late Sum of the base amount of total paid invoices Sum of the base amount of invoices that were paid late Ratio of sum of paid base amount that were late Average days late of paid invoices being late . Number of total outstanding invoices
Number of outstanding invoices that were already late Ratio of outstanding invoices that were late Sum of the base amount of total outstanding invoices Sum of the base amount of outstanding invoices that were late Ratio of sum of outstanding base amount that were late Average days late of outstanding invoices being late .
Description Base amount of a invoice The deadline of payment due Indicator of whether invoice is under dispute or not Number of paid invoices prior to the creation date of a new invoice of a customer . Number of invoices which were paid late prior to the creation date of a new invoice of a customer Ratio of 5 . over 4 .
The sum of the base amount from all the paid invoices prior to a new invoice for a customer The sum of the base amount from all the paid invoices which were late prior to a new invoice for a customer . Ratio of 8 . over 7 .
Average days late of all paid invoices that were late prior to a new invoice for a customer Number of the outstanding invoices prior to the creation date of a new invoice of a customer . Number of the outstanding invoices which were late prior to the creation date of a new invoice of a customer Ratio of 12 . over 11 .
The sum of the base amount from all the outstanding invoices prior to a new invoice for a customer The sum of the base amount from all the outstanding invoices which were late prior to a new invoice for a customer .
Ratio of 15 . over 14 .
Average days late of all outstanding invoices that were late prior to a new invoice for a customer
3 . APPROACH The task we formulated is a typical supervised classification problem : given a set of data instances ( invoices ) represented by a set of features and class labels , build a model that can classify a new instance into one of five target classes – on time , 1 30 days late , 31 60 days late , 61 90 days late , and more than 90 ( or 90+ ) days late . In the following sections we will discuss the different settings for invoice prediction we studied .
First , we compared the following commonly used classification algorithms for our domain – C4.5 decision tree induction [ 6 ] , Naïve Bayes [ 4 ] , Logistic Regression [ 3 ] and Boosting decision stumps [ 7 ] . In addition , we also experimented with the PART algorithm [ 2 ] , which is a rule learner that uses a separate andconquer approach . It builds a rule , removes the instances that it covers , and repeats this process recursively on the remaining instances until there are none left . To produce each rule , PART builds a partial pruned decision tree in a manner similar to C4.5 , and the leaf with the largest coverage is made into the rule while the rest of the tree is discarded .
Experiments , here and in other sections , were run using 10 fold cross validation , and classification accuracy is reported as the performance metric . Where relevant , we report the accuracy in predicting a specific class , eg , 90+ days late . As a point of reference , we also report the accuracy of the majority class predictor , ie , a classifier that always predicts the class most represented in the training data . We refer to this as the Baseline .
Table 3 summarizes our results on the comparison of different learning algorithms . Both PART and C4.5 significantly outperform the competing methods . In addition to learning accurate classifiers , PART and C4.5 are good choices for our domain , because they perform well at handling missing values , nominal values , and produce comprehensible models in the form of human readable decision lists . Since C4.5 produces marginally better models than PART for 3 of the 4 firms , we use it as the base algorithm for the remainder of this paper .
Table 3 . Summary of Classification Algorithms
Accuracy
Firm
A B C D
Base line 60.22 84.58 46.10 57.82
PART
87.16 92.63 65.76 71.34
87.51 93.09 66.21 71.34
C4.5 Boosting Logistic Naïve Bayes 79.64 80.56 61.18 66.05
64.04 84.58 61.68 57.86
71.67 84.72 64.04 60.77
3.1 Using Historical Data In Section 2.1 we describe the construction of historical and aggregate features . We conjecture that these features provide a significant amount of information beyond the simple invoice level features . We validate this hypothesis by comparing models built using only invoice level features to models built using both invoice and historical features . Experiments were conducted using only data for invoices of returning customers , because historical features are only meaningful for these invoices .
The prediction results are summarized in Table 4 . We observe that even with just the three invoice level features we can predict the payment outcome of an invoice more accurately than predicting the majority class . However , this improvement is marginal in some cases , as in B and D , where the difference in accuracy is less than 1 percent . Furthermore , incorporating historical features into the data gives rise to a substantial increase in prediction accuracies for all four firms . We observe improvements ranging from 9 ( B ) to 27 percent ( A ) . Overall , the model accuracies are significantly better than the baseline prior probability of majority class . As such , using these predictions to drive workflow of collections is likely to perform a lot better than current practices that treat all invoices equally . We demonstrate this through simulation experiments in Section 4 .
Table 4 . Using historic data to predict returning invoice payment behavior
Firm
Feature Category
Accuracy
Baseline Accuracy
Invoice
Invoice+History
Invoice
Invoice+History
Invoice
Invoice+History
Invoice
Invoice+History
70.77 87.51 84.73 93.09 50.45 66.21 58.85 71.34
A
B
C
D
60.22
84.58
46.10
57.82
3.2 Cost sensitive Learning In accounts receivable collection , the main reason for categorizing the payment behavior of invoices is to be able to customize monitoring and collection activities according to their past due behavior . One of the critical measurements of collection performance is Average Days Delinquent . As such , we have focused our modeling on predicting the expected time in payment . However , as discussed in Section 2 , there are other Key Performance Indicators ( KPIs ) that are often used to measure collection success . For instance , several of our firms have a KPI objective to keep the number of invoices that are more than 90 days overdue below a specified limit . These invoices are potentially bad debt accounts , which require special decisions and a set of actions to collect payments for these accounts . If this set of invoices can be identified at an early stage of the lifecycle of the invoices , one can preemptively deal with potentially bad debt accounts before they turn into debt or even get written off .
To attain this objective we build models that are focused on being able to predict accurately for the 90+ class . By default , classification algorithms assume that all classes are equally important . However , the penalty for predicting an invoice will be paid on time when in fact it will more than 90 days overdue , is usually higher than the reverse . This task is further compounded by the fact that these high risk invoices are under represented in the data . This can be seen in the distribution of invoices for Firm A in Figure 2 , where the total number of 90+ invoices is only 3 % of the entire data set . The data for the three other firms show a similar imbalance in the data . i s e c o v n i f o r e b m u N
19794
25000
20000
15000
10000
8007
5000
0
3285
741
1044 ontime
1 30days
31 60days 61 90days
90+days
Payment classes
Figure 2 . Invoice distribution of Firm A
To address the different misclassifications costs , we use instance re weighting , which is a common approach in cost sensitive learning . As input , we provide a misclassification cost matrix , such as the one shown in the second column of Table 5 . Each row and each column corresponds to target classes . Each cell corresponds to the cost of misclassifying the row class as the column class . The diagonal corresponds to correct classifications and hence are all zero . By default , all costs , other than the diagonal , are set to one . Instances belonging to particular class are re weighted proportionally to the sum of its misclassification costs .
Table 5 reports our results on the four firms for one such cost matrix . We present both the overall accuracy , as well the true positive ( TP ) rate of just the 90+ class . The results show that instance re weighting is a very effective way of dealing with the high class imbalance in this data – we can improve more than 40 % of the TP rate of the 90+ class without much loss to overall accuracy as is seen for Firm A .
Table 5 . Cost sensitive prediction accuracy for four firms . The standard cost matrix corresponds to equal misclassification
Firm
Cost Matrix costs .
Standard a b c d e 0 1 1 1 1| a = on time 1 0 1 1 1| b = 1 30 days 1 1 0 1 1| c = 31 60 days 1 1 1 0 1| d = 61 90 days 5 4 3 2 0| e = 90+ days
Standard Same as A Standard Same as A Standard Same as A
A
B
C
D
Accuracy 87.51
90+ TP Rate
60.9
86.95
85.5
93.09 92.45 66.21 65.96 71.34 68.36
41.5 52.8 36.6 45.1 49.8 60.1
To further explore this , we ran additional experiments using different costs matrices . The results for Firm A , for three different cost matrices are summarized in Table 6 .
Table 6 . Cost sensitive prediction accuracy for Firm A
Cost Matrix a b c d e 0 1 1 1 1| a = on time 1 0 1 1 1| b = 1 30 days 1 1 0 1 1| c = 31 60 days 1 1 1 0 1| d = 61 90 days 5 4 3 2 0| e = 90+ days 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 50 4 3 2 0 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 500 4 3 2 0
Accuracy
90+ Accuracy
86.95
85.5
86.76
86.1
81.84
89.3
The results show that by increasing the cost of misclassifying the 90+ class , we can get the learning algorithm to focus on building classifiers that are more accurate at predicting this class . In fact , with high enough misclassification costs the classifier can learn to predict the 90+ class with more than 89 % accuracy . As expected , this comes at a trade off on overall classification accuracy . This trade off can be balanced based on the desired performance objectives .
The cost matrix can be specified based on the actual costs associated with the incorrect prediction in practice . For instance , if a 90+ invoice is incorrectly labeled as on time invoice , then the associated cost includes the interest loss because of potential customer debt . The loss due to misclassification need not always be quantified by monetary value . For instance , if an on time instance is misclassified as a 90+ instance , it is likely that the customer will be contacted even before the due date . Apart , from the wasted cost of contacting a customer who is going to pay on time , there is the additional risk of damaging the customer relationship . The trade offs between expected loss in revenue and customer satisfaction are quite complex and vary from firm to firm . In our current modeling , we only concern ourselves with the misclassification of 90+ labels . However , the same methodology can be used to accommodate other cost structures that may represent alternative KPI objectives . into other class instances
3.3 Prediction for New Accounts As discussed in Section 2.1 we have focused primarily on invoices of returning customers , because of the richness of historical data that is not present in the invoice level features . However , in some cases it may be possible to get additional information on the customers themselves , which may make it possible to even build models for invoices of first time customers .
Invoice payment risk , to a large extent , may depend on the customer ’s financial capability and willingness to pay . Such factors may be influenced by customer credit worthiness , organizational profile , business market profile , etc . These factors are captured in a set of customer features , such as credit limit , segment , and region . For Firm A , such customer level attributes are actually collected and are readily available for modeling . We selected 9 such attributes after going through the same feature selection mechanism described in Section 21
For Firm A , we now have three sets of features , namely invoicelevel , historical and customer level features . We run experiments as before , on four combinations of these feature sets , on three versions of the Firm A data – returning invoices , first time invoice and all invoices . These results are summarized in Table 7 . Results show that having customer features boosts prediction accuracy from 70 % to 79 % for first time invoices . Though this accuracy is not as high as when using historical features ; it does demonstrate that information regarding the collectibility of invoices . the customer level features provide some
We further investigate the effectiveness of having customer features for invoices of returning customers . As seen in Table 7 , adding customer features to invoice features improves prediction accuracy compared to only using invoice features , even for returning customer . However , if we replace customer features with historical features , there is an additional 13 % increase in accuracy . Clearly , historical features are more effective than customer features in determining the outcome of invoices .
Having all three feature sets together achieves the best prediction accuracy ; however this is only a marginal improvement over using the invoice and historical features . These results motivate building separate models for prediction for returning customers ; and shows that when customer information is available one can also build good models for first time invoices .
Table 7 . Prediction accuracy of Firm A
Features
Invoice Invoice+Customer Invoice+History Invoice+Customer +History
All invoices ( accuracy )
Returning invoices ( accuracy )
First time invoices ( accuracy )
68.38 73.33 85.08 86.24
70.77 74.66 87.51 87.56
70.64 79.48 N/A N/A
3.4 Unified Model vs . Firm specific Models For experiments in previous sections we built one model for each firm . However , in principle , we could build one unified model combining the data from all firms . Building such a model could help generalize better and learn behaviors and patterns that are common to all firms . Combining the data from all firms would also provide a lot more training data , which usually improves modeling . To test this conjecture , we build a unified model combining all training sets , and present results using this model to predict for invoices belonging to each firm . We compare this model with training individual models for each firm .
The results in Table 8 indicate that building one unified firm model indeed achieves better prediction accuracy than using separate firm models . This result suggests that these four firms share common behavior and patterns which are overlooked by individual firm models . This is especially true for Firm C and D , whose returning invoices comprise less than 10 % of all returning invoices , and each individual prediction gains significant accuracy improvement from the unified model . While there are certain differences between the fine tuning of the individual processes ( eg , 54 % of invoices of Firm C are paid on time , while only 25 % of invoices for Firm B are on time ) , there seems to be one dominant workflow in place with common process policies and customer responses . Hence , when data from multiple firms are available , and there are no proprietary concerns about merging this data for modeling , there is much value in building a unified model by combining datasets from all firms .
Table 8 . Prediction accuracy of unified model vs . firm specific models
Test Data
Accuracy of unified
Accuracy of firm
Firm A Firm B Firm C Firm D model 92.65 95.81 77.26 84.10 model 87.51 93.09 66.21 71.34
4 . INVOICE PRIORITZATION In Section 3 , we demonstrated how we can effectively predict the outcome of an invoice in different settings . Being able to identify invoices that are likely to be delinquent at the time of creation enables us to drive the collections process to reduce delinquency . In this section , we present simulation results that show how our invoice prediction models can help to improve collection performance .
Our simulations are based on the assumption that preemptively taking actions ( such as sending a reminder ) on an invoice that will be delinquent reduces the collection time . We have observed this phenomenon in other studies , where such priming does indeed reduce delinquency . Specifically , we make the simplifying assumption that taking an action on an invoice will reduce the time of delinquency ( if any ) by a fixed factor . Invoices that will be paid on time are however unaffected by preemptive due diligence , which is a reasonable assumption for this data . An example simulated time savings calculation is shown in Table 9 , where the time savings factor is chosen to be 50 % .
Table 9 . Examples of simulated time savings on invoices
Invoice# Actual delay
Category
Simulated time
( days ) saving ( days )
1
2
3
99
19
16
90+days
On time
1 30days
49.5
0
8
Typically there are significant costs and resource constraints that prevent taking action on all open invoices . As such , the invoiceto cash process relies heavily on being able to prioritize invoices for action . In the absence of additional information , one approach would be to select uniformly at random a subset of invoices for which preemptive collection actions are taken . We call this baseline approach Uniform Prioritization , which is a typical approach in real world invoice to cash processes .
An alternative approach would be to prioritize invoices based on the outcome predictions of our models . This prioritization is implemented in two steps . First , invoices are ordered with respect to predicted classes , ie , 90+ days late invoices , followed by 6090 days , 30 60 days , 1 30 days and on time invoices , in that order . 90+ days invoices are typically for customers in bad standing and have the highest risk of collection . They are therefore placed on the top of the ordered list for due diligence . On time invoices are most likely for good customers . Such invoices could be exempt from due diligence , which not only saves cost and resources , but also avoids the potential negative impact on customer satisfaction . In a second step , within each ordered class , the individual invoices are prioritized in descending order of predicted probability of membership in the class . We call this approach Model Prioritization .
Now , if we have enough resources to take actions on x % of the open invoices , we could either select the top x % of invoices based on Model Prioritization or Uniform Prioritization . We compare these two approaches for different values of x , and plot the average time savings per invoice at each point in Figure 3 . The dataset we use is from firm A . The time savings factor we use in these simulations is 50 % . This choice of 50 % is somewhat arbitrary , so the absolute time savings may not correspond to what can be achieved in practice . Therefore , we also report the ratio of the average time savings between the two prioritization methods – which is presented in Figure 4 . The results show that the advantage ( per invoice ) of having Model Prioritization increases when a smaller set of invoices is selected – which represents more likely delinquent invoices . Model Prioritization performs exponentially better while the selected invoice volume reduces . As we increase the amount of invoices acted upon , the two prioritization policies will naturally converge .
Uniform Prioritization
Model Prioritization
) s y a d ( i g n v a s e m i t e g a r e v A
35
30
25
20
15
10
5
0
10 % 20 % 30 % 40 % 50 % 60 % 70 % 80 % 90 % 100 %
Percentage of invoices pressed
Figure 3 . Comparison of average time saved per invoice for alternative prioritization methods d e v a s s y a d e g a r e v a f o o i t a R
4.5
4
3.5
3
2.5
2
1.5
1
0.5
0
10 % 20 % 30 % 40 % 50 % 60 % 70 % 80 % 90 % 100 %
Percentage of invoices pressed
Figure 4 . Relative time savings as a ratio of average days saved using Model Prioritization over Uniform Prioritization
Our simulations demonstrate that driving the collection process based on our invoice outcome prediction models can significantly reduce delinquency , eg , when only 10 % of the invoices are selected for action we save four times the number of days delinquent compared to Uniform Prioritization .
5 . RELATED WORK There are a number of vendors offering pre packaged solutions for order to cash . Examples are Oracle ’s e Business Suite Special Edition Order Management [ 10 ] and SAP ’s Order to Cash Management for Wholesale Distribution [ 11 ] . Oracle ’s solution provides information visibility and reporting capabilities . SAP ’s solution relationship management . To our best knowledge , none of such solutions incorporates analytics , especially predictive modeling for improved prioritization of invoices or for customer ranking , with subsequent collection process optimization . collections supports and customer
Predictive modeling approaches are widely used in a number of related domains , such as credit management and tax collection . Talgentra and Accenture are two representative examples . To better manage customer credit , Talgentra proposes to use predictive modeling approach [ 12 ] . They consider the use of prediction techniques such as decision trees , association rules , and neural networks in order to build customer models . These models are then used to predict collection probabilities , most suitable payment terms , and schedules for a given customer . Accenture uses assignment rules to optimize workforce utilization ( reassigning staff to tasks as field collection , telephone collection , customer service ) for tax collection . The rules are generated based on probable collection outcomes by learning from historic performance numbers and expected new accounts receivable [ 5 ] . However , the details to generate these rules are not given . In fact , since , predictive modeling approaches vary based on the problem domains , these solutions are unlikely to be sufficient to address issues for O2C payment collection .
There is a small body of work in the O2C domain . One such work can be found in [ 8 ] , in which , a model is used to predict collection amounts on customer accounts based on learned relationships among known variables . The predictive models are generated with historical information on customers , on event patterns for customers , or on collectors’ notes for a customer . Neural networks are used as one of the approaches for predictive modeling . While the approach focuses on collection amounts prediction , we believe both amounts and delays are important for collection decision making . Another difference is that we can tackle collections not only at the customer level , but also at the invoice level .
The most closely related work is by Bailey et al . [ 1 ] . The authors discuss possible improvements over Providian ’s cash collection strategy . They analyze various strategies for prioritizing collection calls and propose to use predictive modeling based on binary logistic regression and discriminative analysis to determine which clients to “ outsource ” ( ie , which customer accounts to hand over to an outside collections agency for further collection processing ) . The authors present some preliminary results of their modeling approach in the form of analytics assuming certain prediction accuracies and collection returns . Their work is complementary to ours in that they deal with the cost/benefit decisions that would need to be made once the priority/risk of each collection item is determined . Our work , on the other hand , tries to assess which techniques are best suited for determining this priority/risk .
Other relevant work comes from a number of new companies that provide rule engines to prioritize invoices to maximize cash flow . For instance , cforia [ 13 ] , a 2002 start up , offers various collection management solutions . On their website , they claim among other AR process improvements , a new way of automatically prioritizing invoices based on a rule based system . They claim that “ cforia ’s rules engine automatically sends the collections and deductions teams prioritized ticklers to maximize cash flow . ” Another start up , IntelligentResults [ 14 ] , offers a platform called PREDIGY , which provides a variety of business analytics capabilities . For example , beside the manual creation of business rules , PREDIGY also allows deriving strategies and models via automatic data clustering and segmentation . Moreover , they offer integrated the effectiveness of the derived rules . These solutions are helpful to create , use and validate the rules , once rules are known . However , there is no evidence that these solutions enable automatic rule generation by learning from the past , which is the core of our approach in this paper . testing and simulation tools for verifying
6 . CONCLUSIONS In this paper , we have presented a supervised learning approach and the corresponding results in the context of invoice to cash collections . We developed a set of aggregated features which capture historical payment behavior for each customer . Our results show that having this set of features enhances the prediction accuracy significantly , and it is more valuable in predicting payment delays for invoices from returning customers than using customer features . However , we also observed that customer features play an important role in the prediction of payment delays when no historical information is available , eg , for invoices from first time customers . We demonstrate that by using cost sensitive learning , we are able to improve prediction accuracy particularly for high risk invoices , which are underpresented in the data sets . In addition , we compared the prediction performance of a single generic model with that of firm specific models and we showed that the former leads to better prediction accuracy . Finally , we demonstrate , through simulation , that our model driven invoice prioritization helps in reducing delinquency time under the performance gain can reach as high as four times compared to using random prioritization . time savings assumptions ; and , realistic
7 . ACKNOWLEDGMENTS We would like to thank our colleague Vijay Iyengar for insightful discussions on this topic .
8 . REFERENCES [ 1 ] Bailey , D . R . , Butler , B . , Smith , T . , Swift , T . , Williamson , J . ,
Scherer , W . T . Providian Financial Corporation : Collections Strategy , Systems Engineering Capstone Conference , University of Virginia , 1999
[ 2 ] Frank , E . , Witten , H . I . Generating Accurate Rule Sets
Without Global Optimization . In : Fifteenth International Conference on Machine Learning , 1998 , 144 151 .
[ 3 ] Hastie , T . , Tibshirani , R . , Friedman . , J . The Elements of
Statistical Learning . Springer Verlag , New York , NY , 2001
[ 4 ] John , H . G . , Langley , P . Estimating Continuous Distributions in Bayesian Classifiers . In : Eleventh Conference on Uncertainty in Artificial Intelligence , San Mateo , 1995 , 338345 .
[ 5 ] Milack , J . Receivables Management and Collection
Enforcement , Accenture . http://wwwaccenturecom/NR/rdonlyres/694215F2 A16A4BF8 90AA C9E508E29EC0/0/receivablespdf
[ 6 ] Quinlan , R . C4.5 : Programs for Machine Learning . Morgan
Kaufmann Publishers , San Mateo , CA , 1993 .
[ 7 ] Schapire , R . The strength of Weak Learnability . Journal of
Machine Learning , 5(2):197 227 , 1990
[ 8 ] Shao , M . , Zoldi , S . , Cameron , G . , Martin , R . , Drossu , R . ,
Zhang , G . , Shoham , D . Enhancing delinquent debt collection using statistical models of debt historical information and account events , US patent 7,191,150 , June 2000
[ 9 ] http://wwwcrfonlineorg/orc/ca/ca 7html
[ 10 ] http://wwworaclecom/global/uk/portal/special_edition_orde r_management_datasheet.pdf
[ 11 ] http://wwwsapcom/industries/wholesaledistribution/busines sprocesses/ordertocash.epx
[ 12 ] http://wwwtalgentracom/content/Using%20Predictive%20 Modellingpdf?dltitle=Using%20Predictive%20Modellingp df
[ 13 ] http://wwwcforiacom/productshtm
[ 14 ] http://wwwintelligentresultscom/products/
