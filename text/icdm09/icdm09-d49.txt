Clustering Trajectories of Moving Objects in an Uncertain World
Nikos Pelekis1 , Ioannis Kopanakis2 , Evangelos E . Kotsifakos1 , Elias Frentzos1 , Yannis Theodoridis1
1Dept . of Informatics , Univ . of Piraeus , Greece
{npelekis , ek , efrentzo , ytheod}@unipi.gr
2Tech . Educational Institute of Crete , Greece ikopanakis@emarkteicretegr
Abstract
Mining Trajectory Databases ( TD ) has recently gained great interest due to the popularity of tracking devices . On the other hand , the inherent presence of uncertainty in TD ( eg , due to GPS errors ) has not been taken yet into account during the mining process . In this paper , we study the effect of uncertainty in TD clustering and introduce a three step approach to deal with it . First , we propose an intuitionistic point vector representation of trajectories that encompasses the underlying uncertainty and introduce an effective distance metric to cope with uncertainty . Second , we devise CenTra , a novel algorithm which tackles the problem of discovering the Centroid Trajectory of a group of movements . Third , we propose a variant of the Fuzzy C Means ( FCM ) clustering algorithm , which embodies CenTra at its update procedure . The experimental real world TD demonstrates the efficiency and effectiveness of our approach .
1 . Introduction evaluation over
With the integration of wireless communications technologies , TD have become and positioning increasingly popular , posing great challenges to the data mining community [ 12 ] . On the other hand , since a TD consists of movements of objects , which record their position as it evolves over time , the concept of uncertainty appears in various ways ; data imprecision due to sampling and/or measurement errors [ 18 ] , uncertainty in querying and answering [ 19 ] , fuzziness by purpose during pre processing for preserving anonymity [ 1 ] , and so on . Although uncertainty is inherent in TD , to the best of our knowledge there is no related work in the database literature that studies its effect in the knowledge discovery process .
For example , clustering of trajectories into separate collections , involves partitioning of a TD into clusters , so that each cluster contains similar trajectories , according to a similarity definition . Several approaches try to quantify the ( dis) similarity between trajectories , dealing with basic trajectory features , [ 20 ] , [ 23 ] , [ 6 ] , [ 7 ] , [ 17 ] . However , neither of the above deals with uncertainty aspects .
On the other hand , clustering approaches based on fuzzy logic [ 24 ] , such as FCM [ 4 ] , consider uncertainty by allowing each data element to belong to different clusters by a certain degree of membership . Considering that input vector values are subject to uncertainty due to imprecise measurements , noise or sampling errors , the distances that determine the membership of a point to a cluster are also subject to uncertainty . Therefore , the possibility of erroneous membership assignments in the clustering process is evident . Moreover , current fuzzy clustering approaches do not utilize any information about uncertainty at the elementary level of the data points , which for the case of trajectories are the spatial locations of the objects recorded in temporal order . the hesitancy originating from their fuzzy values ,
In this paper , we introduce a three step approach to deal with uncertainty in TD and its effect on trajectory clustering . We initially adopt a symbolic representation and model trajectories as sequences of regions ( ie , wherefrom a moving object passes ) accompanied with ie , elements of an intuitionistic intuitionistic fuzzy set . Intuitionistic fuzzy sets [ 3 ] are generalized fuzzy sets [ 24 ] that can be useful in coping with imprecise information . The elements of an intuitionistic fuzzy set representing , are characterized by respectively , and nonbelongingness to this set . In the case of TD where this set is the region that a trajectory possibly crosses , the above values represent the probabilities of presence and non presence in the area . In order to exploit this information , we define a novel distance metric especially designed to operate on such intuitionistic fuzzy vectors , having as goal to incorporate it in some variant of the FCM algorithm that will effectively cluster trajectories under uncertainty . two values belongingness
The success of any FCM variant algorithm depends on the way that cluster centroids are driven towards the correct direction in each iteration of the algorithm . However , in the TD setting where trajectories are complex objects , even the most efficient similarity function would most probably fail in different applications . We argue that we can succeed better clustering results if instead of using global similarity functions between whole trajectories , we exploit local similarity properties between portions of the trajectories . Based on this idea , at the second step of to tackle similarity between our approach , we propose CenTra , a novel density as well as similarity based algorithm the problem of discovering the Centroid of a group of trajectories . Finally , at the third step of our approach , we propose a new trajectory clustering algorithm , called CenTR I FCM , which utilizes CenTra in its centroid update step , uses a global uncertaintysupporting similarity function to group trajectories at a higher level , and iteratively refines the results using local sub trajectories . This algorithm has the efficiency advantages of partitioning clustering algorithms ( in comparison to the higher processing cost of density based algorithms ) , whereas produces non spherical clusters due to the inclusion of CenTra , that recognises representative movements of any shape . Summarizing our contributions : • we propose fuzzy vector an representation of the clustering of trajectories by existing ( fuzzy or not ) clustering algorithms ; that enables intuitionistic trajectories
• we define a global distance metric on the previous trajectory representation , which outperforms its competitors proposed in the literature ;
• we tackle the problem of identifying the centroid of a bunch of trajectories using density and local similarity properties ;
• we propose a novel modification of the FCM algorithm for clustering complex trajectory datasets based on the above distance measure and the idea of the centroid trajectory . The rest of this paper is structured as follows : Section 2 discusses related work . In Section 3 , we introduce the intuitionistic vector representation of trajectories . The proposed similarity measure is defined in Section 4 while in Section 5 we describe the CenTra and the CenTR I FCM algorithms . In Section 6 we conduct an experimental study over a real trajectory dataset . Finally , we conclude this study in Section 7 .
2 . Related work
In this section we review existing works in the domains related with the current work , namely , uncertainty in TD , TD clustering , and intuitionistic fuzzy set theory . Representing Uncertainty in TD Probably , the most recognized notion of uncertainty the uncertainty of the trajectory representation , which means that the location of a moving object stored in a TD deviates from its real location due to a variety of reasons , which include both the measurement error of the positioning method , and the sampling error due to the in between sampled positions . The notion of sampling error and its interpolation method employed in TD is behavior across the time axis are studied in [ 18 ] . In [ 19 ] , a model for uncertain trajectories is proposed that associates an uncertainty threshold ε to the whole trajectory . This approach results in trajectories with uncertainty modeled as 3D cylindrical volumes . Hence , trajectory points ( x , y , t ) are associated with an εuncertainty area , actually a horizontal disk with radius ε centered at ( x , y ) . In order to reduce the complexity of handling this kind of spherical neighborhoods , square uncertainty areas were introduced in [ 12 ] . TD Clustering The vast majority of the proposed clustering algorithms , such as k means [ 16 ] , BIRCH [ 25 ] , DBSCAN [ 9 ] , and STING [ 21 ] are tailored to work with point data , making thus their application to TD not a straightforward task . During the last decade several approaches have been proposed in the literature so as to enable well known algorithms to operate on trajectories . Most of these approaches are inspired by the time series analysis domain , and propose trajectory similarity measures as the vehicle to group trajectories ; they usually focus on the movement shape of trajectories , which are usually considered as 2D or 3D time series data [ 20 ] , [ 23 ] , [ 6 ] , [ 7 ] . None of the previous underlying uncertainty . On the other hand , clustering approaches based on fuzzy logic [ 24 ] , such as Fuzzy C Means ( FCM ) [ 4 ] and to conventional clustering algorithms , especially for realworld applications . However , directly mapping these techniques in TD is not straightforward , mainly due to the complex nature of trajectories ( a question that arises , for example , is about the nature of the cluster centroid in a group of trajectories ) . its variants are competitive approaches considers the taken is not
Among the related works , the ones by Gaffney et al . [ 11 ] , [ 5 ] and Lee et al . [ 14 ] are closest to ours . Gaffney et al . [ 11 ] , [ 5 ] proposed probabilistic algorithms for clustering short trajectories using a regression mixture model . Subsequently , unsupervised learning is carried out by using EM algorithm to determine the cluster memberships in the model . In this approach , the issue of uncertainty into account , while representation of cluster centroids is out of the scope of these papers . What is more , in our approach we make no assumption about the size of the trajectories or whether they conform to some regression model , since we are interested in complex , real world objects following arbitrary movement patterns . Recently , Lee et al . [ 14 ] proposed TRACLUS , a partition and group framework for clustering trajectories which enables the discovery of common sub trajectories , based on a trajectory partitioning algorithm that uses the minimum length principle . TRACLUS clusters description trajectories as ( sub trajectories ) independently of whether the whole trajectories belong to different or the same clusters ; for this reason a segments line the temporal information the notion of variant of DBSCAN for line segments is proposed [ 14 ] . Finally , the representative trajectory of a cluster is provided . The fundamental difference of TRACLUS with our approach is that we cluster trajectories as a whole . Furthermore , contrary to our approach , is not considered in [ 14 ] , while the proposed algorithm for identifying the representative trajectory of a cluster primarily supports straight movement patterns and cannot identify complex ( eg circular ) motions , which are usual in real world applications . Moreover , [ 14 ] does by no means deal with the uncertainty in TD . Intuitionistic Fuzzy Sets and Similarity Regarding the theoretical foundations of fuzzy and intuitionistic fuzzy sets , these are described in [ 24 ] , [ 3 ] . In the following paragraphs , we briefly outline the basic notions used in this paper . Definition 1 . Let a set E of elements be fixed . A fuzzy set A on E is an object of the form ∈ x E
( ) x
µ
A
= x
,
}
{
A where
:Aµ E→[0,1 ] defines the degree of membership . For every of the element x E∈ to the set A E⊂element x E∈ , 0≤ Definition 2 . An intuitionistic fuzzy set A on E is an object of the form {
} ∈
µ γ xµ( )
≤1 . x E
( ) , x
( ) x
=
A x
,
A
A
A and of membership where µA : E Ø [ 0 , 1 ] and γA : E Ø [ 0 , 1 ] define the degree non membership , respectively , of the element x œ Ε to the set A Õ E . For every element x œ Ε it holds that 0 § µA(x ) § 1 , 0 § γA(x ) § 1 and 0 § µA(x ) + γA(x ) § 1 . For every x œ Ε , if γA(x ) = 1 − µA(x ) , A represents a uzzy set . The function πA(x ) = 1 γA(x ) µA(x ) represents the degree of hesitancy of the element x E∈ to the set A E⊂ .
The plethora and importance of the potential applications of intuitionistic fuzzy sets have drawn the attention of many researchers that have proposed various kinds of similarity measures between intuitionistic fuzzy sets . Example applications include identification of functional dependency relationships between concepts in data mining systems , approximate reasoning , pattern recognition and others . A variety of similarity measures between intuitionistic fuzzy sets have been proposed . Recently , Li et al . [ 15 ] provided a comprehensive survey and a detailed comparison of those measures .
In the following sections , we will present in detail our approach for TD clustering that takes uncertainty into consideration . The notation used in the rest of the paper is summarized in Table 1 .
Table 1 . Table of notations Description E={x1 , x2 , xn} A finite space of n elements xi
Notation
µΑ(x ) , γΑ(x ) , πΑ(x )
D , ls , Ti , ni , lsi
G , ck,l , gap iT , ri,j
UnTra( iT ) , uri,j
I UnTra( iT )
DUnTra ( =
A B−
UnTra
IFS
) ,
DIFS , Dtotal ur− ur i mbr(ur ) ,
, j min ur i ur− j ext
MA , ΓA , ΠA
U , c , N
≤ ≤ and 1 l
≤ ≤ ) , and cell c1,1
The membership , non membership , and hesitancy of x œ E in an intuitionistic fuzzy set A A trajectory database , its lifespan , a single trajectory , its number of segments and its lifespan A regular grid used to approximate trajectories , a single cell ( 1 k m The approximation of trajectory Ti over G and its j th approximated region The approximated uncertain trajectory Ti over G , and its j th approximated uncertain region The intuitionistic approximated uncertain trajectory Ti over G The distance measure between ( a ) two UnTras , ( b ) two I UnTras , and , ( c ) two trajectories n
The minimum bounding rectangle of uncertain region ur , and the minimum and external distances between the mbr(uri ) and mbr(urj ) The sets containing the values of membership , non membership and hesitancy for every member of the fuzzy set A A ( c N× , the number of clusters , the cardinality of the data vectors
) dimensional matrix of reals iku ∈
]0,1
[
3 . Intuitionistic fuzzy representation of trajectories vector
Representing trajectories by means of intuitionistic fuzzy sets is challenging . Formally , let D = {T1 , T2 , … , TN} be a TD consisting of N trajectories . Assuming linear interpolation between consecutive time stamped positions , a trajectory Ti = <(xi,0 , yi,0 , ti,0 ) , … , ( xi,ni , yi,ni , ti,ni)> , consists of a sequence of ni > 0 line segments in 3D space , where the j th segment interpolates positions sampled at time ti,j 1 and ti,j .
A basic requirement for applying existing clustering algorithms ( usually designed for point vector data ) into TD , is to transform trajectories in a space where each Ti is represented as p dimensional point . We therefore propose an approximation technique and define the dimensionality of trajectories by dividing the lifespan of each trajectory in p sub intervals ( eg , 1 minute periods ) . Regarding the spatial dimension , we assume a regular grid of equal rectangular cells with userdefined size ( eg , 100×100 m2 ) ; in each cell an identifier is also attached . Given this setting , and inspired by the Piecewise Aggregate Approximation ( PAA ) technique [ 13 ] , we propose a method that partitions Ti into p << ni equi sized temporal periods and substitutes the trajectory 3D line segments of each period with the set of the grid cells that Ti crosses during this period . More formally :
( a )
( b )
( c )
( d )
Figure 1 ( a ) Crossed cells by trajectory , ( b ) by UnTra with ε = 1 , and ( c ) UnTra with p = 5 . ( d ) Representation of membership , non membership , and hesitancy in the continuous space
Definition 3 . Given ( i ) a regular grid G of granularity m × n consisting of cells ck,l ( 1 § k § m and 1 § l § n ) , ( ii ) a trajectory Ti as a sequence of ni line segments , the lifespan ls of all trajectories in the trajectory database D , and ( iii ) a target dimension p << ni , the approximate trajectory iT =‚ri,1ri,pÚ of trajectory Ti is the one resulted by Ti when all trajectory triplets ( xi,j , yi,j , ti,j ) of Ti found inside a temporal period  = 
  , 1
≤ ≤
)1 ,
⋅ ls j p
( ⋅ − p p j ls j p j crossed by Ti during pj . are replaced by a region ri,j , which is composed by the set of cells ck,l
The advantage of this technique is that it allows us to view and store all trajectories in D as vectors in the same user defined dimensionality p , where each value of the vector corresponds to a dynamic time ordered list of cells crossed by the trajectory . Note that depending on the choice of the spatial and temporal granularity a trajectory may introduce gaps ( ie , regions with empty set of cells due to the fact that there is no motion during the particular period of time ) . jr ,i iT with its regions model the Uncertain Trajectory ( UnTra ) of
Next , inspired by the approach proposed in [ 12 ] , we iT over G to be been extended to cover some neighbouring cells , the ones that are touched by the εbuffer [ 12 ] of the initial trajectory Ti . ( A similar idea is also found in [ 19 ] , where each trajectory is modelled as a circular disk evolving in the temporal dimension , thus forming a cylindrical volume . ) Formally : Definition 4 . Given an approximate trajectory iT =‚ri,1ri,pÚ and an uncertainty threshold ε , the Uncertain Trajectory UnTra( iT over G is obtained by replacing each region jur consisting of the set of cells ck,l that the ε buffer of Ti crosses during pj . jr with an uncertain region
)iT =‚uri,1uri,pÚ of
To clarify the above definitions through an example , assume a simple trajectory Ti consisting of 6 ( ie ni = 6 ) line segments , which , when it is overlaid on a grid , it crosses some of its cells ( Figure 1(a) ) . Figure 1(b ) illustrates the UnTra counterpart of Figure 1(a ) with ε = 1 . Assuming a target dimension p = 5 , Ti is approximated by
,i
,i
UnTra( iT ) , which simply consists of five uncertain regions , reflecting the partitioning of the above grey cells in five subsets ( ie differently colored regions in Figure 1(c ) ) with respect to the lifespan of Ti . Without loss of generality , in the rest of the paper , we assume that all trajectories in D have the same uncertainty threshold ε .
Based on the above representation , in the following we propose an intuitionistic fuzzy vector representation of a trajectory . The idea is to model each region uri,j of an UnTra as an intuitionistic fuzzy set A E⊂ of the regions universe E that belongs to A by a degree µΑ(uri,j ) and does not belong to A by a degree γΑ(uri,j ) ( recall Definition 2 ) . Let us , for the moment , assume that we work in the continuous space . Assuming no uncertainty in the temporal dimension ( ie , each uri,j is only subject to spatial uncertainty ) , Figure 1(d ) depicts one cell ck,l and two auxiliary buffers in grey color , one exterior and one interior , in distance ε from the cell ; these buffers are formed , respectively , as the Minkowski sum ( ck,l ⊕ ε ) and Minkowski difference ( ck,l ε ) of ck,l with ε [ 19 ] . There are also the projections of four segments along with their corresponding buffers ( also in ε distance from the interpolated segment ) . The thick portion of these segments implies the part of the segment that lies inside the cell with 100 % probability . The dashed portion implies the part of the segment the cell with 100 % probability , while the solid thin portions are the parts of the segments that we do not know whether they lie inside or outside the cell . So , the ratio of the length of the thick portion over the total trajectory length corresponds to the membership of the segment to the cell . Similarly , the dashed and the solid thin fractions result to its nonmembership and hesitancy , respectively . Technically speaking , the thick portion is the result of the intersection of ( ck,l ε ) with the segment , while the dashed portion is the topological difference of the segment with ( ck,l ⊕ ε ) . lies outside that
Let us return to our discretized world ; as we assume that , after the initial preprocessing , we handle iT , ie , the set of ck,l that are definitely crossed by Ti , we can approximate the previous probabilities by counting the number of cells of ri,j and uri,j . Formally , given the membership µΑ(uri,j ) and non membership γΑ(uri,j ) of an uncertain region uri,j to the fuzzy set A containing the trajectories that have or have not , respectively , traversed this region with 100 % probability , we provide the following notion of Intuitionistic Uncertain Trajectory : )iT , its Definition 5 . Given an uncertain trajectory UnTra ( )iT , is defined as a pintuitionistic counterpart , I UnTra ( dimensional vector of triplets ‚(uri,j , µΑ(uri,j ) , γΑ(uri,j) ) , … , ( uri,p , µΑ(uri,p ) , γΑ(uri,p))Ú where each triplet consists of an uncertain region uri,j , its membership µΑ(uri,j ) , and its nonmembership γΑ(uri,j) ) , with the latter two being defined as : ( 1 )
( UnTra T i
µ
,
=
)
A
)
, i j
( ur ( r , i j ( UnTra T i
γ
A
( ur
, i j
)
=
)
− ur
, i j
)
( UnTra T i
)
( 2 )
UnTra T . and notating the number of cells of Similarly , the hesitancy πΑ(uri,j ) , namely , the degree that it is not certain whether the trajectory has passed or not from uri,j , is given by the following equation : )
( UnTra T i
( 3 )
( ur i
π ur i
−
= r i
)
A j j j
)
(
(
)i
Note that it is a straightforward task to prove the intuitionistic property that πΑ(uri,j ) = 1 − µΑ(uri,j ) − γΑ(uri,j ) .
4 . A distance metric for I UnTra two the dis similarity between
In this section we propose a novel distance metric I UnTra modeling instantiations . The key observation is that such a metric can be decomposed in two parts , one measuring the distance between the sequences of regions of the two trajectories ( DUnTra ) , and the other measuring the distance between intuitionistic fuzzy sets , based only on the corresponding membership and non membership values ( DIFS ) ; then , we can combine them into a single one using an aggregate function g(• ) , eg , the average ( or the weighted sum ) of the two components . As an example , the total distance Dtotal between two I UnTra A and B can be expressed as follows :
(
) ) 2
UnTra
,
,
,
)
(
(
)
(
IFS
IFS total
+
=
−
=
D
D
UnTra
A B
A B
A B D A B
( 4 ) If we assume that DUnTra and DIFS satisfy the metric space properties , it is straightforward to prove that Dtotal as defined above is a metric . As such , the two steps that are required include the proposals of distance metrics for DUnTra and DIFS ( Sections 4.1 and 4.2 , respectively ) .
4.1 A Distance Metric for Sequences of Regions
In order to measure the distance DUnTra between two UnTra , we propose an appropriate modification of the Edit distance with Real Penalty ( ERP ) [ 6 ] . Among several proposals in the literature , we chose to modify ERP , given that the Euclidean distance has poor performance at the presence of noise and local time shift , while LCSS [ 20 ] , DTW [ 23 ] , and EDR [ 7 ] do not satisfy the metric space properties [ 6 ] . Below we give the definition of the distance between two regions ( ie , sets of cells ) that is the building element of the DUnTra definition . Definition 6 . Given two uncertain regions uri and urj , their distance |uri − urj|d is defined in two different versions using two different distances d ∈ {min , ext} between their corresponding Minimum Bounding Rectangles ( mbr ) :
MinDist mbr ur i
(
)
−
(
(
)
) j mbr ur MaxCellDist ur i
− ur j
= min and ur i
− ur j ext
= −
1
1 2
        ext mbr ur i x
( 2 ( 2
⋅
⋅ ext mbr ur i x
(
(
)
)
)
) x ur
( ∪ ( ∪
+ ext mbr ur ( + ext mbr ur (
( ) ) ( ) ) ur y j j
)
) j
)
) j
 +      
(
( ext mbr ur i y ext mbr ur i y
( 5 )
,
( 6 ) where the former represents the minimum Euclidean distance between the MBRs of uri and urj , and the latter exploits on the extent of MBRs in the two axes ; eg is the extent of the mbr of uri along the x ext mbr ur i axis .
)
(
(
) x in it produces non zero results
It is self evident that |uri − urj|ext always results into [ 0,1 ] . Intuitively , |uri − urj|ext takes into account both the Euclidean distance between two regions and their extents , while the case of overlapping regions ; in the latter case , |uri − urj|min yields zero . Therefore , one may choose |uri − urj|ext instead of |uri − urj|min when refinement into the details of the uri , urj is desired . Finally , in order for |uri − urj|min to be normalized in [ 0,1 ] it should be divided by the maximum possible distance of two regions , called MaxCellDist in Eq ( 5 ) , ie , the distance between the two diagonal cells ( ie the bottom left and the upper right ) of the grid .
Now , the distance DUnTra between two UnTra( ) is defined as follows : Definition 7 . Given a regular grid G of cells ck,l , the distance DUnTra between trajectories )j UnTra T and two uncertain
)i
(
(
UnTra T , is given by : ( min
(
) j
D
UnTra
UnTra T UnTra T ( Rst UnTra T i
, i
(
)
, (
( (
) (
Rst UnTra T ) j j
) ) = ) ) ) +
+ ur i
,1
− ur
,
,1 j d
( 7 ) i
(
−
D
D
UnTra
UnTra ur i
UnTra T Rst UnTra T
Rst UnTra T UnTra T
) , ( ) ( denotes the remaining regions of Rst UnTra T after removing uri,1 , and gap is the region
( ( ( where ( ( Rst UnTra T containing the first cell of our grid ( ie , cell c1,1 ) .
) ) ) ) )
)i )
)i )
( ( gap gap ur
+
−
(
,
,
,1
,1 d d i j j
The value of the gap element is given in a way similar with [ 6 ] where it is determined as the first value of the time scale for the time series ( ie , typically gap = 0 ) . Note that as all UnTra have the same dimensionality p , gap regions may be introduced not due to difference in lengths rather than the lack of motion of an individual trajectory during this particular period . Next we present Lemma 1 , required by Theorem 1 that proves that DUnTra is a metric .
D
UnTra
(
      
      
Lemma 1 For any three regions urq , uri , urj , any of which may be a gap that − is always . region , − true it ur ur
−
≤
+ j d ur q ur i d ur i ur q j d
Proof : It has been proven by Waterman et al . [ 22 ] . Theorem 1 The distance measure DUnTra between UnTra T and
UnTra T , is a metric .
(
)j
(
)i
Proof : It is straightforward that isolation and symmetry properties hold for DUnTra . Due to Lemma 1 , the triangular inequality property also holds for DUnTra .
4.2 A Distance Metric for Intuitionistic Fuzzy Sets
Given a finite universe E = {x1 , x2 , … , xn} and an intuitionistic A = {‚x , µA(x ) , γA(x)Ú | x œ E} fuzzy set , we define three fuzzy sets MA = {µA(x)} , ΓA = {γA(x)} , ΠA = {πA(x)} , containing the values of membership , nonmembership , and hesitancy , respectively , for every x A∈ . Under this connection , A can be also described by the triplet ( MA , ΓA , ΠA ) . Exploiting the aforementioned description of a fuzzy set A , we devise a method for measuring the similarity between intuitionistic fuzzy sets , based on the membership , non membership , and hesitancy values of their elements . Definition 8 . Considering a finite universe E = {x1 , x2 , , xn} and two intuitionistic fuzzy sets on it , A = ( MA , ΓA , ΠA ) and B = ( MB , ΓB , ΠΒ ) , with the same cardinality n , the similarity measure Z between A and B is given by the following equation :
)
(
(
( z M M
,
)
,
1 3
=
Z A B
( 8 ) where z(A’,B’ ) for fuzzy sets A' and B' ( eg for MA , MB ) is defined as :
+ Γ Γ + Π Π z z
,
,
A
B
A
B
A
B
)
)
)
(
( n
A
'
,
' ,
) x i
µ
= 1 i n min
( z A B
)  ∑ )  =  ) ∑ )  ∩ = ∅  ' 1 , A B and similarly for ΓA , ΓB and ΠA , ΠB .
( µ (
A B max
( (
) )
( (
,
µ
µ x i x i x i
= 1
,
'
B
A
B i
'
'
'
'
∩ ≠ ∅ '
'
The above definitions can be demonstrated by the three following simple numeric example : Assuming intuitionistic fuzzy sets A , B , C with A = {x , 0.4 , 0.2} , B = {x , 0.5 , 0.3} , C = {x , 0.5 , 0.2} we want to find whether B or C is more similar to A . Using the equations of Definition 8 we compute the similarity of B and C to set A : Z(A,B ) = ( 04/05 + 02/03 + 02/04 ) / 3 = 0.65 , and Z(A,B ) = ( 04/05 + 02/02 + 03/04 ) / 3 = 0.85 , concluding that C is more similar to A than B .
Finally , the intuitionistic fuzzy set distance DIFS between two I UnTra A and B , can be expressed as :
= −
,
(
) 1
IFSD A B which is proven to be a distance metric . Lemma 2 . The intuitionistic fuzzy set distance DIFS between two I UnTra A and B is a metric .
Z A B
( 10 )
(
)
,
( 9 ) c
∑
= 1 i u ik
=
1 , 0
<
N
∑
= 1 k u ik
<
N
Given this , the FCM objective function has the form :
( 11 )
( 12 )
Proof sketch : One can easily verify that isolation , symmetry , and triangular inequality properties hold for DIFS .
The proposed intuitionistic similarity measure uses the aggregation of the minimum and maximum membership , non membership , and hesitancy values . It is simple to calculate , sensitive to small value variations , and deals well with all the counter intuitive cases , reported in [ 15 ] , in which other measures fail . For example , the majority of the similarity measures reviewed in [ 15 ] , fail to result to a valid intuitionistic value for specific cases ; some of them result to 0 or 1 suggesting that the compared sets are either totally irrelevant or identical , while it is obvious that this is false in the general case , while others result in a high similarity value for obviously different sets .
5 . A novel trajectory clustering algorithm in input data may clusters . However ,
The majority of the proposed clustering methods so far assume that each vector belongs to one cluster only , a reasonable assumption when vectors reside in dense and well separated real world applications where complex form overlapping clusters , the degree of membership of a vector xk to the i th cluster uik is a value in the interval [ 0 , 1 ] . Based on this observation , Bezdek et al . [ 4 ] introduced the FCM algorithm which uses a weighted exponent on the fuzzy memberships . FCM iteratively discovers cluster centroids that minimize a criterion function measuring the quality of a fuzzy partition . A fuzzy partition is denoted by a ( c N× ) dimensional matrix U of reals uik œ[0,1 ] , with 1 § i § c and 1 § k § N , where c and N are the number of clusters and the data vectors , respectively . The following constraint is imposed upon uik : the cardinality of
J U V
, m
(
) c
N
= ∑∑
= 1 i
= 1 k
( u ik m
) d
2 ik where V is a ( p µ c) dimensional matrix storing c centroids , p is the dimensionality of the data , dik is an Anorm measuring the distance between data vector xk and cluster centroid vi , and m œ [ 1,¶ ) is a weighting exponent . The parameter m controls the fuzziness of the clusters . When m approximates 1 , FCM performs a hard partitioning as the k means algorithm does , while as m converges to infinity the partitioning is as fuzzy as possible . There is no analytical methodology for the optimal choice of m . By iteratively updating the cluster centroids and the membership degrees for each feature vectors , FCM iteratively moves the cluster centroids to the "correct" location within the data set .
Regarding the centroid calculation , Lee et al . [ 14 ] presented a first approach to solve this problem in the context of TD , providing the notion of representative trajectory . Assuming that movement patterns are more or less straight lines , they introduce an averaging technique between segments that works well when trajectories are dense and follow such a linear regression model . However , real world applications involve trajectories that often follow circular movement patterns or present large agility . Moreover , trajectories that follow similar routes for only a portion of their lifespan and then they diverge would result in non representative motions patterns that can not be described by conventional averaging techniques . In order to overpass these obstacles and support real world requirements , we argue that a better representation can be succeeded if we utilize local criteria ( contrary to global criteria via generic distance functions ) to decide whether a sub trajectory is part of the movement pattern . For this reason next we provide a method that enables this calculation exploiting local trajectory matches .
5.1 The Centroid Trajectory algorithm
We base our proposal for the Centroid Trajectory ( CenTra ) estimation on the definition of I UnTra . Our methodology not only overpasses the previously mentioned obstacles , but also , it may be used to represent the thickness of the centroid , so as to model the amount of trajectories that contribute to its formation . Towards this goal , we firstly adopt some local similarity function to identify common sub trajectories ( concurrent existence in space time ) , and secondly we follow a region growing approach so as to represent this local cluster . The idea is to form CenTra similar to an UnTra , requiring at the same time to satisfy some similarity and density constraints . Formally : Definition 9 . Given a regular grid G of granularity m × n consisting of cells ck,l ( 1 § k § m and 1 § l § n ) , each of which has cell density G(k , l ) ( where cell density is defined as the number of distinct trajectories traversing the cell ) , a region density threshold δ , a similarity threshold σ and a set S of p dimensional UnTra T , we define the CenTra of S as an UnTra whose regions at each period pj , 1§j§P , correspond to a Local CenTra ( L_CenTra ) , which is an Augmented Region ( AR ) of a seed region that has been extended “ towards ” other regions ( ie sub trajectories ) if and only if ( a ) the similarity between uri,j ( under examination ) regions and L_CenTra is Sim(L_Centra,uri,j ) ≥ σ , and ( b ) adopted regions ARi,j have average density avg_density(ARi,j ) ≥ δ .
)i
(
Figure 2 illustrates the developed CenTra algorithm used to calculate the centroid trajectories based on Definition 9 . The background idea is to perform some kind of time focused local clustering using a region growing technique under similarity and density constraints . The algorithm for each time period ( line 2 ) , determines an initial seed region , ( via the Init_Local_CenTra ( line 3 ) ) and searches for the maximum region that is composed of all sub trajectories that are similar over σ and dense over δ .
The seed region is determined as the one with the minimum average distance from the rest candidate regions . Subsequently , the growing process begins ( line 4 ) and the algorithm tries to find the next region to extend ( lines 5 6 ) among the k Most Similar Trajectories ( k MST ) [ 10 ] , as someone would expect to find the best region in one of these k regions . Note that searching for the k MST introduces only a small overhead in the algorithm ’s execution since the corresponding results are kept in a priority queue that has been fed during the initialization of the seed region ( line 3 ) . Then the algorithm searches among the candidates regions , ie , those that satisfy the similarity and density constraints ( line 7 ) , in order to find the best , ie , the one that has the maximum similarity , or , the one that maximizes the average density after growing ( lines 9 10 ) . The whole process continues until no more growing can be applied ( line 11 ) , appending in each repetition the temporally local centroid L_CenTra to CenTra ( line 12 ) .
Algorithm CenTra(set of I UnTra S , Grid G , Real δ , Real σ , Integer k )
01 . CenTra= ∅ ; 02 . forall temporal periods pj 03 . L_CenTra = Init_Local_Centra(pj ) ; 04 . repeat 05 . forall regions uri,j in k MST 06 . ARi,j = L_CenTra extended with uri,j ; 07 . AR ={uri,j|Sim(L_CenTra,uri,j)¥σ and avg_density(ARi,j)¥δ} ; 08 . if AR ∫ « 09 . uri,j=argmaxregœAR(Sim(L_CenTra,ARreg ) , avg_density(ARreg) ) ; 10 . L_CenTra=ARi,j ; 11 . until AR ∫ « ; 12 . CenTra=CenTra ∪ L_CenTra ; 13 . return CenTra ;
Figure 2 : CenTra Algorithm
5.2 The CenTR I FCM algorithm for I UnTra
Continuing our discussion regarding FCM , it must be mentioned that its direct employment in the context of TD would result to an inefficient scheme : during the process of transforming trajectories to data points , initial trajectories should be interpolated at all time instances every other trajectory sampled its position , something that would prohibitively increase the dimensionality of the problem . More importantly , using an A norm as the mean to measure the distance between trajectories , it is expected to encounter all the well known problems being present when measuring the similarity in time series data , such as the presence of outliers , different speeds , local shifts , different baselines and scales . Furthermore , FCM tries to partition the dataset simply by looking at the vector values ignoring the fact that these vectors may be accompanied by qualitative information ( ie , the uncertainty ) which may be given per dimension .
Contrary to these shortcomings , we take advantage of our intuitionistic trajectory representation I UnTra , ie , the p dimensional vectors of triplets ( uri,j , µΑ(uri,j ) , γΑ(uri,j) ) . While it is evident that the FCM algorithm can not utilize intrinsically such qualitative information , we propose a different perspective by substituting the distance function with the distance metric Dtotal introduced in Section 4 . As such , the fuzzy c means objective function takes the form :
J
− −
CenTR I FCM m
( U V
,
)
= c
N
∑∑
= 1 i
= 1 k
( u ik m
)
− x k
UnTra v i IFS
( 13 )
Theorem 2 . Given a ( p c× ) dimensional matrix V storing c centroids trajectories I UnTra of dimensionality p , a distance between trajectory xk and cluster centroid vi , a weighting exponent m œ [ 1,¶ ) , and sets Ik , kI defined as : v− i IFS
UnTra x k
∀ ≤ ≤ k N
1
,
{
1 i {
=
I k
≤ ≤ i
; c
1 , 2 , ,
}
0 ,
−
UnTra v i IFS
=
,
I k x k } c
\ k
 =  I   ,
) then
CenTR I FCM
− − mJ
( U V may be minimized if and only if :
 (   =      u ik
∀ ≤ ≤ 1 i c ≤ ≤ i k N and x k
− v i
UnTra
IFS
1 − 1 m
)
( x k
− v j
UnTra
IFS
− 1
) 1 m c
∑
= 1 j
∉ 0 , i ∑ ∈ 1 ,
= u i ik
I k
I k
∈ i I k
    
, I k
≠ ∅
,
,
I k
= ∅
,
( 14 )
∀ ≤ ≤ 1 i c v i
N
= ∑
= 1 k
( u ik m
) x k
N
∑
= 1 k
( u ik m
)
.
( 15 )
( 15 ) Proof straightforward mathematical operations . sketch : Eqs .
( 14 ) and follow from
Note that uik corresponds to the membership of the k th I UnTra to the i th cluster and it is different from the internal intuitionistic fuzzy memberships of each I UnTra . Moreover , after the centroids’ computation using Eq ( 15 ) and before the next iteration , where the memberships iku to the new clusters are updated , we calculate the memberships and non memberships of the new ( virtual ) centroid trajectories . At each iteration and for every jiµ ( noncentroid we extract the membership degree jiγ ) of centroid vi as the average of membership degrees the memberships ( non memberships , respectively ) of all IUnTra that belong to cluster i . More formally , if Ci is a set defined as { =
∀ ≤ ≤ ∧ ≠ , 1 k N x k
≤ ≤
1
}
UnTra
UnTra x k v r
−
−
< v i
C
IFS
IFS k c r r
; i i
∀ ≤ ≤ 1 i c we obtain that : µ
∀ ≤ ≤ 1 j p
=
∑
∀ ∈ k C i
µ k j
C i
,
ν i
= j
∑
∀ ∈ k C i
γ k j
C i
( 16 ) i j
Using the update procedure of Eq ( 15 ) in the TD setting we would share the same problems with FCM and k means . Since we are especially interested in the representation of real movement patterns , we could use the centroid trajectory derived by the density based CenTra algorithm instead of this weighted averaging technique ; we argue that the adoption of CenTra as the update centroid methodology of the product of Theorem 2 , will result to more meaningful trajectory clustering . The idea is that the algorithm implied by Theorem 2 iteratively tries to diminish the intra cluster variance using some global , approximate distance metric , and CenTra comes at each iteration to push ( ie , grow ) the centroid ( only the subtrajectories and not towards interesting places , where interestingness in our case means high density and similarity . The incorporation of CenTra into FCM ( named Centroid TRajectory Intuitionistic FCM ( CenTR I FCM ) ) is a straightforward task and only takes place at line 4 of the algorithm in Figure 3 with the invocation of CenTra . the whole trajectory )
Algorithm CenTR I FCM ( set of I UnTra S , Real ε , Int c ) 01 . V(0 ) = c random I UnTra ; j=1 ; 02 . repeat 03 . Calculate membership matrix U(j )
04 . Update the centroids’ matrix V(j )
05 . Compute membership and non membership
06 . Until ||Uj+1 Uj||F≤ε ; j=j+1 ; degrees of V(j ) // use Eq ( 16 ) using CenTra ;
// use Eq ( 14 )
Figure 3 CenTR I FCM algorithm for clustering I UnTra
6 . Experimental evaluation
In this section , we present an experimental study in order to evaluate our approach . The experiments were run on a PC with Intel Core Duo at 2.53 GHz , 4 GB RAM and 240 GB hard disk . We implemented the proposed algorithms using C++ .
6.1 Datasets in order to be used as ground
To the best of our knowledge in the TD domain there is no available real dataset already clustered by a domain expert truth for benchmarking . Nevertheless , in this paper , we have used a real dataset from which we extracted real clusters . The initial dataset consists of the GPS tracked positions of 50 trucks transporting concrete in the area of Athens between August and September 2002 ( the dataset is publicly available at http://wwwrtreeportalorg ) There are 112,300 position records consisting of the truck identifiers , dates and times , and geographical coordinates . The temporal spacing is regular and equals 30 seconds . From these raw data , we produced 1100 trajectories by splitting the recordings of a truck in subsets if there was a temporal gap between two consecutive recordings larger than 15 minutes ( a gap that indicates a stop not due to traffic or traffic lights ) . Subsequently , we used the CommonGIS visual analytics tool [ 2 ] to manually identify real clusters , thus producing four identifiable clusters . More specifically , we discovered two clusters of trajectories where the start and end locations almost coincide , ie each truck returned to its original location after performing a round trip ; the directions of the trips of the two clusters differ ( we call these two clusters “ round trips ” ) . Likewise , we also discovered two clusters , moving E W and W E , respectively , ( we call these two clusters “ linear trips ” ) .
6.2 Experiments
We implemented a variation of the classic FCM algorithm appropriately modified for our needs . In order to be as fair as possible , this algorithm , named TR FCM , uses our point vector representation of trajectories , along with the minimum distance between MBRs so as to calculate the distance between the cluster ’s centroid and each candidate trajectory . In our first experiment we employed only the two “ linear trips ” clusters . We then used our CenTR I FCM and TR FCM algorithms varying the grid ’s cell size and ε , and we measured the algorithm ’s success as the percentage of the correctly classified trajectories . The corresponding regarding CenTR I FCM are illustrated in Figure 4 ; note that cell size in Figure 4(a ) and ( b ) is demonstrated as percentage of the size of the total space . Regarding the other experiment ’s parameters , in Figure 4(a ) we fix the value for the density threshold δ to 2 % ( of the total number of trajectories ) , while in Figure 4(b ) , we set ε to 1 . In all cases we fix parameters σ to 0.5 and k to the number of trajectories in each cluster . results
Clearly , Figure 4 demonstrates that CenTR I FCM achieves very good results , with a typical rate above 70 % , while it reaches 90 % when the cell size is set to its maximum value , regardless of the value of δ and ε , as clustering is performed at a higher granularity level where specific movement details are vanishing . On the other hand , when using the same experimental settings over TRFCM , it produces rather poor results , with an average success of about 53 % regardless of the experimental settings . We also performed the same experiments on the other two clusters ( ie , “ round trips ” ) ; the respective figures are omitted due to space constraints . Nevertheless , the general observation obtained from this study , is that the CenTR I FCM outperforms TR FCM regardless of the experimental setting , verifying that it produces very good clustering results , with a typical rate above 65 % .
In order to study the algorithms’ behaviour in cases where more than two clusters are present , we performed another experiment using different portions of the trucks dataset containing three ( ie , the two “ round trips ” clusters , and one of the “ linear trips ” clusters ) , and four clusters . The results of this experiment are illustrated in Figure 5(a ) ; again , CenTR I FCM clearly outperforms its competitor . On the other hand , the performance of both algorithms evidently downgrades as the number of requested clusters increases ; however the performance of our proposal decreases with a smaller ratio , always being above 75 % . s s e c c u S
100
90
80
70
60
50
40
30
20
10
0 s s e c c u S
100
90
80
70
60
50
40
30
20
10
0
0.80 %
1.00 %
1.33 %
2.00 %
Cell Size
4.00 %
6.67 % 0
2
1
3
ε
( a )
0.80 %
1.00 %
Cell Size
1.33 %
2.00 %
( b )
4.00 %
6.67 %
0.02
0.04
δ
0.06
Figure 4 : Clustering accuracy scaling ( a ) cell size , ε and ( b ) density threshold , δ
Regarding the performance of the CenTR I FCM algorithm , it was evaluated using the whole “ trucks ” dataset by increasing the trajectory cardinality . The results illustrated in Figure 5(b ) demonstrate the efficiency of the proposed algorithm for various numbers of clusters requested . It is clear that the performance of the algorithm is not affected by the number of clusters , while all curves illustrated in Figure 5(b ) imply that the algorithm has super linear behaviour regarding the dataset cardinality . s s e c c u S
100
90
80
70
60
50
40
30
20
10
0
2
CenTR I FCM
TR FCM
3
# Clusters
( a )
2 clusters
3 clusters
4 clusters
5 clusters
) c e s ( e m i t n o i t u c e x E
20
18
16
14
12
10
8
6
4
2
0
4
0
200
400
600
800
1000
1200
# Trajectories
( b )
Figure 5 : ( a ) Clustering accuracy scaling the number of clusters ( b ) TR I FCM performance scaling the dataset cardinality illustrates
To complete our experimental study , we evaluate the quality of the CenTra algorithm . Although starting from different base lines and focusing on different applications , we compare it with the representative trajectory produced by the state of the art TRACLUS algorithm [ 14 ] . The result of the comparison is illustrated in Figure 6 . In particular , Figure 6(a ) the outcome of TRACLUS . Evidently , the cluster representative ( red line ) does not fit the real movement , mainly due to its averaging technique . Recall at this point that TRACLUS clusters segments rather than whole trajectories ( even considering this , the algorithm does not compass the turn occurring at the bottom of the figure ) . On the other hand , Figure 6(b ) and Figure 6(c ) illustrate CenTra , produced with variable cell size , ε and density δ . It turns out that CenTra not only resides on the data traces , but also vanishes the noninteresting movement details ( the ‘noisy’ infrequent parts are not part of the centroid ) , it catches turns , and it becomes thicker in portions where something interesting ( ie dense similar subtrajectories ) happens .
( a )
( b )
( c )
Figure 6 : Representative Trajectories ( TRACLUS ) ( a ) and Centroid Trajectories ( CenTra ) ( (b ) with cell size=1.3 % , ε=0 and
δ=0.09 , and ( c ) with cell size=2.8 % , ε=0 and δ=0.02 ) in “ round trips ” dataset
[ 8 ] L . Dengfeng , C . Chuntian , ‘New similarity measure of to pattern intuitionistic recognitions’ , Pattern Recognition Letters , 23 , 2002 . fuzzy sets and application
[ 9 ] M . Ester , H P Kriegel , J . Sander , and X . Xu , ‘A DensityBased Algorithm for Discovering Clusters in Large Spatial Databases with Noise’ , In Proc . of KDD , 1996 .
[ 10 ] E . Frentzos , K . Gratsias , Y . Theodoridis . ‘Index based
Most Similar Trajectory Search’ , In Proc . of ICDE , 2007 .
[ 11 ] S . Gaffney , and P . Smyth , ‘Trajectory Clustering with Mixtures of Regression Models’ , In Proc . of SIGKDD , 1999 .
[ 12 ] F . Giannotti , M . Nanni , D . Pedreschi , F . Pinelli , ‘Trajectory
Pattern Mining’ , In Proc . of SIGKDD , 2007 .
[ 13 ] E . J . Keogh and M . J . Pazzani . ‘A simple dimensionality reduction technique for fast similarity search in large time series databases’ . In Proc . of PAKDD , 2000 .
[ 14 ] J G Lee , J . Han , and K Y Whang , ‘Trajectory clustering : a partition and group framework’ . In Proc . of SIGMOD , 2007 .
[ 15 ] Y . Li , DL Olson , Z . Qin , ‘Similarity measures between vague sets : A comparative analysis’ , Pattern Recognition Letters , 28 , 2007 .
[ 16 ] S . Lloyd , ‘Least Squares Quantization in PCM’ , IEEE
Trans . Information Theory , 28(2 ) , 1982 .
[ 17 ] N . Pelekis , I . Kopanakis , I . Ntoutsi , G . Marketos , G . Andrienko and Y . Theodoridis . ‘Similarity Search in Trajectory Databases’ . In Proc . of TIME , 2007 .
[ 18 ] D . Pfoser , and C . S . Jensen , ‘Capturing the Uncertainty of
Moving Object Representations’ . In Proc . of SSD , 1999 .
[ 19 ] G . Trajcevski , O . Wolfson , K . Hinrichs , and S . Chamberlain , ‘Managing uncertainty in moving objects databases’ , ACM TODS . 29(3 ) , 2004 .
[ 20 ] M . Vlachos , G . Kollios , and D . Gunopulos , ‘Discovering Similar Multidimensional Trajectories’ , In Proc . of ICDE , 2002 .
[ 21 ] W . Wang , J . Yang , and R . R . Muntz , ‘STING : A Statistical Information Grid Approach to Spatial Data Mining’ , In Proc . of VLDB , 1997 .
[ 22 ] MS Waterman , TF Smith , and WA Beyer , ‘Some biological sequence metrics’ , Advances in Mathematics , 20(4 ) , 1976 .
[ 23 ] B K Yi , H . Jagadish , and C . Faloutsos , ‘Efficient Retrieval of Similar Time Sequences under Time Warping’ . In Proc . of ICDE , 1998 .
[ 24 ] LA Zadeh , ‘Fuzzy sets’ , Information Control , 8 , 1965 . [ 25 ] T . Zhang , R . Ramakrishnan , and M . Livny , ‘BIRCH : An for Very Large
Efficient Data Clustering Method Databases’ , In Proc . of SIGMOD , 1996 .
7 . CONCLUSION AND FUTURE WORK
In this paper , we proposed a three step approach for clustering trajectories of moving objects , motivated by the observation that clustering and representation issues in TD that are inherently subject to uncertainty . Based on our intuitionistic fuzzy vector representation of trajectories , we defined a distance metric consisting of two components , a metric for sequences of regions DUnTra and a metric for intuitionistic fuzzy sets DIFS , respectively , and used it to devise for clustering trajectories under uncertainty , which also includes a novel technique for discovering the centroid of a bundle of trajectories ( called CenTra ) . The effectiveness and efficiency of our approach has been experimentally shown on a real trajectory dataset . so called CenTR I FCM algorithm the
Clear future work objectives arise from our proposal : we plan to adopt some clever sampling technique for multi dimensional data so as to diminish the effect of initialization in our algorithms , while a second direction includes the development of an index based version for efficiency purposes and the performance of an extensive experimental evaluation using large trajectory datasets .
8 . REFERENCES
[ 1 ] O . Abul , F . Bonchi , M . Nanni , ‘Never Walk Alone : Uncertainty for Anonymity in Moving Objects Databases’ , In Proc . of ICDE , 2008 .
[ 2 ] G . Andrienko , N . Andrienko , and S . Wrobel , ‘Visual Analytics Tools for Analysis of Movement Data’ , ACM SIGKDD Explorations , 9 ( 2 ) , 2007 .
[ 4 ]
[ 3 ] KT Atanassov , ‘Intuitionistic Fuzzy Sets : Theory and Applications’ , Studies in Fuzziness and Soft Computing , 35 , 1999 . JC Bezdek , R . Ehrlich , and W . Full , ‘FCM : the Fuzzy cMeans clustering algorithm’ , Computers and Geosciences , 10 , 1984 . I . V . Cadez , S . Gaffney , and P . Smyth , ‘A general probabilistic framework for clustering individuals and objects’ , In Proc . of SIGKDD , 2000 .
[ 5 ]
[ 6 ] L . Chen and R . Ng , ‘On the marriage of edit distance and
Lp norms’ , In Proc . of VLDB , 2004 .
[ 7 ] L . Chen , M . Tamer Özsu , and V . Oria , ‘Robust and Fast Similarity Search for Moving Object Trajectories’ , In Proc . of SIGMOD , 2005 .
