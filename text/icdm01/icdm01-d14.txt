Data Analysis and Mining in Ordered Information Tables
Ying Sai , YY Yao
Department of Computer Science
University of Regina
Ning Zhong
Department of Information Engineering
Maebashi Institute of Technology
Regina , Saskatchewan , Canada S4S 0A2
460 1 , Kamisadori Cho , Maebashi 371 , Japan
E mail : yyao@csureginaca
E mail : zhong@maebashi itacjp
Abstract
Many real world problems deal with ordering objects instead of classifying objects , although majority of research in machine learning and data mining has been focused on the latter . For modeling ordering problems , we generalize the notion of information tables to ordered information tables by adding order relations on attribute values . The problem of mining ordering rules is formulated as finding association between orderings of attribute values and the overall ordering of objects . An ordering rules may state that “ if the value of an object x on an attribute a is ordered ahead of the value of another object y on the same attribute , then x is ordered ahead of y ” . For mining ordering rules , we first transform an ordered information table into a binary information , and then apply any standard machine learning and data mining algorithms . As an illustration , we analyze in detail Maclean ’s universities ranking for the year 2000 .
1 Introduction
In real world situations , we may be faced with many problems that are not simply classification [ 1 , 7 ] . One such type of problems is the ordering of objects . Two familiar examples are the ranking of universities and the ranking of consumer products produced by different manufacturers . In both examples , we have a set of attributes that are used to describe the objects under consideration . Consider the example of ranking consumer products . Attributes may be the price , warranty , and other information . The values of a particular attribute , say the price , naturally induce an ordering of objects . The overall ranking of products may be produced by their market shares of different manufacturers . The orderings of objects by attribute values may not necessarily be the same as the overall ordering of objects . In this setting , a number of important issues arise . It would be interesting to know which attributes play more important roles in determining the overall ordering , and which attributes do not contribute at all to the overall ordering . It would also be useful to know which subset of attributes would be sufficient to determine the overall ordering . The dependency information of attributes may also be valuable .
In this paper , we study the problem of data analysis with ordered information in general , and mining ordering rules in particular , based on our earlier results on this topic [ 12 , 14 , 15 ] . The problem of mining ordering rules can be described as follows . There is a set of objects described by a set of attributes . There is an ordering on values of each attribute , and there is also an overall ordering of objects . The overall ordering may be given by experts or obtained from other information , either dependent or independent of the orderings of objects according to their attribute values . We are interested in mining the association between the overall ordering and the individual orderings induced by different attributes . More specifically , we want to derive ordering rules exemplified by the statement that “ if the value of an object x on an attribute a is ordered ahead of the value of another object y on the same attribute , then x is ordered ahead of y ” .
The notion of ordered information tables is introduced as a generalization of information tables . As a starting point , we focus on the dependency of attributes . The notions of reducts and core , which have been studied extensively in the literature of rough sets [ 6 ] , are derivable from the dependency of attributes and play an important role in mining ordering rules . In mining ordering rules , we first transform an ordered information table into a binary information , and then apply any standard machine learning and data mining algorithms .
Ordered information tables are related to ordinal information systems proposed and studied by Iwinski [ 4 ] . Orderings induced by attribute values in information tables were also considered by Greco , Matarazzo and Slowinski [ 2 , 3 ] . They addressed the problem of finding ordering rules by approximating preference relations through dominance relations . They also discussed approach of transforming an ordered information table into a binary table and mining the
1 corresponding binary table . However , they suggested that the method is not very suitable in some situations for decision making . Instead , they proposed a method based on the approximation of a preference relation by dominance relations , in which certain parameters must be determined by experiments . Although their method may be more general , it does not provide a pure qualitative framework , which may be important for the analysis of ordered information tables . Furthermore , one may gain more insights by studying a less general model .
2 Ordered Information Tables
In many information processing systems , objects are typically represented by their values on a finite set of attributes . Such information may be conveniently described in a tabular form [ 6 ] . The rows of the table correspond to objects of the universe , the columns correspond to a set of attributes , and each cell gives the value of an object with respect to an attribute . Definition 1 An information table is a quadruple :
IT = ( U , At , {Va | a ∈ At} , {Ia | a ∈ At} ) , where
U is a f inite nonempty set of objects ,
At is a f inite nonempty set of attributes , Va is a nonempty set of values f or a ∈ At , Ia : U → Va is an inf ormation f unction .
For simplicity , we have considered only information tables characterized by a finite set of objects and a finite set of attributes . Each information function Ia is a total function that maps an object of U to exactly one value in Va . An information table represents all available information and knowledge about the objects under consideration . Objects are only perceived , observed , or measured by using a finite number of properties .
An information table does not consider any semantic relationships between distinct values of a particular attribute . By incorporating semantics information , we may obtain different generalizations of information tables [ 12 ] . Generalized information tables may be viewed as information tables with added semantics . In this paper , we introduce order relations on attribute values . Definition 2 Let U be a nonempty set and be a binary relation on U . The relation is a weak order if it satisfies the two properties :
Asymmetry : x y =⇒ ¬(y x ) ,
Negative transitivity :
( ¬(x y ) , ¬(y z ) ) =⇒ ¬(x z ) .
An important implication of a weak order is that the fol lowing relation , x ∼ y ⇐⇒ ( ¬(x y ) , ¬(y x) ) ,
( 1 ) is an equivalence relation . For two elements , if x ∼ y we say x and y are indiscernible by . The equivalence relation ∼ induces a partition U/∼ on U , and an order relation ∗ on U/∼ can be defined by :
[ x]∼ ∗ [ y]∼ ⇐⇒ x y ,
( 2 ) where [ x]∼ is the equivalence class containing x . Moreover , ∗ is a linear order . Any two distinct equivalence classes of U/∼ can be compared . It is therefore possible to arrange the objects into levels , with each level consisting of indiscernible elements defined by . For a weak order , ¬(x y ) can be written as y x or x y , which means y x or y ∼ x . For any two elements x and y , we have either x y or y x , but not both .
Definition 3 An ordered information table is a pair :
OIT = ( IT , {a| a ∈ At} ) , where IT is a standard information table and a is a weak order on Va .
An ordering of values of a particular attribute a naturally induces an ordering of objects , namely , for x , y ∈ U : x {a} y ⇐⇒ Ia(x ) a Ia(y ) ,
( 3 ) where {a} denotes an order relation on U induced by the attribute a . An object x is ranked ahead of another object y if and only if the value of x on the attribute a is ranked ahead of the value of y on a . The relation {a} has exactly the same properties as that of a . For a subset of attributes A ⊆ At , we define : x A y ⇐⇒ ∀a ∈ A[Ia(x ) a Ia(y ) ]
⇐⇒ ^a∈A ⇐⇒ \a∈A
Ia(x ) a Ia(y )
{a} .
( 4 )
That is , x is ranked ahead of y if and only if x is ranked ahead of y according to all attributes in A . The above definition is a straightforward generalization of the standard definition of equivalence relations in rough set theory , where the equality relation = is used [ 6 ] . Mining ordering rules based on order relations is a concrete example of applications of our earlier studies on generalizations of rough set model with non equivalence relations [ 11 , 13 ] .
For simplicity , we also assume that there is a special attribute , called the decision attribute . The ordering of objects by the decision attribute is denoted by {o} and is called the overall ordering of objects .
2 a p1 middle large p2 small p3 small p4 small p5 b
3 years 3 years 3 years 3 years 2 years c
$200 $300 $300 $250 $200 d heavy very heavy light very light very light o 1 3 3 2 3 a : b : c : d : o : small a middle a large , 3 years b 2 years , $200 c $250 c $300 , very light d light d heavy d very heavy , 1 o 2 o 3 .
Table 1 . An ordered information table
Example 1 Suppose we have an ordered information table of a group of products produced by five manufacturers as shown in Table 1 . In this table , a , b , c , d , and o stand for size , warranty , price , weight , and overall ordering on a set of products , respectively . Based on orderings of attribute values , we obtain the following orderings of products :
{a}
{b}
{c}
∗ ∗ ∗ ∗ ∗
{d}
{o}
: :
: :
:
{a} [ p1 ] ∗ {b} [ p5 ] ,
[ p3 , p4 , p5 ] ∗ [ p1 , p2 , p3 , p4 ] ∗ [ p1 , p5 ] ∗ [ p4 , p5 ] ∗ [ p1 ] ∗
{o} [ p4 ] ∗
{c} [ p4 ] ∗ {d} [ p3 ] ∗
{c} [ p2 , p3 ] , {d} [ p1 ] ∗ {o} [ p2 , p3 , p5 ] .
{a} [ p2 ] ,
{d} [ p2 ] ,
For subsets {a , b} and {c , d} , we have :
{a,b} {c,d}
: ∅ , : p1 {c,d} p2 , p4 {c,d} p2 , p5 {c,d} p2 , p4 {c,d} p3 , p5 {c,d} p3 .
By combining attributes a and b , all objects are put into the same class . It is interesting to note that {c,d} is not a weak order . That is , the intersection of two weak orders may not produce a weak order . This suggests that rules using simple conditionVa∈A Ia(x ) a Ia(y ) might not be very useful . 3 Analyzing Ordered Information Tables
In an ordered information table OIT , an atomic expression over a single attribute a is defined as either ( a , ) or ( a , ) . For a set of attributes A ⊆ At , an expression over A in OIT is defined by Va∈A e(a ) , where e(a ) is an atomic expression over a . The set of all expressions over A in an ordered information table OIT is denoted by E(A ) . In general , we may also consider expressions connected by other
3 logic connectives such as ¬ and ∨ . For simplicity , we restrict our discussion to only ∧ .
In an ordered information table , we deals with pairs of objects . We will not consider the object pairs ( x , x ) . The universal set is thus given by ( U ×U )+ = U ×U −{(x , x ) | x ∈ U } = {(x , y ) | x , y ∈ U , x 6= y} . The meanings of the expressions are given as follows : m(a , ) = {(x , y ) ∈ ( U × U )+ | Ia(x ) a Ia(y)} , m(a , ) = {(x , y ) ∈ ( U × U )+ | Ia(x ) a Ia(y)} , m(^a∈A e(a ) ) = \a∈A m(e(a) ) .
An object pair ( x , y ) satisfies an expression φ , written ( x , y ) |= φ , if the order as specified by the expression φ is ( x , y ) . The set m(φ ) consists of all object pairs that satisfy the expressed φ .
For the set of expressions E(A ) , the family {m(φ ) 6= ∅ | φ ∈ E(A)} forms a partition of ( U × U )+ , denoted by P ( A ) . Each object pair satisfies one and only one expression from E(A ) .
Definition 4 An attribute set B depends on another attribute set A , or A determines B , written A → B , if and only if P ( A ) is a finer partition of P ( B ) , namely , for each equivalence class X ∈ P ( A ) , there exist an equivalence class Y ∈ P ( B ) such that X ⊆ Y .
Suppose B depends on A . For any expression φ ∈ E(A ) , if an object pair ( x , y ) ∈ ( U × U )+ satisfies φ , ie , ( x , y ) |= φ , then there exists a corresponding expression ψ ∈ E(B ) , such that ( x , y ) |= ψ . The ordering of objects by A determines the ordering of objects by B .
Definition 5 Two attribute sets A , B ⊆ At are equivalent if and only if P ( A ) = P ( B ) .
Two sets of attributes A and B are equivalent , if and only if A depends on B and B depends on A . The ordering of objects by A determines the ordering of objects by B , and vice versa . Regarding the ordering of objects , A and B contain exactly the same information .
Definition 6 An attribute a ∈ A is dispensable in A if and only if A and A − {a} are equivalent ; otherwise a is indispensable in A .
Definition 7 An attribute set A is an independent set if and only if every a ∈ A is indispensable ; otherwise A is a dependent set .
Each attribute in an independent attribute set contributes to the ordering of objects .
Definition 8 A subset B ⊆ A is a reduct of A if and only if B is an independent set and is equivalent to A .
A reduct B ⊆ A is a minimal subset of A , in the sense that it does not contain any dispensable attributes , and produces the ordering of objects as given by A . Typically , a set of attributes may have many reducts . The set of all reducts of an attribute set A is denoted by RED(A ) .
Definition 9 The set of all indispensable elements of A is called the core of A and is denoted by CORE(A ) .
An attribute in the core must be in every reduct . Thus , we have :
CORE(A ) = \ RED(A ) .
( 5 )
The set of attributes CORE(A ) are so essential that they can not be eliminated without losing the ordering information provided by A . The core may be empty .
Definition 10 An attribute a ∈ A is absolutely dispensable in A if it does not belong to any reduct , namely , a ∈ A −
S RED(A ) .
An absolutely dispensable attribute does not contribute at all to ordering of objects based on A .
Example 2 Let U = {x , y , z} and A = {a , b , c} . Consider the order relations induced by the three attributes :
∗ ∗ ∗
{a} : {b} : {c} :
[ x ] ∗ [ z ] ∗ [ z ] ∗
{a} [ y ] ∗ {b} [ x , y ] , {c} [ y ] ∗
{a} [ z ] ,
{c} [ x ] .
For the entire set of attributes , we have :
E({a , b , c} ) = {(a , ) ∧ ( b , ) ∧ ( c , ) , ( a , ) ∧ ( b , ) ∧ ( c , ) , ( a , ) ∧ ( b , ) ∧ ( c , ) , . . }
For clarity , we only explicitly give the expressions whose meanings are nonempty sets of object pairs . The corresponding partition , P ( {a , b , c} ) , is given by : m((a , ) ∧ ( b , ) ∧ ( c , ) ) = {(x , y ) , ( x , z ) , ( y , z)} , m((a , ) ∧ ( b , ) ∧ ( c , ) ) = {(y , x)} , m((a , ) ∧ ( b , ) ∧ ( c , ) ) = {(z , x ) , ( z , y)} .
For the subset of attributes {a , b} , we have :
E({a , b} ) = {(a , ) ∧ ( b , ) , ( a , ) ∧ ( b , ) ,
( a , ) ∧ ( b , ) , . . .} , which induces the partition P ( {a , b} ) : m((a , ) ∧ ( b , ) ) = {(x , y ) , ( x , z ) , ( y , z)} , m((a , ) ∧ ( b , ) ) = {(y , x)} , m((a , ) ∧ ( b , ) ) = {(z , x ) , ( z , y)} .
4
Since P ( {a , b , c} ) = P ( {a , b} ) , the attribute sets {a , b , c} and {a , b} are equivalent . It can be easily verified that P ( {a , b} ) 6= P ( {a} ) and P ( {a , b} ) 6= P ( {b} ) . Thus , the attribute set {a , b} is an independent set and is a reduct of A . Another reduct is given by {b , c} . We have RED(A ) = {{a , b} , {b , c}} and CORE(A ) = {b} . There is no absolute dispensable attribute .
The concepts of dependency , dispensable attributes and reduct capture the connections between attributes with respect to ordering produced by a set A . They provide us with a basis for analyzing and simplifying an ordered information table by removing certain attribute without loss of information . In some situations , it is necessary to study relationship between attributes relative to the overall ordering of objects . In what follows , we consider an ordered information table with a decision attribute o , ie , the overall ordering of objects . All the concepts developed so far can be easily extended .
Definition 11 Let A ⊆ At be an attribute set . For an expression φ ∈ E(A ) , we say o φ depends on A , denoted by A →φ o , if and only if m(φ ) ⊆ m(o , ) or m(φ ) ⊆ m(o , ) .
While dependency of attributes show global connection between attributes , φ dependency shows local connection . Assume o φ depends on A . If any two objects satisfy the particular orderings specified by φ on A , one can tell their ordering by o .
Definition 12 Let A , B ⊆ At . Two attributes sets A and B are equivalent with respect to o , if and only if
[ φ∈E(A )
Mo(φ ) = [ φ0∈E(B )
Mo(φ0 ) , where Mo(φ ) is defined by :
Mo(φ ) = fl m(φ ) ,
∅ ,
A →φ o , otherwise .
( 6 )
( 7 )
If A and B are equivalent with respect to o , any two objects that can be properly ordered on o according to A must be properly ordered according to B , and vice versa .
Definition 13 An attribute a ∈ A is dispensable with respect to o , if and only if A and A − {a} are equivalent with respect to o ; otherwise a is indispensable with respect to o .
Definition 14 An attribute set A is an independent set with respect to o , if and only if there is no dispensable attribute in A with respect to o .
Definition 15 A subset B ⊆ A is a reduct of A with respect to o , if and only if B is an independent set and equivalent to A with respect to o .
A reduct B ⊆ A with respect to o is sometimes called a relative reduct of A with respect to o . It consists of a minimal subset of attributes of A that provides the same ordering of objects on o as A itself . A set of attributes may have more than one relative reduct . The set of all relative reducts of an attribute set A is denoted by REDo(A ) .
Definition 16 The set of all indispensable elements of A with respect to o is called the core of A with respect to o and is denoted by COREo(A ) .
Similarly , the core of A with respect to o is called a relative core . The relative core of A is the intersection of all its relative reducts : and
COREo(A ) = \ REDo(A ) .
( 8 )
A relative core may be empty . Attributes in a nonempty relative core play essential roles in describing the overall ordering induced by o .
Example 3 Let U = {x , y , z} , A = {a , b , c} , and At = A ∪ {o} . Consider order relations induced by attributes given by :
∗ ∗ ∗ ∗
{a} : {b} : {c} : {o} :
[ x ] ∗ [ x , y ] ∗ [ z ] ∗ [ x ] ∗
{a} [ y , z ] , {b} [ z ] , {c} [ y ] ∗ {o} [ y ] ∗
{c} [ x ] , {o} [ z ] .
For the set {a , b , c} , we have :
E({a , b , c} ) = {(a , ) ∧ ( b , ) ∧ ( c , ) , ( a , ) ∧ ( b , ) ∧ ( c , ) , ( a , ) ∧ ( b , ) ∧ ( c , ) , ( a , ) ∧ ( b , ) ∧ ( c , ) , . . .}
= {φ1 , φ2 , φ3 , φ4 , . . }
The relationships between orderings induced by a , b , c and o can be seen as follows : m(o , ) = {(x , y ) , ( x , z ) , ( y , z)} , m(o , ) = {(y , x ) , ( z , x ) , ( z , y)} , m(φ1 ) = {(x , y)} ⊆ m(o , ) , m(φ2 ) = {(x , z)} ⊆ m(o , ) , m(φ3 ) = {(y , x ) , ( z , x ) , ( z , y)} ⊆ m(o , ) , m(φ4 ) = {(y , z)} ⊆ m(o , ) .
We have :
Mo(φ ) = ( U × U )+ .
[ φ∈E(A )
5
For the subset {a , b} , we obtain :
E({a , b} ) = {(a , ) ∧ ( b , ) , ( a , ) ∧ ( b , ) , ( a , ) ∧ ( b , ) , ( a , ) ∧ ( b , )} 1 , φ0
= {φ0
4} .
2 , φ0
3 , φ0
We have : m(φ0 m(φ0 m(φ0 m(φ0
1 ) = {(x , y)} ⊆ m(o , ) , 2 ) = {(x , z)} ⊆ m(o , ) , 3 ) = {(y , x ) , ( z , x ) , ( z , y)} ⊆ m(o , ) , 4 ) = {(y , z)} ⊆ m(o , ) ,
[ φ0∈E({a,b} )
Mo(φ0 ) = ( U × U )+ .
Since Sφ∈E(A ) Mo(φ ) = Sφ0∈E({a,b} ) Mo(φ0 ) , attribute sets {a , b , c} and {a , b} are equivalent with respect to o . It is easy to check that {a} and {b} are not equivalent to A , ie , the attribute set {a , b} is an independent set , and is is a relative reduct . One can also show that {c} is the other relative reduct of A . Hence we have REDo(A ) = {{a , b} , {c}} and COREo(A ) = ∅ .
4 Mining Ordering Rules
Data mining in an ordered information table may be formulated as finding association between orderings induced by attributes . One is interested in finding associations between two arbitrary subsets of attributes A and B .
Definition 17 Consider two subsets of attributes A , B ⊆ At . For two expressions φ ∈ E(A ) and ψ ∈ E(B ) , an ordering rule is read “ if φ then ψ ” and denoted by φ ⇒ ψ . The expression φ is called the rule ’s antecedent , while the expression ψ is called the rule ’s consequent .
An ordering rule states how orderings of objects by attributes in A determines orderings of objects by attributes in B . For example , an ordering rule ,
( a , ) ∧ ( b , ) ⇒ ( c , ) , can be re expressed as , x {a} y ∧ x {b} y ⇒ x {c} y .
That is , for two arbitrary objects x and y , if x is ranked ahead of y by attribute a , and at the same time , x is not ranked ahead of y by attribute b , then x is ranked ahead of y by attribute c . We adopt conditional probabilistic interpretations for ordering rules . A systematic analysis of probability related quantities associated with rules was given by Yao and Zhong [ 16 ] . We choose to use two measures called accuracy and coverage [ 10 ] .
Definition 18 The accuracy and coverage of an ordering rule , φ ⇒ ψ , are defined , respectively , by : accuracy(φ ⇒ ψ ) = coverage(φ ⇒ ψ ) =
|m(φ ∧ ψ)|
|m(φ)|
|m(φ ∧ ψ)|
|m(ψ)|
,
,
( 9 ) where | · | denotes the cardinality of a set .
The quantity accuracy(φ ⇒ ψ ) gives a measure of the correctness of the rule , and coverage(φ ⇒ ψ ) gives a measure of the applicability of the rule . In the extreme case , if accuracy = 1 , the ordering by φ would determine the ordering by ψ . If coverage = 1 , the rule states something about the entire ordering by ψ . The accuracy and coverage are not independent of each other , as both are related to the quantity |m(φ ∧ ψ)| . It is desirable for a rule to be accurate as well as to have a high degree of coverage . In general , one may observe a trade off between accuracy and coverage . A rule with higher coverage may have a lower accuracy , while a rule with higher accuracy may have a lower coverage .
Example 4 From the data in Example 1 , we can get , for example , two ordering rules :
( b , ) ∧ ( c , ) ⇒ ( o , ) , accuracy = 1.0 , coverage = 0.615 ,
( c , ) ⇒ ( o , ) , accuracy = 0.625 , coverage = 0714
To mine ordering rules from an ordered information table , we transform an ordered information table into a binary information . Any standard data mining algorithms can be immediately applied . In the binary information table , we consider object pairs ( x , y ) ∈ ( U × U )+ . The information function is defined by :
Ia(x , y ) = fl 1 ,
0 , x {a} y , x {a} y .
( 10 )
Statements in an ordered information table can be translated into equivalent statements in the binary information table . For example , x {a} y can be translated into Ia(x , y ) = 1 . In the translation process , we will not consider object pairs of the form ( x , x ) , as we are not interested in them .
In our approach , the interpretation of an ordered information table and the translation to a binary information table are crucial . Once we obtain the binary information table , any existing data mining algorithm can be used to mine ordering rules . For example , using Rosetta , a rough set toolkit for analyzing data , one can obtain a set of minimal ordering rules from reducts with certain properties [ 9 ] . A well known machine learning system C4.5 can also be used to learn ordering rules [ 8 ] .
Object ( 1 , 2 ) ( 1 , 3 ) ( 1 , 4 ) ( 1 , 5 ) ( 2 , 1 ) ( 2 , 3 ) ( 2 , 4 ) ( 2 , 5 ) ( 3 , 1 ) ( 3 , 2 ) ( 3 , 4 ) ( 3 , 5 ) ( 4 , 1 ) ( 4 , 2 ) ( 4 , 3 ) ( 4 , 5 ) ( 5 , 1 ) ( 5 , 2 ) ( 5 , 3 ) ( 5 , 4 ) a 1 0 0 0 0 0 0 0 1 1 0 0 1 1 0 0 1 1 0 0 b 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 c 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 d 1 0 0 0 0 0 0 0 1 1 0 0 1 1 1 0 1 1 1 0 o 1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0
Table 2 . A binary information table derived from an ordered information table
Example 5 Consider the ordered information table in Example 1 . It can be transformed into the binary information table , given by Table 2 . For this table , we obtain a reduct consisting of {b , c} . Examples of rules are given by :
R1 :
( b , ) ∧ ( c , ) ⇒ ( o , ) , accuracy = 1 , coverage = 0.615 ;
R2 :
( c , ) ⇒ ( o , ) , accuracy = 0.625 , coverage = 0.714 ;
R3 :
( b , ) ⇒ ( o , ) , accuracy = 0.5 , coverage = 0286
For R2 , it can be paraphrazed as saying that if x {c} y then x {o} y with accuracy 0.625 and coverage 0714
One may use other types of translation methods . For example , we may consider two strict order relations and ≺ , instead of and . Alternatively , one may translate an ordered information table into a three valued information table , corresponding to , ≺ , and ∼ . Greco , Matarazzo and Slowinski used graded preference relations which produce a multi valued information table [ 3 ] . By translating an ordered information table into a multi valued information table , one may consider magnitudes of attribute values . Unfortunately , it may be difficult to interpret these magnitudes . They must be obtained from either experts or experiments .
6
For this reason , we focus on the binary information table approach . It is important to realize that the framework presented in this paper can be easily applied with very simple modification .
5 A Real World Example
To demonstrate the usefulness and effectiveness of the proposed model , we analyze the data from the Maclean ’s universities 2000 ranking [ 5 ] . The Maclean ’s ranking compared universities with similar structures and mandates . All universities in Canada are classified into one of three categories : Medical/Doctoral universities , Comprehensive universities , and Primarily Undergraduate universities . Maclean ’s ranked 15 Medical/Doctoral universities based on 22 performance measure that are divided into six groupings , namely , Student Body ( 22% ) , Classes ( 17% ) , Faculty ( 17% ) , Finances ( 12% ) , Library ( 12 % ) , and Reputation ( 20% ) , where the weights in the parentheses indicate the contributions of the measures to the overall ranking . Table 3 summarizes the ranking measures .
The 22 performance measures produce 22 individual rankings and an overall ranking suggested by Maclean ’s . The details can be found in the November issue of Maclean ’s [ 5 ] . Using data analysis and data mining method introduced earlier , we can find reduct(s ) and the core of the ordered information table . We can also induce ordering rules which state association between the overall ranking and the rankings by 22 performance measures .
For our experiment , we used the Rosetta , a rough set toolkit for analyzing data [ 9 ] . We found that there are several reducts for this information table . One reduct with the minimal set length for explanation is {c1 , f3 , fi3 , l4 , r1 , s2 , s5} . This suggests that one can use seven measures to provides the same overall ranking of universities as given by Maclean ’s . The total weight of the seven measures is only 308 % In addition , measures in this reduct do not necessarily have the highest weights among performance measures . The number of measures in the reduct and the total weight are less than 1/3 of the ones used in the entire table . We also find that the core is empty , which means that there does not exist a measure that is absolutely essential for producing the overall ranking . These observations are interesting , as they indicate that some measures used by Maclean ’s may not be necessary , and moreover the weights may not necessarily reflect the importance of measures in producing the overall ranking . Another interesting observation of the the reduct {c1 , f3 , fi3 , l4 , r1 , s2 , s5} is that it contains at least one measure from each of the six categories .
Many ordering rules were found by using Rosetta . As examples , we list some rules with accuracy 1 and the highest degrees of coverage :
R1 : ( f 4 , ) ∧ ( f i3 , ) ∧ ( s2 , ) ⇒ ( o , ) , coverage = 0.6 ,
R2 : ( f 2 , ) ∧ ( f i3 , ) ∧ ( r1 , ) ⇒ ( o , ) , coverage = 0.590476 ,
R3 : ( f i3 , ) ∧ ( r1 , ) ∧ ( s2 , ) ⇒ ( o , ) , coverage = 0.590476 ,
R4 : ( f 1 , ) ∧ ( f i3 , ) ∧ ( s1 , ) ⇒ ( o , ) , coverage = 0.580952 ,
R5 : ( f 4 , ) ∧ ( r2 , ) ∧ ( s2 , ) ⇒ ( o , ) , coverage = 0.580952 ,
R6 : ( f 4 , ) ∧ ( f i3 , ) ∧ ( s1 , ) ⇒ ( o , ) , coverage = 0571429
All the rules use only three performance measures . Even using such a small number of measures , one can correctly state close to 60 % of the overall ranking .
Although the preliminary results obtained from the Maclean ’s university ranking may need further study , indepth analysis , and careful interpretation , they at least present another point of view to look at the important issue of university ranking . An added advantage is that our method is of qualitative nature , without considering any quantitative information .
6 Conclusions
Ordering of objects is a fundamental issue in human decision making and may play a significant role in the design of intelligent information systems . This problem is considered from the perspective of data mining . The commonly used attribute value approaches are extended by introducing order relations on attribute values . A data analysis model is thus proposed to describe properties of ordered information tables . Mining ordering rules is formulated as the process of finding associations between orderings on attribute values and the overall ordering of objects . These ordering rules tell us , or explain , how objects should be ranked according to orderings on their attribute values .
The proposed solution for mining ordering rules is simple . Our main contribution is the formulation of the problem , and the translation of the problem to existing data mining problem . Consequently , one can directly apply any existing data mining algorithms for mining ordering rules . The application of the proposed model to a real world example demonstrates its usefulness and effectiveness . Depending on the specific problems , one may use different translation methods .
References
[ 1 ] Cohen , WW , Schapire , RE , and Singer , Y . , Learning to order things , Advances in Neural Information
7 measure meaning s1 s2 s3 s4 s5 s6 c1 c2 c3 f1 f2 f3 f4 fi1 fi2 fi3 l1 l2 l3 l4 r1 r2 incoming students’ average high school grades proportion of those with averages of 75 per cent or more proportion of out of province first year undergraduate students percentage of international students at the graduate level graduation rates proportion of winning national academic awards class sizes at the first and second year levels class sizes at the third and fourth year levels percentage of first year classes taught by tenured/tenure track professors percentage of those with PhDs the number who win national awards social sciences and humanities grants , Canada Council grants last year medical/science grants last year the amount of money for current expenses per weighted full time equivalent student percentage of the budget spent on student services scholarships and bursaries the number of volumes and volume equivalents per total number of students total holdings percentage of a university ’s operating budget that was allocated to library services percentage of the actual library budget that was spent on updating the collection alumni support reputational survey weight 12 % 3 % 1 % 1 % 2 % 3 % 7 % 7 % 3 % 3 % 3 % 5.5 % 5.5 % 3.3 % 4.3 % 4.3 % 3 % 1 % 4 % 4 % 5 % 15 %
Table 3 . Maclean ’s performance measures for universities ranking , 2000
Processing Systems , 10 , 1998 .
[ 2 ] Greco , S . , Matarazzo , B . , and Slowinski , R . , The use of rough sets and fuzzy sets in MCDM , In : Advances in Multiple Criteria Decision Making , Gal , T . , Hanne , T . , and Stewart , T . ( Eds . ) Kluwer Academic Publishers , Boston , pp . 141 1459 , 1999 .
[ 3 ] Greco , S . , Matarazzo , B . , and Slowinski , R . , Rough approximation of a preference relation by dominance relations , European Journal of Operational Research 117 , 63 83 , 1999 .
[ 4 ] Iwinski , TB , Ordinal information system , I , Bulletin of the Polish Academy of Sciences , Mathematics , 36 , 467 475 , 1988 .
[ 5 ] Maclean ’s Universities 2000 , Macleans , November
20 , 2000 .
[ 6 ] Pawlak , Z . , Rough Sets , Theoretical Aspects of Reasoning about Data , Kluwer Academic Publishers , Dordrecht , 1991 .
[ 7 ] Pawlak , Z . and Slowinski , R . , Rough set approach to multi attribute decision analysis . European Journal of Operational Research , 72 , 443 359 , 1994 .
[ 8 ] Quinlan , JR , C4.5 : Program for Machine Learning ,
Morgan Kaufmann Publishers , San Marteo , 1993 .
[ 9 ] Rosetta , a rough set toolkit for analyzing data , http://wwwidintnuno/ aleks/rosetta/ .
8
[ 10 ] Tsumoto , S . , Modelling medical diagnostic rules based on rough sets , Rough Sets and Current Trends in Computing , Lecture Notes in Artificial Intelligence , 1424 , Springer Verlag , Berlin , pp . 475 482 , 1998 .
[ 11 ] Yao , YY , Generalized rough set models , in : Rough Sets in Knowledge Discovery , Polkowski , L . and Skowron , A . ( Eds. ) , Physica Verlag , Heidelberg , pp . 286 318 , 1998 .
[ 12 ] Yao , YY , Information tables with neighborhood semantics , in : Data Mining and Knowledge Discovery : Theory , Tools , and Technology II , Dasarathy , BV ( Ed. ) , Society for Optical Engineering , Bellingham , Washington , pp . 108 116 , 2000 .
[ 13 ] Yao , YY and Lin , TY , Generalization of rough sets using modal logic , Intelligent Automation and Soft Computing , An International Journal , 2 , 103 120 , 1996 .
[ 14 ] Yao , YY and Sai , Y . , Mining ordering rules using rough set theory , Bulletin of International Rough Set Society , 5 , 99 106 , 2001 .
[ 15 ] Yao , YY and Sai , Y . , On mining ordering rules , manuscript , 2001 .
[ 16 ] Yao , YY and Zhong , N . , An analysis of quantitative measures associated with rules , Proceedings of PAKDD’99 , 479 488 , 1999 .
