Transitional Patterns and Their Significant Milestones
Qian Wan and Aijun An
Department of Computer Science and Engineering
York University , Toronto , Ontario , Canada
{qwan , aan}@cseyorkuca
Abstract
Mining frequent patterns in transaction databases has been studied extensively in data mining research . However , most of the existing frequent pattern mining algorithms do not consider the time stamps associated with the transactions . In this paper , we extend the existing frequent pattern mining framework to take into account the time stamp of each transaction and discover patterns whose frequency dramatically changes over time . We define a new type of patterns , called transitional patterns , to capture the dynamic behavior of frequent patterns in a transaction database . Transitional patterns include both positive and negative transitional patterns . Their frequencies increase/decrease dramatically at some time points of a transaction database . We introduce the concept of significant milestones for a transitional pattern , which are time points at which the frequency of the pattern changes most significantly . Moreover , we develop an algorithm to mine from a transaction database the set of transitional patterns along with their significant milestones . Our experimental studies on real world databases illustrate that mining positive and negative transitional patterns is highly promising as a practical and useful approach to discovering novel and interesting knowledge from large databases .
1
Introduction
A transaction database usually consists of a set of timestamped transactions . Mining frequent itemsets or patterns from a transaction database is one of the fundamental and essential operations in many data mining applications , such as discovering association rules , strong rules , correlations , and many other important discovery tasks . The problem of mining frequent itemsets is formulated as finding all the itemsets from a transaction database that satisfy a user specified support threshold .
Since it was first introduced in 1993 [ 1 ] , the problem of frequent itemset mining has been studied extensively by many researchers . As a result , a large number of algorithms have been developed in order to efficiently solve the problem [ 2 , 6 ] . In practice , the number of frequent patterns generated from a data set can often become excessively large , and most of them are useless or simply redundant . Thus , there has been recent interest in discovering a class of new patterns , including maximal frequent itemsets [ 3 , 4 ] , closed frequent itemset [ 9 , 12 ] , emerging patterns [ 5 , 8 ] , and indirect associations [ 10 , 11 ] .
Despite the abundance of previous work , most of the existing frequent pattern mining algorithms do not consider the time stamps associated with the transactions . Therefore , the dynamic behavior of the discovered patterns are often undetected . In this paper , we extend the traditional frequent pattern mining framework to take into account the time stamp of each transaction , ie , the time when the transaction occurs . We define a new type of patterns , called transitional patterns , to represent patterns whose frequency dramatically changes over time . Transitional patterns include both positive and negative transitional patterns ( to be defined in Section 22 ) The frequency of a positive transitional pattern increases dramatically at some time point of a transaction database , while that of a negative transitional pattern decreases dramatically at some point of time . We illustrate transitional patterns using an example as follows . Consider an example database T DB as shown in Table 1 , which has 16 transactions of 8 items . Let ’s focus on two patterns , P1P2 and P1P3 . Without considering the time information of these transactions , P1P2 and P1P3 have the same significance in the traditional frequent pattern framework since they have the same frequency 6250 % However , interesting differences between these two patterns can be found after we consider the time information of each transaction in the database , as shown in the third column of Table 1 . For simplicity , suppose T DB contains all the transactions from November 2005 to February 2007 , one transaction per month . We can easily see that before ( and including ) May 2006 , pattern P1P2 appears every month ; but after May 2006 , P1P2 only occurs 3 times in 9 transactions , which is equivalent to a frequency of 3333 % That is to
Table 1 . An example dataset TDB
Time point
TID 001 002 003 004 005 006 007 008 009 010 011 012 013 014 015 016
List of itemIDs P1 , P2 , P3 , P5
P1 , P2
P1 , P2 , P3 , P8
P1 , P2 , P5 P1 , P2 , P4
P1 , P2 , P4 , P5 , P6 P1 , P2 , P3 , P4 , P6
P1 , P4 , P6 P4 , P5 , P6
P1 , P2 , P3 , P4 , P5 , P6
P1 , P3 , P4 , P6
P1 , P3 , P5
P1 , P2 , P3 , P6 , P7
P1 , P3 , P4 , P5
P1 , P3 , P4
P1 , P2 , P3 , P5
Time stamp Nov . 2005 Dec . 2005 Jan . 2006 Feb . 2006 Mar . 2006 Apr . 2006 May . 2006 Jun . 2006 Jul . 2006 Aug . 2006 Sep . 2006 Oct . 2006 Nov . 2006 Dec . 2006 Jan . 2007 Feb . 2007
6.25 % 12.5 % 18.75 %
25 %
31.25 % 37.5 % 43.75 %
50 %
56.25 % 62.5 % 68.75 %
75 %
81.25 % 87.5 % 93.75 % 100 %
TID . A transaction Tj contains an itemset X if and only if X ⊆ Tj . The count of an itemset X in D , denoted as countD(X ) , is the number of transactions in D containing X . An itemset X in a transaction database D has a support , denoted as supD(X ) , which is the ratio of transactions in D containing X . That is , supD(X ) = countD(X )
||D||
( 1 ) where ||D|| is the total number of transactions in D .
Given a transaction database D and a user specified minimum support threshold min sup , an itemset X is called a frequent itemset or frequent pattern if supD(X ) ≥ min sup . Accordingly , X is called an infrequent itemset or infrequent pattern if supD(X ) < min sup . say that the frequency or support of pattern P1P2 decreases significantly after May 2006 . On the other hand , after July 2006 , the frequency of pattern P1P3 increases significantly from 33.33 % to 100 % .
The above observations have shown that frequent patterns discovered by standard frequent pattern mining algorithms may be different in terms of their distributions in a transaction database . However , such patterns cannot be distinguished with the standard algorithms . The objective of the research presented in this paper is to distinguish such frequent patterns , discover frequent patterns whose frequency changes significantly over time and identify the time points for such significant changes .
Transitional patterns have a wide range of potential applications . For example , in the market basket scenario , transitional patterns allow business owners to identify those products or combinations of products that have recently become more and more popular ( or not as popular as before ) so that they can adjust their marketing strategy or optimize product placement in retail environments . In medical domains , a significant increase in the occurrence of certain symptom in a group of patients with the same disease may indicate a side effect of a new drug . Finding the time point when this symptom starts to occur more often can help to identify the drug that causes the problem .
2 Transitional patterns
2.1 Preliminaries frequent patterns
Let I = {i1 , i2 , . . . , im} be a set of m items . A subset X ⊆ I is called an itemset . A k itemset is an itemset that contains k items . Let D = {T1 , T2 , . . . , Tn} be a set of n transactions , called a transaction database , where each transaction Tj ( j ∈ {1 , 2 , . . . , n} ) is a set of items such that Tj ⊆ I . Each transaction is associated with a unique identifier , called its
2.2 Positive and negative transitional pat terns
τ
τ and D+
In order to provide formal definitions of transitional patterns , we first introduce the concept of time points . Suppose that the transactions in a transaction database D are ordered according to their time stamps . A time point , denoted by τ , represents a position in the transaction database D that sepτ . We use D− arates D into two disjoint parts , D− to represent the set of transactions in D that occur before τ , τ to represent the set of transactions in D that occur and D+ τ ∪ D+ after τ . Thus , D = D− τ , and τ can be represented by a percentage to indicate a position in D as follows : τ || ||D− ||D|| × 100 %
( 2 ) For example , in the example database T DB in Table 1 , when τ = 25 % , T DB− τ contains the first 4 transactions and T DB+ τ contains the last 12 transactions . Given a dataset , a time point corresponds to a time stamp . Thus , the number of possible time points is the number of different time stamps in the dataset , which can be equal to or less than the number of transactions in the dataset , assuming that some transactions may occur at the same time . The time points for the example dataset T DB is shown in Table 1 .
τ =
It ’s easy to see that the value of τ is between 0 % and 100 % . However , in practice , the range of τ , denoted as ffD , can be specified by the user according to their own interest . For instance , in order to find interesting patterns in the example database T DB which occur during the year 2006 , ffT DB should be set to [ 12.50 % 87.50% ] , since 12.50 % is the starting time point for 2006 and 87.50 % is the ending point of 2006 . Given a time point τ in ffD , the supports of a pattern X in D− τ ( X ) , respectively . That is ,
τ are denoted as sup−
τ ( X ) and sup+
τ and D+ sup−
τ ( X ) = supD−
τ
( X ) =
( X ) countD− ||D− τ ||
τ
( 3 ) sup+
τ ( X ) = supD+
τ
( X ) =
( X ) countD+ ||D+ τ ||
τ
( 4 ) sup+
τ ( X ) )
M AX(sup+
τ ( X ) − sup− τ ( X ) τ ( X ) , sup−
Definition 2.1 The transitional ratio of pattern X at time point τ is defined as : tranτ ( X ) =
( 5 ) where X must exist in the database D so that the denominator cannot be zero . Definition 2.2 A pattern X is a Transitional Pattern ( TP ) in D with respect to a time period ffD , if there exists a time point τ in ffD such that : ( a ) sup− ( b ) |tranτ ( X)| ≥ tt . where ts and tt are called pattern support threshold and transitional pattern threshold , respectively . Moreover , X is called a Positive Transitional Pattern ( PTP ) when tranτ ( X ) > 0 ; and X is called a Negative Transitional Pattern ( NTP ) when tranτ ( X ) < 0 .
τ ( X ) ≥ ts and sup+
τ ( X ) ≥ ts ;
For example , if ts = 0.05 and tt = 0.5 , pattern P1P3 in the example database T DB is a positive transitional pattern because there exists a time point ( such as 37.5 % corresponding to the end of April 2006 ) where the transitional ratio of the pattern is greater than 0.5 and the pattern is frequent on both corresponding splits of the datasets . Similarly , P1P2 is a negative transitional pattern in T DB .
Note that a pattern can be both a positive transitional pattern and a negative transitional pattern in the same transaction database if there exist two time points τ1 and τ2 so that conditions ( a ) and ( b ) are satisfied on both τ1 and τ2 , tranτ1(X ) > 0 and tranτ2(X ) < 0 . For example , in the example database T DB , pattern P4P6 is both a positive transitional pattern and a negative transitional pattern because its transitional ratio at time point 37.50 % is 66.67 % and the one at time point 62.50 % is −66.67 % , and condition ( a ) is also satisfied on both time points .
The reason we have condition ( a ) for a transitional pattern is that , if we don’t have this condition , any pattern that does not occur at the beginning of the transaction database has a transitional ratio equal to 1 when the pattern first occurs in the database ( or any pattern that does not occur at the end of the transaction database has a transitional ratio equal to 1 after its last occurrence in the database ) . However , such a pattern may be just a sporadic pattern that occurs occasionally in the database , which is not interesting at all . In other words , we are only interested in frequent patterns whose frequency changes dramatically during the time period ffD in the transaction database .
2.3 Significant milestones
There may be multiple time points at which a transitional pattern satisfies conditions ( a ) and ( b ) in Definition
Table 2 . Example patterns in TDB ( % ) tranτ ( P1 ) tranτ ( P1P2 ) tranτ ( P1P3 ) tranτ ( P4P6 )
8.33 9.09 10
11.11 12.5 11.11
10 9.09 8.33
50
54.55
60
66.67 57.14 44.9 58.33
45 25
25 45
58.33 44.9 57.14 66.67
54.55
60
50
100 100 66.67 35.71
0
35.71 66.67 100 100
τ 25
31.25 37.50 43.75
50
56.25 62.50 68.75
75
100
80
60
40
20
0
−20
−40
−60
−80
)
%
( o i t i a R e v s s e r g o r P
−100
25
30
35
40
Example patterns in TDB
P
1
P
P
P
1
1
4
P
P
P
2
3
6
45
50
55
Time Point ( % )
60
65
70
75
Figure 1 . Transitional ratios in T DB
22 People are usually interested in the time points where the frequency of a transitional pattern changes the most significantly . Below we define the concept of significant milestones to represent such points . The significant milestones can be classified into frequency ascending milestones and frequency descending milestones .
M+(X ) ≥ ts ;
Definition 2.3 The significant frequency ascending milestone of a positive transitional pattern X within a time period ffD is defined as a tuple , M+ , tranM+(X ) , where M+ is a time point in ffD such that : 1 . sup− 2 . ∀ τ ∈ ffD , tranM+(X ) ≥ tranτ ( X ) . Table 2 lists the transitional ratios of four patterns for all the valid time points between 25 % and 75 % in the example database T DB . Figure 1 illustrates how the transitional ratios of these four patterns change along the time points . Assuming that the support threshold is 5 % and the transitional pattern threshold is 50 % , P1P3 and P4P6 are positive transitional patterns . The significant milestone for P1P3 is 56.25 % , +66.67 , and the significant milestone for P4P6 is 37.50 % , +6667 Note that even though the transitional ratio of P4P6 is 1 at time points 25 % and 31.25 % , they are not considered to be milestones because they do not satisfy condition 1 in Definition 2.3 due to the fact that P4P6 does not occur before time point 3125 %
Similarly , the significant frequency descending mile stone for a negative transitional pattern is defined below . Definition 2.4 The significant frequency descending milestone of a negative transitional pattern Y within a time period ffD is defined as a tuple , M− , tranM−(Y ) , where is a time point in ffD such that : M−
1 . sup+M−(Y ) ≥ ts ; 2 . ∀ τ ∈ ffD , tranM−(Y ) ≤ tranτ ( Y ) . To give an example , patterns P1P2 and P4P6 in Table 2 are negative transitional patterns . Their significant frequency descending milestones are 43.75 % , 66.67 and 62.50 % , 66.67 , respectively .
Note that a transitional pattern may have both significant frequency ascending and significant frequency descending milestones if it is both a positive and a negative transitional pattern . Also , a positive ( or negative ) transitional pattern may have more than one significant frequency ascending ( or frequency descending ) milestones .
3 Mining transitional patterns and their sig nificant milestones
In this section , we present an algorithm , called TP mine , for mining the set of positive and negative transitional patterns and their significant milestones with respect to a pattern support threshold and a transitional pattern threshold . The algorithm is given as follows .
1 : Extract frequent patterns , P1 , P2 , , Pn , and their supports using a frequent pattern generation algorithm with min sup = ts . 2 : Scan the transactions from the first transaction to the transaction right before D to compute the support counts of all the n frequent patterns on this part of the database .
τ ( Pi ) ≥ ts then if sup−
SF AM ( Pi ) = ∅ , SF DM ( Pi ) = ∅
τ ( Pi ) ≥ ts and sup+ if tranτ ( Pi ) ≥ tt then if Pi /∈ SP T P then Add Pi to SP T P
3 : SP T P ← ∅ , SN T P ← ∅ 4 : for all i = 1 to n do 5 : M axT ran(Pi ) = 0 , M inT ran(Pi ) = 0 6 : 7 : end for 8 : for all τ ∈ D do for i = 1 to n do 9 : 10 : 11 : 12 : 13 : 14 : 15 : 16 : 17 : 18 : 19 : 20 : 21 : 22 : 23 : 24 : 25 : 26 : 27 : 28 : 29 : 30 : 31 : 32 : end if if Pi /∈ SN T P then Add Pi to SN T P else if tranτ ( Pi ) ≤ −tt then end if if tranτ ( Pi ) < M inT ran(Pi ) then SF DM ( Pi ) = {τ , tranτ ( Pi)} M inT ran(Pi ) = tranτ ( Pi ) Add τ , tranτ ( Pi ) to SF DM ( Pi ) else if tranτ ( Pi ) = M inT ran(Pi ) then end if if tranτ ( Pi ) > M axT ran(Pi ) then
SF AM ( Pi ) = {τ , tranτ ( Pi)} M axT ran(Pi ) = tranτ ( Pi ) Add τ , tranτ ( Pi ) to SF AM ( Pi ) else if tranτ ( Pi ) = M axT ran(Pi ) then end if end if end if end for
33 : 34 : end for 35 : return SP T P and SF AM ( Pi ) for each Pi ∈ SP T P 36 : return SN T P and SF DM ( Pi ) for each Pi ∈ SN T P
There are two major phases in this algorithm . During the first phase ( Step 1 ) , all frequent itemsets along with their supports are initially derived using a standard frequent pattern generation algorithm , such as Apriori [ 1 ] or FPgrowth [ 6 ] , with ts as the minimum support threshold . In the second phase ( starting from Step 2 to the end ) , the algorithm finds all the transitional patterns and their significant milestones based on the set of frequent itemsets .
τ ( Pi ) , and the support of Pi on D−
In Step 2 , the support counts of all the frequent patterns on the set from the first transaction to the transaction right before the time period ffD are collected . They are used later in computing sup− τ ( Pi ) , where Pi is a frequent pattern . After the initializations from step 3 to step 7 , the algorithm continues to scan the database D to find the time points within time period ffD . At each time point τ during the scan , it checks the frequent patterns one by one . For each frequent pattern Pi , it calculates the support of Pi on D− τ , ie , sup− τ , ie , τ ( Pi ) . If both of them are greater than ts , the algosup+ rithm then checks the transitional ratio of Pi . If the ratio is greater than tt , then Pi is a positive transitional pattern and is added into the set SP T P . Then , the algorithm checks whether the transitional ratio of Pi is greater than the current maximal transitional ratio of Pi . If yes , the set of significant frequency ascending milestones of Pi , ie , SF AM ( Pi ) , is set to contain τ , tranτ ( Pi ) as its single element . If not but it is equal to the current maximal transitional ratio of Pi , τ , tranτ ( Pi ) is added into SF AM ( Pi ) . Similarly , Steps 21 30 are for finding the set of negative transitional patterns and their significant frequency descending milestones .
If we do not consider the step for generating frequent patterns ( ie , Step 1 ) , the TP mine algorithm scans the database only once to find all the transitional patterns and their significant milestones with respect to a pattern support threshold and a transitional pattern threshold . Suppose the number of frequent patterns generated from Step 1 is n , the time complexity of the TP mine algorithm from Step 2 to Step 36 is O(D + n × ffD ) , where D is the number of transactions in D and ffD is the number of time points in ffD .
4 Experimental Studies
To demonstrate the utility of transitional patterns and the efficiency of the TP mine algorithm , we have performed two sets of experiments using datasets from two real world domains : retail market basket and web log data . Table 3 summaries the parameters of each dataset along with the threshold values used in our experiments .
Database
Retail
LiveLink
Table 3 . Database characteristics # Items
# Trans
# NTP
# PTP
# FP
D
16,470
38,679
88,163
580
22
30,586
125
22 ts = 5‰ and tt = 50 %
49
22
[ 25 % , 75 % ]
Table 4 . Top 10 PTPs in Retail dataset
# 1 2 3 4 5 6 7 8 9 10
PTP {12925} {14098} {39 , 12925} {413} {48 , 12925} {12929} {48 , 413} {39 , 413} {405} {39 , 48 , 413} sup− ( ‰ ) 5.08 5.03 5.07 6.19 5.01 5.00 5.01 5.01 5.06 5.00 sup+ ( ‰ ) 32.95 29.72 22.96 26.39 19.66 18.35 16.57 16.30 15.05 14.06
( % )
.M+,tranM+fi 5852 , +84.59fi 6108 , +83.07fi 6888 , +77.91fi 2508 , +76.53fi 7093 , +74.54fi 7441 , +72.75fi 3194 , +69.77fi 3081 , +69.28fi 5085 , +66.35fi 5739 , +64.43fi sup ( ‰ ) 16.64 14.64 10.64 21.32 9.27 8.42 12.87 12.82 9.97 8.86
4.1 Retail market basket data
The Retail dataset was obtained from the Frequent Itemset Mining Dataset Repository ( http://fimicshelsinkifi ) It contains the ( anonymized ) retail market basket data from an anonymous Belgian supermarket store .
Table 4 shows the first 10 positive transitional patterns in Retail . These patterns are ranked by the transitional ratios at their significant frequency ascending milestones . For positive transitional patterns , the greater the ratio , the higher the rank ; while for negative transitional patterns ( shown in Table 5 ) , the less the ratio , the higher the rank .
The first PTP , product R12925 , has a support rank of 72 in the whole Retail dataset , which is a mediocre frequent item . From its significant milestone , we notice that before the time point 58.52 % , its frequency is just a little bit greater than the minimum support threshold ; but its frequency increases over 6 times after the time point , which is as twice as much of its frequency in the whole Retail dataset . This unusual phenomena might be the result of a special even around the time point , such as a new advertisement or a sale promotion . In order to satisfy customers’ increasing demands for product R12925 , the store has to take actions to enhance the supply of this product . Moreover , the supplies of products R39 and R48 need to be enhanced as well because of their co occurrences with product R12925 in the 3rd and 5th positive transitional patterns .
As we can see from the last line of Table 4 , there are 3 items R39 , R48 and R413 in the 10th PTP . This pattern can be easily ignored by traditional frequent pattern mining framework since its support is relatively low ( ranked 200 out of 580 ) . However , according to this significant milestone , these products appear together more frequently after the time point 5789 % Therefore , putting these products close to each other or starting a package promotion for these
Table 5 . Top 10 NTPs in Retail dataset .M− ,tranM−fi ( % ) 5690 , 84.29fi 3952 , 80.37fi 3784 , 75.96fi 4293 , 71.02fi 4044 , 70.91fi 4273 , 70.53fi 4281 , 70.29fi 4293 , 69.94fi 4278 , 69.87fi 4297 , 69.61fi
NTP {1327} {39 , 1327} {48 , 1327} {32 , 39 , 41} {41 , 225} {32 , 41} {38 , 39 , 41} {32 , 39 , 41 , 48} {38 , 39 , 41 , 48} sup− ( ‰ ) 31.82 25.51 20.80 45.00 17.22 60.82 57.87 31.07 37.63 18.72 sup+ ( ‰ ) 5.00 5.01 5.00 13.04 5.01 17.92 17.19 9.34 11.34 5.69
{41 , 65} sup ( ‰ ) 20.26 13.11 10.98 26.76 9.95 36.25 34.61 18.67 22.58 11.29
( % )
Table 6 . Top 10 PTPs in Livelink dataset sup ( ‰ ) 16.25 11.61 8.63 8.04 9.45 7.68 10.07 9.87 8.76 8.70
.M+,tranM+fi 4417 , +79.97fi 6287 , +77.79fi 7500 , +69.10fi 7149 , +67.75fi 5696 , +66.92fi 7324 , +66.72fi 5796 , +66.16fi 4550 , +63.87fi 5736 , +63.66fi 5798 , +63.55fi
PTP {15000} {1375} {1859} {8106} {544} {1381} {273} {1509} {545} {544 , 545} sup− ( ‰ ) 5.03 5.04 5.54 5.03 5.05 5.00 5.53 5.03 5.02 5.02 sup+ ( ‰ ) 25.12 22.72 17.92 15.60 15.27 15.03 16.33 13.92 13.80 13.77
# 1 2 3 4 5 6 7 8 9 10
# 1 2 3 4 5 6 7 8 9 10 products might be very useful in selling more of these products . This idea is also backed up by the 7th and 8th positive transitional patterns .
The first 10 negative transitional patterns in Retail are listed in Table 5 . The frequency of the 6th negative transitional pattern is very high , ranked 20 out of 580 frequent itemsets . Its frequency is much higher , almost twice as much before the time point 42.73 % ; but decreases significantly afterwards . This could be the main reason why the frequencies of the 4th and 8th NTPs decrease after almost the same time since product R39 has the highest frequency in the Retail dataset and appears in most of the top PTPs . New marketing strategies should be planned for products R32 and R41 , such as a new advertisement or price dropping , to resume the sales volume for these two products and other associated products .
4.2 Livelink web log data
The Livelink dataset was first used in [ 7 ] to discover interesting association rules from Livelink web log data . This data set is not publicly available for proprietary reasons .
The top 10 positive and negative transitional patterns in the Livelink dataset are shown in Table 6 and Table 7 , respectively . As we can see from the first row of Table 6 , the object L15000 is visited most frequently after the time point 44.17 % , its frequency increases about 5 times . This shows that users are very interested in the new information in L15000 that are updated after the specific time . Therefore , object L15000 should be upgraded to a higher level so that it can be more easily accessed by the users .
On the contrary , the frequency of the first negative transi
Table 7 . Top 10 NTPs in Livelink dataset
# 1 2 3 4 5 6 7 8 9 10
NTP {355} {384} {11034} {434} {15001} {1735} {396} {225 , 396} {1322}
{15000 , 15001} sup− ( ‰ ) 50.31 26.56 18.60 33.81 17.03 16.62 22.00 14.15 13.54 15.69 sup+ ( ‰ ) 7.24 5.01 5.03 9.76 5.04 5.04 7.75 5.00 5.07 5.96
.M− ,tranM−fi ( % ) 4042 , 85.60fi 5232 , 81.15fi 3235 , 72.97fi 5947 , 71.14fi 4684 , 70.39fi 4681 , 69.68fi 6078 , 64.76fi 5292 , 64.66fi 5290 , 62.56fi 4126 , 62.03fi sup ( ‰ ) 24.65 16.28 9.42 24.06 10.66 10.46 16.41 9.84 9.55 9.97 tional pattern decreased significantly from 57.31 % to 7.24 % after time point 4042 % It is very obvious that the information is out of date or the users are not interested in it any more . Thus , this object should be moved to a corresponding lower level in order to give room to other important objects , such as L15000 .
Object L15000 is also in the 6th negative transitional pattern and is frequently visited together with L15001 by the users before the time point 4681 % However , after that time , the frequencies of the 5th ( L15001 ) and 6th negative transitional pattern decrease significantly , which means that most of the users who visit L15000 do not visit L15001 at the same time . Therefore , these two objects should be treated differently . On the other hand , object L544 and L545 should be in the same category and have links for the user to access from one to the other more easily .
5 Discussion and Conclusions
In this paper , we introduced a novel type of patterns , positive and negative transitional patterns , to represent frequent patterns whose frequency of occurrences changes significantly at some point of time in the transaction database . We also defined the concepts of significant frequencyascending milestones and significant frequency descending milestones to capture the time points where the frequency of patterns changes most significantly . Moreover , we develop the TP mine algorithm to mine from a transaction database the set of transitional patterns along with their significant milestones .
To the best of our knowledge , the emerging patterns proposed in [ 5 ] is the only kind of patterns that is similar to transitional patterns . Emerging patterns are defined as itemsets whose support increase significantly from one dataset to another . When applied to time stamped datasets , emerging patterns are used to find contrasts between two datasets with different time periods , which is separated by an unchangeable time point . Theoretically , emerging patterns can be considered as positive transitional patterns with time point set to a constant value . As we can see from the above experimental results , the significant milestones of transitional patterns can be at different places in one dataset .
Thus , at a specific time point , the transitional ratio of a pattern might not reach its greatest value or even close to 0 . Therefore , with a constant time point value , most of the interesting transitional patterns cannot be identified correctly . In our experimental study , we demonstrated the usefulness of transitional patterns in two real world domains and showed that what is revealed by the transitional patterns and their significant milestones would not be found by the standard frequent pattern mining framework . As there are concerns about the practical usefulness of data mining techniques , we hope that the research presented in this paper brings a promising avenue to look at the data from a new angle , which allows us to find new , surprising , useful and actionable patterns from data .
References
[ 1 ] R . Agrawal , T . Imielinski , and A . N . Swami . Mining association rules between sets of items in large databases . In Proc . of the 1993 ACM SIGMOD Int . Conf . on Management of Data , pages 207–216 , 1993 .
[ 2 ] R . Agrawal and R . Srikant . Fast algorithms for mining assoIn Proc . of the 20th Int . Conf . on Very Large ciation rules . Data Bases , pages 487–499 , 1994 .
[ 3 ] R . J . Bayardo .
Efficiently mining long patterns from In Proc . of the Int . ACM SIGMOD Conf . , pages databases . 85–93 , 1998 .
[ 4 ] D . Burdick , M . Calimlim , and J . Gehrke . Mafia : A maximal frequent itemset algorithm for transactional databases . In Proc . of the 17th Int . Conf . on Data Engineering , 2001 .
[ 5 ] G . Dong and J . Li . Efficient Mining of Emerging Patterns : Discovering Trends and Differences . Knowledge Discovery and Data Mining , pages 43–52 , 1999 .
[ 6 ] J . Han , J . Pei , and Y . Yin . Mining frequent patterns without candidate generation . In Proc . of ACM SIGMOD Int . Conf . on Management of Data , pages 1–12 , 2000 .
[ 7 ] X . Huang , A . An , N . Cercone , and G . Promhouse . Discovery of interesting association rules from livelink web log data . In Proc . of IEEE Int . Conf . on Data Mining , 2002 .
[ 8 ] J . Li and K . Ramamohanarao and G . Dong . Emerging Patterns and Classification . In Proc . of the 6th Asian Computing Science Conf . on Advances in Computing Science , pages 15– 32 , 2000 .
[ 9 ] J . Pei , J . Han , and R . Mao . CLOSET : An efficient algorithm for mining frequent closed itemsets . In ACM SIGMOD Workshop on Research Issues in Data Mining and Knowledge Discovery , pages 21–30 , 2000 .
[ 10 ] P . Tan , V . Kumar , and J . Srivastava .
Indirect association : mining higher order dependencies in data . In Proc . of the 4th European Conf . on Principles and Practice of Knowledge Discovery in Databases , pages 632–637 , 2000 .
[ 11 ] Q . Wan and A . An . Efficient Mining of Indirect Associations Using HI Mine . In Proc . of the 16th Canadian Conf . on Artificial Intelligence , page 206–221 , 2003 .
[ 12 ] M . J . Zaki and C . Hsiao . Charm : An efficient algorithm for closed itemset mining . In Proc . of the 2nd SIAM Int . Conf . on Data Mining , 2000 .
