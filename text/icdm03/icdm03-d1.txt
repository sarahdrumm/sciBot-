Detecting Patterns of Change Using Enhanced
Parallel Coordinates Visualization1
Kaidi Zhao , Bing Liu
Department of Computer Science University of Illinois at Chicago
851 S . Morgan St . , Chicago , IL 60607
{kzhao , liub}@csuicedu
Thomas M . Tirpak
Motorola Advanced Technology Center
1301 E . Algonquin Rd . Room 1014 ,
Schaumburg , IL . 60196 TTirpak@motorolacom
Andreas Schaller
MATC Europe
Heinrich Hertz Str.1
65232 Taunusstein , Germany
AndreasSchaller@motorolacom
Abstract are finalized , some prototypes are built .
3 . A set of tests is performed on the prototypes to ensure that the product fulfills the requirements . According to the test results , the engineers can verify whether the design meets the requirements . If it does not , the design engineers have to modify the existing design , which leads to the next design cycle , ie , step 1 . electronic products , such as mobile phones . 1.1 Design Process A high level characterization of the process of designing a mobile phone is as follows : 1 . Engineers , who are experts in mechanical , electrical , software , aspects of mobile phones , design their specific section based on previous designs , new product specifications , and general design guidelines . 2 . After the mechanical , electrical and software designs
Analyzing data to find trends , correlations , and stable patterns is an important problem for many industrial applications . In this paper , we propose a new technique based on parallel coordinates visualization . Previous work on parallel coordinates methods has shown that they are effective only when variables that are correlated and/or show similar patterns are displayed adjacently . Although current parallel coordinates tools allow the user to manually rearrange the order of variables , this process is very time consuming when the number of variables is large . Automated assistance is needed . This paper proposes an edit distance based technique to rearrange variables so that interesting patterns can be easily detected . Our system , V Miner , includes both automated methods for visualizing common patterns and a query tool that enables the user to describe specific target patterns to be mined/displayed by the system . Following an overview of the system , a case study is presented to explain how Motorola engineers have used V Miner to identify significant patterns in their product test and design data .
Keywords : change patterns , parallel coordinate visualization . 1 . Introduction This paper describes a multi variable visualization tool called V Miner ( for Visual Miner ) designed for mining product design and test data . The goal is to discover useful , actionable knowledge from mobile phone testing data that can be provided as feedback to design engineers , who will use the knowledge to identify opportunities for improving both the product design and the design process . In this way , the design cycle of new products can be reduced . To better understand the challenges faced by designers and test engineers , we first give a short description of the typical design process for consumer
1 We would like to thank Thorsten Hoefer and Knut Moeller of the Motorola Personal Communications Sector in Flensburg , Germany , for performing the mobile phone tests , collecting and organizing the data used in this paper , and providing us with feedback on the use of our system . We also thank Weimin Xiao for many insightful discussions , and Tom Babin for his review of this manuscript , MATC 2003810M 19 .
The above three steps are repeated until the design meets the required specifications ( then the design is finalized ) . In order to reduce the engineering costs and cycle time associated with the design process , we have developed a method and a software tool for mining useful knowledge from test data that can be used to guide decision making of the mobile phone designers . 1.2 The Data We analyzed the test result data with our proposed parallel coordinates visualization technique . For this project , Motorola engineers performed an extensive set of tests on one new type of mobile phone . After each design change , all the test variables were measured . There are more than 100 test variables that characterize the performance of a mobile phone . Each variable takes numeric values , and has the following characteristics : 1 . It has an upper limit and a lower limit . Any value that exceeds either of the limits is considered unacceptable ( the variable fails the test ) . A design modification is needed to bring the failed variable to its normal range . 2 . It also has an ideal value , which is called the target value . The closer the value of the variable is to its target value the better it is .
Table 1 shows a sample test dataset . Value for change i is the measured value for each variable after the ith component change to the phone .
Table 1 . Sample electrical test data .
1.4 Parallel Coordinates Figure 1 visualization . shows a typical parallel coordinates
Test
Upper limit
Value unit
Value for change 1
……
Target value
Lower limit 4 variable Variable 1 Variable 2 50000 50000 55000 HZ
0.9 …… 495830 …… …… …… …… …… …… …… ……
4 Voltage
0
Understanding the sequence of values for change 1 , 2 , … is a significant part of our analyses . Note that the tests were done after each component change , and that once a change was made to the design , it was not changed back to its original component . Thus , we can view each change of a component on the phone as a new design , and subsequent changes are based on earlier changes . Thus , the data can be treated as a time series or sequential data set . With the testing data , product designers are typically interested in the following : • Prominent ( or significant ) changes in variable values after some design changes .
• The cause of these significant value changes . • Stable variables whose values are not affected by design changes .
• Patterns of values changes and failures . 1.3 Using Traditional Rule Mining Systems It is easy to think of ways to use some classic data mining algorithms to mine patterns from the data . For example , Motorola engineers have used association rule mining [ 1 ] or a decision tree method [ 8 ] to find failure patterns . However , the following reasons : 1 . Due to the large number of variables ( more than 100 ) , association mining generates too many rules ( more than 20,000 for our data set ) . these algorithms are inadequate for
2 . The decision tree method has the problem that it only finds a subset of the patterns that exist in data . In some cases , the discovered patterns may not be the ones that are interesting to the users . It was also tedious to run a decision tree program because each failed variable has to be set as the class variable in order to find patterns related to its failure .
In our approach , we use an enhanced parallel coordinates visualization , which gives an intuitive view of the data , thereby enabling the user to identify interesting patterns quickly . Feedback from Motorola engineers , who carried out the data mining using our system , confirmed this .
Figure 1 . An illustration of parallel coordinates
Using the classic parallel coordinates technique directly is not suitable for our task for two main reasons : 1 . It does not consider the data sequence . 2 . It does not consider the ordering of the variables . Thus , vertical axes are ordered in an arbitrary manner . We have enhanced the parallel coordinates technique on both aspects in order to meet our need . Details of these two enhancements are discussed in Section 3 . 2 . Related Work Parallel coordinates techniques are widely used for multivariable visualization [ 4][5][6 ] . Most existing systems are not designed for sequential data as in our application . Our work is related to shape querying [ 2 ] . However , the approach in [ 2 ] does not allow approximate matching . In our work , we use edit distance in the similarity matching . We allow the user to specify a query shape either by indicating an example point or by explicitly specifying the shape of interest . In [ 7 ] , an algorithm for ordering categorical values in parallel coordinates is proposed . The basic idea is to make sure that the most similar variables are placed next to each other after the rearrangement . Our work is different as we wish to allow the user to issue approximate queries . We believe that doing a single sorting for the best global result is not flexible and not always effective , because users have different interests , and their interests change with time . 3 . The Enhanced Parallel Coordinates In our work , we have extended the basic parallel coordinates technique in two significant ways . 3.1 Trend Figures In our product testing application , the data sequence is significant . For this reason , we extend the classical parallel coordinates method by adding a small figure for each variable above its coordinate . In this small figure , as shown at the top of Figure 2 , the horizontal axis reflects the sequence of the data record , and the vertical axis shows its value in each data record . We call these graphs trend figures . They make it possible to quickly see the variables that change in similar ways , by noting their similar trend figures .
Figure 2 . Parallel coordinates with trend figures . 3.2 Edit Distance Based Querying and Sorting Our second major enhancement to traditional parallel coordinates visualization allows the user to query shapes based on approximate pattern matching . After the matching is completed , sorting of variables is performed to enable the user to view those most interesting patterns in nearby sections of the horizontal axis . Two important types of patterns are the value change pattern and the failure pattern . For our mobile phone design application , the value change pattern of a variable shows how the variable ’s value changes over different design changes . After a design change , if a variable value increases compared to its previous value , we say its value is “ up ” , and we denote it with the character “ 3 ” in its value change pattern . If its value decreases after a design change , we say it is “ down ” and use the character “ 1 ” to represent it . If its value stays stable after a design change , we use “ 2 ” ( stable ) to represent it in the value change pattern . With these representations , the behavior history of the variable can be summarized using a value change pattern string . For example , the string “ 331 ” means that the value becomes larger after the first and the second changes , and then goes down after the 3rd change . Queries can be issued using such value change strings . The failure pattern of a variable shows whether or not its value falls outside the upper or lower limit after a design modification . If the variable value is outside the normal range , we say that it fails . The letter “ F ” denotes the failure . If the value is within the normal range , we mark it with an “ O ” ( OK ) . An example of a failure pattern is “ OOOFFF ” , which means that the variable is within the normal range for the first three design changes , but fails from the fourth design change onward . Our system allows the user to query failure patterns . The value change pattern and failure pattern convert the numerical comparison task to string comparison , which is more convenient and intuitive for human users . Our system allows the user to issue queries by supplying the above two types of string patterns . We employ the edit distance [ 3 ] for string comparison . Ordering of variables in parallel coordinates visualization is done according to the comparison results . The query can be formed either by indicating an example data point or by specifying the shape of interest explicitly . 4 . Product Test Application We now describe how our enhanced visualization tool VMiner has been used by Motorola engineers to discover useful knowledge from phone testing data . 4.1 Data Normalization Traditional data normalization methods are not applicable in our application for two reasons : 1 . They do not consider any user specified target value . 2 . They do not consider the lower and upper limits . We have designed a normalization method that clearly separates the values that are within the normal range from those that are out of the normal range . Variables whose values are out of range will be normalized to either larger than 1 or less than –1 . Those values close to 0 are the ones that are close to the target values . In our interviews with Motorola engineers who used V Miner , we found that this intuitive normalization was one of their favorite features of the software . 4.2 A Typical Scenario We now present a typical knowledge discovery scenario . After normalization and loading data into V Miner , the user can see the visualization as shown in Figure 3 . Due to confidentiality , the test variable ( attribute ) names have been replaced with generic names Test Attribute i .
Figure 3 . Initial Display of the Test Data
In Figure 3 , the main window on the left displays the parallel coordinates visualization of the data . Most of the user interactions with the system are performed in this window . The horizontal axis shows all the test variables . Their names are displayed below the horizontal axis . The vertical axis displays the normalized value of each variable after every component or design change . The information window on the right displays the detailed information as the user moves the mouse cursor over points in the main window . The key features of the visualization include : 1 . Data from different designs ( component changes ) are visualized using different colors . The same color schema is also used on the right information window so that the user can easily relate the visual clues found in the left window to the detailed information shown in the information window on the right .
2 . For each test variable , a trend figure is drawn at the top of the screen . These small figures complement the main visualization in that they show the correlation of component changes and value changes of each test variable . Those test variables which have similar change patterns will have similar figures .
3 . There are two dashed lines on the vertical axes at Y = 1 and Y = 1 for both the parallel coordinate diagram and the trend figures above . Due to the way that the data are normalized , these two lines enable the user to clearly and instantly identify the out of range values .
4 . The querying mechanism discussed in Section 3 allows the user to sort the variables in order to see interesting patterns and facts conveniently .
After loading data into V Miner , the user can identify some significant characteristics from the visualization ( Figure 3 ) : 1 . The user can see which values of a variable are out of the range and which are within range . Only those values that are between –1 and 1 are within the normal range of a variable , eg , test variables 19 , 20 , etc .
2 . From the trend figures on top of each variable , it is possible to see that some variables have very similar behaviors , eg , variables 33 and 34 . This suggests that there are some correlations among these variables .
3 . Some variables have stable values over all the tests .
Figure 4 . Stable variables
Now suppose that the user want to identify stable variables . The user can issue a “ 222… ” query to obtain this information . Figure 4 shows the query result . The variables on the horizontal axis are sorted in such a way that stable variables come first on the left . V Miner includes a rich set of options and operations . Due to space limitations , we are unable to give all the details . Interested readers , refer to the full paper [ 9 ] . 44 Application Feedback V miner was used by engineers and researchers at the Motorola Personal Communications Sector in Flensburg , Germany , and at Motorola Labs in the USA for approximately three months . During this time , they provided us many insights regarding the application of VMiner and reported that the tool indeed helped them to find useful patterns and information from their product test data . • Due to the enhanced normalization and visualization , it is easy to identify variables with prominent changes with a single glance of the V Miner screen .
• It is easy to see the failure patterns of variables and to group related variables .
• Querying and sorting functions are used frequently to find ad hoc patterns of interest to the decision makers .
5 . Conclusions In this paper , we have introduced the V Miner system and its initial application in mobile phone design and testing . This tool implements two major extensions to classical parallel coordinates visualization . Experimental results and feedback from Motorola engineers , who have used the system for several months , confirmed that the proposed enhancements are both powerful and easy to use . 6 . Reference [ 1 ] R . Agrawal and R . Srikant . “ Fast algorithm for mining association rules ” VLDB 94 , 1994 .
[ 2 ] R . Agrawal , Giuseppe Psaila , Edward L . Wimmers , Mohamed Zait . “ Querying Shapes of Histories ” . VLDB 95 . [ 3 ] RA Baeza Yates . “ Algorithms for string matching : A survey ” . ACM SIGIR Forum , 23(3 4):34 58 , 1989 .
[ 4 ] A . Goel , C . Baker , C . Shaffer , B . Grossman , R . Haftka , W . Mason , and L . Watson . “ VizCraft : A Multidimensional Visualization Tool for Aircraft Configuration Design ” . IEEE Visualization'99 , 1999 .
[ 5 ] A . Inselberg , B . Dimsdale . “ Parallel Coordinates for Visualizing Multi Dimensional Geometry ” . In Proceedings of the Computer Graphics Intl . Conf . 1987 .
[ 6 ] D . Keim and H P Kriegel . “ VisDB : Database Exploration using Multidimensional Visualization ” . IEEE Computer Graphics and Applications , 14(5):40 49 , 1994 .
[ 7 ] S . Ma , J . Hellerstein . “ Ordering Categorical Data to
Improve Visualization ” . InfoVis99 . 1999 .
[ 8 ] J . Quinlan . “ C4.5 : program for machine learning ” . Morgan
Kaufmann , 1993 .
[ 9 ] K . Zhao , B . Liu , T . Tirpak , and A . Schaller . “ Detecting patterns of change using enhanced parallel coordinates visualization ” . UIC CS technical report , 2003 .
