Modeling Relational Events via Latent Classes
Christopher DuBois Department of Statistics
University of California , Irvine
Irvine , CA 92697 duboisc@icsuciedu
ABSTRACT Many social networks can be characterized by a sequence of dyadic interactions between individuals . Techniques for analyzing such events are of increasing interest . In this paper , we describe a generative model for dyadic events , where each event arises from one of C latent classes , and the properties of the event ( sender , recipient , and type ) are chosen from distributions over these entities conditioned on the chosen class . We present two algorithms for inference in this model : an expectation maximization algorithm as well as a Markov chain Monte Carlo procedure based on collapsed Gibbs sampling . To analyze the model ’s predictive accuracy , the algorithms are applied to multiple real world data sets involving email communication , international political events , and animal behavior data . Categories and Subject Descriptors : I51 [ Computing Methodologies ] : Pattern Recognition—Statistical Models General Terms : Algorithms ; Experimentation Keywords : Relational data , collapsed Gibbs sampling
1 .
INTRODUCTION
Social network analysis is the study of interactions among sets of entities , eg people , organizations , or nations . The dominant traditional approach to the statistical modeling of social networks focuses on graph based representations with edges that persist indefinitely , such as friendships between individuals [ 10 ] , or models where edges can be born and have long and indefinite durations , such as co author relations from publication data [ 6 ] or online social networks [ 18 ] .
In contrast , we focus on social network data that can be viewed as a set of relational events [ 5 , 4 ] . Each event is an instantaneous or finite duration action involving two or more entities . For example , one might model instant messaging data as a set of relational events , where each event is an instantaneous directed edge with a sender node and a receiver node . This type of relational data has received far less attention in the data mining and social network literature than static network data . Nonetheless dynamic network data is becoming increasingly common , particularly in a world with many different digital modes of time stamped commu
Padhraic Smyth
Department of Computer Science
University of California , Irvine
Irvine , CA 92697 smyth@icsuciedu nications , eg , Facebook comments , email messages , and instant messaging .
In particular , in this paper , we investigate the problem of predicting the rate at which individuals will send and receive events in the future , given historical event data . We focus on dyadic instantaneous events . We will assume a stationary Poisson process for event generation—the extension to non stationarity is likely to be important for practical applications but is beyond the scope of the present paper . For each event let s ∈ S denote the identity of the sender , r ∈ R denote the identify of the receiver , and a ∈ A denote the type of the event . We begin by initially focusing on the common situation where the sets of possible senders and receivers are the same ( S = R and |S| = n ) and there exists a single type of event ( |A| = 1)—we will return to the more general situation later in the paper . processes is itself Poisson with rate λ = P
Let λsr be the ( unknown ) Poisson rate of event generation between sender s and receiver r . Assuming independence of the pairwise Poisson processes , the superposition of independent Poisson r λsr : this is the rate at which events are generated in the network as a whole . One can show the probability that the next event in the network corresponds to edge ( s , r ) can be written as
P s
P ( s , r ) =
P sP
λs,r r λs,r
=
λs,r λ ie , the probability of the edge ( s , r ) occurring next is equal to the Poisson rate of ( s , r ) divided by the total rate for the network [ 21 ] . The set of P ( s , r ) probabilities sums to 1 . Thus , one representation of the network process is that ( a ) events occur globally in the network with rate λ , and ( b ) the probability that each such event involves a specific pair s , r is determined by a multinomial distribution over n2 possible pairs .
We focus on the problem of modeling P ( s , r ) for event data ( and more generally P ( s , r , a ) where a indicates event type ) . Note that we can convert these probabilities to event rates λs,r simply by multiplying our estimate of P ( s , r ) by the network rate λ . For large networks with many events , estimating the global rate of event generation λ will be relatively easy . In contrast , estimating P ( s , r ) will generally be much more difficult since there are n2 such eventpairs .
A simple baseline approach to estimating the P ( s , r ) matrix is to simply count the number of entries observed for each pair s , r in the historical data set and then use a frequency based estimate for prediction , or a smoothed version of the same , eg ,
ˆP ( s , r ) = sP P
Ns,r + α r ( Ns,r + α )
, 1 ≤ s , r ≤ n
( 1 ) where Ns,r is the number of observed events from s to r in the training data , and α is a smoothing parameter ( eg from a sym rather than modeling the probability that an edge exists in a static context between s and r , eg , P ( es,r = 1 ) .
The specific contributions of this paper can be summarized as follows . We propose a latent class model that is similar in spirit to stochastic blockmodels but that is designed to model relational event data . We demonstrate the capabilities of the model on both simulated and real data sets , interpreting the latent class information that the model extracts from data . Furthermore , we show how one can directly assess the predictive accuracy of these models and illustrate how our proposed approach can be readily extended to make inferences in the presence of missing event information , eg , learning from events where we know the sender of an event but do not know the receiver .
The organization of this paper is as follows . After presenting the model formally , we discuss two methods for performing inference . A simple illustration of the model ’s use on simulated data is presented , followed by an evaluation of its predictive performance on multiple real world data sets . We conclude with a discussion of the empirical results and future directions .
2 . THE MARGINAL PRODUCT MIXTURE
MODEL
Motivated by dyadic interaction , we propose a model for events with a sender , receiver , and action type . Formally , we consider a possible set of events E = {(s , r , a ) : s ∈ S , r ∈ R , a ∈ A} where S,R,A are the sets of possible senders , receivers , and action types respectively . The observed data then form a sequence of T events , which we denote D = {ei : ei ∈ E , i = 1 , . . . , T} . As discussed earlier , our goal is to estimate the probabilities P ( s , r , a ) that the next event in the network will be from sender s to receiver r and of type a , ie , a multinomial consisting of ns × nr × na probabilities that sum to 1 . Rather than modeling individual triples ( s , r , a ) , the approach we take is to hypothesize the existence of a finite set of latent classes ( or clusters ) for events , each characterized by conditionally independent marginal distributions over senders S , receivers R , and actions A . This allows us to approximate the full array P ( s , r , a ) with a parsimonious mixture of simpler distributions that require far fewer parameters to specify than the unconstrained model with O(ns × nr × na ) parameters . We assume that events are exchangeable within a latent class of events . We further assume the event ’s sender , receiver , and action type are conditionally independent given the latent class . Under this model , each new edge arises from latent class c with probability πc ; next , the attributes of the edge are drawn from associated multinomial distributions over likely senders , receivers , and action types for the given class ( where θ , φ , ψ respectively parameterize each of these distributions ) . For example , φc,s = P ( s|c ) is the probability of selecting sender s given class c . We use standard non informative Dirichlet priors on these multinomials , allowing for straightforward derivation of posterior distributions of interest . This results in the following simple generative model for sets of relational events with C latent classes , where α , β , γ , and δ are the parameters of associated Dirichlet priors :
1 . Draw the class distribution π ∼ Dirichlet(α ) 2 . Draw distributions : θc ∼ Dirichlet(β ) , φc ∼ Dirichlet(γ ) ,
ψc ∼ Dirichlet(δ ) for all c ∈ {1 , . . . , C}
3 . For each event
( a ) Draw c ∼ Multinomial(π ) , the event ’s class ( b ) Draw s|c ∼ Multinomial(θc ) , the event ’s sender
Figure 1 : Number of edges for which we observe a given number of events in a data set of international dyadic events [ 15 ] . metric Dirichlet prior ) . A fundamental problem in this context is sparsity : many pairs s , r will have observed counts of Ns,r = 0 even though there may be a non zero probability of actor s sending an event to actor r . For example , in a particular university , researcher A and researcher B might never have communicated in the past , but they may well communicate in the future . The problem is particularly acute in the so called “ cold start ” scenario , where we are observing a new network ( eg , a new class of students at a university ) when we have very small amounts of sparse event data on which to base our predictions . The use of smoothing parameters in the probability estimates ( eg , the use of α above ) will certainly ameliorate the situation , but these smoothing parameters will tend to spread the probability mass evenly over all possible events . This will not be helpful for prediction in large sparse networks where the probability of events between pairs is highly skewed , ie , some pairs of individuals will have a much higher probability of communicating , as seen in Figure 1 .
A natural idea in this context is to learn groupings of the individuals and “ borrow strength ” from relevant groups when estimating individual pair probabilities . For example , say graduate student A is in group 1 and graduate student B is in group 2 . If there is evidence that groups 1 and 2 collaborate then we might predict that A and B will communicate in the future , even if they have not done so in the past . A well known approach of this type in social network analysis is stochastic blockmodeling . A blockmodel is defined as a mapping of approximately equivalent actors into blocks , along with a statement regarding the relations between the blocks [ 2 ] . Stochastic blockmodels have a rich history in the statistical modeling of social networks [ 8 , 13 , 26 ] , both for exploratory analysis and answering substantive questions . Statistical learning approaches can be used to infer both likely partitions of actors and the probability of block wise interactions [ 25 ] .
However , stochastic blockmodels are typically used to model static binary relationships among individuals , eg , binary edges indicating friendship . In contrast , we are interested in the relative frequency of events over time between pairs of individuals . Specifically we model pairwise probabilities P ( s , r ) , namely the probability that the next event in the network will occur between s and r ,
Events per edgeFrequency100101102103104105llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll100100510110151021025103 α
π c s r a
θ
φ
ψ
T
C
β
γ
δ
Figure 2 : Graphical model for the MPMM .
( c ) Draw r|c ∼ Multinomial(φc ) , the event ’s receiver ( d ) Draw a|c ∼ Multinomial( ψc ) , the event ’s type
The graphical model is shown in Figure 2 . Note that the parameter vector π has dimension C , and for each c the vectors θc , φc , and ψc have dimension ns , nr , and na respectively . From the above generative model we can immediately derive the likelihood , where Φ is the set of all parameters in the model : t=1
TY TY TY t=1 c=1
CX CX CX c=1
P ( D | Φ ) =
=
=
P ( ei = ( si , ri , ai ) , ci = c|Φ )
P ( si|θc)P ( ri|φc)P ( ai| ψc)P ( c|π )
θc,si φc,ri ψc,ai πc
( 2 ) t=1 c=1
One may interpret the above expression as follows : each event ’s probability incorporates the product of the probabilities of its sender , receiver , and action type given its latent class ; we then sum over the possible latent classes , weighting by the probability of each class . Note that for each latent class c the model predicts the probability of edge ( s , r , a ) as the product of marginal distributions . Thus the model can be conceptualized as a marginal product mixture model ( MPMM ) and is related to recent work on factorized representations for multi view data sets [ 20 ] .
It is informative to look at the representational capabilities of this model compared to traditional blockmodels as used in social network modeling . For example , consider the sociomatrix in Figure 3a , where each element ( s , r ) denotes the probability of the next event being sent by actor s and received by actor r . This pattern of interactions could be described by a blockmodel ( as shown in Figure 3c ) in terms of a partition of the senders , a partition of the receivers , and block wise probabilities . This blockmodel would require 6 × 7 = 42 parameters to capture these blockwise interactions . In our model , however , we see a more parsimonious explanation in terms of classes of activity . As shown in Figure 3b , there are four classes of events where events within each class occur with the same probability .
The model is general enough to handle several useful special cases . For instance , the model allows for asymmetric behaviors among nodes ; a given individual might initiate more events under one class and receive more events under another class . When there is a single event type , then na = 1 : step 3d of the generative model is ignored and the derivations and algorithms require trivial modification . When events are undirected , we use a single set of parameters for both senders and receivers . Also , the situation |S ∩R| = ∅ ( ie . a bipartite graph ) requires no modifications to the model .
While the MPMM makes strong assumptions regarding the conditional independence of edge attributes and does not incorporate any sequential dependence , we show such methods can be useful for exploring and modeling large , real world data sets .
INFERENCE
3 . We wish to infer the parameters of the model and the latent class assignments for events , given observed data D and the likelihood of Equation 2 . This is a typical mixture model likelihood for which there is no closed form for the posterior distribution and therefore we must resort to approximate inference methods . We present two algorithms for learning the posterior distribution of the latent class assignments as well as point estimates of the parameters Φ : a collapsed Gibbs sampler ( CGS ) and an expectation maximization ( EM ) algorithm . 3.1 Collapsed Gibbs Sampling
¬i,D , Φ )
First we provide a Markov chain Monte Carlo algorithm that uses Gibbs sampling to iteratively simulate the conditional posterior distribution of the latent classes . For each event , we need the distribution over possible classes conditioned on everything else . Note that since the model uses conjugate priors we can integrate out π , θc , φc , and ψc for all c in closed form ( and avoid the uncertainty associated with them while sampling ) . We are left with the following conditional distribution which may be used to sample the latent assignment for observation i : P ( ci = c|c c + α´„ Pns U¬i «„ c,si s=1 U¬i c,s+nsβ Pna W ¬i i I(ci = c ) , Uc,s = P c,ai a=1 W ¬i i I(ci = c , ri = r ) , and Wc,a =P i I(ci = c , si = s ) , i I(ci = c , ai = a ) . The parameters α , β , γ , and δ are smoothing parameters from symmetric Dirichlet priors . Note c¬i ≡ {cj : j = i} , so M¬i c = j=i I(cj = c ) for example . The derivation of the above sampling equation follows closely to that of collapsed Gibbs sampling for latent Dirichlet allocation [ 11 ] . Given the class assignments for all events , we can compute estimates for the model parameters . where Mc = P Vc,r =P P
∝`M¬i Pnr V ¬i c,ri r=1 V ¬i
„
«
«
+γ c,r +nr γ
+δ c,a+naδ
+β
P Pns Pnr Pna
ˆπc =
ˆθc,s =
ˆφc,r =
ˆψc,a =
Mc + α c Mc + Cα Uc,s + β s=1 Uc,s + nsβ
Vc,r + γ r=1 Vc,r + nrγ
Wc,a + δ a=1 Wc,a + naδ
Algorithm 1 shows the procedure in full . We assess convergence by monitoring the log likelihood of the training data under the model . While 20 30 iterations often appears sufficient for convergence , in all the experiments that follow we use 1000 iterations .
We obtain better predictive performance by running multiple chains of the CGS algorithm and averaging over the posterior predictive distributions for the next edge ( we will refer to this as MCGS ) . 3.2 Expectation Maximization Algorithm
As an alternative to CGS , we derive an EM algorithm that provides the marginal posterior density for the latent class assignment for each event . The algorithm iteratively maximizes the expected
( a )
( b )
( c )
( d )
Figure 3 : ( a ) : A matrix of observed counts for all possible events where darker shades indicate higher frequency . ( b ) : MPMM models the data via a low dimensional representation indicating groups of events . This structure is apparent after reordering the rows and columns . Stochastic blockmodels can model such data either by having ( c ) many small homogeneous blocks or ( d ) with a few inhomogeneous blocks ; the latter misses some of the structure .
Algorithm 1 CGS Algorithm for MPMM for i = 1 to T do
Initialize ci with random integer between 1 and C end for Compute count matrices M , U , V , W while not converged do for i = 1 to T do
Decrement M [ ci ] , U [ ci , si ] , V [ ci , ri ] , W [ ci , ai ] for c = 1 to C do
η[c ] ← ( M [ c ] + α )
“
” ” “ W [ c,ai]+δ P P
U [ c,si]+β c U [ c,si]+nsβ c W [ c,ai]+naδ
”
V [ c,ri]+γ c V [ c,ri]+nr γ
“
P end for ci ← IndexOf(RandomMultinomial(1 , η ) ) Increment M [ ci ] , U [ ci , si ] , V [ ci , ri ] , W [ ci , ai ] end for end while ˆπ ← Normalize(M + α ) ˆθ ← NormalizeColumns(U + β ) ˆφ ← NormalizeColumns(V + γ ) ˆψ ← NormalizeColumns(W + δ ) complete data loglikelihood ( which includes the latent class information ) thus giving us the maximum likelihood estimates for the parameters . After randomly initializing the P ( ci = c ) we iteratively perform the following computations for all c ∈ {1 , . . . , C} :
E step :
P ( ci = c|si , ri , ai , Φ ) ∝ θc,si φc,ri ψc,ai
M step :
ˆθc,s =
ˆφc,r =
ˆψc,a =
PT PT PT PT PT PT i=1 I(si = s)P ( ci = c ) + β i=1 P ( ci = c ) + nsβ i=1 I(ri = r)P ( ci = c ) + γ i=1 P ( ci = c ) + nrγ i=1 I(ai = a)P ( ci = c ) + δ i=1 P ( ci = c ) + naδ
We continue iterating until the log likelihood between iterations changes by less than = 1e − 8 for the experiments in this paper , and repeat this 5 times . 3.3 Scalability
Space and time complexity of the learning algorithms is important for large data sets . Inference and prediction for the MPMM is well suited to sparse data since the likelihood is only defined over events that occurred , rather than over all events that could have occurred . Because of this , the training time for our proposed approach scales linearly in the number of observed events T . In contrast , other statistical network models ( such as stochastic blockmodels [ 19 ] and latent space models [ 12 ] ) scale as O(n2 ) or worse , since the likelihood is defined over all pairs of individuals , whether an edge between them exists or not . For large sparse networks , scaling as O(T ) is likely to be much more computationally efficient than scaling as O(n2 ) . For CGS , the space complexity is O(T + C(ns + nr + na ) ) and the time complexity is O(T C ) per iteration as each Gibbs scan requires only a single pass through the data set . The time complexity for the EM algorithm is O(T C(ns+nr+na ) ) per iteration and the space complexity is O(T C+C(ns+nr+na) ) .
4 . AN ILLUSTRATIVE EXAMPLE
Finding latent event classes may be a helpful tool for exploratory data analysis in large data sets , in a manner similar to how topic models can facilitate the grouping of collections of documents by latent topics [ 11 ] .
To illustrate the use of our model for exploratory data analysis , we use a data set of international events involving entities from 450 countries over the 2000 2005 time period [ 15 ] . This data has been used by political scientists to explore international relations and policy . The authors used an automated system for coding 3,575,897 events from Reuters news reports . Each of these events takes the form : [ entity A ] [ action ] [ entity B ] . Actions in this data set consist of 247 possible types , such as judicial action , military action , and so forth . This data is well suited to the MPMM approach ; not only does it contain a very large number of possible edges ( roughly 13 , 000× 13 , 000× 247 ) which is difficult to model using standard social network analysis methods , but it also distinguishes between different types of activity .
To illustrate how the MPMM can work on bipartite graphs , we consider a subset of the data concerning US international relations , restricting senders to be US based and recipients to be foreign . After applying MCGS with C = 50 ( see Section 5.1 for a discussion of hyperparameter settings ) , we can explore typical senders , receivers , and action types as shown in Table 1 for three particular classes . The first is a class of events mostly concerning the 2004 Olympics , the second concerns the Iraq war , and the third primarily concerns the Middle East conflict . Action types are also clustered simultane
ReceiverSender1234567891012345678910ReceiverSender1082316954710823169547ReceiverSender1082316954710823169547ReceiverSender1082316954710823169547 Top Senders Class A United States : Government agents United States : Athletes United States : Nominal agents United States : Police United States : Occupations United States : Ethnic agents Class B United States : Military United States : Government agents United States : Military hardware United States : Officials United States : Police United States : Motor vehicles Class C Top Senders United States : National executive United States : Diplomats United States : Government agents United States : Human actions United States : Artists United States : Occupations
Pr .
Top Receivers
Pr .
Top Actions
0.47 Greece : NA 0.29 Australia : Government agents 0.04 United Kingdom : NA 0.04 0.04 0.03
Canada : Government agents France : NA Belgium : Government agents
Iraq : Government agents Iraq : National executive Iraq : Military Iraq : Ethnic agents Iraq : Intangible things
0.88 0.08 0.01 0.00 0.00 0.00 NA : Insurgents
Pr . 0.73 0.15 0.06 0.01 0.01 0.01
Top Receivers Palestine : National executive Israel : National executive Israel : Government agents Egypt : National executive Palestine : Government agents India : Government agents
Sports contest
0.05 0.02 Agree or accept 0.02 Optimistic comment 0.02 0.01 0.01
Comment Control crowds Improve relations
Comment
0.17 0.07 Military raid 0.05 Military clash 0.05 Military occupation 0.04 0.04
Shooting Political arrests and detentions
Pr .
Top Actions 0.22 Discussions 0.12 NA 0.09 0.06 Demand 0.04 0.03 Host a meeting
Call for action
Collaborate
Pr .
0.59 0.14 0.04 0.03 0.03 0.01
0.19 0.14 0.10 0.10 0.10 0.04
Pr . 0.44 0.22 0.09 0.04 0.03 0.03
Table 1 : Excerpts from the sender , receiver , and action type distributions for latent classes of international dyadic events as learned by the MPMM .
Note that spikes in the plot have correspondence with known world events , such as the beginning of the Iraq war early in 2003 and the Olympic Games in 2004 .
5 . EXPERIMENTAL METHODS
In this section we empirically study the MPMM ’s predictive abil ity , using baseline models and different data sets . 5.1 Algorithms and Settings
We consider several models for comparison . A trivial baseline approach for relational event data is to predict all possible events with equal probability . We will refer to this baseline as Uniform . Another simple approach is to make predictions using the observed frequency of each event . For a data set of T events , one can view the aggregated counts , Y , as a Multinomial(T ,p ) random variable , where p has length nrnsna . We denote this method Multinomial .
The maximum likelihood estimate ( MLE ) for p is Y /T . This estimate is asymptotically unbiased but it will suffer from high variance when applied to finite sparse data sets since many cells will have no data . By placing a Dirichlet prior on p we can smooth our probability estimates over unobserved events . In practice we let p ∼ Dirichlet(η ) with η = Q where Q determines the prior ’s effective sample size . In our experiments we set Q = 100 to keep the effect of the prior consistent across experiments . To place the MPMM on equal footing with this baseline , we set the MPMM hyperparameters accordingly , letting α = 2 and β = γ = δ = η1/3 . It is straightforward to show that , with these hyperparameters , the priors for both Multinomial and MPMM assign the same probability to a particular edge ( s , r , a ) . nsnr na
Other models , such as the infinite relational model ( IRM ) [ 14 ] , often assume entities belong to one or more latent clusters . Such models can be adapted to the type of event data considered in this paper by modeling the probability of each combination of clusters . In our experiments we compare our model to the IRM approach by using a single relation on three domains . Specifically ,
Figure 4 : Proportion of assignments per week for latent classes from a data set of international political events [ 15 ] , with typical senders , receivers , and action types shown in Table 1 . ously ; the action types with the MPMM upon inspection the action types seem appropriate given each class ( eg “ Sports contest ” actions should grouped in a class that often includes “ Athletes ” ) . The “ Comment ” action type encompasses information from interviews or public statements .
Although the MPMM uses only sets of counts ( rather than sequential or temporal information ) we can nonetheless retroactively examine the timeline of class assignments for each event after we have fit the model . In Figure 4 we plot the number of events per week assigned to each of the three latent classes from Table 1 .
Class Probability005010015020025030005010015020025030005010015020025030200020012002200320042005Iraq WarMiddle EastAthens Olympics TX i=1
TX i=1 we model Ys,r,a = Wks,kr ,ka |ks||kr||ka| where ks is the cluster assigned to s by the IRM , |ks| is the size of the cluster , and Wks,kr ,ka|θ ∼ Multinomial(T , θ ) , where θ ∼ Dirichlet(α ) . Following [ 14 ] we let α = β|ks||kr||ka| where |ks| is the size of cluster ks and β = 1 5.2 Prediction
Since we have defined a probabilistic model for how events are generated , we can compute the predictive probability of a future event using parameters estimated from training data . For example , suppose we want to know the probability of a particular event ( s , r , a ) . Substituting model parameter estimates into Equation 2 , we can compute
ˆps,r,a = P ( s , r , a|D , ˆπ , ˆθ , ˆφ , ˆψ ) =
ˆπc ˆθc,s ˆφc,r ˆψc,a
X c
In the case of MCGS , each ˆpsi,ri,ai is computed by averaging Z estimates of ˆp , taking the last sample obtained from Z independent CGS chains , where Z = 20 in the experiments below . 5.3 Evaluation
To evaluate the predictive performance of our model , we compute the average log probability of observed events in a heldout test set of T observations ( eg , for general motivation see [ 9] ) :
Ltest =
1 T log(f ( Yi|Ytrain ) ) =
1 T log(ˆpsi,ri,ai )
If model A has a larger value of Ltest compared to model B , this is evidence that model A is a better predictive model than model B , and is assigning higher probabilities to edges that actually occur in the test set and lower probabilities to those that do not occur ( compared to model B ) . Alternative performance scores could also be used , although such scores ( such as mean squared error ) often put an over emphasis on events that did not actually occur ( ie , all pairwise “ non events ” at each time step ) .
6 . EXPERIMENTAL RESULTS
The top row of Figure 5 is a visual representation of a particular MPMM which we used in simulation experiments . The 4 panels correspond to na = 4 different action types . The rows and columns in each panel represent ns = nr = 100 senders/receivers . Darker shades indicate a higher probability of that edge occurring . The shaded rectangles correspond to 4 different latent classes of events , A , B , C , D . For example , the third action type ( third panel ) is associated with latent classes B , C , and D .
We created synthetic training data sets of various sizes by simulating from the MPMM with these parameters , and compared the predictive performance of different models on independent test data . The lower left panel in Figure 5 shows how the predictive performance ( test log likelihood ) on the test data varied for each model as a function of training data size ( on a log scale ) . The different implementations of MPMM ( EM , CGS , MCGS ) were not significantly different from each other , so we only show MCGS for clarity . The upper line in the graph is the test log likelihood for the model with the “ perfect ” true parameter values ( no learning ) . The lower line is the performance of the Uniform model ( which ignores the training data ) . Between these two extremes , we see that the MPMM dominates the Multinomial , as we would expect given that the data is being generated from an MPMM . The multinomial model initially has poorer predictive ability as the training set size goes from 102 to 103—this may be due to initial overfitting on small training data sets as the effect of the smoothing prior weakens . As it sees more data ( beyond 103 ) it starts to improve and gradually catches up with the best performing MPMM models . We used different values of C with MPMM to show its effect on predictive performance ; since we generated the synthetic data using 4 latent classes , it is unsurprising that using C = 3 does not perform as well .
To gain some intuition for the MPMM , it is helpful to consider predictions made for a given node . Figure 5 shows the probability of a particular actor ( number 30 ) initiating an edge to each of the possible receivers for the synthetic data set . The probabilities are quite different for each model : with the MPMM , we are effectively smoothing over the set of typical receivers for those edges where actor 30 takes part . The true distribution is included for comparison .
We additionally consider three different real world data sets . The first consists of T = 200 , 000 records of emails from a European university collected over 83 days among ns = nr = 2562 individuals [ 7 ] . To create an action type , a , we discretized the log of the size of the email message ( in kB ) into na = 10 bins .
The second data set involves dominance acts among ns = nr = 63 red deer stags in Scotland [ 3 ] . Red deer engage in aggressive acts to enforce a social hierarchy . The data consists of T = 1200 observed aggressive actions ( eg glaring , kicking , and mounting ) , where na = 10 . Each event had a clear “ winner ” and “ loser ” , which we code as the sender and recipient , respectively .
The third data set is the international events data discussed earlier in the paper . We evaluated the algorithms on the same subset of events considered in Section 4 , comprising a total of na = 81 senders from the USA , nr = 2695 non US recipients , and na = 178 actions ( types of events ) . The total number of events is T = 40031 .
The left panel of Figure 6 shows the predictive performance of different models as a function of training set size for the 3 data sets : the red deer data set ( with a test set of 200 observations ) , the email data set ( with a test set of 100,000 observations ) , and the international political events data set ( with a test set of 10,000 observations ) . We take the mean of the posterior predictive distribution over 20 chains of the CGS algorithm for MPMM using C = 3 , 20 , and 50 . Hyperparameter selection is dicussed in Section 51 For each of 10 runs , the training and test sets are randomly sampled and we plot the mean test log likelihood across runs ( with the error bars showing 95 % confidence intervals ) . With large amounts of training data the Multinomial baseline steadily improves as expected , but the MPMM has significantly better predictive power for a wide range of training set sizes . For the red deer data set , the IRM outperforms the Multinomial baseline , but does not perform as well as the MPMM.1
7 . PREDICTION WITH MISSING DATA
We also measure the predictive performance of the MPMM when some of the events are only partially observed . Missing data is a well studied issue in social network analysis , but most effort has been motivated by survey data , eg accounting for censoring , network boundaries , and so on [ 16 ] . Both CGS and EM can be extended in a straightforward manner to make inferences over missing sender , recipient , or type information . Here we just show results using EM as the inference technique .
The right hand side of Figure 6 compares the predictive performance on test data of learning MPMMs with fully observed data versus partially observed data . For this experiment we split each of the real data sets into ( a ) a test set of the same size used in the
1We were unable to obtain experimental results for the IRM on the two larger datasets ( email and international political events ) .
Figure 5 : Top : Probability of an event for a synthetic data set with four latent classes labeled A , B , C , and D . Each panel represents an action type . Left : Comparison of test log likelihood for the synthetic data set using the CGS algorithm with different numbers of latent classes C versus the baseline . See 6 for a discussion . Right : Comparison of predictive distributions between models and truth for actor 30 on a training set of 10000 events with the hyperparameters used in the experiment at left . The MPMM approximation provides a better fit over the typical recipients . previous experiments , and ( b ) training sets of various sizes . All models were given a fixed number of events that were fully observed ( corresponding to the left most data point in the graphs on the right hand side of Figure 6 ) . The “ Complete ” model was then given additional observations ( corresponding to increasing values along the x axis ) . The “ Incomplete ” models were also given additional observations , again corresponding to the x axis , but in this case the additional events had missing recipient IDs ( ie , events are only partially observed ) . All models were trained using EM with C = 5 , where for partially observed data the recipient IDs were treated as missing and probability distributions over recipients for each event were estimated and maintained in a standard EM fashion .
The goal of the experiment was to determine if the MPMM approach could extract useful information from event data even when information such as recipient IDs were missing . The figures show that the test log likelihood indeed increases as additional partially observed data is provided to the learning algorithm . The performance improvement is not as good as that obtained with fullyobserved data ( top line for each data set ) but nonetheless is sig nificantly better than models that ignore the partially observed data ( the left most points on the graphs ) . Note that probabilistic models are particularly useful in the context of missing information—for non probabilistic modeling approaches it would be difficult to incorporate the partially observed data into a learning algorithm .
8 . DISCUSSION AND RELATED WORK
The model proposed here is simple in that each event ’s sender , receiver , and action type are assumed to be conditionally independent given the latent class for that event . However , in return for these strong assumptions , we get relatively straightforward and scalable inference algorithms , making the learning algorithms practical as a tool for analyzing large event data sets .
Extending the model to allow for time dependence is a natural direction for future work . For example , it is straightforward to add Markov dependence for the latent classes , resulting in a hidden Markov model—this kind of temporal dependence may be useful for networks where the entire network undergoes “ global ” changes in behavior ( eg , modeling patterns in team sports ) . Similarly , it
ReceiverSender204060801001AB204060801002AB204060801003BCD204060801004BD20406080100Size of Training SetTest Log Probability−120−115−110−105−100−95lllllllll102103104105106MethodlMPMM−MCGS : C=3MPMM−MCGS : C=4MPMM−MCGS : C=10MultinomialUniformTrue Model Figure 6 : The left hand plots show the predictive accuracy ( measured by test log likelihood ) of different models on real world data sets . The right panel compares the performance of MPMM with fully observed event data versus partially observed data . Top : Red Deer data set . Center : Email data . Bottom : International dyadic events .
Size of Training SetTest Log Probability−105−100−95−90−85llllllll10151021025103MethodlMPMM−MCGS : C=3MPMM−MCGS : C=5MPMM−MCGS : C=20MultinomialUniformIRMNumber of observationsTest Log Probability−95−94−93−92−91−90−89lllll1023102410251026102710281029103ContextlCompleteIncompleteSize of Training SetTest Log Probability−17−16−15−14−13−12lllllll102102510310351041045105MethodlMPMM−MCGS : C=3MPMM−MCGS : C=20MPMM−MCGS : C=50MultinomialUniformNumber of observationsTest Log Probability−165−160−155−150−145−140−135lllllll102102510310351041045105ContextlCompleteIncompleteSize of Training SetTest Log Probability−17−16−15−14−13−12−11llllll102102510310351041045MethodlMPMM−MCGS : C=3MPMM−MCGS : C=20MPMM−MCGS : C=50MultinomialUniformNumber of observationsTest Log Probability−140−135−130−125−120−115llllll102102510310351041045ContextlCompleteIncomplete would be straightforward to make the hidden process dependent on exogenous time series representing external influences on the network , or dependent on time directly such as time of day , day of week , or time of year . Modeling dependence at the individual actor and event level is somewhat more challenging , and approaches such as network based sufficient statistics may be useful [ 5 ] .
Also of interest are extensions to models that can handle events with durations , eg , the special case of events that are “ born ” and assumed to persist indefinitely , eg the growth of a friendship graph on a social networking site . One approach for modeling such phenomena is to combine models of user centric activity ( as in Leskovec et al . [ 18 ] ) with stochastic models such as the mixed membership stochastic blockmodel [ 1 ] ( see below ) or MPMM to automatically share statistical strength among similar groups of nodes or edges .
The approach we present in this paper differs from much of the prior work on block modeling in that here we model latent classes of events , rather than latent classes of individuals . The Bayesian formulation of the stochastic blockmodel ( first proposed by Holland , Laskey , and Leinhardt [ 13 ] and developed further in Snijders and Nowicki [ 25 ] and Nowicki and Snijders [ 19] ) , focuses on the assignment of nodes to latent classes as well as estimation of blockwise interaction rates . In that model , each node i is first assigned to a latent class : zi ∼ Multinomial(1 , θ ) . Each possible edge is drawn using a K × K matrix , η , that describes the probability of the two blocks interacting : Yij ∼ Bernoulli(zi
T ηzj ) , 1 ≤ i , j ≤ n .
The Infinite Relational Model ( IRM ) of Kemp et al . [ 14 ] extends the Nowicki and Snijders approach [ 19 ] to networks with edges having more than two nodes ( ie , not just sender and receiver ) . Kemp et al . use a Chinese Restaurant Process ( CRP ) for assigning each node to a latent group ; this nonparametric method allows the number of latent classes to be flexible and data dependent . Kurihara , Kameya , and Sato [ 17 ] further extended the IRM to model events by picking the sender and receiver from a multinomial distribution over possible nodes .
The Mixed Membership Stochastic Blockmodel ( MMSB ) of Airoldi et al [ 1 ] departs from the Nowicki and Snijders [ 19 ] blockmodeling approach by instead allowing nodes to probabilistically choose the latent group . In a graph of friendships , some edges for a given node might arise from shared academic interest while other ties might arise from shared sports interest . To accomplish this , the model introduces multinomial distributions for each node , πi , from which a latent class is drawn , zi|πi ∼ Multinomial(πi ) , Yij ∼ Bernoulli(zi
T ηzj ) for 1 ≤ i , j ≤ N . Shafiei and Chipman [ 22 ] extended the MMSB with a mechanism for choosing the event ’s sender ( based on their “ friendliness ” score ) and then use the latent class assignments to determine which receivers are chosen for the email . For each email , all nodes sample a single class assignment , zi ∼ Multinomial(πi ) , akin to the MMSB .
In contrast to the block oriented models above , the MPMM approach discussed in this paper directly models and clusters the events in the network rather than the relationships among latent groups of individuals .
One can also interpret the MPMM as a mixture model for contingency tables . Specifically , we model the marginal distributions for each domain name with a mixture of multinomials , and enforce that the classes for each dimension are linked . Similar models include the Interaction Component Model ( ICMc ) [ 23 ] though our model applies directly to dyadic event data and can handle directed , weighted networks with edge types . Nonparametric versions of such models are also of interest , as in Rogers et al . [ 20 ] .
Sinkkonen et al [ 24 ] presented a general framework for latentvariable modeling of relational data that includes models such as the MPMM we presented in this paper—their focus was more on static co occurence data rather than the type of event data that is of primary interest here .
9 . CONCLUSION
Relational event data is increasingly common in large social network data sets . In this paper we proposed the MPMM as an interpretable and computationally tractable statistical model for analyzing such data . We illustrated how the model can be used to analyze large sets of events that have a sender , receiver , and action type , presented two algorithms for performing inference , evaluated predictive accuracy of the model on real data , and demonstrated how the model can be used to systematically handle practical issues such as missing data .
Acknowledgements This work was supported in part by an NDSEG Graduate Fellowship ( CDB ) and by ONR/MURI under grant number N00014 081 1015 ( PS ) . The authors would also like to thank Drew Frank for useful discussions , Charles Kemp for providing IRM code , and Jean Pierre Eckmann for providing the email data .
References [ 1 ] E . M . Airoldi , D . M . Blei , S . E . Fienberg , and E . P . Xing . Mixed membership stochastic blockmodels . Journal of Machine Learning Research , ( September):1981 2014 , 2008 .
[ 2 ] C . Anderson , S . Wasserman , and K . Faust . Building stochastic blockmodels . Social Networks , 14(1 2):137–161 , June 1992 .
[ 3 ] M . C . Appleby . Competition in a red deer stag social group : rank , age and relatedness of opponents . Animal Behavior , 31:913–918 , 1983 .
[ 4 ] U . Brandes , J . Lerner , and T . aB Snijders . Networks evolving step by step : statistical analysis of dyadic event data . 2009 International Conference on Advances in Social Network Analysis and Mining , pages 200–205 , 2009 .
[ 5 ] C . Butts . A relational event model for social action . Socio logical Methodology , 38(1):155–20 , 2008 .
[ 6 ] J . Chang and D . Blei . Relational topic models for document networks . Proc . of Conf . on AI and Statistics ( AISTATS’09 ) , 2009 .
[ 7 ] J P Eckmann , E . Moses , and D . Sergi . Entropy of dialogues creates coherent structures in e mail traffic . Proceedings of the National Academy of Sciences of the United States of America , 101(40):14333–7 , October 2004 .
[ 8 ] S . E . Fienberg and S . S . Wasserman . Categorical data analysis of single sociometric relations . Sociological Methodology , 12:156–192 , 1981 .
[ 9 ] S . Geisser and W . F . Eddy . A predictive approach to model selection . Journal of the American Statistical Association , 74(365):153 , March 1979 .
[ 10 ] S . M . Goodreau , J . A . Kitts , and M . Morris . Birds of a feather , or friend of a friend ? Using exponential random graph models to investigate adolescent social networks . Demography , 46:103–125 , 2009 .
[ 11 ] T . L . Griffiths and M . Steyvers . Finding scientific topics . Proceedings of the National Academy of Sciences of the United States of America , 101 Suppl:5228–35 , April 2004 .
[ 12 ] P . D . Hoff . Multiplicative latent factor models for description and prediction of social networks . Computational and Mathematical Organization Theory , October 2008 .
[ 13 ] P . W . Holland , K . B . Laskey , and S . Leinhardt . Stochastic blockmodels : first steps . Social Networks , 5:109–137 , 1983 . [ 14 ] C . Kemp , J . Tenenbaum , T . Griffiths , T . Yamada , and N . Ueda . Learning systems of concepts with an infinite relational model . Proceedings of the 21st National Conference on Artificial Intelligence , 2006 .
[ 15 ] G . King,W Lowe . An automated information extraction tool for international conflict data with performance as good as human coders : A rare events evaluation design . International Organization , 57:617 642 , 2003 .
[ 16 ] G . Kossinets . Effects of missing data in social networks . So cial Networks , 28:247–268 , 2006 .
[ 17 ] K . Kurihara , Y . Kameya , and T . Sato . A Frequency based stochastic blockmodel . Workshop on Information Based Induction Sciences , 2006 .
[ 18 ] J . Leskovec , L . Backstrom , R . Kumar , and A . Tomkins . Microscopic evolution of social networks . Proceeding of the 14th ACM SIGKDD international conference on Knowledge discovery and data mining , 2008 .
[ 19 ] K . Nowicki and T . A . B . Snijders . Estimation and prediction of stochastic blockstructures . Journal of the American Statistical Association , 96(455):1077– 1087 , 2001 .
[ 20 ] S . Rogers , A . Klami , J . Sinkkonen , M . Girolami , and Infinite factorization of multiple non parametric
S . Kaski . views . Machine Learning , 79(1 2):201–226 , 2009 .
[ 21 ] S . Ross . Introduction to Probability Models . Academic Press ,
2006 .
[ 22 ] M . Shafiei and H . Chipman . Mixed membership stochastic block models for transactional data . Workshop on Analyzing Networks and Learning with Graphs ( NIPS 2009 ) , pages 1–8 , 2009 .
[ 23 ] J . Sinkkonen , J . Aukia , S . Kaski , C . Rudin , R . Schapire , and I . Daubechies . Component models for large networks . ArXiv e prints . arXiv:08031628 , page 11 15 , 2008 .
[ 24 ] J . Sinkkonen , J . Aukia , S . Kaski . Infinite mixtures for multirelational categorical data . 6th International Workshop on Mining and Learning with Graphs , Helsinki , Finland , 2008 . [ 25 ] T . A . B . Snijders and K . Nowicki . Estimation and prediction for stochastic blockmodels for graphs with latent block structure . Journal of Classification , 14(1):75 100 , 1997 .
[ 26 ] Y . Wang and G . Wong . Stochastic blockmodels for directed Journal of the American Statistical Association , graphs . 82(397):8 19 , 1987 .
