On Community Outliers and their Efficient
Detection in Information Networks∗
Jing Gao† , Feng Liang† , Wei Fan‡ , Chi Wang† , Yizhou Sun† , and Jiawei Han†
†{jinggao3,liangf,chiwang1,sun22,hanj}@illinois.edu , ‡weifan@usibmcom
†University of Illinois at Urbana Champaign , IL USA
‡IBM T . J . Watson Research Center , Hawthorn , NY USA
ABSTRACT Linked or networked data are ubiquitous in many applications . Examples include web data or hypertext documents connected via hyperlinks , social networks or user profiles connected via friend links , co authorship and citation information , blog data , movie reviews and so on . In these datasets ( called “ information networks ” ) , closely related objects that share the same properties or interests form a community . For example , a community in blogsphere could be users mostly interested in cell phone reviews and news . Outlier detection in information networks can reveal important anomalous and interesting behaviors that are not obvious if community information is ignored . An example could be a low income person being friends with many rich people even though his income is not anomalously low when considered over the entire population . This paper first introduces the concept of community outliers ( interesting points or rising stars for a more positive sense ) , and then shows that wellknown baseline approaches without considering links or community information cannot find these community outliers . We propose an efficient solution by modeling networked data as a mixture model composed of multiple normal communities and a set of randomly generated outliers . The probabilistic model characterizes both data and links simultaneously by defining their joint distribution based on hidden Markov random fields ( HMRF ) . Maximizing the data likelihood and the posterior of the model gives the solution to the outlier inference problem . We apply the model on both ∗Research was sponsored in part by Air Force Office of Scientific Research MURI award FA9550 08 1 0265 , the US National Science Foundation under grants IIS 09 05215 and DMS 0732276 , and by the Army Research Laboratory under Cooperative Agreement Number W911NF 09 2 0053 ( NSCTA ) . The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies , either expressed or implied , of the Army Research Laboratory or the US Government . The US Government is authorized to reproduce and distribute reprints for Government purposes notwithstanding any copyright notation here on . synthetic data and DBLP data sets , and the results demonstrate importance of this concept , as well as the effectiveness and efficiency of the proposed approach .
Categories and Subject Descriptors H28 [ Database Management ] : Database Applications— Data Mining
General Terms Algorithms
Keywords outlier detection , community discovery , information networks
1 .
INTRODUCTION
Outliers , or anomalies , refer to aberrant or interesting objects whose characteristics deviate significantly from the majority of the data . Although the problem of outlier detection has been widely studied [ 6 ] , most of the existing approaches identify outliers from a global aspect , where the entire data set is examined . In many scenarios , however , an object may only be considered abnormal in a specific context but not globally [ 25 , 29 ] . Such contextual outliers are sometimes more interesting and important than global outliers . For example , 20 Fahrenheit degree is not a global outlier in temperature , but it represents anomalous weather in the spring of New York City .
In this paper , we study the problem of finding contextual outliers in an “ information network ” . Networks have been used to describe numerous physical systems in our everyday life , including Internet composed of gigantic networks of webpages , friendship networks obtained from social web sites , and co author networks drawn from bibliographic data . We regard each node in a network as an object , and there usually exist large amounts of information describing each object , eg the hypertext document of each webpage , the profile of each user , and the publications of each researcher . The most important and interesting aspect of these datasets is the presence of links or relationships among objects , which is different from the feature vector data type that we are more familiar with . We refer to the networks having information from both objects and links as information networks . Intuitively , objects connected via the network have many interactions , subsequently share mutual interests , and thus form a variety of communities in the network [ 11 ] . For example , in a blogsphere , there could be financial , literature , and technology cliches . Taking communities as contexts , we aim at detecting outliers that have non conforming patterns compared with other members in the same community . Example : Low income person with rich friends A friend network is shown in Figure 1(a ) , where each node denotes a person , and a link represents the friend relationship between two persons . Each person ’s annual salary is shown as a number attached to each node . There obviously exist two communities , high income ( v1,v2,v3,v4,v5 ) and low income ( v7,v8,v9,v10 ) . Interestingly , v6 is an example of community outliers . It is only linked to the highincome community ( 70 to 160K ) , but has a relatively low income ( 40K ) . This person could be a rising star in the social network , for example , a young and promising entrepreneur , or someone who may settle down in a rich neighborhood . Another example is a co author network . Researchers are linked through co authorship , and texts are extracted from publications for each author in bibliographic databases . A researcher who does independent research on a rare topic is an outlier among people in his research community , for example , a linguistic researcher in the area of data mining . Additionally , an actor cooperation network can be drawn from movie databases where actors are connected if they co star a movie . Exceptions can be found when an actor ’s profile deviates much from his co star communities , such as a comedy actor co starring with lots of action movie stars . Limitation of Traditional Approaches Identifying community outliers is a non trivial task . First , if we conduct outlier detection only based on each object ’s information , without taking network structure into account , the identified outliers would only be “ global ” outliers . As shown in Figure 1(b ) , v1 is a global outlier with 70K deviating from the other salary amounts in the “ low income person with rich friends ” example . We call this method GLobal Outlier Detection Algorithm ( GLODA ) . Secondly , when only “ local ” information ( ie , information from neighboring nodes ) is considered , the identified node is just significantly away from its adjacent neighbors . It is a “ local ” outlier , not necessarily a “ community ” outlier . As illustrated in Figure 1(c ) , v9 is a local outlier because his salary is quite different from those of his direct friends ( v2 , v4 and v10 ) . The corresponding algorithm is denoted as Direct Neighbor Outlier Detection Algorithm ( DNODA ) .
In detecting community outliers , both the information at each individual object and the one in the network should be taken into account simultaneously . A naive solution is to first partition the network into several communities using network information [ 24 , 14 ] , and then within each community , identify outliers based on the object information . This two stage algorithm is referred to as Community Neighbor Algorithm ( CNA ) . The problem with such a two stage approach is that communities discovered using merely network information may not make much sense . For example , partitioning the graph in Figure 1(c ) along the dotted line minimizes the number of normalized cuts , and thus the line represents the boundary between two communities identified by CNA . However , the resulting two communities have wide spread income levels , and thus it does not make much sense to detect outliers in such two communities .
Therefore , we propose to utilize both the network and
( a ) Community Outliers–CODA
( b ) Global Outliers–GLODA
( c ) Local Outliers DNODA
Figure 1 : Comparison of Different Types of Outliers data information in an integrated solution , in order to improve community discovery and find more meaningful outliers . The algorithm we developed is called community outlier detection algorithm ( CODA ) . With the proposed method , the network in Figure 1(a ) will be divided by the dashed line , and v6 is detected as the community outlier . In many applications , no matter the network is dense or sparse , there is ambiguity in community partitions . This is particularly true for very large networks , since information from both nodes and links can be noisy and incomplete . Consolidating information from both sources can compensate missing or incomplete information from one side alone and is likely to yield a better solution .
Some clustering methods ( CLA for short ) have been developed to group nodes in an information network into communities using both data and link information [ 17 , 32 , 30 ] . Those methods , however , are not designed for outlier detection . The reason is that they are proposed under the assumption that there are no outliers . It is well known that outliers can highly affect the formation of communities . Different from those methods , the proposed approach combines , instead of separating , outlier detection and community mining into a unified framework . As summarized in Table 1 , both GLODA and DNODA only use part of the available in
V6V5V4110K40K100KCommunityOutlierHigh income CommunityLow income CommunityV2160KV170KV830KV710KV3140KV910KV1030KV710V9V830V104070100110140160V6V1V4V5V3V2Global OutlierSalary ( in $1000)V6V5V4110K40K100KLocalOutlierV2160KV170KV830KV710KV910KV1030KV3140KCNABoundary Table 1 : Summary of Related Work
Algorithms
GLODA DNODA
CNA
CLA
Tasks global outlier detection local outlier detection find communities then detect outliers clustering in information networks
Information Sources data of objects data and direct neighbors use data and links separately use data and links together formation , whereas the other two approaches consider both data and links . However , CNA utilizes the two information sources separately , and CLA is used to conduct clustering , instead of outlier detection . Summary of the Proposed Approach In this paper , we propose a probabilistic model for community outlier detection in information networks . It provides a unified framework for outlier detection and community discovery , integrating information from both the objects and the network . The information collected at each object is formulated as a multivariate data point , generated by a mixture model . We use K components to describe normal community behavior and one component for outliers . Distributions for community components are , but not limited to , either Gaussian ( continuous data ) or multinomial ( text data ) , whereas the outlier component is drawn from a uniform distribution . The mixture model induces a hidden variable zi at each object node , which indicates its community . Then inference on zi ’s becomes the key in detecting community outliers . We regard the network information as a graph describing the dependency relationships among objects . The links from the network ( ie , the graph ) are incorporated into our modeling via a hidden Markov random field ( HMRF ) on the hidden variable zi ’s . We motivate an objective function from the posterior energy of the HMRF model , and find its local minimum by using an Iterated Conditional Modes ( ICM ) algorithm . We also provide some methods for setting the hyper parameters in the model . Moreover , the proposed model can be easily generalized to handle a variety of data as long as a distance function is defined . A summary of this paper is as follows : • Finding community outliers is an important problem but has not received enough attention in the field of information network analysis . To the best of our knowledge , this is the first work on identifying community outliers by analyzing both the data and links simultaneously .
• We propose an integrated probabilistic model to interpret normal objects and outliers , where the object information is described by some generative mixture model , and network information is encoded as spatial constraints on the hidden variables via a HMRF model . • Efficient algorithms based on EM and ICM algorithms are provided to fit the HMRF model as well as inferring the hidden label of each object .
• We validate the proposed algorithm on both synthetic and real data sets , and the results demonstrate the advantages of the proposed approach in finding community outliers .
Figure 2 : Community Outlier Detection Model
2 . COMMUNITY OUTLIER DETECTION Community outliers can be defined in various ways . We define it based on a generative model unifying data and links . Based on the definition , we discuss the specific models for continuous data and text data . Table 2 summarizes some important notations used in the paper . 2.1 Outlier Detection via HMRF
The problem is defined as follows : suppose we have an information network denoted as a graph G = ( V , W ) , where V denotes a set of objects {v1 , . . . , vM} , and W represents the links between each pair of objects . Specifically , the input include :
• S = {s1 , . . . , sM} where si is the data associated with object vi .
• W is the symmetric M × M adjacency matrix of the network where wij ( wij ≥ 0 ) is the weight of the link between the two objects vi and vj . If wij > 0 , vi and vj are connected .
Let I = {1 , . . . , M} be the set of indices of the M objects . The objective is to derive the anomalous subset {i : vi is a contextual outlier with respect to S and W , i ∈ I} .
Next , we discuss how to formulate this using HMRF model . Mathematically , a HMRF model is characterized by the following :
Observed data
X = {x1 , . . . , xM} is a set of random variables . Each random variable xi generates the data si associated with the i th object .
Hidden labels
Z = {z1 , . . . , zM} is the set of hidden random variables , whose values are unobservable . Each variable zi indicates the community assignment of vi . Suppose there are K communities , then zi ∈ {0 , 1 , . . . , K} . If zi = 0 , vi is an outlier . If zi = k ( k = 0 ) , vi belongs to the k th community .
Neighborhood system
The links in W induce dependency relationships among the hidden labels , with the rationale that if two objects vi and vj are linked on the network ( ie , they are neighbors ) , then they are more likely to belong to the same community
Z10Z9Z8Z7Z6Z5Z4Z3Z2Z1101111222X10X9X8X7X6X5X4X3X2X1110K40K100K140K160K70K30K10K30K10KHidden LabelsObserved Data2 Table 2 : Important Notations
Symbol Definition the indices of objects the set of objects the given attribute values of the objects the given link structure , wij the link strength between objects vi and vj the set of random variables for hidden labels of the objects the set of random variables for observed data the neighborhood of object vi
I = {1 , . . . , i , . . . , M} V = {v1 , . . . , vM} S = {s1 , . . . , sM} WM×M = [ wij ] Z = {z1 , . . . , zM} X = {x1 , . . . , xM} ( i ∈ I ) 1 , . . . , k , . . . , K the indices of normal communities Θ = {θ1 , . . . , θK} θk = {µk , σ2 k} θk = {βk1 , βk2 , . . . , βkT } ( l = 1 , . . . , T ) the set of random variables for model parameters the parameters of the k th normal community ( continuous data ) : µk mean , σ2 the parameters of the k th normal community ( text data ) the probability of observing the l th word in the k th community ( text data )
Ni
βkl k variance
( ie , zi and zj are likely to have the same value ) . However , since outliers are randomly generated , the neighbors of an outlier are not necessarily outliers . So we adjust the neighborhood system as the following :
( cid:189 ) {j ; wij > 0 , i = j , zj = 0} zi = 0
Ni =
φ zi = 0 .
Here Ni stands for the set of neighbors of object vi . When zi = 0 , ie , vi is not an outlier , the neighborhood of vi contains its normal neighbors in G . In contrast , vi ’s neighborhood is empty if it is an outlier ( zi = 0 ) .
Conditional independence
The set of random variables X are conditionally indepen dent given their labels :
P ( X = S|Z ) =
M
P ( xi = si|zi ) . i=1
Normal Communities and Outliers
We assume that the k th normal community ( k = 0 ) is characterized by a set of parameters θk , ie ,
P ( xi = si|zi = k ) = P ( xi = si|θk ) .
Quite differently , the outliers follow a uniform distribution , ie ,
P ( xi = si|zi = 0 ) = ρ0 where ρ0 is a constant . Let Θ = {θ1 , . . . , θK} be the set of all parameters describing the normal communities .
Dependency between hidden variables
The random field defined over the hidden variables Z is a Markov random field , where the Markov property is satisfied :
P ( zi|zI−{i} ) = P ( zi|zNi ) zi = 0 .
It indicates that the probability distribution of zi depends only on the labels of vi ’s neighbors in G if zi corresponds to a normal community . If zi = 0 , vi is an outlier and is not linked to any other objects in the random field , and thus we set P ( zi = 0 ) = π0 where π0 is a constant . According to the Hammerskey Clifford theorem [ 3 ] , an MRF can equivalently be characterized by a Gibbs distribution : exp(−U ( Z ) )
P ( Z ) =
( 1 )
1 H1 where H1 is a normalizing constant , and U ( Z ) = c∈C Vc(Z ) , the potential function , is a sum of clique potentials Vc(Z ) over all possible cliques ( c ∈ C ) in G . Since outliers are stand alone objects ( their links in G are ignored in the model ) , we define the potential function only on the neighborhood of normal objects :
U ( Z ) = −λ wijδ(zi − zj )
( 2 ) wij >0,zi=0,zj=0 where λ is a constant , wij > 0 denotes that there is a link connecting the two objects vi and vj , and both zi and zj are non zero . The δ function is defined as δ(x ) = 1 if x = 0 and δ(x ) = 0 otherwise . The potential function suggests that , if vi and vj are normal objects , they are more likely to be in the same community when there exists a link connecting them in G , and the probability becomes higher if their link wij is stronger .
Figure 2 shows the HMRF model for the example in Figure 1(a ) . The top layer represents the hidden variables {z1 , . . . , z10} . It has the same topology as the original network G except that the neighborhood of z6 is now empty because it is an outlier . Given zi = k , the corresponding data value is generated according to the parameter θk . The bottom layer is composed of the data values ( salaries ) of the objects . In this example , two communities are formed , and objects in the same community are strongly linked in the top layer , as well as having similar values in the bottom layer . When considering both data and link information , we cannot assign v6 to any community ( linked to community 1 but its value is closer to community 2 ) , and thus regard it as a community outlier . 2.2 Modeling Continuous and Text Data
In the proposed model , the probability of hidden variables is modeled by Eq ( 1 ) and Eq ( 2 ) , and the outliers are generated by a uniform distribution . However , given the hidden variable zi = 0 , the probability distribution of xi can be modeled in various ways depending on the format it is taking . In this part , we discuss how P ( xi = si|zi ) ( zi = 0 ) is modeled when si is continuous or a text document , the two major types of data we encounter in applications . Extensions to general cases are discussed in Section 4 .
Continuous Data
For the sake of simplicity , we assume that the data S are 1 dimensional real numbers . Extensions to model multidimensional continuous data are straightforward . We propose to model the normal points in S by a Gaussian mixture due to its flexibility in approximating a wide range of continuous distributions . Parameters needed to describe the k th community are the mean µk and variance σ2 k : θk =
{µk , σ2 k} . Given the model parameter Θ = ( θ1 , . . . , θK ) , if zi = k ∈ {1 , . . . , K} , the logarithm of the conditional likelihood ln P ( xi = si|zi = k ) is : ln P ( xi = si|zi = k ) = − ( si − µk)2
− ln σk − ln
√
2π .
( 3 )
2σ2 k
Text Data Suppose each object vi is a document that is comprised of a bag of words . Let {w1 , w2 , . . . , wT} be all the words in the vocabulary , and each document is represented by a vector si = ( di1 , di2 , . . . , diT ) , where dil denotes the count of word wl in vi . Now the parameter characterizing each normal community is θk = {βk1 , βk2 , . . . , βkT} where βkl = P ( wl|zi = k ) is the probability of seeing word wl in the k th community . Given that a document vi is in the k th community , its word counts si follow a multinomial distribution , and thus ln P ( xi = si|zi = k ) is defined as : ln P ( xi = si|zi = k ) = dil ln P ( wl|zi = k ) = l=1 l=1
T
T dil ln βkl .
( 4 )
3 . FITTING COMMUNITY OUTLIER DE
TECTION MODEL
In the HMRF model for outlier detection we discussed in Section 2 , both the model parameters Θ and the set of hidden labels Z are unknown . In this section , we present the method to infer the values of hidden variables ( Section 3.1 ) and estimate model parameters ( Section 32 ) 3.1 Inference
We first assume that the model parameters in Θ are known , and discuss how to obtain an assignment of the hidden variables . The objective is to find the configuration that maximizes the posterior distribution given Θ . We then discuss how to estimate Θ and Z simultaneously in Section 32
In general , we seek a labeling of the objects , Z = {z1 , . . . , zM} , to maximize the posterior probability ( MAP ) : P ( X = S|Z)P ( Z ) .
ˆZ = arg max
Z
We use the Iterated Conditional Modes ( ICM ) algorithm [ 4 ] to solve this MAP estimation problem . It adopts a greedy strategy by calculating local minimization iteratively and the convergence is guaranteed after a few iterations . The basic idea is to sequentially update the label of each object , keeping the labels of the other objects fixed . At each step , the algorithm updates zi given xi = si and the other labels by maximizing P ( zi|xi = si , zI−{i} ) , the conditional posterior probability . Next we discuss the two scenarios separately when zi takes non zero or zero values .
If zi = 0 , we have
P ( zi|xi = si , zI−{i} ) ∝ P ( xi = si|Z)P ( Z ) .
As discussed in Eq ( 1 ) and Eq ( 2 ) , the probability distribution of Z is given by
( cid:179 )
P ( Z ) ∝ exp
λ wijδ(zi − zj )
. wij >0,zi=0,zj=0
In P ( zi|xi = si , zI−{i} ) , the links that involve objects other
( cid:180 )
Algorithm 1 Updating Labels Input : set of data S , adjacency matrix W , set of model parameters Θ , number of clusters K , link importance λ , threshold a0 , initial assignment of labels Z ( 1 ) ; Output : updated assignment of labels Z ; Algorithm :
Randomly set Z ( 0 ) t ← 1 while Z ( t ) is not close enough to Z ( t−1 ) do t ← t + 1 for i = 1;i <= M ;i + + do update z(t ) i = k which minimizes Ui(k ) in Eq ( 6 ) . return Z ( t ) than vi are irrelevant , and thus P ( zi|xi = si , zI−{i} ) ∝ P ( xi = si|zi)·exp
( cid:180 ) wijδ(zi−zj )
( cid:179 )
λ j∈Ni where only the links between vi and its neighbors in Ni are taken into account . We take logarithm of the posterior probability , and then transform the MAP estimation problem to the minimization of the conditional posterior energy function :
Ui(k ) = − ln P ( xi = si|zi = k ) − λ wijδ(k − zj ) . j∈Ni
If zi = 0 , vi has no neighbors , and thus
P ( zi|xi = si , zI−{i} ) ∝ P ( xi = si|zi = 0)P ( zi = 0 ) = exp(−Ui(0 ) ) ( 5 ) with
Ui(0 ) = − ln(ρ0π0 ) = a0 .
Therefore , to find zi that maximizes P ( zi|xi = si , zI−{i} ) , it is equivalent to minimizing the posterior energy function : ˆzi = arg mink Ui(k ) where
( cid:189 ) − ln P ( xi = si|zi = k ) − λ wij δ(k − zj ) j∈Ni k = 0 k = 0
Ui(k ) = a0
( 6 ) As can be seen , λ is a predefined hyper parameter that represents the importance of the network structure . ln P ( xi = si|zi = k ) is defined in Eq ( 3 ) and Eq ( 4 ) for continuous and text data respectively . To minimize Ui(k ) , we first select a normal cluster k∗ such that k∗ = arg mink Ui(k)(k = 0 ) . Then we compare Ui(k∗ ) with Ui(0 ) , which is a predefined If Ui(k∗ ) > a0 , we set ˆzi = 0 , otherwise threshold a0 . ˆzi = k∗ . As shown in Algorithm 1 , we first initialize the label assignment for all the objects , and then repeat the update procedure until convergence . At each run , the labels are updated sequentially by minimizing Ui(k ) , which is the posterior energy given xi = si and the labels of the remaining objects . 3.2 Parameter Estimation
In Section 3.1 , we assume that Θ is known , which is usually unrealistic . In this part , we consider the problem of estimating unknown Θ from the data . Θ describes the model that generates S , and thus we seek to maximize the data likelihood P ( X = S|Θ ) to obtain ˆΘ . However , because both the hidden labels and the parameters are unknown and they are inter dependent , it is intractable to directly maximize the
Algorithm 2 Community Outlier Detection Input : set of data S , adjacency matrix W , number of clusters K , link importance λ , threshold a0 ; Output : set of outliers ; Algorithm :
Initialize Z 0,Z 1 randomly t ← 1 while Z ( t ) is not close enough to Z ( t−1 ) do
M step : Given Z ( t ) , update the model parameters Θ(t+1 ) according to Eq ( 8 ) and Eq ( 9 ) ( continuous data ) , or Eq ( 10 ) ( text data ) . E step : Given Θ(t+1 ) , update the hidden labels as Z ( t+1 ) using Algorithm 1 . t ← t + 1 return the indices of outliers : {i : z(t ) i = 0 , i ∈ I} data likelihood . We view it as an “ incomplete data ” problem , and use the expectation maximization ( EM ) algorithm to solve it .
The basic idea is as follows . We start with an initial estimate Θ(0 ) , then at E step , calculate the conditional expectation Q(Θ|Θ(t ) ) = Z P ( Z|X , Θ(t ) ) ln P ( X , Z|Θ ) , and at Mstep , maximize Q(Θ|Θ(t ) ) to get Θ(t+1 ) and repeat . In the HMRF outlier detection model , we can factorize P ( X , Z|Θ ) as P ( X|Z , Θ)P ( Z ) , and since P ( Z ) is not related to Θ , we n can regard the corresponding terms as a constant in Q . Similarly , the outlier component does not contribute to estimai=1 P ( zi = 0|xi = si ) ln P ( xi = tion of Θ neither , and thus si|zi = 0 ) can also be absorbed into the constant term H2 :
( cid:195 )
M
K i=1 k=1
Q =
P ( zi = k|xi = si , Θ(t ) ) ln P ( xi = si|zi = k , Θ )
+H2 .
µ(t+1 ) k
( 7 ) We approximate P ( zi = k|xi = si , Θ(t ) ) using the estimates obtained from Algorithm 1 , where P ( zi = k∗|xi = si , Θ(t ) ) = 1 if k∗ = arg mink Ui(k ) , and 0 otherwise . Specifically , for continuous data , we maximize Q to get the mean and variance of each normal community k ∈ {1 , . . . , K} , M where ln P ( xi = si|zi = k , Θ ) is defined in Eq ( 3 ) : M i=1 P ( zi = k|xi = si , Θ(t))si M i=1 P ( zi = k|xi = si , Θ(t ) ) M i=1 P ( zi = k|xi = si , Θ(t))(si − µk)2 i=1 P ( zi = k|xi = si , Θ(t ) ) T M l=1 βkl = 1 ( k = 1 , . . . , K ) , we have : T M i=1 P ( zi = k|xi = si , Θ(t))dil i=1 P ( zi = k|xi = si , Θ(t))dil
Similarly , for text data , based on Eq ( 4 ) , as well as the constraints that
β(t+1 ) kl
( σ(t+1 )
)2 = k
.
( 9 )
( 10 ) l=1
,
( 8 )
=
= for k = 1 , . . . , K and l = 1 , . . . , T .
In summary , the community outlier detection algorithm works as follows . As shown in Algorithm 2 , we begin with some initial label assignment of the objects . In the Mstep , the model parameters are estimated by maximizing the Q function based on the current label assignment . In the E step , we run Algorithm 1 to re assign the labels to the objects by minimizing Ui(k ) for each node vi sequentially . The E step and M step are repeated until convergence is achieved , and thus the outliers are the nodes that have 0 as the estimated labels . Note that the running time is linear in the number of edges . It is not worse than any baseline that uses links because each edge has to be visited at least once . For dense graphs , the time can be quadratic in the number of objects . However , in practice , we usually encounter sparse graphs , on which the method runs in linear time and can scale well . 4 . DISCUSSIONS
To use the community outlier detection algorithm more effectively , the following questions need to be addressed : 1 ) How to set the hyper parameters ? 2 ) What is a good initialization of the label assignment Z ? 3 ) Can the algorithm be applied to any type of data ?
Setting Hyper parameters
We need users’ input on three hyper parameters : threshold a0 , link importance λ , and the number of components K . Intuitively , a0 controls the percentage of outliers r discovered by the algorithm . We will expect a large number of outliers if a0 is low and few outliers if a0 is high . Therefore , we can transform the problem of setting a0 , which is difficult , to an easier problem to choose the percentage of outliers r . To do this , in Algorithm 1 , we first let ˆzi = arg mink Ui(k)(k = 0 ) for each i ∈ I , and sort Ui(ˆzi ) for i = 1 , . . . , M and select the top r percent as outliers .
λ > 0 represents our confidence in the network structure where we put more weights on the network and less weights on the data if λ is set higher . Therefore , if λ is lower , the outliers found by Algorithm 2 is more similar to the results of detecting outliers merely based on nodes information . On the other hand , a higher λ makes the network structure play a more important role in community discovery and outlier detection . It is obvious that if we set λ to be extremely high , and the graph is connected , then every node will turn out to have the same label . To avoid such cases , we set an upper bound λC so that for any λ > λC , the results contain empty communities . With this requirement , we show that the proposed algorithm is not sensitive to λ in Section 5 .
K is a positive integer , denoting the number of normal communities . In principle , it controls the scale of the community , and thus a small K leads to “ global ” outliers , whereas the outliers are determined locally if lots of communities are formed ( ie , large K ) . Many techniques have been proposed to set K effectively , for example , Bayesian information criterion ( BIC ) , Akaike information criteria ( AIC ) and minimum description length ( MDL ) . In this paper , we use AIC to set the number of normal communities . It is defined as :
AIC(∆ ) = 2b − 2 ln P ( X|∆ )
( 11 ) where ∆ denotes the set of hyper parameters and b is the number of parameters to be estimated ( model complexity ) . Since P ( X|∆ ) is hard to obtain , in the proposed algorithm , we use P ( X| ˆZ , ∆ ) to approximate it by assuming that ˆZ is the true configuration of the hidden variables .
Initialization
Good initialization is essential for the success of the proposed community outlier detection algorithm , otherwise the algorithm can get stuck at some local maximum . Instead of starting with a random initialization , we initialize Z by clustering the objects without assigning any outliers . Although this may affect the estimation of the model parameters at
Table 3 : Comparison of Precisions on Synthetic Data
Precisions
M = 1000
M = 2000
M = 5000 r = 1 % r = 5 % r = 1 % r = 5 % r = 1 % r = 5 %
K = 5
K = 8
GLODA DNODA 0.0143 0.0867 0.0118 0.0567 0.0061 0.0496
0.0714 0.2600 0.0111 0.1779 0.0041 0.1134
CNA 0.5429 0.6930 0.1007 0.4645 0.0510 0.1854
CODA 0.6286 0.8106 0.6565 0.6799 0.3714 0.7302
GLODA DNODA 0.0571 0.0688 0.0395 0.0649 0.0163 0.0565
0.0571 0.1554 0.0170 0.1341 0.0000 0.0646
CNA 0.4429 0.5723 0.1536 0.4944 0.0204 0.1602
CODA 0.7429 0.6565 0.4974 0.7047 0.5347 0.7926 the first iteration , it can gradually get corrected while we update Z and nominate outliers in the E step . To overcome the barrier of local maximum , we repeat the algorithm multiple times with different initialization and choose the one that maximizes the likelihood .
Extensions
We have provided models for continuous and text data , which already covers lots of applications . Here , we discuss extension of the proposed approach to more general data formats by using a distance function . In general , we let the center of each community µk to be the parameter characterizing the community , and define D(si , µk ) to be the distance in feature values from any object si to the center of the k th community µk . For k = 1 , . . . , K , we then define P ( xi = si|zi = k ) in terms of the distance function :
P ( xi = si|zi = k ) ∝ exp(−D(si , µk ) ) which suggests that given vi is from a normal community , the probability of xi = si increases as the distance from si to µk gets closer . For example , we can choose D to be a distance function from the class of Bregman divergence [ 1 ] , which is a generalization from the Euclidean distance and is known to have a strong connection to exponential families of distributions .
5 . EXPERIMENTS
The evaluation of community outlier detection itself is an open problem due to lack of groundtruths for community outliers . Therefore , we conduct experiments on synthetic data to compare detection accuracy with the baseline methods , and evaluate on real datasets to validate that the proposed algorithm can detect community outliers effectively1 . 5.1 Synthetic Data
In this part , we describe the experimental setting and re sults on the synthetic data .
Data Generation
We generate networked data through two steps . First , we generate synthetic graphs , which follow the properties of real networks–they are usually sparse , follow power law ’s degree distributions , and consist of several communities . The links of each object follow Zipf ’s law , ie , most of the nodes have very few links , and only a few nodes connect to many nodes . We forbid self links and remove the nodes that have no links . Secondly , we infer the label of each node following the proposed generative model , and sample a continuous number based on the label of each node . The configuration parameters to describe P ( X|Z ) include the number of communities K and the percentage of outliers r . We draw the 1http://ewsuiucedu/∼jinggao3/kdd10codahtm mean of each community uniformly from [ 10,10 ] , let the standard deviation be 10/K , and generate random numbers using Gaussian probability density .
Baseline Methods
As discussed in Section 1 , we compare the proposed community outlier detection algorithm ( CODA ) with the following outlier detection methods :
• GLODA : This baseline looks at the data values only . We use the popular outlier detection algorithm LOF [ 5 ] to detect “ global ” outliers without taking the network structure into account .
• DNODA : This method only considers the values of each object ’s direct neighbors in the graph . We define the outlier score as : j∈Ni
D(si , sj ) |Ni|
( 12 ) where D is the Euclidean distance function . Ni contains all the direct neighbors of vi in the graph : Ni = {j : wij > 0 , i = j} . If si is significantly different from the data of vi ’s direct neighbors , it is considered an outlier .
• CNA : In this approach , we partition the graph into K communities using clustering algorithms [ 13 ] , and define outliers as the objects that have significantly different values compared with the other objects in the same community . Therefore , the outlier score is calculated in the same way as in Eq ( 12 ) . But here , Ni stands for the whole community : Ni = {j : zi = zj , i = j} where zi is the community label derived from the clustering of the network structure .
Empirical Results
In experimental studies , we make each baseline method detect the same number of outliers as that of the groundtruths . To achieve this , we simply sort the outlier scores obtained by the three baseline methods in descending order , and take the top r percent as outliers . Then we use precision , also known as true positive rate , as the evaluation metric . It is defined as the percentage of correct ones in the set of outliers identified by the algorithm . We vary the scale of the network to have 1000 , 2000 and 5000 nodes respectively . We set the number of clusters K to be either 5 or 8 , and the percentage of outliers r to be either 1 % or 5 % .
For each parameter setting , we randomly generate 10 sets of networked data , and report the average precisions of all the methods in Table 3 . It is clear that GLODA fails to find most of community outliers because the method completely ignores the network structure information . The approach that only checks the direct neighbors of each object to determine outliers ( DNODA ) also has a low precision . On
Table 4 : Top Words in Communities
Communities
Data
Mining
Database
Artificial
Intelligence Information
Analysis
Keywords frequent dimensional spatial association similarity pattern fast sets approximate series oriented views applications querying design access schema control integration sql reasoning planning logic representation recognition solving problem reinforcement programming theory relevance feature ranking automatic documents probabilistic extraction user study classifiers represent the link weight between two conferences : wij = cos(Ai , Aj ) =
Ai · Aj ||Ai||||Aj|| .
( 13 )
This suggests that the conferences that attract the same set of authors have strong connections , and such conferences may form a research community . Additionally , we have a document attached to each node , which contains all the published titles in the conference . We conduct the community outlier detection algorithm on this network to obtain the outlier that has a different research theme compared with the other conferences containing similar researchers .
From this dataset , we find the following communities : • Database : ICDE , VLDB , SIGMOD , PODS , EDBT • Artificial Intelligence : IJCAI , AAAI , ICML , ECML • Data Mining : KDD , PAKDD , ICDM , PKDD , SDM • Information Analysis : SIGIR , WWW , ECIR , WSDM
The community outliers detected by the proposed algorithm include CVPR and CIKM . Clearly , CVPR is more likely to fall into the AI area because researchers in CVPR will often attend IJCAI , AAAI , ICML and ECML . However , although people in computer vision utilize many general artificial intelligence methods , there exist unique computer vision techniques , such as segmentation , object tracking , and image modeling . Therefore , CVPR represents a community outlier in this problem . On the other hand , CIKM has a wide spread scope , and attracts people from information analysis , data mining , and database areas . Apparently , it has a different research theme from that of any conference in these areas , and thus represents a community outlier as well .
Sub network of Authors
We extract a co authorship network , which contains the authors publishing in the 20 conferences mentioned above from DBLP . We select the top 3116 authors with the highest number of publications in these conferences , and use them as nodes of the network3 . If two researchers have co authored papers , there is an edge connecting them in the graph . The weight of the edge is the number of times two researchers have collaborated . We run the CODA algorithm on this co author network to identify communities and community outliers . The top 10 frequent words occurring in each community identified by the algorithm are shown in Table 4 . It is obvious that we can discover four research communities
3This is a sub network of the original DBLP network . There could have some information loss in the co authorship relationships .
Figure 3 : Sensitivity
Figure 4 : Running Time the other hand , if we first discover the communities , and then identify outliers based on the peers in the community , the precision is improved as shown in the method CNA . The proposed CODA algorithm further increases the precision by modeling both data and link information . We can observe the consistent improvements where the margin of precision increase is from 8 % to 60 % .
Sensitivity
Figure 3 shows the performance of the CODA algorithm when we vary λ from 0.1 to 0.7 , as illustrated using the solid line . The dotted line represents the performance of the best baseline method CNA applied on the same data set . The results are obtained on the synthetic data with 1000 objects , 5 communities and 1 % community outliers . It is clear that in spite of slight changes caused by parameter variation , the proposed method improves over the best baseline method . We let λ = 0.2 to get the experimental results shown in Table 3 .
Time Complexity
Suppose the number of objects is M , and the number of edges is E . In M step , we need to visit all the objects to calculate the model parameters , so the time complexity is O(M ) . In E step , for each object vi , the posterior energy function Ui has to aggregate the effect of the labels of vi ’s neighbors to compute P ( Z ) . Therefore , in principle , the time of the E step is O(E ) . Real network is usually sparse , and thus the computation time of the proposed approach can be linear in the number of objects . Figure 4 presents the average running time of the CODA algorithm on the synthetic data . We generate sparse networks using power law distribution where the number of edges grow linearly , and thus the running time is linear in the number of objects .
5.2 DBLP
DBLP2 provides bibliographic information on major computer science journals and proceedings . We extract two subnetworks from the DBLP data : a conference relationship network and a co authorship network .
Sub network of Conferences
In the conference relationship network , we use 20 conferences from four research areas as the nodes of the graph , and construct a similarity graph based on the 20 nodes . Suppose there are L authors , then each conference has a L× 1 vector Ai , whose l th entry is the number of times the l th author publishes in the i th conference . We use cosine similarity to
2http://wwwinformatikuni trierde/∼ley/db/
010203040506070020406081λPrecision CODACNA10002000300040005000050010001500Number of ObjectsRunning Time ( ms ) K=5K=8 which cannot be found by existing outlier detection algorithms from a global view . Specifically , the pre defined contextual attributes include spatial attributes [ 23 , 27 ] , neighborhoods in graphs [ 26 ] , and some contextual attributes [ 25 ] . When there is no a priori contextual information available , Wang et al . propose to simultaneously explore contexts and contextual outliers based on random walks [ 29 ] . The proposed community outlier problem differs from these papers in that we use communities in networks as contexts , and they are inferred based on both data and link information . Outlier detection in data without considering contexts is called global outlier detection . Existing methods detect anomalies based on how far their distances [ 16 ] , densities [ 5 ] , statistical distributions [ 21 ] deviate from the rest of the data . The proposed model shares some common properties with existing methods . For example , we assume that outliers are far from any clusters and are uniformly distributed [ 7 ] . On the other hand , we may refer to outliers identified in network structures purely by link analysis as structural outliers [ 31 ] . There are also works devoting to finding unusual sub graph patterns in networks [ 22 ] . Clearly , these types of outliers are not the same as the community outliers defined in this paper . In general , outlier detection is unsupervised , ie , the task is to identify something novel or anomalous without the aid of labeled data . There exist some semi supervised outlier detection approaches that take labeled examples as prior knowledge of label distribution [ 33 , 28 , 8 ] . In this paper , we aim at unsupervised outlier detection on networked data requiring no labeled data .
In recent years , many methods have been developed to discover clusters or communities in networks [ 11 ] . At first , community discovery is conducted on links only without consulting objects’ information . Such techniques find communities as strongly connected sub networks by similarity computation [ 15 , 12 ] or graph partitioning [ 24 , 20 , 14 ] . Later , it was found that utilizing both link and data information leads to the discovery of more accurate and meaningful communities [ 17 , 32 , 30 ] . Some relational clustering methods [ 9 , 19 ] fall into this category when both attributes of objects and relationships between objects are considered . Among various techniques , Markov random field [ 18 , 34 ] is commonly used to model the structural dependency among random variables and has been successfully applied to many applications , such as image segmentation . More generally , relational learning explores use of link structure in inference and learning problems [ 10 ] . Moreover , some semi supervised clustering techniques based on must links and cannot links [ 2 ] can be used to discover communities on networked data as well , where network structures provide must links . As shown in the experiments , separating community discovery and outlier detection cannot work as well as our unified model because absorbing outliers into normal communities affect the profiling of normal communities , and in turn degrade the performance of the second stage outlier detection .
7 . CONCLUSIONS
Figure 5 : Community Outliers in DBLP co authors in this co author network : Database ( DB ) , Artificial Intelligence ( AI ) , Data Mining ( DM ) , and Information Analysis ( IA ) .
Outliers in this sub network somehow represent researchers who are conducting research on some different topics from his collaborators and peer researchers in the community . To illustrate the effectiveness of the proposed algorithm , we check the research interests listed on the homepages of the researchers identified by the CODA algorithm . In Figure 5 , we show each researcher ’s name together with the number of his collaborators in each of the four communities ( DB , AI , DM , and IA ) in the first column . Their research interests are shown in the second column . As can be seen , these researchers indeed studied something different from his collaborators and the majority of the communities . For example , Jayant R . Kalagnanam mainly focuses on electronic commerce , which is a less popular topic among his collaborators in Database , Artificial intelligence and Information Analysis areas . Jack Mostow has focused on using computers to listen to children read aloud , which is a less studied research theme in Artificial Intelligence and Information Analysis . Through this example , we demonstrate that the proposed CODA algorithm has the ability of detecting outliers that deviate from the rest of the community .
6 . RELATED WORK
Outlier detection , sometimes referred to as anomaly or novelty detection , has received considerable attention in the field of data mining [ 6 ] . Recently , people began to study how to identify anomalies within a specific context . These methods are able to detect interesting outliers or anomalies
In this paper , we discuss a new outlier detection problem in networks containing rich information , including data about each object and relationships among objects . We detect outliers within the context of communities such that the identified outliers deviate significantly from the rest of the community members . We propose a generative model called CODA that unifies both community discovery and
Researchers & CollaboratorsResearch Interests Dennis Shasha DB 19 DM 6 biological computing , pattern recognition , querying in trees and graphs , pattern discovery in time series , cryptographic file systems , database tuning Craig A . KnoblockIA 4 AI 4DM 1 DB 1 planning , machine learning , constraint reasoning , semantic web , information extraction , gathering , integration , mediators , wrappers , source modeling , record linkage , mashup construction , geospatial and biological data integration Eric Horvitz IA 9 AI 4 human decision making , computational models of reflection , action with applications in time critical decision making , scientific exploration , information retrieval , and healthcare Sourav S . BhowmickIA 8 DM 2 DB 2 blogs , social media analysis ; web evolution , evolution , graph mining ; social networks , XML storage , query processing , usability of XML/graph databases , indexing and querying graphs , predictive modeling , comparison of molecular networks , multi target drug therapy Timothy W . Finin IA 6 AI 1 social media , the semantic web , intelligent agents , pervasive computing Jack Mostow AI 3 IA 2 focuses on using computers to listen to children read aloud while other interests include machine learning , automated replay of design plans , and discovery of search heuristics Terrance E . Boult AI 2 IA 1 vision and security including video surveillance systems , biometrics , biometric fusion , supporting trauma treatment , steganalysis , network security , detection of chemical and biological weapons Jayant R . Kalagnanam DB 3 AI2IA 1 decision support , optimization , economics and their applications to electronic commerce Ken Barker IA 2 AI 2 DB 1 knowledge representation and reasoning , knowledge acquisition , natural language processing DimitrisAchlioptasAI 4 threshold phenomena in random graphs and random formulas , applications of embeddings and spectral techniques in machine learning , algorithmic analysis of massive networks outlier detection in a probabilistic formulation based on hidden Markov random fields . We assume that normal objects form K communities and outliers are randomly generated . The data attributes associated with each object are modeled using mixture of Gaussian distributions or multinomial distributions , whereas links are used to calculate prior distributions over hidden labels . We present efficient algorithms based on ICM and EM techniques to learn model parameters and infer the hidden labels of the community outlier detection model . Experimental results show that the proposed CODA algorithm consistently outperforms the baseline methods on synthetic data , and also identifies meaningful community outliers from the DBLP network data .
8 . REFERENCES [ 1 ] A . Banerjee , S . Merugu , I . S . Dhillon , and J . Ghosh .
Clustering with bregman divergences . Journal of Machine Learning Research , 6:1705–1749 , 2005 .
[ 2 ] S . Basu , M . Bilenko , and R . J . Mooney . A probabilistic framework for semi supervised clustering . In Proc . of KDD’04 , pages 59–68 , 2004 .
[ 3 ] J . Besag . Spatial interaction and the statistical analysis of lattic systems . Journal of the Royal Statistical Society , Series B , 36(2):192–236 , 1974 .
[ 4 ] J . Besag . On the statistical analysis of dirty pictures .
Journal of the Royal Statistical Society , Series B , 48(3):259–302 , 1986 .
[ 5 ] M . M . Breunig , H P Kriegel , R . T . Ng , and
J . Sander . Lof : identifying density based local outliers . In Proc . of SIGMOD’00 , pages 93–104 , 2000 .
[ 6 ] V . Chandola , A . Banerjee , and V . Kumar . Anomaly detection : A survey . Technical Report 07 017 , University of Minnesota , 2007 .
[ 7 ] E . Eskin . Anomaly detection over noisy data using learned probability distributions . In Proc . of ICML ’00 , pages 255–262 , 2000 .
[ 8 ] J . Gao , H . Cheng , and P N Tan . a novel framework for incorporating labeled examples into anomaly detection . In Proc . of SDM’06 , pages 594–598 , 2006 . [ 9 ] R . Ge , M . Ester , B . J . Gao , Z . Hu , B . Bhattacharya , and B . Ben Moshe . Joint cluster analysis of attribute data and relationship data : The connected k center problem , algorithms and applications . ACM Transactions on Knowledge Discovery from Data , 2(2):1–35 , 2008 .
[ 10 ] L . Getoor and B . Taskar . Introduction to statistical relational learning . MIT Press , 2007 .
[ 11 ] M . Girvan and M . Newman . Community structure in social and biological networks . 99(12):7821–7826 , 2002 .
[ 12 ] G . Jeh and J . Widom . Simrank : a measure of structural context similarity . In Proc . of KDD’02 , pages 538–543 , 2002 .
[ 13 ] G . Karypis . Cluto family of data clustering software tools . http://glarosdtcumnedu/gkhome/views/cluto
[ 14 ] G . Karypis and V . Kumar . A fast and high quality multilevel scheme for partitioning irregular graphs . SIAM Journal on Scientific Computing , 20(1):359–392 , 1998 .
[ 15 ] J . M . Kleinberg . Authoritative sources in a hyperlinked environment . Journal of ACM , 46(5):604–632 , 1999 .
[ 16 ] E . M . Knorr , R . T . Ng , and V . Tucakov .
Distance based outliers : algorithms and applications . The VLDB Journal , 8(3 4):237–253 , 2000 .
[ 17 ] H . Li , Z . Nie , W C Lee , L . Giles , and J R Wen .
Scalable community discovery on textual data with relations . In Proc . of CIKM’08 , pages 1203–1212 , 2008 .
[ 18 ] S . Z . Li . Markov random field modeling in computer vision . Springer Verlag , 1995 .
[ 19 ] B . Long , Z . M . Zhang , and P . S . Yu . A probabilistic framework for relational clustering . In Proc . of KDD’07 , pages 470–479 , 2007 .
[ 20 ] U . Luxburg . A tutorial on spectral clustering .
Statistics and Computing , 17(4):395–416 , 2007 . [ 21 ] M . Markou and S . Singh . Novelty detection : a review part 1 : statistical approaches . Signal Processing , 83(12):2481–2497 , 2003 .
[ 22 ] C . C . Noble and D . J . Cook . Graph based anomaly detection . In Proc . of KDD’03 , pages 631–636 , 2003 .
[ 23 ] S . Shekhar , C T Lu , and P . Zhang . Detecting graph based spatial outliers : algorithms and applications ( a summary of results ) . In Proc . of KDD’01 , pages 371–376 , 2001 .
[ 24 ] J . Shi and J . Malik . Normalized cuts and image segmentation . IEEE Transactions on Pattern Analysis and Machine Intelligence , 22(8):888–905 , 2000 .
[ 25 ] X . Song , M . Wu , C . Jermaine , and S . Ranka .
Conditional anomaly detection . IEEE Transactions on Knowledge and Data Engineering , 19(5):631–645 , 2007 .
[ 26 ] J . Sun , H . Qu , D . Chakrabarti , and C . Faloutsos .
Neighborhood formation and anomaly detection in bipartite graphs . In Prof . of ICDM’05 , pages 418–425 , 2005 .
[ 27 ] P . Sun and S . Chawla . On local spatial outliers . In
Proc . of ICDM’04 , pages 209–216 , 2004 .
[ 28 ] A . Vinueza and G . Grudic . Unsupervised outlier detection and semi supervised learning . Technical Report CU CS 976 04 , University of Colorado at Boulder , 2004 .
[ 29 ] X . Wang and I . Davidson . Discovering contexts and contextual outliers using random walks in graphs . In Proc . of ICDM’09 , pages 1034–1039 , 2009 .
[ 30 ] X . Wang , N . Mohanty , and A . McCallum . Group and topic discovery from relations and their attributes . In Proc . of NIPS’06 , pages 1449–1456 , 2006 .
[ 31 ] X . Xu , N . Yuruk , Z . Feng , and T . A . J . Schweiger .
Scan : a structural clustering algorithm for networks . In Proc . of KDD’07 , pages 824–833 , 2007 .
[ 32 ] T . Yang , R . Jin , Y . Chi , and S . Zhu . Combining link and content for community detection : a discriminative approach . In Proc . of KDD’09 , pages 927–936 , 2009 .
[ 33 ] D . Zhang , D . Gatica Perez , S . Bengio , and
I . McCowan . Semi supervised adapted hmms for unusual event detection . In Proc . of CVPR’05 , pages 611–618 , 2005 .
[ 34 ] Y . Zhang , M . Brady , and S . Smith . Segmentation of brain mr images through a hidden markov random field model and the expectation maximization algorithm . IEEE Transactions on Medical Imaging , 20(1):45–57 , 2001 .
