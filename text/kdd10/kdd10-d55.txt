Dynamics of Conversations
Ravi Kumar
Mohammad Mahdian
Yahoo! Research 701 First Avenue
Sunnyvale , CA 94089 .
{ravikumar,mahdian}@yahoo inc.com
Mary McGlohon∗
Machine Learning Dept .
Carnegie Mellon University
Pittsburgh , PA 15213 . mmcgloho@cscmuedu
ABSTRACT Is there a common How do online conversations build ? model that is followed in human communication ? In this work we explore these questions in detail . By considering three different social datasets , namely , Usenet groups , Yahoo! Groups , and Twitter , we analyze the structure of conversations in each of these datasets . We propose simple mathematical models for the generation of basic conversation structures and then refine this model to take into account the identities of each member of the conversation .
1 .
INTRODUCTION
In today ’s world , information networks such the web , online forums , and other online content generating communities are among the most important sources of knowledge and information . In such networks , information is provided and disseminated through social interaction and exchange among members of the community . Understanding the dynamics of such interactions is therefore essential in making sense of how this information is generated , how reliable each piece of information is , and how the content generation process can be influenced to achieve better results .
There has been significant research on dynamics of networks of linked information such as the web , where content providers ( webpage authors ) form a graph by linking to others . We know various properties of such graphs , theoretical generative models that provide simple explanations for underlying processes that gives rise to these properties , and methods for using the graph structure in order to extract information about the reliability and importance of various nodes .
Another important class of information networks that are have not received enough attention from a theoretical point of view are those were units of information have relatively short life spans ( shorter than that of webpages ) , and therefore time is an essential part of the dynamics of network creation . This includes twitter , online discussion forums , and ∗Funded in part by Yahoo! Research news websites . With our modern day shortened attention span , such networks are becoming increasingly important .
In this paper , we seek to study a class of such networks , namely , the network formed by conversation threads in online communities . We will examine three different data samples : Yahoo! Groups , Usenet , and Twitter . In addition to the important role time plays in the growth of such networks , another factor that makes them a particularly desirable object of study is the fact links in these networks have a more or less uniform meaning : a link from a node u to another v means that the message corresponding to u is in reply to v . Each node is in response to only one other node ( if any ) , and furthermore , we know exactly who has authored each node . In other words , nodes in these networks are more atomic units of information than , say , webpages .
Our goal is to shed light on how conversations form in different online groups . We study questions such as : what are the common properties of conversation threads ? What similarities and differences can be observed between different groups ? Can we build models to capture these properties ? Can we analyze them ? How can we characterize group conversations ( ie , conversations that engage a group of users ) as opposed to those that are primarily pairwise exchanges ? The rest of this paper is organized as follows : We start by reviewing the related work in Section 2 . In Section 3 , we describe the three main datasets that we use in this study : Yahoo! Groups , Usenet , and Twitter . We will first examine the properties of the threads and the induced social networks in Section 4 . In addition to the usual observations of the power law/heavy tail distributions , we make two key observations by analyzing the data :
( 1 ) the depth of such threads grow sub linearly but super logarithmically in the size of the thread , and
( 2 ) a law similar to the Heaps’ law [ 15 ] holds for the num ber of distinct authors in a thread .
Section 5 and Section 6 contain a description of generative models for conversation threads . For each model we prove a number of theoretical results , show simulation results , and give results of learning algorithms on our datasets on the model ( to learn the parameters of the model ) . We start with the branching process model , which is the classical model in probability theory for generating trees ( similar to what Erd¨os Renyi graphs are to graph generation ) . This serves as a warm up and a benchmark to compare other models against . Next , in Section 6 we give a preferentialattachment type model [ 1 ] that combines the rich gets richer principle with the element of time . We also give a model for the distribution of the authors of the messages in a thread that is based on a variant of the copying process [ 18 ] in Section 63 Finally , we give a mixture model for forums such as twitter where the types of threads we observe are not homogeneous , and show how expectation maximization algorithms can be used to partition the conversations into different classes . Section 8 contains some anecdotal examples from our dataset , based on our study . Section 9 contains concluding remarks .
2 . RELATED WORK
The related work falls into the following main categories : work on conversations and human activity in general , crosscommunity group dynamics , and graph models .
Conversations and human activity . The work closest to ours is that of Liben Nowell and Kleinberg , who studied the structure of chain letter propagation [ 25 ] , and showed that the structure was characterized by a deep tree like pattern , and proposed a probabilistic model to generate such trees . Golub and Jackson [ 12 ] built on this to show that a basic branching process model combined with the selection bias of observing only large diffusion can explain the results in [ 25 ] . The concern in these line of work is a mechanism for the spread of information in a social network . We , on the other hand , are interested in studying the patterns of interactions and repeated interactions ( ie , conversations ) in closed groups .
Another work related to ours is that of Leskovec , Backstrom , and Kleinberg [ 20 ] , who considered the propagation of “ memes ” across the Web , in the context of news cycle . In course of studying this problem , they consider a model where they combine recency and the preferential attachment process . However , their focus is not on a graph generation model and as they indicate , the combining form they propose does not seem to be analysis friendly .
There has also been some exploration into the dynamic processes of conversation and information propagation . Barabasi [ 3 ] postulates that the bursty nature of human behavior is a consequence of a decision based queuing process and uses it to explain the heavy tail activity patterns in e mail communications ; Vazquez et al . [ 8 , 31 ] further explore this model . This was reproduced in [ 23 ] , where response times to blog posts were shown to have a similar heavy tailed distribution . Conversations can typically be characterized as information cascades , phenomena in which an action or idea becomes adopted due to the influence of others , typically , neighbors in some network [ 4 , 11 , 13 ] . Cascades on random graphs using a threshold model have been theoretically analyzed [ 33 ] . There has been empirical analysis of the topological patterns of cascades in various contexts , such as recommendation networks [ 24 , 19 ] and blog posts [ 23 ] . In the latter , authors extracted “ cascades ” , or conversation threads , from a large set of blog posts , and studied patterns with respect to the sizes and shapes of these cascades , as well as topological aspects of the network at large . They continued this to show that different genres of blogs have different patterns of cascade shapes [ 27 ] .
Cross community studies . There have been several previous studies across social networks data . Backstrom et al . studied Yahoo! Groups data , defining “ thriving ” groups and tracking engagement of core users in groups [ 2 ] ; see also [ 7 ] . In previous work , Kumar , Novak , and Tomkins studied the topological structure and component size distribution of Flickr and Yahoo! 360 networks , identifying “ star ” structures and showing how they persisted and eventually joined the giant component [ 17 ] . Leskovec et al . studied the edge arrivals of different online networks , proposing a generative model [ 21 ] .
There has been a significant body of work on forum data . Microsoft ’s Netscan Project has conducted a very thorough study of Usenet discussion patterns , depicting hierarchy of newsgroups and their changes between 2000 and 2004[30 ] ; studying the social roles of Usenet authors [ 10 ] ; and creating a visualization tool for different author roles identified [ 32 ] . Other authors explored the network structure of different groups and studied cross posting behavior [ 26 ] .
Graph models . There has been a lot of work on developing tractable mathematical models for real world graphs and social networks , starting with the legendary Erd¨os–R´enyi Gnp model . For a detailed survey of these models , the readers are referred to [ 6 , 9 , 16 ] . There have been a few developments on graph models since these surveys , eg , [ 22 , 21 ] ; these are beyond the scope of our work . To the best of our knowledge , group conversations have not been explicitly addressed in any of the previous works .
For a detailed background on branching processes , the readers are referred to the classic book by Harris [ 14 ] .
3 . PRELIMINARIES 3.1 Data description
We first describe the three sources of data that will be used in our study , namely , messages from a set of Usenet groups , messages from a set of public Yahoo! groups , and Twitter tweets over a month . The first and the last datasets are publicly available and hence our experiments and observations are repeatable .
Each dataset consists of records , where each record has the id of message , the id of its parent message ( if applicable ) , the author of the message , and a timestamp . Notice that all the three datasets enable conversations among its users , ie , messages can be posted in response to earlier messages .
Usenet groups . Usenet is a decentralized set of forums across different subjects and languages . We sampled Usenet based on groups posted to in early January 2010 , according to http://newsadmincom/top100tmsgsasp For a complete list of the groups crawled , refer to http://wwwcs cmuedu/~mmcgloho/pubs/groupthreads listtxt This gave us a broad sample of newsgroups , including some on political discussion ( alt.politics , it.politica ) , recreational activities and hobbies ( recoutdoorsrv travel , recmusicbeatles ) , and general news or ads ( newslists filters , altmarketplaceonlineebay ) This crawl produced around 10 million posts in total . Most groups had between 1,000 and 5,000 users , with some as few as 20 . We also had a deeper crawl that focused only on political groups , see [ 26 ] . This consisted of around 200 groups with posts from 2004–2008 . This included several general politics groups ( alt.politics , talkpoliticsmisc ) , some national politics groups ( it.politica , uk.politics ) , state or regional groups ( pa.politics , bc.politics ) , and topical groups ( ukpoliticsguns , talkpoliticsdrugs ) This produced 37 million posts .
Dataset
Usenet Y!Groups Twitter
Messages Threads Users ( ×106 ) ( ×106 ) 1.659 22.61 0.690 5.869 69.94 5.023
( ×106 ) 3.896 1.558 36.24
Table 1 : Synopsis of the datasets .
Yahoo! groups . Yahoo! groups is one of the popular online groups application . We chose public groups from Yahoo that were moderated ; we restricted our attention to groups that were still active , ie , they were not deleted or suspended . We also restricted to groups that had at least ten messages and had at least ten distinct users . This resulted in 13,102 groups in the dataset with over 14.9 million posts . The groups in our data included ones such as WrestlingGear , cookbook reviews , IndianaSPCA , welcometomorocco , neurosurgeonsclub , etc . These groups covered a broad set of topics and interests . Most groups contain 500 to 5,000 users , with some as few as ten ( our minimum threshold for including in the dataset ) . The data was collected in January 2010 .
Twitter . Twitter is an extremely popular social application where users send short messages ( called tweets ) , sometimes in response to other messages . We examined a large subset of tweets from Twitter for the month of September 2009 . Since the tweets are small ( at most 140 characters ) , in addition to the message meta data , we have the entire message itself! This will let us rope in the message content for our study .
For each of these data , we first ran an algorithm to find the threads , which in this case are connected components . This partitioned the data into threads , which forms the basis of our study . Table 1 gives a high level view of the datasets . 3.2 Notation
We use the following conventions in our paper . We denote the messages by letters u , v , w , . . Messages are assumed to have a thread structure , ie , each message v is either a new message or is a message in response to an earlier message u . In this case , we call u to be the parent of v ( denoted parent(v ) ) and v to be a child of u . A message with no children is a leaf message and a message with no parent is the root message . Thus , the root message , along with its descendants form a connected component ( in particular , a rooted tree ) , which we call a thread . All the messages in a group can be decomposed into disjoint threads . For a given thread and a message u , let path(u ) denote the set of messages from u to the root of the thread .
Each message u has a timestamp t(u ) associated with it . The messages in a thread are created chronologically and hence if u is a parent of v , then t(u ) ≤ t(v ) . The author a(u ) of a message u is the person who wrote it . A single person can author multiple messages in a thread . Let A be the set of all authors ; a ∈U A denotes that a is chosen uniformly at random from A .
4 . PROPERTIES OF CONVERSATIONS
In this section we state the main observations about the threads from our three datasets . The observations we make here are the basis behind the development of our generative models .
Most of the observations are illustrated for Usenet ; the other two datasets follow mostly similar qualitative patterns , although the actual parameters vary . 4.1 Size and depth
We study the distribution of thread sizes and depth ( which is the length of the maximum path to a leaf from the root in a thread ) . Figure 1(a ) shows the size and the depth distribution in Usenet . As we note , not surprisingly , these are both heavy tailed .
( a )
( b )
Figure 1 : ( a ) Size and depth distributions and ( b ) size vs depth in Usenet .
Next , we consider the relationship between size and depth : what is the average depth of a thread of a given size ? Figure 3(b ) plots this data . It somewhat surprising that there is a power law relationship between size and depth — the size is roughly quadratic in depth . This observations hints that traditional models such as preferential attachment are provably insufficient to model conversation threads , since such models generate graphs with logarithmic diameter . 4.2 Degree
We next study the degree distribution p of the threads . The degree distribution for Usenet is shown in Figure 2 . From Figure 2 , it is arguable that the degree distribution is
Figure 2 : Degree distribution of threads in Usenet . close to a power law , ie , p(k ) ∝ k−α for some α > 2 .
Let µ = E[p ] , the mean of the distribution p . Values of µ and α for the three datasets are shown in Table 2 .
Next we ask the question : is the degree distribution independent of the level of a thread ? Figure 3 shows the degree distribution at each level of the thread ( the root is assumed to be at level 1 ) . It is easy to see that the distribution becomes “ steeper ” with the level since having more children becomes less likely at higher levels .
1e 007 1e 006 1e 005 0.0001 0.001 0.01 0.1 1 1 10 100 1000fractionsizeUsenet : distribution of size , depthdepthsizedepth 1 10 100 1 10 100average depthsizeUsenet : size vs average depthempiricalpowerlaw fit ( 0.568 ) 1e 008 1e 007 1e 006 1e 005 0.0001 0.001 0.01 0.1 1 10 1 10 100fractiondegreeUsenet : degree distributionempiricalpowerlaw fit ( 3.488 ) Dataset Usenet
Y!Groups Twitter
µ
0.906 0.762 0.657
α
3.488 2.302 2.260
Table 2 : Values of µ = E[p ] and α . eration i produces a random number of individuals in generation i+1 according to a probability distribution . These random numbers are drawn independently for different nodes . 5.1 The branching process model : BP Model Let p be a fixed probability distribution on non negative integers . The messages in a thread are generated by the following process . Each thread starts with a root node and proceeds in discrete steps . At the ith step of the process , each leaf at the ith level of the thread constructed so far independently generates a certain number of children according to the distribution p , ie , a leaf u has k children with probability p(k ) . If k = 0 , then u is a leaf . If k > 0 , then the children of u participate in the ( i + 1)st step . The process terminates when there are no more new children .
Figure 3 : Per level degree distribution in Usenet .
4.3 Authorships
We study the properties of authors of messages in a thread . We first consider the size of a thread and the average number of distinct authors in the thread . We also consider the average of the most number of times an author occurs in a thread . Figure 4 shows these plots . We find that there is a polynomial relationship between the size of a thread and the number of authors participating in the thread . In fact , this relationship is very reminiscent of the Heap ’s Law in information retrieval [ 15 ] , which relates the vocabulary size to the document collection size .
Notice that the only parameter of the model is the distribution p . We can fit the real dataset to BP Model and compute the maximum likelihood estimate for this parameter : p(k ) is estimated to be the fraction of nodes with k children in the data ; it can be easily shown that this is indeed the maximum likelihood estimator . BP Model can simulate the inferred distribution in order to generate the threads . 5.2 Properties of BP Model children at the ith level of the threads . Let Z =
Let Zi be the random variable denoting the number of i Zi be the random variable denoting the size of the thread . From the definition of a branching process , the mean size of a thread is given by the recurrence
∞
E[Z ] = 1 + ip(i)E[Z ] =⇒ E[Z ] = ( 1 − µ )
−1 . j=1
In our case , from Table 2 , since µ < 1 for all three datasets , the branching process dies out almost surely .
We now analyze the tails of two properties of the threads generated by the model , namely , their size and their depth . We first show that the tail of the size distribution is quantitatively similar to that of the degree distribution . Let X ∼ p be a random variable distributed according to p .
Lemma 1 . For any i > 0 and k > 0 , E[X k ] < ∞ if and only if E[Z k i ] < ∞ .
Figure 4 : Average number of unique authors and maximum author activity vs thread size in Usenet .
5 . BRANCHING PROCESSES
The Galton–Watson branching process is a classical model for generating a random tree in probability theory . This models many phenomena like the growth of a population ( birth processes ) , and are important objects in random graph theory [ 5 ] . In this section we study this model as a generative model for threads , and discuss properties of the real conversations that they do or do not satisfy . This is perhaps the most basic tree generation model , and serves as a benchmark for us , similar to the role the Erd¨os Renyi graph G(n , p ) plays in graph generation models .
Recall that in branching processes , each individual in gen
Proof Sketch . It is easy to see that the size distribution stochastically dominates the degree distribution . Therefore , if the degree distribution does not have a finite kth moment , then the size distribution also does not have a finite kth moment .
Conversely , we show that if the degree distribution has a finite kth moment , then the kth moment of the size distribution is also finite . For simplicity , we illustrate this for k = 2 . From the basic theory of branching processes [ 14 ] , the generating function for Zi is given by the ith iterate fi of the generating function f of p . The second moment of Zi is given by f 1(1 ) = f(1 ) = µ and let 1 ( 1 ) = f(1 ) = ν < ∞ by assumption . It is also easy to f see that f i ( 1 ) = µi . By simple calculations , one can obtain the recurrence i ( 1 ) . We know that f i ( 1 ) = f f
( 1)f i−1(1)+f
( 1)(f i−1(1))2 = µf i−1(1)+νµ2(i−1 ) , from which i ( 1 ) = iνµi+1 µi − 1 µ − 1 f
< ∞ .
1e 007 1e 006 1e 005 0.0001 0.001 0.01 0.1 1 1 10 100fractiondegreeUsenet : degree distribution per levellevel 1level 2level 3level 4 1 10 100 1 10 100unique authorsmax authorsizeUsenet : unique authors vs size , max author vs sizeempirical : unique authorspowerlaw fit ( 0.718)empirical : max authorpowerlaw fit ( 0.737 ) An important corollary of the above lemma is that the distribution of the size of a the tree generated using a branching process follows a heavy tail distribution1 if and only if the distribution of the number of children is heavy tailed .
Next , we analyze the depth of threads generated by the model . We show that the depth has an exponential vanishing tail .
Lemma 2 . If µ < 0 , the probability that the tree generated by the branching process has depth at least i is exponentially small in i .
Proof . The expected number of children in the ith generation is given by E[Zi ] = µi . For a tree to have depth at least i , this number must be at least 1 . By the Markov inequality , the probability of this event is at most Pr[Zi ≥ 1 ] ≤ E[Zi ] = µi . From this , we see that the distribution of depths of threads generated by BP Model does not in particular have a heavy tail . 5.3 Critique of BP Model
The main advantage of BP Model is its conceptual simplicity . Furthermore , it is also easy to estimate the parameters of the model , and as we observed , the parameter ( ie , the degree distribution ) can be succinctly approximated by a power law . By Lemma 1 , it also leads to a heavy tailed size distribution , provided the degree distribution is heavytailed ( see Figure 1 ) . As we will see in Section 7 , BP Model is sufficient to elicit different types of conversations .
The main drawbacks of BP Model are the following . ( 1 ) The model is not generative , ie , the degree distribution is stipulated and the messages are created according to this distribution . In this sense , this model is similar to the configuration model [ 28 ] in random graph theory , where a random graph with a specified degree sequence is generated . The model does not try to abstract the social processes behind the creation of messages and the growth of threads .
( 2 ) This model cannot capture the depth distributions of threads that are observed in reality ( Figure 1(a) ) . From Lemma 2 , we know that the depth cannot be heavy tailed ; this is seen in the in Figure 5 . BP Model also cannot cap
Figure 5 : Size and depth distribution of threads using BP Model ( with p estimated from Usenet ) . ture the quadratic relationship between size and depth in Figure 1(b ) . 1By a heavy tail distribution we mean a distribution that dominates a power law distribution for some exponent .
Moreover , the size distribution generated by the model has a tail that is quantitatively similar to that of the degree distribution . However , in reality , the size distribution has a flatter tail than the degree distribution ( for sake of brevity , we do not show these figures ) .
( 3 ) In the branching process model , the number of children at each node is determined by a single distribution . However , this is not realistic as seen in Figure 3 . A vanilla branching process model cannot capture this phenomenon . ( 4 ) The branching process model does not capture the order in which the messages are created , ie , the timestamps associated with the messages are left out . Furthermore , the model does not capture the author of messages . These are two critical parameters that distill the essence of conversations in social settings .
6 . MODELS WITH TIME AND IDENTITY In this section , we propose new models for the growth of threads of conversation .
First , we consider a model that incorporates recency . The idea behind this model ( called T Model ) is based on the following observation : as in the preferential attachment model , messages that have already received many replies are more likely to receive a new reply . But in addition to this , new messages receive more attention than the old ones . This effect might not be very pronounced in the growth of networks such as the web where the nodes ( webpages ) have a relatively long “ lifespan ” . On discussion forums and twitter , however , messages quickly become outdated , and therefore ( as we will demonstrate later in the paper using data and simulation ) there is a clearly observable tendency that a new message added to a thread is in response to a relatively recent message . Our model captures this fact by assigning a higher probability of being the next message that receives a reply not only to high degree messages , but also to the recent messages .
As noted in Section 2 , a similar high level idea was ex plored in the context of tracking news phrases [ 20 ] . 6.1 Definition of T Model
We now give a formal definition of T Model . We assume the thread grows in discrete time steps . Each time , either a decision is made to stop the thread ( ie , no more message will be added to it ) , or to add a message in reply to one of the current messages in the thread denoted by v ( ie , the new vertex will be added as a child of v ) . The probability of the latter decision depends on two parameters of the vertex v . One parameter is the current degree of v . We denote this by degv . The other parameter , called the recency of v and denoted by rv , is the number of time steps since v was added to the thread .
In general , we take the probability of the decision to add a child to v to be proportional to some function h(degv , rv ) of the degree and recency of v , and the probability of death to be proportional to a constant δ . That is , the probability h(degv ,rv ) u h(degu,ru)+δ and the probability of adding a child to v is of termination is u h(degu,ru)+δ , where the summation in the denominator is over all nodes u currently in the thread . For the rest of this paper , we focus on a particular form of the function h : when h is a linear combination of degv and and an exponentially decreasing function in rv . That is , h(degv , rv ) = αdegv +τ rv for constants α ≥ 0 and τ ∈ ( 0 , 1 ) .
δ
1e 007 1e 006 1e 005 0.0001 0.001 0.01 0.1 1 1 10 100 1000fractionsizeSimulation : distribution of size , depthdepthsizedepth We choose this form of function because of the following reasons .
( 1 ) An exponential “ discounting ” function like τ rv is the standard way to model dependence on time .
( 2 ) A linear combination is perhaps the simplest and most natural way to combine the recency and degree2 .
( 3 ) Considering a linear combination ( as opposed to , eg , the square root of the degree plus the exponential discount ) allows us to compute the denominator of the probability expressions independent of the current degrees , and this makes this model particularly amenable to mathematical analysis , as we see in this Section.3
Note that both the degree and recency components play a role in generating different types of threads . If the former plays a prominent role , then we get “ bushy ” threads — where many messages are in response to a single earlier message . If the latter plays a prominent role , then we get “ skinny ” threads — where the thread is essentially a path and messages appear in succession as a cascade of responses . 6.2 Properties of T Model
In this section we show that the degree distribution of graphs generated from T Model defined above has a heavy tail .
Theorem 3 . Let G be a thread with n nodes generated from the model in the above section with h(degv , rv ) = αdegv + τ rv . Then for every d , the fraction of nodes of G that have at least d children is at least Ω(d−1 ) .
Proof Sketch . We start by observing that with h(degv , rv ) = αdegv + τ rv , at the time that the thread has k nodes we have h(degu , ru ) = α(k − 1 ) +
τ j < α(2k − 2 ) + τ /(1 − τ ) . u j=1
Now , we consider the ith vertex added to the thread , and study the growth of the degree of this node at time t , as t grows . We denote the degree of this node at time t by di(t ) . Note that di(t ) is a random variable , and di(t + 1 ) − di(t ) is either one ( if the ( t + 1 ) ’s t node connects to i ) or zero ( if it doesn’t ) . The probability that di(t + 1 ) − di(t ) = 1 is k
αdi(t ) + τ t+1−i u h(degu , ru ) + δ
>
αdi(t )
αt + τ /(1 − τ )
.
= h(degv , rv ) u h(degu , ru ) + δ Therefore , we have
E[di(i + 1 ) ] ≥ 1 and
E[di(t + 1 ) ] − E[di(t ) ] >
αE[di(t ) ]
αt + τ /(1 − τ )
.
( 1 )
( 2 )
2Another natural alternative that we considered is the product of the degree with the exponential discounting term ( h(degv , rv ) = τ rv degv ) . While this formulation might makes sense intuitively , it does not generate graphs similar to what we see in practice . In particular , the exponential discounting factor does not let the degrees of the vertices to grow to a heavy tailed distribution . 3We have also done simulations with a few other reasonable choices of h , and did not observe fundamentally different results .
We couple the sequence of random variables di(i + 1 ) , di(i + 2 ) , . . . with another sequence which instead of the inequalities ( 1 ) and ( 2 ) , satisfies the corresponding equalities . We call these random variables d i(t ) . By coupling , di(t ) stochastically dominates d i(t ) . Therefore , it is enough to prove the desired lower bounds on d i(t ) instead of di(t ) . To do this , we first calculate the expected value of d i(t ) , which we denote by EDi(t ) . This can be calculated from the recurrence relations given by ( 1 ) and ( 2 ) . The solution of these recurrences is
EDi(t ) =
αt + τ /(1 − τ )
α(i + 1 ) + τ /(1 − τ )
.
The above equation can be proved easily by induction on t using recurrences given by ( 1 ) and ( 2 ) . This means that for every i , the expected degree of the ith node of the thread grows at least linearly with time . Furthermore , the sequence of random variables d i(t ) defines a martingale , and therefore by standard martingale concentration inequalities [ 29 ] , if t−i is large enough , the value of d i(t ) is concentrated around its expectation . Putting these together , we obtain that for t = n large enough and i < n−O(1 ) , with a large probability , we have di(n ) >
αt
2(αi + τ /(1 − τ ) )
.
This means that the number of nodes that have degree at least d is bounded from below by the number of i ’s satisfying αi + τ /(1 − τ ) < 0.5αn/d , which is Θ(n/d ) . Thus , the fraction of nodes having degree at least d is at least Θ(d−1 ) 6.3 Modeling author identity : TI Model
Upon understanding the process from which the thread structures are generated , we may also want to understand who is responsible for generating the reply message .
In this section we propose a model ( called TI Model ) for author identity . The motivation for TI Model comes from the observation that authors tend to respond to responses to their own earlier messages . Thus , when a new message v arrives as a child of message u in a thread t , the author a(v ) is likely to be chosen from the set {a(w)} for some w along the path from u to root(t ) . ( There is a slight caveat that w is unlikely to be u since a(v ) is most likely not the same as a(u) . )
The above observations , combined with the empirical evidence of Heap ’s law ( Figure 4 ) , suggests a modified Polya urn process in order to reproduce author identity patterns . When a new message v arrives with u = parent(v ) , then a(v ) is chosen according to the following process . Let A(v ) = path(parent(v) ) .
 a(w ) , w ∈U A(v ) wp . γ a ∈U A u wp . wp . 1 − γ − a(v ) =
Note that this model can also be viewed as a variant of the copying model [ 18 ] : with probability γ > 0 , we copy one of the authors from path(parent(u ) ; with probability min(γ , 1 − γ ) , we copy u itself ; and with the remaining probability , we choose a random author from A . By this process , the probability that an author is chosen is proportional to the number of times he/she already authored a message in the path to the root .
Dataset Usenet
Y!Groups Twitter
α 0.1 0.7 0.1
τ
0.94 0.95 0.90
δ 0.4 0.8 0.8
Table 3 : Parameters of T Model .
From data , it is easy to statistically learn the parameters γ and of TI Model . It is possible to show that the above modified Polya urn process generates a heavy tail for the number of occurrences of an author on a path ( proof omitted ) . However , it seems much harder to analyze the number of occurrences in a tree , since different paths share nodes . 6.4 Simulation of the models
In this section we estimate the parameters of TI Model from the data and simulate the model to see if the statistics match the empirical ones . The parameters are estimated through a simple grid search and maximum likelihood computation . Table 3 shows the parameters of T Model estimated from the data .
We consider the size vs depth relationship and the degree distribution conditioned at each level , to see if these resemble the empirical observations . Figure 6 shows these plots for Usenet , simulated using the parameters from Table 3 . These show that T Model is able to reasonably capture the empirical observations .
7 . MIXTURE MODELS AND AN EM AL
GORITHM
Communities such as twitter , Yahoo groups , and Usenet are quite diverse , and as a result , sometimes we observe threads with very different characteristics on these communities . In particular , one can observe that on twitter , threads of conversation are primarily of two different types : conversations that are mainly between two individuals , and conversations that are among a group of individuals . For the former type of conversation , the thread is “ skinny ” , growing more or less as a path ( sometimes with few additional leaves ) , whereas for the second type , the thread is often “ bushy . ” To more accurately model the threads in such settings where there is heterogeneity in the types of threads , we consider models that are mixtures of the models proposed in previous sections . In particular , a simple model is to consider mixtures of BP Model , with different parameters : each thread is of one of the types 1 , . . . , k , where the probability of each type is given . Given the type t , the thread is generated according to a branching process with probability distribution p(t ) for the number of children of each node .
A useful application of a mixture model is that by fitting the data to such a model ( ie , estimating the maximum likelihood parameters of the model ) we obtain a classification of the threads in the dataset . For example , we have applied the method on Twitter with k = 2 , and the resulting clustering of the thread matches the intuitive clustering between the long threads of pairwise conversations and the wider group conversation threads . Figure 8 shows the values of the parameters BP Model ( ie , the degree distribution ) for Twitter for k = 2 . Clearly , p(1 ) corresponds to the bushy threads and p(2 ) corresponds to the skinny threads .
( a )
( b )
Figure 6 : ( a ) Size vs depth ( b ) Per level degree distribution for T Model simulation of Usenet .
Finally , we consider the number of unique authors as a function of thread size , by using TI Model . Figure 7 shows the plot . We can see that this is reasonably consistent with the observation we made in Figure 4 .
Figure 7 : Unique authors vs thread size in TIModel .
Figure 8 : Values of p(1 ) , p(2 ) for Twitter and BPModel .
To fit the data to a mixture model , we use an adaptation of the well known expectation maximization ( EM ) algorithm . The EM algorithm starts with a random partitioning of the threads into k classes . In each iteration , for each class , the algorithm estimates the maximum likelihood set of parameters ( in the case of branching processes , this is simply counting the number of nodes with a certain number of children ) . Then , fixing these sets of parameters , the algorithm reclassifies each thread to the model that is most likely to have generated it . This algorithm continues until it converges , or a certain maximum number of iterations is reached .
We state a few observations about the EM algorithm applied to our datasets ( in particular the twitter dataset , which
1 10 100 1 10 100average depthsizeSimulation : size vs average depthempiricalpowerlaw fit ( 0.374 ) 1e 007 1e 006 1e 005 0.0001 0.001 0.01 0.1 1 1 10 100fractiondegreeSimulation : degree distribution per levellevel 1level 2level 3level 4 0.1 1 10 100 1 10 100unique authorssizeSimulation : unique authors vs sizeempirical : unique authorspowerlaw fit ( 0.812 ) 1e 008 1e 007 1e 006 1e 005 0.0001 0.001 0.01 0.1 1 0 5 10 15 20 25 30 35 40 45 50p(k)kp1p2 appears to be the most heterogeneous among the three ) : first , the algorithm converges quite fast . The median number of rounds it takes for the algorithm to converge is 11 . This is significant given the size of the dataset .
In fact , it is not hard to prove that the EM algorithm as described above always converges in a finite number of rounds . This is based on the fact that the likelihood of the current calculated solution in this algorithm always increases . However , the convergence is to a local maximum of the likelihood function , and not necessarily a global maximum . In our experiments , the difference between the loglikelihoods of the solution in 10 different runs of the algorithm has been less than 001 % Furthermore , the parameters calculated for the classification in different runs are almost equal .
8 . ANECDOTAL EXAMPLES
We next examine some of the groups in particular for those with the highest values for α ( high degree of preferential attachment ) , τ ( high recency effect ) , and low/high values of γ ( high/low copying effect ) . 8.1 Usenet
Preferential behavior . The Usenet groups with the highest degree of preferential attachment are shown below . Nearly all of the top ones were politically related . There were a few additional high activity rec groups with somewhat higher values ( eg recgamespinball had a value of 0.7 ) , but this is significantly less than those shown .
Group itdiscussionileggendemetropolitane itpoliticapolo recgameschesspolitics blnpolitikrassismus sk.politics
α 10 10 3 2 1.5
This would lead us to believe that political groups tend to have “ bushier ” threads , and less “ back and forth ” paths between a few people .
Recency . On the other hand , there are some groups that had a higher recency effect — some of the lower traffic politics groups ( those with fewer users overall ) tended to follow this pattern . The top groups are shown below .
Group falinuxkernel ukpoliticselectoral recartsdrwho ukpoliticscrime chilesocpolitica
τ 0.98 0.98 0.97 0.97 0.96
Identity “ copying ” . Finally , we examined which groups had the highest and lowest rates of identity copying ; that is , which groups showed the highest incidence of choosing authors from upwards in the thread ( as opposed to more uniformly distributed ) . High values of γ indicate a low copying rate — new authors tended to join in often . Low values of γ indicate a low copying rate . Here are some of the higher and lower γ values among Usenet— there were 13 total groups with the highest γ ; we show a selection .
Group or.politics altfancecil adams altmarketplaceonlineebay plmisckolej recartssfwritten linuxdebianbugsdist microsoftpublicexcelmisc microsoftpublicexcelprogramming nctu.talk twbbscampusnctu
Interestingly , nearly all of the rec.music groups followed a pattern of low copying , with more uniform behavior . The highest copying groups were IT help related groups , which is not surprising given the back and forth question/answer format that such groups foster . 8.2 Y!Groups
We repeated the experiments of determining α and τ for the Y!Groups data . While the characterization of the groups was less obvious , we show a few groups with unusually high values of each parameter ( α = 10 and τ = 099 )
Group indianmedical IllinoisSpeakers DetectiveRichardHead Bodybuildersvsaverageguys villageDesign
Group NorthCarolinaSpeakers stbaseliosorthodoxchurch LostnFoundEvents PatriceVinci molecular biology notebook
8.3 Twitter
Finally , we repeated the experiments for Twitter . To find out the topic of a thread , we chose the most popular hashtag ( #tag ) among the messages in a thread and assume it to denote the topic of the thread .
The topics with the highest α ( =10 ) includes the following .
Tag #mustsee #twitterinreallife #readingrainbow #whathappenswhen #vogueevolution
Presumably these correspond to topics where the threads were “ bushy ” .
The topics with the highest τ ( =0.99 ) includes the follow ing .
Tag #yankees #warriors #tiff09 #mustsee #iranelection #followfriday
As we see , these correspond to topics with a stronger sense of time ( sports , movies , etc . ) and hence the threads tend to be “ skinny ” .
9 . CONCLUSIONS AND FUTURE WORK In this paper we studied the problem of how online conversations build . We proposed simple mathematical models that can capture the patterns in human exchanges . Our models encapsulate both time of the message and identity of the author of the message . Using three different publicly available datasets , we study the structure of conversations and explore the model for these datasets .
There are several potential future applications of this work . We identify two such applications
( 1 ) Our method can be used to identify group conversations in systems like e mail , and offering tools to facilitate such conversations .
( 2 ) Our method can be used to identifying friendship relationships between users : declaring someone a friend or following someone on social applications like Facebook or Twitter is not a good indication of an actual friendship relationship between the individuals . So , to identify who ’s friends with whom , we need to look at the interaction between individuals . Our classification identifies one on one interactions , which are more informative than interactions in the context of a group .
10 . REFERENCES [ 1 ] R . Albert and A L Barabasi . Emergence of scaling in random networks . Science , 286:509–512 , 1999 .
[ 14 ] T . E . Harris . The Theory of Branching Processes .
Dover , 2002 .
[ 15 ] H . S . Heaps . Information Retrieval : Computational and Theoretical Aspects . Academic Press , 1978 .
[ 16 ] J . Kleinberg . Complex networks and decentralized search algorithms . In Proc . International Congress of Mathematicians , 2006 .
[ 17 ] R . Kumar , J . Novak , and A . Tomkins . Structure and evolution of online social networks . In Proc . 12th KDD , pages 611–617 , 2006 .
[ 18 ] R . Kumar , P . Raghavan , S . Rajagopalan ,
D . Sivakumar , A . Tomkins , and E . Upfal . Stochastic models for the web graph . In Proc . 41st FOCS , pages 57–65 , 2000 .
[ 19 ] J . Leskovec , L . A . Adamic , and B . A . Huberman . The dynamics of viral marketing . In Proc . 7th EC , pages 228–237 , 2006 .
[ 20 ] J . Leskovec , L . Backstrom , and J . M . Kleinberg .
Meme tracking and the dynamics of the news cycle . In Proc . 15th KDD , pages 497–506 , 2009 .
[ 21 ] J . Leskovec , L . Backstrom , R . Kumar , and A . w .
Tomkins . Microscopic evolution of social networks . In Proc.14th KDD , pages 462–470 , 2008 .
[ 22 ] J . Leskovec , J . M . Kleinberg , and C . Faloutsos . Graph evolution : Densification and shrinking diameters . TKDD , 1(1 ) , 2007 .
[ 2 ] L . Backstrom , R . Kumar , C . Marlow , J . Novak , and
[ 23 ] J . Leskovec , M . Mcglohon , C . Faloutsos , N . Glance ,
A . Tomkins . Preferential behavior in online groups . In Proc . 1st WSDM , pages 117–128 , 2008 . and M . Hurst . Cascading behavior in large blog graphs . In Proc . 7th SDM , 2007 .
[ 3 ] L . Barabi´asi . The origin of bursts and heavy tails in
[ 24 ] J . Leskovec , A . Singh , and J . Kleinberg . Patterns of human dynamics . Nature , 435 , 2005 .
[ 4 ] S . Bikhchandani , D . Hirshleifer , and I . Welch . A theory of fads , fashion , custom , and cultural change in informational cascades . Journal of Political Economy , 100(5):992–1026 , 1992 .
[ 5 ] B . Bollobas . Random Graphs . Cambridge , 2001 . [ 6 ] B . Bollobas and O . Riordan . Mathematical Results on Scale Free Random Graphs , pages 1–37 . Wiley–WCH , 2002 .
[ 7 ] H C Chen , M . Magdon Ismail , M . Goldberg , and
W . A . Wallace . Inferring agent dynamics from social communication network . In Proc . 9th WebKDD , 2007 . [ 8 ] Z . Dezs¨o , E . Almaas , A . Luk´acs , B . R´acz , I . Szakad´at , and A L Barab´asi . Dynamics of information access on the web . Physical Review E ( Statistical , Nonlinear , and Soft Matter Physics ) , 73(6):066132 , 2006 .
[ 9 ] R . Durrett . Random Graph Dynamics . Cambridge ,
2006 .
[ 10 ] D . Fisher , M . Smith , and H . T . Welser . You are who you talk to : Detecting roles in usenet newsgroups . In Proc . 39th HICSS , 2006 .
[ 11 ] J . Goldenberg , B . Libai , and E . Muller . Talk of the network : A complex systems look at the underlying process of word of mouth . Marketing Letters , 12(3):209–221 , 2001 .
[ 12 ] B . Golub and M . O . Jackson . Seeing only the success : The power of selection bias in explaining the structure of observed Internet diffusions , 2010 .
[ 13 ] M . Granovetter . Threshold models of collective behavior . American Journal of Sociology , 83(6):1420–1443 , 1978 . influence in a recommendation network . In Proc . 10th PAKDD , pages 380–389 , 2006 .
[ 25 ] D . Liben Nowell and J . Kleinberg . Tracing the flow of information on a global scale using Internet chain letter data . Proc . National Academy of Sciences , 105(12):4633–4638 , 2008 .
[ 26 ] M . Mcglohon and M . Hurst . Community structure and information flow in usenet : Improving analysis with a thread ownership model . In Proc . 3rd ICWSM , 2009 .
[ 27 ] M . Mcglohon , J . Leskovec , C . Faloutsos , M . Hurst , and N . Glance . Finding patterns in blog shapes and blog evolution . In Proc . 1st ICWSM , 2007 .
[ 28 ] M . Molloy and B . Reed . A critical point for random graphs with a given degree sequence . Random Structures and Algorithms , 6(2/3):161–180 , 1995 .
[ 29 ] R . Motwani and P . Raghavan . Randomized
Algorithms . Cambridge , 1995 .
[ 30 ] T . C . Turner , M . A . Smith , D . Fisher , and H . T .
Welser . Picturing usenet : Mapping computer mediated collective action . Journal of Computer Mediated Communication , 10(4 ) , 2005 .
[ 31 ] A . Vazquez . Spreading dynamics on heterogeneous populations : multi type network approach . Physical Review Letters , 74 , 2006 .
[ 32 ] F . B . Viegas and M . Smith . Newsgroup crowds and authorlines : visualizing the activity of individuals in conversational cyberspaces . In Proc . 37th HICSS , pages 10 pp.+ , 2004 .
[ 33 ] D . J . Watts . A simple model of global cascades on random networks . Proc . National Academy of Sciences , 99(9):5766–5771 , 2002 .
