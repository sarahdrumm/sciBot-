HeterRank : Addressing Information Heterogeneity for
Personalized Recommendation in Social Tagging Systems
Wei Feng
Tsinghua University
Beijing , China feng w10@mailstsinghuaeducn
ABSTRACT A social tagging system provides users an effective way to collaboratively annotate and organize items with their own tags . A social tagging system contains heterogenous information like users’ tagging behaviors , social networks , tag semantics and item profiles . All the heterogenous information helps alleviate the cold start problem due to data sparsity . In this paper , we model a social tagging system as a multitype graph and propose a graph based ranking algorithm called HeterRank for tag recommendation . Experimental results on three publicly available datasets , ie , CiteULike , Last.fm and Delicious prove the effectiveness of HeterRank for tag recommendation with heterogenous information . Categories and Subject Descriptors InformaH33 [ Information Storage and Retrieval ] : tion Search and Retrieval—Information Filtering , Retrieval Models , Selection Process General Terms Algorithms Keywords Social Tagging System , Recommender System , Information Heterogeneity
1 .
INTRODUCTION
In social tagging systems , users can annotate and organize items with their own tags for future search and sharing . Many social tagging systems have achieved great success , such as Delicious1 . Personalized tag recommendation is the key part of a social tagging system . When a user wants to annotate an item , the user may have her/his own vocabulary to organize items . Personalized tag recommendation tries to find the tags that can both meet the user ’s annotation habits and precisely describe the item . A social tagging system , as shown in Figure 1 , contains heterogeneous information and can be modeled as a graph : • Users(U ) , tags(T ) and item(I ) co exist in the graph . • Inter relationships . Edges between users , tags and items can be derived from annotation behaviors <user , tag ,
1http://delicious.com
Copyright is held by the author/owner(s ) . WWW 2012 Companion , April 16–20 , 2012 , Lyon , France . ACM 978 1 4503 1230 1/12/04 .
Jianyong Wang Tsinghua University
Beijing , China jianyong@tsinghuaeducn
Figure 1 : Social Tagging System item> . Suppose we have u ∈ U and t ∈ T , the weight of <u , t> is the times of tag t being used by user u . The same rule applies to <u , i> and <i , t> ( i ∈ I ) . • Intra relationships . ( 1 ) Social network among users.(2 ) Tag semantic network based on semantic relatedness . ( 3 ) Item network based on content similarities .
Our goal is to model all sources of information to address the cold start problem due to data sparsity . However , few work has been done in this field . To address information heterogeneity , we propose a graph based ranking method called HeterRank . Given a user u and an item i for tag recommendation , HeterRank performs a random walk with restart at user u and item i to assign each tag a visiting probability . Only tags that are both relevant to u and i can get a high visiting probability . 2 . GRAPH BASED RECOMMENDATION
HeterRank extends the random walk with restart to the heterogenous graph . With frequently restart at u and i , all the tags are ranked according to their visiting probabilities from u and i . Formally , HeterRank is performed according to the following equation :
= ( 1 − α)S
+ α
(t+1 )
 pU pT pI
(t )
 pU pT pI
 ( 1 )
 qU qT qI where α is the restart probability and t represents the the number of iterations . Vectors pU , pT and pI is the visiting probabilities of users , tags and items , respectively . S is the transition matrix based on the graph structure . Vectors qU , qT and qI represent the preferences of users , tags and items for restart . Now we introduce the the transition matrix S and the preference vector qT = ( qT Transition Matrix Let G denote the whole graph shown in Figure 1 and let GM N ( M , N ∈ {U , T , I} ) denote the subgraph made up by relation <m , n> ( m ∈ M , n ∈ N ) . Let AM N denote the adjacent matrix of the sub graph GM N .
I ) in detail .
U , qT
T , qT u1Usersu2ujUj:::t1Tagst2tjTj:::i1Itemsi2ijIj:::WWW 2012 – Poster PresentationApril 16–20 , 2012 , Lyon , France499 AM N ( i , j ) represents the weight of the edge <j , i>2 . The transition matrix S is computed by two steps : ( 1)Since different AM N are measured in different metrics , each column of AM N is normalized to have sum 1 . ( 2 ) Since the importance of AM N differs , we re scale each AM N by multiplying it with a factor tM N . For example , assuming the social network is less important than the tagging history of users , we can set tU U to be smaller than tT U and tIU . Formally , the transition matrix S is defined as follows :
 tU U AU U D tT U AT U D tIU AIU D
−1 U U −1 T U −1 IU
S = tU T AU T D tT T AT T D tIT AIT D
−1 U T −1 T T −1 IT tU I AU I D tT I AT I D tII AII D
−1 U I −1 T I −1 II
 ( 2 )
T , qT
U , qT where DM N ( M , N ∈ {U , T , I} ) is a diagonal matrix and the i th entry is the sum of the i th column of AM N . For each N ∈ {U , T , I} , we have tU N + tT N + tIN = 1 . Preference Vector Initially , all entries in the preference vector qT = ( qT I ) are set to 1 , which means all nodes have a small probability for restart . Given a user u and an item i for personalized tag recommendation , the corresponding entries qU ( u ) and qI ( i ) are respectively set to |U| and |I| . This is the same with FolkRank [ 1 ] . In other words , u and i have a much higher probability for restart . Then each qM ( M ∈ {U , T , I} ) is normalized to have sum 1 . Finally , considering the importance of each type of nodes differs , we re scale each qM ( M ∈ {U , T , I} ) by multiplying it with a factor rM . The preference vector q is defined as follows qT = ( rU qT
( 3 ) where DM ( M ∈ {U , T , I} ) is the sum of qU . We add a constraint rU +rT +rI =1 to make q sum to 1 .
I /DI )
U /DU , rT qT
T /DT , rI qT
With the the transition matrix S and the preference vector q defined , we can take a closer look at the intuition of how pT is computed according to Equation 1 :
I
T
T p(t+1 )
T + AT I p(t )
I . The same rule applies to p(t+1 )
= ( 1− α)(AT U p(t ) U + AT T p(t ) I ) + αqT ( 4 ) M N and qM =rM qM /DM ( M , N ∈ −1 where AM N =tM N AM N D {U , T , I} ) . When α=0 , p(t+1 ) receives scores spread from T and p(t ) p(t ) U , p(t ) and p(t+1 ) . In other words , users , tags and items reinforce each other through different types of relations until a stable state is reached . For t ∈ T , t will get a high ranking only when t has highly ranked neighbors of users , tags and items . When α is greater than 0 , the personalized information is considered by frequently restart at the target user and item . 3 . EXPERIMENTAL STUDY
U
To prove the effectiveness of HeterRank , we conducted extensive experiments on three publicly available datasets : CiteULike3 with tag relations , Last.fm with user relations , and Delicious with user relations and item relations . Last.fm and Delicious are online available4 . CiteULike has 3152 users , 9561 tags , 54816 items , 49006 tag relations and 483790 posts . Tag relatedness is computed by WikipediaMiner5 . Last.fm has 1892 users , 9749 tags , 12523 items , 25434 user relations , 24164 posts . User relations are all mutual friends . Delicious has 1867 users , 69223 tags and 40678 items , 15328
2Different from the convention , AM N is column indexed . 3http://wwwciteulikeorg/faq/dataadp 4http://wwwgrouplensorg/node/462 5http://wikipedia minercmswaikatoacnz
Table 1 : CiteULike ( Tag Relations )
Algorithm FR HR ∅ HR T
P@1 0.164 0.159 0.180
P@2 0.143 0.145 0.159
P@3 0.125 0.129 0.137
P@4 0.112 0.116 0.125
Table 2 : Last.fm ( User Relations )
Algorithm FR HR ∅ HR U
P@1 0.305 0.341 0.349
P@2 0.262 0.293 0.299
P@3 0.228 0.256 0.263
P@4 0.202 0.226 0.233
P@5 0.102 0.106 0.114
P@5 0.182 0.206 0.212
Table 3 : Delicious ( User and Item Relations ) P@5 0.148 0.155 0.166 0.162 0.165
Algorithm FR HR ∅ HR I HR U HR UI
P@1 0.257 0.246 0.272 0.277 0.281
P@2 0.214 0.214 0.231 0.231 0.235
P@4 0.163 0.171 0.182 0.178 0.181
P@3 0.186 0.188 0.203 0.201 0.204 user relations and 151971 item relations and 437593 posts . User relations are mutual and binary weighted . Item relations are computed using vector model with TF IDF weighting for each word in the webpage . For each user , one of his post is held out to construct the test data . We use precision to measure the performance . 3.1 Parameter Estimation We draw a small sample from the data to find the best {tM N| M ,N∈ {U , T , I}} . Suppose M is U , once tU U is set to a fixed value auu , we have tU T + tU I = 1 − auu . Then we only need to decide how ( 1 auu ) is split by tU I and tU U . We set the step size σ=±0.1 , ±0.15 , ±0.2 so that − σ
1 − auu
1 − auu tU T = tU I =
+ σ
2
2 auu cannot be too large ( greater than 0.5 ) because social network can be viewed as the background information and is a weak feature . The step size σ cannot be too small . A step size of 0.01 can hardly influence the ranking . This search strategy also applies to rM ( M ∈ {U , T , I} ) . 3.2 Experimental Results
We choose FolkRank[1 ] as our baseline , which is the stateof the art graph based method . The results are shown in Tables 1 , 2 and 3 . FolkRank and HeterRank with only <user , tag , item> relations available is denoted by FR and HR ∅ , respectively . HR U , HR T and HR I denote HeterRank with user relations , tag relations and item relations , respectively . HR UI combines user relations and item relations together . When performed only on <user , tag , item> , FolkRank and HeterRank are comparable . When intra relations are introduced , HeterRank successfully combined the newly introduced relations and outperforms the baseline . 3.3 Acknowledgments
This work was supported in part by National Natural Science Foundation of China under Grant No . 60833003 , National Basic Research Program of China ( 973 Program ) under Grant No . 2011CB302206 , and an HP Labs Innovation Research Program award . 4 . REFERENCES [ 1 ] R . J¨aschke , L . B . Marinho , A . Hotho ,
L . Schmidt Thieme , and G . Stumme . Tag recommendations in folksonomies . In PKDD , 2007 .
WWW 2012 – Poster PresentationApril 16–20 , 2012 , Lyon , France500
