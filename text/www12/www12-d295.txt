APOLLO : A General Framework for Populating Ontology with Named Entities via Random Walks on Graphs
Wei Shen1 , Jianyong Wang1 , Ping Luo2 , Min Wang2
1Department of Computer Science and Technology , Tsinghua University , Beijing , China
2{ping.luo , minwang6}@hpcom
1chen wei09@mailstsinghuaeducn , jianyong@tsinghuaeducn
2HP Labs China , Beijing , China
ABSTRACT Automatically populating ontology with named entities extracted from the unstructured text has become a key issue for Semantic Web . This issue naturally consists of two subtasks : ( 1 ) for the entity mention whose mapping entity does not exist in the ontology , attach it to the right category in the ontology ( ie , fine grained named entity classification ) , and ( 2 ) for the entity mention whose mapping entity is contained in the ontology , link it with its mapping real world entity in the ontology ( ie , entity linking ) . Previous studies only focus on one of the two subtasks . This paper proposes APOLLO , a general weakly supervised frAmework for POpuLating ontoLOgy with named entities . APOLLO leverages the rich semantic knowledge embedded in the Wikipedia to resolve this task via random walks on graphs . An experimental study has been conducted to show the effectiveness of APOLLO .
Categories and Subject Descriptors H33 [ Information Systems ] : Retrieval—Information Search and Retrieval
Information Storage and
General Terms Algorithms , Experimentation
Keywords Ontology population , Named entity classification , Entity linking , Label propagation
1 .
INTRODUCTION
Populating the existing ontology with the newly extracted facts become more and more important . Manually populating ontology requires substantial human efforts and is usually time consuming . The development of the information extraction techniques makes the automatic ontology population techniques possible . Integrating the newly extracted knowledge derived from the information extraction systems with the existing ontology requires to deal with the task of populating ontology with named entities .
Ontology population with named entities is the task to locate the right place of the detected named entity in the
Copyright is held by the author/owner(s ) . WWW 2012 Companion , April 16–20 , 2012 , Lyon , France . ACM 978 1 4503 1230 1/12/04 . ontology . Given a named entity mention detected from the unstructured text , if the mapping entity of the entity mention is not contained in the ontology , we should find the right category node to which the entity mention should be attached in the ontology , which is known as the task of finegrained named entity classification . Otherwise , if the mapping entity of the entity mention exists in the ontology , the aim of this task is to link this detected entity mention with its corresponding real world entity in the ontology , which is known as the entity linking task . In this paper , we propose APOLLO , a novel graph based framework to resolve the task of automatic ontology population with named entities integrally . APOLLO is a weakly supervised framework that requires minimal human involvements . Moreover , APOLLO is open domain as it is independent of the underlying ontology .
2 . ONTOLOGY POPULATION WITH NAMED
ENTITIES
The only input of our framework APOLLO is a collection of documents and an initial ontology . Let D = fd1 ; d2 ; : : : ; dmg be the collection of the input documents and Ω be the initial ontology . Let be the set of all entity mentions recognized from the document set D , and each entity mention s 2 needs to be populated into the ontology Ω . Let NΩ denote the set of all named entities contained in the ontology Ω , and CΩ be the set of all categories in the taxonomy of Ω . An entity mention s 2 is a token sequence which refers to some named entity in the text document . We define the document context s of the entity mention s 2 as a window of words around the occurrence of the entity mention s . On the other hand , for each named entity n 2 NΩ , we define the document context n of the named entity n as the description context for n in the ontology . As both the entity mention s 2 and the named entity n 2 NΩ have document contexts , we use to denote the document context corresponding to an entity mention or a named entity . To capture the semantic information existing in the document context , we recognize all the Wikipedia concepts fl appearing in , and consider the set of these detected Wikipedia concepts as the semantic signature ffi . For the general textual document , we utilize the open source toolkit Wikipedia Miner1 to detect the Wikipedia concepts appearing in the context .
Based on the definitions , we propose a framework called APOLLO , to address the task of ontology population with named entities using three modules as follows :
1http://wikipedia minercmswaikatoacnz/
WWW 2012 – Poster PresentationApril 16–20 , 2012 , Lyon , France595 Graph Creation : This module constructs a graph G = ( V ; E ; W ) where the nodes V come from all the entity mentions , the named entities NΩ and the Wikipedia concepts in their semantic signatures ffi . Specifically , for each entity mention s 2 , we pair it with each Wikipedia concept fl 2 ffis where ffis denotes the semantic signature of s , to create the triple ( s ; fl ; w ) , and the weight w is set to 1.0 in the experiments . For each triple ( s ; fl ; w ) , s and fl are added to V and the edge ( s ; fl ) is added to E , with W ( s ; fl ) = w . And for each named entity n 2 NΩ , we also pair it with each Wikipedia concept fl 2 ffin where ffin denotes the semantic signature of n , to create the triple ( n ; fl ; w ) , where the weight w is set to 1.0 in the experiments as well . For each triple ( n ; fl ; w ) , n and fl are added to V and the edge ( n ; fl ) is added to E , with W ( n ; fl ) = w . To forward the label information over the graph more effectively , the semantically related Wikipedia concept nodes should be connected by some edges to enrich the information propagation paths . In order to measure the strength of the semantic relatedness , we adopt the Wikipedia Link based Measure ( WLM ) described in [ 3 ] to calculate the semantic relatedness between Wikipedia concepts . For each pair of Wikipedia concept nodes ( fl1 ; fl2 ) in the graph , if the semantic relatedness SR(fl1 ; fl2 ) is greater than some threshold , we add an edge ( fl1 ; fl2 ) to E , with W ( fl1 ; fl2 ) = SR(fl1 ; fl2 ) . Label Propagation : In this module , we assign each entity mention s 2 to the proper category cs 2 CΩ via graph label propagation . Firstly , we annotate each named entity node n 2 NΩ with its corresponding category label in the graph G . In this paper , the named entity category is used as the label for the node , and we assume that each named entity just belongs to one category for the purpose of simplicity . We then combine the two interpretations ( ie , adsorption via averaging and adsorption via random walks ) of the Adsorption label propagation algorithm introduced in [ 1 ] and apply it to the graph G . For each entity mention s 2 , we obtain the label distribution Ls over the categories CΩ and consider the category which has the largest distribution in Ls as the predicted category cs for the entity mention s . Linking Validation : For each entity mention s , we validate whether its mapping entity ns 2 NΩ in this module . Given an entity mention s , we firstly retrieve the set of entities that may be referred by this entity mention s , and we denote this set of entities as the candidate entity set CNs . We build a dictionary DT by leveraging some useful features of the Wikipedia , such as the entity page , the redirect page , the disambiguation page and the hyperlink in Wikipedia article . The dictionary DT is a <key , value> mapping , where the column of the key K is a list of entity mentions and the column of the mapping value K:value is the set of named entities which are referred by the key K . For each entity mention s 2 , we look up the dictionary DT and search for s in the column of the key K . If a hit is found , ie , s 2 K , we add the set of the mapping entities s:value to the candidate entity set CNs . Suppose that the entity does not have the same name entity which belongs to the same category . Thus , if there exists some entity n 2 CNs whose category is also cs , the same category as the predicted category for the entity mention s , then we can predict that this entity n is the mapping entity ns of the entity mention s ; Otherwise , we can predict that the mapping entity of the entity mention s does not exist in the ontology Ω , that is to say , ns =2 NΩ .
Table 1 : Experimental results over the data set
# of mentions
1033 661 372
APOLLO
Accu . 0.7764 0.7534 0.8172
# 802 498 304
Ganti KDDop Accu . 0.5489 0.7247 0.2366
# 567 479 88
All
Unlinkable
Linkable
3 . EXPERIMENTS
In the experiments , we used the May 2011 version of Wikipedia and YAGO(1)2 of version 2009 w10 5 . We firstly chose 20 categories which are the subclasses of the person category from YAGO , and randomly selected at most 200 instances for each selected category by querying the YAGO ontology . The created data set consists of 3304 distinct instances belonging to the 20 categories in total . Then we randomly sampled 80 % of these instances ( ie , 2643 ) as the list of named entities contained in the ontology , and the remaining 661 instances are regarded as the test entity mentions , which are all unlinkable . In addition , we collected 372 test entity mentions which can be linked with the named entities existing in the ontology by querying the names with Google , and added them to the test entity mentions .
We added the Linking Validation module of APOLLO to the method proposed in [ 2 ] to create the baseline method Ganti KDDop . We used the parameters for the baseline according to the original experimental setting in [ 2 ] . For APOLLO , to generate the semantic signature for each entity , we used its corresponding entire entity page in Wikipedia as the document context . In the Label Propagation module , the number of iterations for the Adsorption algorithm is set to 10 . We adopted the evaluation measure Accuracy ( Accu . ) to evaluate the performance of APOLLO and Ganti KDDop . The experimental results of APOLLO and Ganti KDDop over the data set are shown in Table 1 . Besides the number of total mentions , we also show the accuracy and the number of correctly assigned entity mentions for both APOLLO and Ganti KDDop , according to the different types of the test entity mentions . From the results in Table 1 , we can see that APOLLO achieves significantly higher accuracy compared with the baseline method Ganti KDDop in all aspects . 4 . ACKNOWLEDGMENT
This work was supported in part by National Basic Research Program of China ( 973 Program ) under Grant No . 2011CB302206 , National Natural Science Foundation of China under Grant No . 60833003 , and an HP Labs Innovation Research Program award .
5 . REFERENCES [ 1 ] S . Baluja , R . Seth , D . Sivakumar , Y . Jing , J . Yagnik ,
S . Kumar , D . Ravich , and R . M . Aly . Video suggestion and discovery for youtube : Taking random walks through the view graph . In Proceedings of WWW , pages 895–904 , 2008 .
[ 2 ] V . Ganti , A . C . K¨onig , and R . Vernica . Entity categorization over large document collections . In Proceeding of SIGKDD , pages 274–282 , 2008 .
[ 3 ] D . Milne and I . H . Witten . An effective , low cost measure of semantic relatedness obtained from Wikipedia links . In Proceedings of WIKIAI , 2008 .
2http://wwwmpi infmpgde/yago naga/yago/
WWW 2012 – Poster PresentationApril 16–20 , 2012 , Lyon , France596
