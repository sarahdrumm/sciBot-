Raise Semantics at the User Level for
Dynamic and Interactive SOA based Portals Jean Sebastien Brunner
Patrick Gatellier jean sebastienbrunner@thalesgroupcom patrickgatellier@thalesgroupcom
Campus Polytechnique Avenue Augustin Fresnel 91767 Palaiseau cedex France
Theresis Innovation Center Thales
ABSTRACT In this paper , we describe the fully dynamic semantic portal we implemented , integrating Semantic Web technologies and Service Oriented Architecture ( SOA ) . The goals of the portal are twofold : first it helps administrators to easily propose new features in the portal using semantics to ease the orchestration process ; secondly it automatically generates a customized user interface for these scenarios . This user interface takes into account different devices and assists end users in the use of the portal taking benefit of context awareness . All the added value of this portal is based on a core semantics defined by an ontology . We present here the main features of this portal and how it was implemented using state ofthe art technologies and frameworks .
Categories and Subject Descriptors H12 [ User/Machine Systems ] : Human factors . H35 [ Online Information Services ] : Web based services
General Terms Design , Experimentation , Human Factors .
Keywords Semantic Portal , SOA , Semantic Web Services , Context .
1 . INTRODUCTION Recently SOA introduced new paradigms in order to make software more flexible and close to business users . However the flexibility of SOA applications is limited since the business logic is mixed with specific operations used to handle the various syntactical standards ( BPEL , WSDL , XPath , XQuery , etc . ) necessary to implement orchestrations . As a result , these technologies are often too far from original SOA principles . Moreover , SOA does not bring flexibility at the end user level : orchestration does not take into account end users ; and user interfaces are usually hardcoded . To overcome orchestration limitations , various works introduced Semantic Web Services ( SWS ) . SWS define service semantically , by their goal and the concepts they manipulate , and not only syntactically . That allows advanced processing such as dynamic orchestration ( one service can be substituted by an equivalent one ) . Different standards have been submitted or released for SWS ( eg SAWSDL [ 7 ] , OWL S [ 5 ] , WSMO [ 3 ] ) and Semantic Orchestration ( eg BPEL4SWS[6 ] adding semantics to executable BPEL[8 ] orchestrations ) . These approaches allow higher
Copyright is held by the author/owner(s ) . WWW 2009 , April 20–24 , 2009 , Madrid , Spain . ACM 978 1 60558 487 4/09/04 . flexibility of applications but have few support in the industry ( currently no orchestration engine supports SWS or Semantic Orchestration ) and does not address the issue of end user communication . This communication with end users is itself divided in two parts : the ability to introduce user actions in the orchestration , and the construction of the user interface . BPEL4People [ 9 ] , an extension of BPEL , was recently proposed to introduce human tasks in orchestration , but this approach is not linked to semantic definitions and industrial support is still missing . The construction of user interfaces based on semantics was studied in Semantic Portals [ 2][4 ] approaches aiming at exploring knowledge bases . Although they provide dynamic way to explore data , their features are bounded to the fixed behavior hardcoded in the system . From this assessment , we developed a portal able to address all the listed shortcomings and taking into account semantics in these two levels . At the orchestration level it takes advantage of semantic definition to shorten the development of new features . At the user interface layer , it not only generates all necessary dialogues according to system data needs for different devices , but also uses semantics in a context engine able to assist users in all their interactions . The details of this portal are given hereafter . layers : orchestration and user interface
2 . THE PORTAL 2.1 Portal Features We developed a Semantic Portal whose aim is to prove the addedvalue of semantics at two levels : Improvement of user dialogues and seamless integration of service orchestrations thanks to semantics . The overall architecture of the portal is illustrated on Figure 1 , where semantics take a central role . 211 Improvement of user dialogues The interest of semantics for users is twofold : automatic generation of customized dialogues and assistance to users . First , the portal dynamically creates all interactions between users and scenarios according to semantic description of manipulated objects ( defined in the domain ontology ) . For instance , if the scenario needs to ask about a city , the question is formulated automatically : the user is asked about a city as a concrete concept ( and not as a syntactic type such as String ) . The dialogue generation module then asks this question with a regular form or using a map to visually select a city , according to the device capabilities . As a result , definition of new scenarios , that is to say new features for the portal , does not need the development of specific pages and interfaces . Moreover , ontology is used to enrich the user profile and provide assistance through contextualization . A Context ontology defines the contextual elements to be taken into account for a scenario ( eg date , the use of the portal to users in
WWW 2009 MADRID!Poster Sessions : Thursday , April 23 , 20091137 localization , weather , etc ) . Then all interactions are analyzed by a context engine . This module saves the answers of users along with the current context in a repository of contextual profiles . This is done using a RDF repository , allowing to save all these information using reification principles . From this contextual profile , the context engine automatically suggests answers to questions according to previous answers in similar contexts . For this , we developed a semantic distance processing . As a result the system can pre answer most of questions ; user can always accept or change the suggestions . This allows performing some scenario with minimal interaction , what is particularly useful with the use of devices with small or limited keyboards .
The portal was tested on two use cases . The first one was a egovernment use case , demonstrating the added value of our approach compared to web portals ; whilst the second use—case , dedicated to transportation user information show the added value of the contextual approach , allowing users to get the right information in only one click in current cases . As illustration purpose , we detail here the scenario "Next Train" belonging to this second use case . This scenario provides to an user the schedule of the next trains at a given station . It was defined as the orchestration of different operations such as "get stations" , "get available train lines at a station" , etc . Context Ontology was also defined and linked to services providing context data ( "get time" , "get weather" , "get location" , etc ) This scenario was then transformed into an executable orchestration . Then , when a user launches this scenario , all the interactions are generated according to his/her terminal and to the current context . As a result the user not only automatically get a targeted information ( eg the next train schedule at the station he/she is going at this time ) but also interacts with the scenario using his/her device capabilities .
3 . CONCLUSION The development of this portal shows that ontology and semantic web services not only brings dynamicity at technical level but also at the functional level , enabling to easily propose new feature in a portal which generates the interface according to the scenarios . Moreover , the same semantics benefits to user using meaningful concepts instead of syntactic type and contextualization to benefit from previous actions . The these technologies , and future work will focus on the scalability of the portal . implementation also shows feasibility of the
4 . ACKNOWLEDGMENTS We acknowledge the ITEA project SEMEASY for partly funding our research . Furthermore , we want to thank all people who contributed to the implementation of the portal . 5 . REFERENCES [ 1 ] Farrell , J . , Lausen , H . : Semantic Annotations for WSDL and
XML Schema . W3C Recommendation , 2007 .
[ 2 ] Hartmann , J . and Sure Y . , An Infrastructure for Scalable ,
Reliable Semantic Portals , IEEE Intelligent Systems 19(3 ) . [ 3 ] Lausen , H . , Polleres , A . , Roman , D . : Web Service Modeling
Ontology ( WSMO ) . W3C Member Submission , 2005 .
[ 4 ] Maedche , A . et al . , Semantic portal – The SEAL approach ,
In Spinning the Semantic Web , MIT Press , 2003 .
[ 5 ] Martin , D . et al . : OWL S : Semantic markup for web services .
W3C Member Submission , 2004 .
[ 6 ] Nitzsche , J . et al . , BPEL for Semantic Web Services
( BPEL4SWS ) , Workshop on Agents , Web Services and Ontologies Merging , OTM 2007 .
[ 7 ] Semantic Annotations for WSDL and XML Schema , W3C
Recommendation , 28 August 2007 .
[ 8 ] Web Services Business Process Execution Language Version
2.0 , OASIS Standard , April 2007 .
[ 9 ] WS BPEL Extension for People ( BPEL4People ) , Version
1.0 , June 2007 .
Figure 1 . The overall architecture of the portal 212 Seamless integration of new Scenarios Thanks to semantics , the generation of service orchestration ( aka Scenario in the portal ) can be defined at a business level , with minimum knowledge of information systems . From this business point of view , the semantic orchestration is not based on concrete ( web ) service implementation but on a set of goals . Some examples of goals can be "find a city" , "pass an order" , "validate an account number" . To insure the meaning , these goals are expressed in term of semantic concepts chosen in ontologies , as well as their inputs and outputs . Today , the method we use is similar to BPEL4SWS[6 ] , using SAWSDL [ 7 ] descriptions for abstract services , but lies in a specific development we use as proof of concept and we need to enrich . The scenarios are created by an authoring tool taking semantics into account to perform transformation towards regular BPEL . tested
2.2 Implementation and tests The portal was implemented on a single desktop computer ( 3Ghz , 3 GB memory ) in J2EE using JBoss Portal . It uses any BPEL compliant orchestration engine ( we the portal with Orchestra and Active BPEL ) . Jena Framework is used to provide programmatic environment for RDF and OWL . Different underlying repositories can be used since modules use an abstraction layer ( using Jena framework and SPARQL ) . The portal was tested with two different repositories in backend : Oracle RDF and Derby . With the first one , some reasoning features are directly included at the repository level but for the second one , reasoning is done with Jena .
WWW 2009 MADRID!Poster Sessions : Thursday , April 23 , 20091138
