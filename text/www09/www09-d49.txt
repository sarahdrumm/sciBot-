General Auction Mechanism for Search Advertising
Gagan Aggarwal
Google , Inc .
1600 Amphitheatre Pkwy Mountain View , CA , 94043 . gagana@google.com
∗
Dávid Pál
David R . Cheriton School of
Computer Science
University of Waterloo Waterloo , ON , Canada dpal@csuwaterlooca
ABSTRACT In sponsored search , a number of advertising slots is available on a search results page , and have to be allocated among a set of advertisers competing to display an ad on the page . This gives rise to a bipartite matching market that is typically cleared by the way of an automated auction . Several auction mechanisms have been proposed , with variants of the Generalized Second Price ( GSP ) being widely used in practice .
There is a rich body of work on bipartite matching markets that builds upon the stable marriage model of Gale and Shapley and the assignment model of Shapley and Shubik . This line of research offers deep insights into the structure of stable outcomes in such markets and their incentive properties .
In this paper , we model advertising auctions in terms of an assignment model with linear utilities , extended with bidder and item specific maximum and minimum prices . Auction mechanisms like the commonly used GSP or the well known Vickrey Clarke Groves ( VCG ) can be interpreted as simply computing a bidder optimal stable matching in this model , for a suitably defined set of bidder preferences , but our model includes much richer bidders and preferences . We prove that in our model the existence of a stable matching is guaranteed , and under a non degeneracy assumption a bidder optimal stable matching exists as well . We give an algorithm to find such matching in polynomial time , and use it to design truthful mechanism that generalizes GSP , is truthful for profitmaximizing bidders , correctly implements features like bidder specific minimum prices and position specific bids , and works for rich mixtures of bidders and preferences . Our main technical contributions are the existence of bidder optimal matchings and strategyproofness of the resulting mechanism , and are proved by induction on the progress of the matching algorithm .
Categories and Subject Descriptors F22 [ Theory of Computation ] : Analysis of Algorithms and Problem Complexity—Nonnumerical Algorithms and Problems ; G22 [ Mathematics of Computing ] : Discrete Mathematics—Graph Theory ∗Work done during summer 2007 internship at Google New York .
Copyright is held by the International World Wide Web Conference Committee ( IW3C2 ) . Distribution of these papers is limited to classroom use , and personal use by others . WWW 2009 , April 20–24 , 2009 , Madrid , Spain . ACM 978 1 60558 487 4/09/04 .
S . Muthukrishnan
Google , Inc .
76 Ninth Avenue , 4th Floor New York , NY , 10011 muthu@google.com
Martin Pál Google , Inc .
76 Ninth Avenue , 4th Floor
New York , NY , 10011 mpal@google.com
General Terms Algorithms , Economics , Theory
Keywords Game Theory , Sponsored Search Auctions , Stable Matchings
1 .
INTRODUCTION
Internet advertising is a prime example of a matching market : a number n of advertisers ( bidders ) are competing for a set of k advertising slots ( items ) offered for sale by a content publisher or a search engine . Internet advertising and sponsored search auctions have attracted wide attention in the academic literature , and there are several papers discussing various aspects of pricing ad slots and allocating them to interested advertisers .
Classical matching market models include the stable marriage model of Gale and Shapley [ 15 ] and the assignment model of Shalpley and Shubik [ 25 ] . For these models and many of their extensions , we have a good understanding of the structure of their stable outcomes ( “ equilibria ” ) and their incentive properties . We take advantage of existing body of work on stable matchings and apply it to sponsored search .
We observe that existing auction mechanisms for sponsored search , most notably , variants of Generalized Second Price ( GSP ) and Vickrey Clarke Groves ( VCG ) , merely compute a stable matching in a suitably defined model . We make this model explicit , and propose a new auction mechanism that includes the existing mechanisms as special cases . The model is flexible enough to allow for bidder and position specific minimum and maximum prices , as well as different values for different slots . Much of the existing literature does not address these features ( like minimum prices ) that are important in practice . Beyond that , our model of bidder preferences allows for a wider range of bidder behaviors than just profit maximization ( ie we do not assume that the bidder ’s payoff is quasi linear in payment ) . As an example , a bidder who desires to win the highest slot possible subject to the constraint that his price be at most m ( for some parameter m ) is clearly not maximizing profit , but can be expressed in our model . It is important for us to include such bidders in order to correctly model the variants of GSP auction which have not been previously analyzed ; it also happens that the basic GSP mechanism is truthful for such class of bidders .
Our proposed auction mechanism solicits bidder preferences from each bidder and then simply computes a bidder optimal stable match
WWW 2009 MADRID!Track : Internet Monetization / Session : Sponsored Search241 ing given those preferences . The mechanism is truthful ( and even group strategyproof if money transfers among players are not permitted ) .
On the algorithmic side , we show how to compute the allocation and prices corresponding to a bidder optimal stable matching in time O(nk3 ) , where n is the number of bidders and k is the number of slots to sell . Our algorithm is an extension of the Hungarian algorithm for finding maximum weight matchings in bipartite graphs . The idea of the algorithm is simple , although some attention to detail is required to ensure correctness , and the algorithm has to be made fast enough for search advertising . Our proofs of existence of bidder optimal matchings as well as proof of a key lemma establishing truthfulness of our auction mechanism follow by induction on the execution of the matching algorithm .
2 . RELATED WORK Matching Markets . The marriage model of Gale and Shapley [ 15 ] and the assignment model of Shapley and Shubik [ 25 ] are two standard models in the theory of matching markets .
In the marriage model , a set I of men and a set J of women is given , where each man and woman is endowed with a ranked list of members of the opposite sex . Men and women are to be matched in a one to one fasion . A matching is considered stable if there is no man and a woman who would simultaneously prefer each other to their respective assigned partners . A stable matching is guaranteed to exist , and the deferred acceptance algorithm can be used to find it . The stable matching found by this algorithm is manoptimal , in that every man prefers it to any other stable matching . Moreover when using the deferred acceptance algorithm , no man has an incentive to misreport his true preference order [ 23 ] .
The assignment model [ 25 ] , ( see also [ 22 , 10 ] ) differs in that each player derives a certain value from being matched to each person of the opposite sex , and side payments between partners are allowed . The goal of each player is to maximize his or her payoff which is the sum of partner ’s value and monetary payment ( positive or negative negative ) from the partner . The set of stable outcomes is non empty by a linear programming argument . In fact , each stable outcome corresponds to a maximum weight matching , and player payoffs correpond to dual variables of the maximum matching LP . A man optimal outcome is guaranteed to exist , and its allocation and prices are identical to the VCG mechanism for maximum weight matchings [ 20 , 7 ] .
Many variations and extensions of each model have been studied ; see the monograph [ 24 ] for a nice overview . Payoff functions that are not necessarily linear in the payment were considered by [ 9 , 10 , 5 , 6 ] . Even in such generality , there exists a man optimal stable matching [ 9 ] , and in a man optimal auction mechanism , it is weakly dominant for each bidder to reveal his true utility ( payoff ) function . These results require the utility functions to be continuous , strictly monotone and defined on the whole range ( −∞ , +∞ ) , and therefore are not directly applicable in our setting .
Kelso and Crawford [ 18 ] and others have proposed a many to one variant in which firms may hire multiple workers . Recently , Fujishige and Tamura [ 14 ] proposed a very general many to many model with linear utility functions in which each worker can engage multiple firms , and allow lower and upper bounds to be placed on the range of payments allowed between any pair of players . Under an assumption on the payoff functions called M \ concavity , they give a proof of existence of a stable outcome and give an algorithm to find it .
The model considered in this paper is an assignment model with linear payoffs . It is a special case of the model of Fujishige and Tamura [ 14 ] , in that we assume one to one matching of bidders to items . In addition to non emptiness , we show that the set of stable matchings in our model has a bidder optimal element , and prove that an auction mechanism based on bidder optimal matchings is truthful and present an efficient algorithm . Fujishige and Tamura [ 14 ] show existence of a stable matching in their very general model by running an algorithm somewhat similar to ours , but do not give any results on bidder optimality or truthfulness . Sponsored Search Auctions . Flavors of the Generalized Second Price ( GSP ) auction are the dominant vehicles for selling ads on the internet . In its basic form , GSP solicits a numeric bid from each advertiser , orders them in decreasing order of bids , and assigns slots to the first up to k bidders in this order . Each bidder is required to pay a price equal to the bid of the next bidder in the ordering ( or a minimum price if this is the last bidder ) . In a perclick GSP , each bidder pays only in the event that his ad is clicked on . In a per impression GSP , the advertiser pays each time her ad is displayed .
It has been observed that although it is not truthful for “ profit maximizing ” bidders , the per click GSP mechanism does have a Nash equilibrium ( under some assumptions on the structure of click probabilities across different positions ) that is efficient and its resulting prices are equal to VCG prices ; see [ 12 , 2 ] . A variant of GSP in which the bidder can specify the lowest ( maximum ) acceptable position has been proposed in [ 3 ] , which also has a Nash equilibrium equivalent to a suitably defined VCG auction . EvenDar et al . [ 13 ] show that a Nash equilibrium of GSP exists even if minimum prices are bidder specific , but that equilibrium is no longer related to a naturally defined VCG outcome .
One reason GSP works well in practice is that in most situations , bidders universally agree that higher slots are preferable to lower slots . With increasingly complex web page layouts and increasingly sophisticated advertisers this assumption may become less valid over time . Features like Google ’s Position Preference aim to rectify this by allowing advertisers to only bid for a specified subset ( range ) of positions .
The general class of VCG mechanisms follows from works of Vickrey [ 27 ] , Clarke [ 8 ] and Groves [ 17 ] . For an overview of the VCG mechanism applied to sponsored search , see eg [ 1 , 2 ] . VCG is a very natural mechanism and is truthful for profit maximizing bidders , but it is sufficiently different from GSP and bidders may find it difficult to interpret the prices they are charged .
In section 3 we describe the assignment model with minimum and maximum prices and state the main results . Section 5 gives a description of an algorithm to find a bidder optimal stable matching . Sections 6.1 and 7 give high level overview of the proofs , with the details delegated to Appendix A and B . Appendix 4.1 discusses how current auction mechanisms for sonsored search fit in our model .
3 . ASSIGNMENT MODEL WITH MAXIMUM
AND MINIMUM PRICES
Our model that we call the max value model , consists of the set I = {1 , 2 , . . . , n} of bidders and the set J = {1 , 2 , . . . , k} of items . We use letter i to denote a bidder and letter j to denote an item . Each bidder i has a value vi,j for each slot j how much is that slot worth to her , and a maximum price mi,j she is able and willing to pay for the slot.1 In addition to bidder preferences , the
1To motivate why vi,j and mi,j might be different , consider buying a house whose value to you is higher than the amount of money your bank is willing to lend you . Allowing the bidder to specify both a value and a maximum is also needed to model the GSP auction .
WWW 2009 MADRID!Track : Internet Monetization / Session : Sponsored Search242 A feasible matching does not have to be stable , and a stable matching does not have to be feasible . However , we will be interested in matchings that are both stable and feasible , and in addtion bidder optimal .
DEFINITION 4
( BIDDER OPTIMALITY ) . A stable , feasible match i ≥ ui . ing ( u∗ , p∗ , u∗ ) is bidder optimal if for every stable feasible matching ( u , p , µ ) and every bidder i ∈ I we have u∗ Bidder Preferences . To study strategic behavior of bidders in an auction , we need to model bidder ’s preferences . We assume that each bidder is indifferent among various outcomes as long as her assigned slot ( if any ) and payment is the same . Let us define the utility ( payoff ) of a bidder i who is offered a slot j at price p as follows . If p ≤ mi,j , we set u = vij − p . If p > mi,j , we set u = −1 . This payoff , interpreted as a function of the price , is not continuous at p = mi,j . If the bidder is unmatched ( at zero price ) , her payoff is 0 . Given a choice between slot j1 at price q1 ≤ mi,j1 and slot j2 at price p2 ≤ mi,j2 , the bidder prefers the offer with higher payoff , and is indifferent among offers that have the same payoff . In particular , the bidder prefers to be not matched to being matched to a slot j at price that exceeds her maximum price mij . The bidder is indifferent between being matched with payoff 0 and not being matched .
We call a bidder whose preferences can be described by a vector of maximum prices and values a max value bidder . We point out two classes of bidders that are of interest . For a more detailed discussion of bidder types and auction modeling issues , refer to Section 4 .
A profit maximizing bidder i only cares about the values vij he can gain from each position , and seeks to maximize value of the item received minus payment . For such bidder we can render the maximum price mij ineffective by setting it to vij .
A maximum price bidder is parametrized by a maximum price mi he is willing to pay . He seeks to get the lowest index position whose price is less than or equal to m . 3.1 Our Results
Every auction instance in our model has a stable matching by the result of [ 14 ] . We show that it also has a bidder optimal matching , and to give an algorithm to find it .
THEOREM 5 . If the auction ( v , m , r ) is in a “ general position ” , it has a unique bidder optimal stable matching . This matching can be found in time O(nk3 ) .
We defer the precise definition of general position to Definition 14 . In essence , any auction ( v , m , r ) can be brought into general position by arbitrarily small ( symbolic ) perturbations . In practice this assumption is easily removed by using a consistent tie breaking rule .
Consider the following mechanism for auctioning off k items to n bidders . The auctioneer ( seller ) sets an arbitrary minimum price rij for each bidder item pair . It then solicits vectors of maximum prices mi = ( mi1 , mi2 , . . . , mik ) and values vi = ( vi1 , vi2 , . . . , vik ) from each bidder i . Finally , the auctioneer computes a bidderoptimal stable matching ( u∗ , p∗ , µ∗ ) for the auction instance ( m , v , r ) . It assigns each bidder i the item ( if any ) j = µ∗(i ) and charges him j ( or 0 if µ∗(i ) = ∅ ) . Let us call this mechanism the Stable price p∗ Matching Mechanism . Our second technical contributionis to show that the Stable matching Mechanism is truthful for max value bidders .
THEOREM 6
( TRUTHFULNESS ) . In the Stable Matching Mech anism , it is a ( weakly ) dominant strategy for each bidder i to submit
Figure 1 : Matching is stable whenever for each bidder i ∈ I and each slot j ∈ J the point with coordinates ( pj , ui ) lies outside the gray region . seller may specify for each item j a reserve or minimum price ri,j . For simplicity we assume that the minimum prices are known to the bidders in advance . For each i and each j we assume that ri,j ≥ 0 , vi,j ≥ 0 , mi,j ≤ vi,j . If bidder i is interested in the slot j he specifies mi,j ≥ ri,j . Otherwise , if bidder i has no interest in slot j he specifies negative mi,j . We denote by v , m , r the n × k matrices with entries vi,j , mi,j , ri,j respectively . We refer to the triple ( v , m , r ) as an auction instance or simply auction . Stable Matching . We formalize the notion of a matching in the following definitions .
DEFINITION 1
( MATCHING ) . A matching is a triple ( u , p , µ ) , where u = ( u1 , u2 , . . . , un ) is a non negative utility vector , p = ( p1 , p2 , . . . , pk ) is a non negative price vector , and µ ⊆ I × J is a set of bidder slot pairs such that no slot and no bidder occurs in more than one pair .
If a pair ( i , j ) ∈ µ , we say that bidder i is matched to slot j . We use µ(i ) to denote the slot matched to a bidder i , and µ(j ) to denote to denote the bidder matched to a slot j . Bidders i and slots j that do not belong to any pair in µ are said to be unmatched .
DEFINITION 2
( FEASIBLE MATCHING ) . A matching ( u , p , µ ) is said to be feasible for an auction ( v , m , r ) , whenever for every ( i , j ) ∈ µ , pj ∈ [ ri,j , mi,j ] , ui + pj = vi,j ,
( 1 ) ( 2 ) and for each unmatched bidder i is ui = 0 and for each unmatched slot j is pj = 0 .
DEFINITION 3
( STABLE MATCHING ) . A matching ( u , p , µ ) is stable for an auction ( v , m , r ) whenever for each ( i , j ) ∈ I × J at least one of the following inequalities holds : ui + pj ≥ vi,j , pj ≥ mi,j , ui + ri,j ≥ vi,j .
( 3 ) ( 4 ) ( 5 ) A pair ( i , j ) ∈ I × J which does not satisfy any of the three inequalities is called blocking .
Geometric interpretation of inequalities ( 3 ) , ( 4 ) , ( 5 ) is explained in Figure 1 . Note that if a bidder i is not interested in a slot j , then ( 4 ) is trivially satisfied . vi,jvi,jvi,j−ri,jvi,j−mi,jmi,jri,jui–utilityofbidderipj–priceofslotj(pj,ui)WWW 2009 MADRID!Track : Internet Monetization / Session : Sponsored Search243 her true vectors vi and mi , as long as i ’s preferences can be expressed in the max value model .
4 . MODELING ADVERTISING AUCTIONS In this section , we present examples of auction mechanisms commonly used in sponsored search . We show how to model these mechanisms in our max value model . In the next section we give examples of novel combined mechanisms that can be implemented in our model . Translating between impressions and clicks . Typically , an auction is run to determine the placement of ads every time a results page is rendered ; however , the advertiser only pays when a user actually clicks on the ad . It is straightforward to translate between the pay per impression and the pay per click model , provided that we know the probability ctr that a user will click on the ad : paying pc per click is the same in expectation as paying pi = ctr · pc per impression . In the following , let ctri,j be the probability that a user clicks on ad i if it is displayed in position j ( and that this probability does not vary depending on the set of competing ads shown on the page ) . The click separability assumption says that ctri,j = qi · αj is the product of a quality score qi of the advertiser and a position normalizer αj specific to the position j . Typically the position normalizers are assumed to be decreasing , ie α1 ≥ α2 ≥ ··· ≥ αk . GSP pay per impression . In a Generalized Second Price auction , each advertiser i submits a single number bi as her bid , which is the maximum amount she is willing to pay for displaying her ad . The auctioneer orders bidders in decreasing order of their bids , and assigns the first k advertisers to the k available slots in this order . The i th allocated advertiser pays amount equal to the ( i + 1) st bid for each impression . GSP pay per click . An alternative is to charge the advertiser only in the event of a click on her ad . The bid bi is interpreted as a maximum the advertiser is willing to pay for a click . Again , the advertisers are ordered by their per click bid , and each allocated advertiser pays the next highest bid in the event of a click . In a quality weighted variant , the ads are ordered by the product of their in quality score qi and bid bi ; the i th advertiser pays bi+1 the event of a click . Note that the expected cost per impression ctri,i depends not only on the next highest bid but also on bi+1 the position , as long as the probability ctri,j of clicking on the ad i in position j depends on the position . Thus , there is no direct way to translate a per click bid to a per impression bid , without looking at the competitor ’s bids . The VCG mechanism for profit maximizing bidders . In a variant of the VCG mechanism considered eg in [ 2 ] , each bidder i states her value Vi for a click . The auctioneer derives the expected value of each slot vi,j = Vi · ctri,j for that bidder by using an estimate ctri,j of the probability that the ad i would be clicked on if placed in position j . The auctioneer computes a maximum weight matching in the bipartite graph on bidders and positions with vi,j as edge weights . The maximum weight matching µ∗ gives the final allocation . For pricing , the VCG formula sets the price per impresk∈I\{i} vk,µ0(k ) − vk,µ∗(k ) where µ0 is a maximum weight matching with the set of bidders I \{i} . Note that the per impression price pj can be translated to a per click price by charging bidder i price pj/ctri,j for each click . ( Similar translation can be done for a generally defined user action other than a click , as long as the probability of the action can be estimated . ) sion of slot j = µ∗(i ) to be pj = P qi+1 qi+1 qi qi
For each of the above mechanisms , we define a corresponding type of bidder in the max value model . Max per impression bidder has a target cost per impression bi .
She prefers paying bi or less per impression to any outcome where she pays more than bi . Given that her cost per impression is at most bi , she prefers higher ( with lower index ) position to lower position . Given a fixed position , she prefers paying lower price to higher price . A max per impression bidder i can be translated into the max value model by setting her mi,j = bi for all positions j ∈ J , and setting her value vi,j = M ( k +1−i ) where M is a sufficiently large number ( M > bi is enough ) . Max per click bidder differs from a max per impression bidder in that she is not willing to pay more than bi per click . We translate her per click bid into our framework using predicted click probabilities : set mi,j = bi · ctri,j for i ∈ I and vi,j = M ( k + 1 − i ) where M > bi maxj ctri,j . Profit maximizing bidder seeks the position and payment that maximizes her expected profit ( value from clicks minus payment ) . If we assume that her value per click is Vi , such bidder is modeled by setting vi,j = mi,j = Vi · ctri,j .
We formalize the correspondence between the mechanisms and corresponding bidder types in the following theorem .
THEOREM 7 . The outcome ( allocation and payments ) of a ( 1 ) per impression GSP , ( 2 ) per click GSP , ( 3 ) VCG auction , respectively is a bidder optimal stable matching for a set of ( 1 ) max perimpression bidders , ( 2 ) max per click bidders , ( 3 ) profit maximizing bidders , respectively .
PROOF . Part ( 3 ) of the theorem has first been shown by [ 20 ] . Chapter 7 of [ 24 ] as well as [ 7 ] discuss the relationship of the VCG mechanism for assignments and stable matchings .
We give a proof for part ( 1 ) , per impression GSP . The proof of part ( 2 ) for per click GSP is very similar and is omitted . For simplicity , we assume that n > k and all reserve prices are zero . Let b1 > b2 > ··· > bn be the per impression bids of the bidders . Without loss of generality , the bidders are ordered by decreasing order of their bids . ( By the general position assumption , assume bids are distinct . ) Recall that we encode a max per impression bidder by setting vi,j = M ( k − j + 1 ) and mi,j = bi . The matching produced by the GSP auction is as follows : the matched pairs are µ = {(1 , 1 ) , ( 2 , 2 ) , . . . , ( k , k)} , bidder ’s utilities ui = M ( k − i + 1)− bi+1 for 1 ≤ i ≤ k , ui = 0 for i > k , and prices pi = bi+1 for i = 1 , 2 , . . . , k . It is easy to verify this matching is feasible and stable according to Definitions 2 and 3 .
First we show that any feasible matching in which the assignment is different from µ is not stable . Indeed , such a matching ( u0 , p0 , µ0 ) must have a bidder i ≤ k such that i was not allocated a slot among the first i slots , and a slot j ≤ i that is either unmatched or matched to some bidder i0 > i . From feasibility we have that pj = 0 if slot j is unmatched and pj ≤ bi0 in case it is matched . In either case , pj < bi . Also , since bidder i is matched to some slot j0 > i ( or unmatched ) , we know i ≤ vi,j0 = M ( k − j0 + 1 ) . We now claim that ( i , j ) is a that u0 i ≥ M [ (k−j+1)−(k−j0+1 ) ] ≥ M , blocking pair . Since vi,j−u0 inequalities ( 3 ) and ( 5 ) are violated , and since p0 j < bi , inequality ( 4 ) is violated as well . It is easy to verify that in order to be stable , it must be that pi ≥ bi+1 , otherwise the pair ( i + 1 , i ) would be a blocking pair . Hence the matching with prices pi = bi+1 has the lowest possible prices and hence is bidder optimal . Minimum prices . Some search engines impose a minimum price ri for each ad ( for example , based on perceived quality of the ad ) . In GSP , only bidders whose bid is above the reserve price can participate . The allocation is in decreasing order of bids , and each
Consider any matching with the assignment µ = {(1 , 1 ) , . . . , ( k , k)} .
WWW 2009 MADRID!Track : Internet Monetization / Session : Sponsored Search244 bidder pays the maximum of her reserve price and the next bid . Minimum GSP prices are easily translated to the max value model by setting rij = ri ( if paying per impression ) or rij = ri · ctri,j ( if paying per click ) . Our model allows for separate reserve prices for different slots ( eg higher reserve price for certain premium slots ) that are not easily implemented in the GSP world .
4.1 New Auction mechanisms
Let us give a few examples of new auction mechanisms that are special cases of the max value model . GSP with arbitrary position preferences . Consider an advertiser i who wishes for her ad to appear only in certain slots . For example , [ 3 ] propose a GSP variant in which each bidder has the option to specify a prefix of positions {1 , 2 , . . . , βi} for some βi she is interested in and exclude the remaining slots . Also , tools like Google ’s Position Preference allow the advertiser to specify arbitrary position intervals [ αi , βi ] . We are however not aware of any published work that discusses more sophisticated position preferences . One would imagine that in the world of content advertising where there may be multiple areas designed for ads on a single page , having a richer language in which to express the preferences over slots would be beneficial to the advertiser . Such preferences are readily expressible in the max value model . Combining click and impression bidders in GSP . Since both pay per click and pay per impression models are widely used in practice , it is useful to have a way of combining these two bidding modes . This can be easily done by computing a stable matching for a mixed pool of bidders . The following simpler approach is not appropriate , as it does not have the proper incentive structure . Suppose we allow each bidder i to specify both a maximum price bi , as well as a payment type τi ∈ {I,C} . A naive combined auction orders bidders by decreasing bi . Each advertiser with τi = I is charged the next highest bid bi+1 for showing the ad . Each advertiser with τi = C is charged bi+1 in the event that the user clicks on the ad . Note , this scheme gives advertisers a strong incentive to report τi = C regardless of their true type ( as long as the probability of user clicking is less than 1 ) .
To offset this incentive , the auctioneer may introduce multipliers 0 < qC < 1 and qI = 1 and set the effective bid of each bidder to be beff i = biqτi . In the modified GSP auction , bidders are be sorted by their effective bid . Each bidder i who reports type τi = I is charged beff i+1 for each impression , while each bidder reporting τi = C is charged beff i+1/qC in the event of a click .
For any value of 0 < qC < 1 , there is a simple instance in which some bidder can gain by misreporting her type . Let ctr1 and ctr2 be the probability that an user will click on an ad in position 1 and 2 respectively . Assume this probability is the same for all ads , and that ctr1 > ctr2 . Suppose that the first slot is won by a bidder of type I , the second slot is won by a bidder of type C , and that there is at least one more bidder with positive bid . If qC > ctr2 , the bidder in the second position can lower her overall cost while keeping the same position by reporting type C and keeping the same effective bid . On the other hand , if qC < ctr1 , bidder in the first position can lower her cost by reporting type I , and adjusting her bid so that her effective bid stays the same . Diverse bidders . There are many types of bidders with different goals . Some like to think in terms of a maximum price per click or impression . Some prefer to target only certain positions ( eg top of the page ) for consistency or branding reasons . Others try to maximize their profit and are able to estimate the value of a specific user action . Each bidder may specify her goal in a language familiar to her . We are not aware of any prior research on auction mechanisms for such diverse set of bidders .
5 . ALGORITHM TO COMPUTE A BIDDER
OPTIMAL MATCHING
We now describe algorithm STABLEMATCH that computes a feasible and stable matching for a given auction instance ( v , m , r ) . Later in Section 6 we show that the matching is also bidder optimal , as long as the auction instance is in a general position ( Definition 14 ) .
The STABLEMATCH algorithm is an extension of the well known
Hungarian Method [ 28 , 19 ] for computing a maximum weight matching in a bipartite graph . The Hungarian Method is a primal dual algorithm that starts with an empty matching and repeatedly increases the size of the matching using a maximum weight augmenting path . STABLEMATCH works the same way , except that it is designed to handle events correponding to reaching minimum and maximum prices .
STABLEMATCH starts with an empty matching ( u(0 ) , p(0 ) , µ(0 ) ) which is defined as follows . Utility of each bidder i is u(0 ) i = B , where B is a large enough number , such that B > max{vi,j | ( i , j ) ∈ I×J} . Price of each slot j is p(0 ) j = 0 . There are no matched pairs , ie µ(0 ) = ∅ .
In each iteration , STABLEMATCH finds an augmenting path , and updates the current matching ( u(t ) , p(t ) , µ(t ) ) to the next matching ( u(t+1 ) , p(t+1 ) , µ(t+1) ) . The algorithm stops when no more updates can be made , and outputs the current matching ( u(T ) , p(T ) , µ(T ) ) at the end of the last iteration . We now describe an iteration in more detail . To do so , we introduce the concept of an update graph .
DEFINITION 8
( UPDATE GRAPH ) . Given an auction ( v , m , r ) , the update graph for a matching ( u , p , µ ) is a directed weighted bipartite multigraph with partite sets I and J ∪ {j0} , where j0 is the dummy slot . The update graph consists of five types of edges . For each bidder i and each slot j ∈ J there is if ui + ri,j > vi,j and mi,j > ri,j , vi,j , if ui + mi,j > vi,j and mi,j > ri,j , pj ∈ [ ri,j , mi,j ) ; ( i , j ) ∈ µ ,
• a forward edge from i to j with weight ui + pj − vi,j , if • a backward edge from j to i with weight vi,j − ui − pj , if • a reserve price edge from i to j with weight ui + ri,j − vi,j , • a maximum price edge from i to j with weight ui + mi,j − • a terminal edge from i to j0 with weight ui if ui > 0 . An alternating path in the update graph starts with an unmatched bidder vertex i0 with ui0 > 0 , follows a sequence of forward and backward edges , and ends with a reserve price , maximum price or terminal edge . We place the restriction that all vertices of the alternating path must be distinct , with the possible exception that the last vertex is allowed to appear once again along the path . The weight w(P ) of an alternating path P is the sum of weights of its edges .
Let ( u(t ) , p(t ) , µ(t ) ) be a matching and G(t ) be the corresponding update graph . A single iteration of the STABLEMATCH algorithm consists of the following steps .
1 . If there is no alternating path , stop and output the current matching . Otherwise , let P be an alternating path in G(t ) of minimum weight . Let w(t)(P ) denote its weight , and let
P = ( i0 , j1 , i1 , j2 , i2 , . . . , j‘ , i‘ , j‘+1 ) for some ‘ ≥ 0 .
2 . Let d(t)(i0 , y ) be the length of the shortest path in G(t ) from i0 to any vertex y , using only forward and backward edges . If a vertex y is not reachable from i0 , d(t)(i0 , y ) = ∞ .
WWW 2009 MADRID!Track : Internet Monetization / Session : Sponsored Search245 3 . Compute utility updates for each bidder i ∈ I . The vector u(t+1 ) gives the final utilities for the iteration . u(t+1 ) i
= u(t ) w(t)(P ) − d(t)(i0 , i ) , 0
“ i − max “
” ”
( 6 )
( 7 )
4 . Compute price updates for each slot j ∈ J . p(t+ ) j = p(t ) j + max w(t)(P ) − d(t)(i0 , j ) , 0 j are equal to p(t+ )
The final prices p(t+1 ) with one exception . In case the last edge of P is a reserve price edge , we set the price of slot j‘+1 , the last vertex of P to be p(t+1 ) = max(p(t+ ) , ri‘,j‘+1 ) . j
5 . Update the assignment µ(t ) along the alternating path P to obtain the new assignment µ(t+1 ) .
We have not specified how should the set of assignment edges be updated . Before we do that , let us state two invariants maintained by STABLEMATCH .
( A1 ) The matching ( u(t ) , p(t ) , µ(t ) ) is stable for the auction ( v , m , r ) . ( A2 ) For every matched pair ( i , j ) ∈ µ(t ) , u(t ) satisfy ( 1 ) and p(t ) j i and ( 2 ) .
An important consequence of invariant ( A1 ) is that forward edges have non negative weight . Indeed , it can be easily checked that a forward edge with a negative weight would be blocking pair . Invariant ( A2 ) guarantees that backward edges have zero weight . Similarly , invariant ( A2 ) implies that the weight of every backward edge must be zero . Finally , each reserve price , maximum price and terminal edges has non negative weight by definition .
LEMMA 9 . All edge weights in each update graph G(t ) are non negative .
With non negative edge weights , single source shortest paths can be computed using Dijkstra ’s algorithm in time proportional to the square of the number of vertices reachable from the source . Since no unmatched vertex is reachable from any other vertex , there are at most 2k reachable vertices at any time , thus the shortest alternating path P and distances d(t)(i0 , y ) can be computed in time O(k2 ) .
Finally , let us deal with updating the assignment µ . Since the alternating path alternates between using forward ( ie non matching ) and backward ( ie matching ) edges , a natural move is to remove all the matching edges of P and replace them by non matching edges of P . Care must be taken however to take into account the special nature of the last edge of P as well as the fact that the last vertex of P may be visited twice . We consider three cases :
Case 1 : P ends with a terminal edge , ie j‘+1 is the dummy slot . Flip matching and non matching edges along the whole length of P . Bidder i‘ ends up being unmatched , and for x = 0 , 1 , . . . , ‘−1 , bidder ix will be matched to slot jx+1 .
Case 2 : P ends with a maximum price edge . Consider two sub cases :
( a ) j‘+1 = j‘ . This means that the price bidder i‘ was matched to reached his maximum price . Flip matching an non matching edges along P . This leaves bidder i‘ unmatched , and for x = 0 , 1 , . . . , ‘ − 1 bidder ix is matched with slot ix+1 .
( b ) Otherwise , the maximum price was reached on a non matching edge . Keep the matching unchanged . That is , µ(t+1 ) = µ(t ) .
Case 3 : P ends with a reserve price edge . This is the most com plex case . Consider three subcases :
( a ) Item j‘+1 is unmatched in µ(t ) . This case increases the size of the matching . For x = 0 , 1 , . . . , ‘ , match bidder ix with slot jx+1 .
( b ) Item j‘+1 is matched in µ(t ) and the reserve price ri‘,j‘+1 offered by bidder i‘ does not exceed the current price p(t+ ) j‘+1 of the slots . Keep the matching unchanged , that is , µ(t+1 ) = µ(t ) .
( c ) Item j‘+1 is matched in µ(t ) to some bidder i‘+1 and ri‘,j‘+1 > p(t+ ) j‘+1 . If P is a path , that is , if P does not visit slots ji‘ twice , we simply unmatch bidder i‘+1 , and flip matching and non matching edges of P . ( This keeps the size of the matching the same , as bidder i0 gets matched and bidder i‘+1 unmatched . ) If P visits j‘+1 twice , it must be that j‘+1 = jd for some d . Note that it is not the case that d = ‘ , since this would mean that i‘ was matched to j‘+1 . This is impossible because the reserve price on this edge has been reached just now . This way , the end of P forms a cycle with at least 2 bidders and 2 slots . We flip the matching and non matching edges along the cycle , but leave the rest of P untouched . This leaves bidder ix matched to slot jx+1 , for x = d , d + 1 , . . . , ‘ .
6 . ANALYSIS
We sketch a proof that the STABLEMATCH algorithm from Section 5 computes a bidder optimal stable matching for any auction instance ( v , m , r ) in general position . We do this by establishing several invariants that hold throughout the execution of the STABLEMATCH algorithm .
Besides invariants ( A1 ) and ( A2 ) introduced in Section 5 , we claim three more invariants . ( A3 ) Each unmatched slot has zero price .
( B1 ) if a bidder i is interested in slot j and u(t ) i + mi,j = vi,j , then ( i , j ) 6∈ µ(t ) .
( B2 ) If a bidder i is interested in a slot j and u(t ) i + ri,j = vi,j , then ( i , j ) ∈ µ(t ) or p(t ) j ≥ ri,j .
To prove that all five invariants hold from the beginning to the end of an executoin of STABLEMATCH , we proceed by induction on t . The proof itself is technical and tedious and is available in the full version [ 4 ] . Invariants ( B1 ) and ( B2 ) are needed in the induction step to prove the first three invariants . They rely on the general position assumption .
Invariants ( A1 ) and ( A2 ) are enough to show that the resulting matching is feasible and stable .
LEMMA 10 . The matching ( u(T ) , p(T ) , µ(T ) ) computed by the
STABLEMATCH algorithm is feasible and stable .
PROOF . Stability follows directly from invariant ( A1 ) . Feasibility follows from invariant ( A2 ) and the fact that since there are no alternating paths , it must be that u(T ) i = 0 for every unmatched bidder i .
Running Time . The number of iterations is bounded by O(nk ) in Lemma 11 below ( see proof in Appendix A1 ) Since each iteration can be implemented in time O(k2 ) , this gives us overall running time O(nk3 ) .
WWW 2009 MADRID!Track : Internet Monetization / Session : Sponsored Search246 LEMMA 11 . STABLEMATCH finishes after at most n(2k + 1 ) iterations . 6.1 Bidder Optimality
While the matching returned by STABLEMATCH is always stable and feasible , it may not be bidder optimal . As the following example shows , a bidder optimal matching does not always exist .
EXAMPLE 12 . Consider the case of a single slot and two bidders with identical maximum bids . There are two stable matchings . In each matching , the slot is allocated to one of the bidders at maximum price . Each matching is preferred by one bidder over the other , hence there is no matching preferred by both of them .
This example is degenerate in that the maximum bids of both bidders are the same . However it turns out that except for such degenerate cases , a bidder optimal matching always exists and STABLEMATCH will find it . We make this precise in the following two definitions .
DEFINITION 13
( AUCTION GRAPH ) . The auction graph of an auction ( v , m , r ) is a directed weighted bipartite multigraph with partite sets I and J ∪ {j0} , where j0 is the dummy slot . The auction graph contains five types of edges . For each bidder i and each slot j ∈ J there exist
• a forward edge from i to j with weight −vi,j , • a backward edge from j to i with weight vi,j , • a reserve price edge from i to j with weight ri,j − vi,j , • a maximum price edge from i to j with weight mi,j − vi,j , • a terminal edge from i to j0 with weight 0 .
DEFINITION 14
( GENERAL POSITION ) . An auction ( v , m , r ) is in general position if for every bidder i , no two alternating walks in the auction graph that start at bidder i , follow alternating forward and backward edges and end with a distinct edge that is either a reserve price , maximum price or terminal edge , have the same weight .
Any auction ( v , m , r ) can be brought into general position by a symbolic perturbation . In the algorithm implementation , this can be achieved by breaking ties lexicographically by the identity of the final edge of the walk .
All we need now to prove Theorem 5 is the following lemma , proof of which appears in Appendix A2
LEMMA 15 . Let ( v , m , r ) be an auction in general position , and let ( u0 , p0 , µ0 ) be any feasible stable matching . Then in any for all i ∈ I iteration t of STABLEMATCH , we have that u0 and p0 for all j ∈ J . i ≤ u(t ) j ≥ p(t ) j i
PROOF OF THEOREM 5 . Consider an auction instance ( m , v , r ) in general position . The STABLEMATCH algorithm on this instance outputs a matching u∗ , p∗ , µ∗ that is stable and feasible by Lemma 10 . Applying Lemma 15 to the current matching after the last iteration of the algorithm implies that u∗ , p∗ , µ∗ is weakly preferred to any stable matching by every bidder and hence is bidder optimal . Running time of the algorithm follows from Lemma 11 .
7 .
INCENTIVE COMPATIBILITY
In this section we will prove Theorem 6 . A mechanism based on computing men optimal stable matching has been shown to be truth revealing in several contexts . For the basic stable matching problem without payments , a concise proof can be found in [ 21 ] .
For the case of continuous utilities , a proof was given in [ 9 ] . Our proof for the max value model mimics the overall structure of its predecessors . First , we show that there is no feasible matching in which every single bidder would be better off than in the bidderoptimal matching . ( Note that if an agent or set of agents were to successfully lie about their preferences , the mechanism would still output a matching that is feasible with respect to the true preferences . ) This property is known as weak Pareto optimality of the bidder optimal matching .
LEMMA 16
( PARETO OPTIMALITY ) . Let ( v , m , r ) be an auction in general position and let ( u∗ , p∗ , µ∗ ) be the bidder optimal matching . Then for any matching ( u , p , µ ) that is feasible for ( v , m , r ) , there is at least one bidder i ∈ I such that ui ≤ u∗ i .
Second , we show that every feasible matching is either stable , or has a blocking bidder slot pair that involves a bidder who is not better off in this matching than in the bidder optimal matching . Versions of the following lemma appear in [ 16 , 11 , 24 ] . The original statement in a model without money is attributed to J . S . Hwang .
LEMMA 17
( HWANG’S LEMMA ) . Let ( u , p , µ ) be a matching that is feasible for an auction ( v , m , r ) in general position and let ( u∗ , p∗ , µ∗ ) be the bidder optimal matching for that auction . Let
I + = {i ∈ I | ui > u i } . ∗
If I + is non empty , then there exists a blocking pair ( i , j ) ∈ ( I − I + ) × J .
Proofs of Lemmas 16 and 17 appear in Appendix B . Theorem 6 directly follows from Lemma 17 . In fact , the lemma implies the following stronger statement .
THEOREM 18 . There is no way for a bidder or a coalition of bidders to manipulate their bids in a way such that every bidder in the coalition would strictly benefit from the manipulation .
PROOF . Suppose there is a coalition I + of bidders that can benefit from submitting false bids . Let ( v , m , r ) be an auction that reflects the true preferences of all bidders , and let ( v0 , m0 , r ) be an auction that reflects the falsified bids . Note that v0 i = vi and i = mi except for bidders i ∈ I + . m0 Let ( u , p , µ ) be the bidder optimal stable matching for the auction ( v0 , m0 , r ) . First observe that the matching ( u , p , µ ) must be feasible for the true auction ( v , m , r ) . This is because for each bidder i ∈ I − I + , the feasibility constraints are the same in both auctions . For bidders i ∈ I + , we need to verify that pj ≤ mi,j whenever ( i , j ) ∈ µ . This follows because the true bidder optimal matching ( u∗ , p∗ , µ∗ ) respects maximum prices , and any outcome that respects maximum prices is preferred over an outcome that doesn’t . Since ( u , p , µ ) is feasible , we can apply Lemma 17 and conclude that there is a pair ( i , j ) with i ∈ I − I + that is blocking for the auction ( v , m , r ) .
8 . CONCLUSIONS
We have successfully applied the theory of stable matchings to sponsored search auctions . Several open questions remain .
Fujishige and Tamura [ 14 ] propose a general model in which a worker can engage several firms and vice versa , of which ours is a special case . It would be interesting to see if ( and under what conditions ) worker and firm optimal equilibria exist , and whether our strategyproofness result carries through to this very general model .
WWW 2009 MADRID!Track : Internet Monetization / Session : Sponsored Search247 Our max value model assumes a constant “ exchange rate ” in that each dollar paid by the bidder is perceived as a dollar received by the seller , independent of the identity of the bidder and the item . Suppose the payment is conditioned on some event ( such as a user clicking or making a purchase ) , as is common practice . At a mutually agreed ( say ) cost per click , the total revenue estimated by the seller may not be equal to the total cost estimated by the buyer , if they have different estimates of the probability of a click occurring . This discrepancy suggests that we introduce an exchange rate into equations ( 2 ) and ( 5 ) . In such a model with exchange rates , we do not know if a stable ( let alone bidder optimal ) matching exists , or how to find such matching efficiently .
Existence of bidder optimal matchings in our model has clear implications on the existence of Nash equilibria in ( say ) GSP auctions under various assumptions on bidder valuations / preferences . ( For example , can the result of [ 13 ] be re derived and extended by using guaranteed existence of bidder optimal matchings ? ) Acknowledgments . We would like to thank Hal Varian , Adam Juda and anonymous referees for helpful comments and pointers to literature .
9 . REFERENCES [ 1 ] Gagan Aggarwal . Privacy Protection and Advertising in a Networked World . PhD thesis , Stanford University , 2005 .
[ 2 ] Gagan Aggarwal , Ashish Goel , and Rajeev Motwani .
Truthful auctions for pricing search keywords . In ACM Conf on Electronic commerce , pages 1–7 , 2006 .
[ 3 ] Gagan Aggarwal , S . Muthukrishnan , and Jon Feldman .
Bidding to the top : VCG and equilibria of position based auctions . In WAOA , 2006 .
[ 4 ] Gagan Aggarwal , S . Muthukrishnan , Dávid Pál , and Martin
Pál . General auction mechanism for search advertising . Available from http://arxivorg/abs/08071297
[ 5 ] Ahmet Alkan . Existence and computation of matching equilibria . European Journal of Political Economy , 5(2 3):285–296 , 1989 .
[ 6 ] Ahmet Alkan and David Gale . The core of the matching game . Games and Economic Behavior , 2(3):203–212 , 1990 .
[ 7 ] Sushil Bikhchandani and Joseph M . Ostroy . From the assignment model to combinatorial auctions . In Combinatorial Auctions . MIT Press , 2006 .
[ 8 ] Edward H . Clarke . Multipart pricing of public goods . Public
Choice , 11(1):17–33 , 1971 .
[ 9 ] G . Demange and D . Gale . The strategy structure of two sided matching markets . Econometrica , 53(4):873–888 , 1985 .
[ 10 ] Gabrielle Demange , David Gale , and Marilda Sotomayor .
Multi item auctions . Journal of Political Economy , 94(4):863–872 , 1986 .
[ 11 ] Gabrielle Demange , David Gale , and Marilda Sotomayor . A further note on the stable matching problem . Discrete Applied Mathematics , 16:217–222 , 1987 .
[ 12 ] Benjamin Edelman , Michael Ostrovsky , and Michael
Schwarz . Internet advertising and the generalized second price auction : Selling billions of dollars worth of keywords . American Economic Review , 97(1):242–259 , March 2007 .
[ 13 ] Eyal Even Dar , Jon Feldman , Yishay Mansour , and
S . Muthukrishnan . On the effect of minimum prices on position auctions . In WINE , 2008 .
[ 14 ] Satoru Fujishige and Akihisa Tamura . A two sided discrete concave market with possibly bounded side payments : An approach by discrete convex analysis . Mathematics of Operations Research , 32(1):136–155 , 2007 .
[ 15 ] David Gale and Lloyd S . Shapley . College admissions and the stability of marriage . Am Math Monthly , 69(1):9–15 , 1962 .
[ 16 ] David Gale and Marilda Sotomayor . Some remarks on the stable marriage problem . Discrete Applied Mathematics , 11:223–232 , 1985 .
[ 17 ] Theodore Groves . Incentives in teams . Econometrica ,
41(4):617–631 , 1973 .
[ 18 ] J . A . S . Kelso and V . P . Crawford . Job matching , coalition formation , and gross substitutes . Econometrica , 50:1483–1504 , 1982 .
[ 19 ] Harold W . Kuhn . The Hungarian method for the assignment problem . Naval Logistics Quarterly , 2:83–97 , 1955 .
[ 20 ] Herman B . Leonard . Elicitation of honest preferences for the assignment of individuals to positions . Journal of Political Economy , 91:461–479 , 1983 .
[ 21 ] Noam Nisan , Tim Roughgarden , Eva Tardos , and Vijay V .
Vazirani , editors . Algorithmic Game Theory . Cambridge University Press , Septermber 2007 .
[ 22 ] M . Quinzii . Core and competitive equilibria with indivisibilities . International Journal of Game Theory , 13(1):41–60 , 1984 .
[ 23 ] Alvin E . Roth . The economics of matching : Stability and incentives . Mathematics of Operations Research , 7(4):617–628 , 1982 .
[ 24 ] Alvin E . Roth and Marilda A . Oliveira Sotomayor . Two sided matching : A study in game theoretic modeling and analysis . Cambridge University Press , 1990 .
[ 25 ] Lloyd S . Shapley and Martin Shubik . The assignment game i : The core . Intl J . of Game Theory , 1(1):111–130 , 1971 . [ 26 ] Hal R . Varian . Position auctions . International Journal of
Industrial Organization , 2006 .
[ 27 ] William Vickrey . Counterspeculation , auctions , and competitive sealed tenders . J.of Finance , 16(1):8–37 , 1961 .
[ 28 ] Wikipedia . http://enwikipediaorg/wiki/Hungarian_algorithm
APPENDIX A . ANALYSIS OF STABLEMATCH
Proofs of statements from Section 61
A.1 Proof of Lemma 11
PROOF OF LEMMA 11 . Consider the number of edges in the update graph . Initially , the graph G(0 ) has at most nk reserveprice , nk maximum price and n terminal edges . We claim that in each iteration , the number of edges in the update graph is reduced by one . Since STABLEMATCH must stop when there are no more edges left , this bounds the total number of iterations .
Consider an iteration t of STABLEMATCH . We claim that in the alternating path P = ( i0 , j1 , i1 , . . . , j‘ , i‘ , j‘+1 ) , the last edge ( i , j ) = ( i‘ , j‘+1 ) will not appear in the update graph G(t+1 ) . This is easily verified by considering three cases :
Case 1 : If ( i , j ) is a terminal edge , then w(t)(P ) = d(t)(i0 , i ) + u(t ) and hence u(t+1 ) i
= u(t ) i − ( w(t)(P ) − d(t)(i0 , i ) ) = 0 . i
Case 2 : If ( i , j ) is a maximum price edge , then w(t)(P ) = d(t)(i0 , i)+ i − i + mi,j − vi,j ) and hence u(t+1 ) ( u(t ) ( w(t)(P ) − d(t)(i0 , i ) ) + mi,j = vi,j .
+ mi,j = u(t ) i
WWW 2009 MADRID!Track : Internet Monetization / Session : Sponsored Search248 Case 3 : If ( i , j ) is a reserve price edge , then w(t)(P ) = d(t)(i0 , i ) + i −(w(t)(P )− i +ri,j−vi,j ) and hence u(t+1 )
+ri,j = u(t ) i
( u(t ) d(t)(i0 , i ) ) + ri,j = vi,j .
The utilities never increase and the prices never decrease throughout the algorithm , thus the edge ( i‘ , j‘+1 ) does not appear in any update graph G(t0 ) for any t0 > t . A.2 Proof of Lemma 15 Without loss of generality assume that ( u , p , µ ) is such that there does not exist a pair ( i , j ) ∈ µ such that pj = mi,j . If there was such a pair , then we can decrease prices of some of the items and increase utilities of some of the bidders such that pj < mi,j . This is possible because of the general position assumption . See full version of the paper . trivially holds true , since by feasibility of ( u0 , p0 , µ0 ) , p0 all j ∈ J and u0 that u(t ) ≥ u0 and p(t ) ≤ p0 . We first prove that
We prove Lemma 15 by induction on t . The base case , t = 0 , j ≥ 0 for i ≤ B for all i ∈ I . In the inductive case , assume
PROPOSITION 19 . u(t+1 ) ≥ u0 and p(t+ ) ≤ p0 . We look “ continuously ” at updates ( 6 ) and ( 7 ) . For that purpose we define for each i ∈ I a continuous non increasing function ui(x ) , ui(x ) = u(t ) i − max x − d(t)(i0 , i ) , 0
,
By feasibility of ( u0 , p0 , µ0 ) , p0 and thus bidder i is matched in µ0 to some slot j ∈ J . j ∈ [ ri,j , mi,j ] . By the assumption made at the beginning pj 6= mi,j . Therefore in G(t ) there is a forward edge from i to j and thus d(t)(i0 , j ) ≤ d(t)(i0 , i ) + ( u(t ) i + p(t ) j − vi,j ) .
Clearly , since i ∈ I0 , ui(y ) = u(t ) i − ( y − d(t)(i0 , i ) ) .
By the price update rule pj(y ) ≥ p(t ) j + ( y − d(t)(i0 , j ) ) .
We add ( 9 ) to ( 10 ) and subtract from that ( 8 ) and we obtain
( 8 )
( 9 )
( 10 ) pj(y ) ≥ vi,j − ui(y ) . Hence , since by feasibility of ( u0 , p0 , µ0 ) , u0 pj(y ) ≥ vi,j − ui(y ) = vi,j − u 0 0 i = p j . Recalling that p(y ) ≤ p0 we see that pj(y ) = p0 j . i + p0 j = vi,j , we have
Subtracting ( 9 ) from ( 8 ) and cancelling common terms we have d(t)(i0 , j ) ≤ y + ( ui(y ) + p(t ) j − vi,j ) .
We upper bound the right side of the inequality using that ui(y ) = u0 i , p(t ) j ≤ pj(y ) and u0 j = vi,j and we have i + p0 and for each j ∈ J a continuous non decreasing function pj(x ) , d(t)(i0 , j ) ≤ y + ( u j − vi,j ) = y . 0 0 i + p pj(x ) = p(t ) j + max x − d(t)(i0 , j ) , 0
.
Thus j ∈ J0 .
“ “
” ”
Clearly , u(t+1 ) = u(w(t)(P ) ) and p(t+ ) = p(w(t)(P ) ) . To prove that u(t+1 ) ≥ u0 and p(t+ ) ≤ p0 , suppose by contraction that there exists y ∈ [ 0 , w(t)(P ) ] such that either ui(y ) < u0 i for some i ∈ I j for some j ∈ J . We choose infimal such y . Clearly , or pj(y ) > p0 u(y ) ≥ u0 , p(y ) ≤ p0 and y < w(t)(P ) . Consider the sets = {i ∈ I | ui(y ) = u i and d(t)(i0 , i ) ≤ y} , 0 = {i ∈ J | pj(y ) = p j and d(t)(i0 , j ) ≤ y} . 0
J
I
0
0
CLAIM 20 . Each slot j ∈ J0 is matched in µ(t ) to some i ∈ I0 . PROOF . Let j ∈ J0 . If j was unmatched , then either d(t)(i0 , j ) = w(t)(P ) or d(t)(i0 , j ) = ∞ ; however both options contradict the choice of y and that j ∈ J0 . Thus j is matched to some i ∈ I , hence in G(t ) there is a backward edge from j to i and thus d(t)(i0 , i ) = d(t)(i0 , j ) and therefore ui(y ) + pj(y ) = vi,j . Furj ∈ [ ri,j , mi,j ) . Conther , invariants ( A2 ) and ( B1 ) imply that p(t ) sequently , there is a maximum price edge from i to j , w(t)(P ) ≤ d(t)(i0 , i ) + ( u(t ) j = j ∈ [ ri,j , mi,j ) , p(t ) +(w(t)(P )−d(t)(i0 , j ) ) ≤ mi,j . Therefore p0 j ≥ vi,j and hence ui(y ) = and since ( u0 , p0 , µ0 ) is stable , u0 vi,j − pj(y ) = vi,j − p0 i . On the other hand , by infimality of y , ui(y ) ≥ u0 i + mi,j − vi,j ) , and hence p0 j = pj(y ) < p(t+ ) i . Thus i ∈ I0 . j ≤ u0 i + p0
CLAIM 21 . Each bidder i ∈ I0 is matched in µ0 to some j ∈
J0 .
PROOF . Since in G(t ) there is a terminal edge from i to the dummy slot , w(t)(P ) ≤ d(t)(i0 , i ) + u(t ) i − ( y − d(t)(i0 , i ) )
0 i = ui(y ) = u(t ) u i
. Hence
> u(t ) i − ( w(t)(P ) − d(t)(i0 , i ) ) ≥ 0 ,
From the two claims it follows that |I0| = |J|0 and that µ(t ) bijectively matches I0 with J0 . In particular i0 6∈ I0 . Choose j ∈ J0 with smallest d(t)(i0 , j ) . Consider the minimum weight path in G(t ) from i0 to j which uses only forward and backward edges . The vertex on the path just before j is a bidder i 6∈ I0 . Clearly , y ≥ d(t)(i0 , j ) > d(t)(i0 , i ) and hence ui(y ) < u0 i . There is a j ∈ [ ri,j , mi,j ) and also ui(y ) + forward edge from i to j , thus p(t ) pj(y ) = vi,j , and hence ( * ) u0 i + p0 j < vi,j . Since in G(t ) there is a maximum price edge from i to j , p0 j = pj(y ) < mi,j , which together with ( * ) contradicts stability of ( u0 , p0 , µ0 ) . This proves Proposition 19 . To prove Lemma 15 it remains to show that p(t+1 ) ≤ p0 . This amounts to show that if ( u(t+1 ) , p(t+1 ) , µ(t+1 ) ) was obtained from ( u(t ) , p(t ) , µ(t ) ) by updating along an alternating path P of which the last edge , ( i , j ) = ( i‘ , jl+1 ) , was a reserve price edge and p(t+ ) j < ri,j , then ri,j ≤ p 0 ( 11 ) j . j ≥ mi,j . In Since ( u0 , p0 , µ0 ) is stable , either u0 i + p0 = vi,j − ri,j , Propoformer case , ( 11 ) follows from that u(t+1 ) sition 19 and that ( u0 , p0 , µ0 ) is stable . In latter case , ( 11 ) follows since the presence of the reserve price edge from i to j guarantees that mi,j > ri,j . j ≥ vi,j or p0 i
B .
INCENTIVE COMPATIBILITY PROOFS PROOF OF LEMMA 16 . For the sake of contradiction , suppose that there is a feasible matching ( u , p , µ ) such that ui > u∗ i for all i ∈ I . Note that every bidder must be matched in µ , since ui > u∗ For each bidder i ∈ I , consider the slot j = µ(i ) matched to bidder i in the matching µ . Since the pair ( i , j ) is not blocking for i ≥ 0 .
WWW 2009 MADRID!Track : Internet Monetization / Session : Sponsored Search249 0 r
∗ i,j i )´ . i,j = vi,j and m0 i,j = max`ri,j , max vi0,j − ri0,j} . For every i ∈ I + and j ∈ J + , we set i0∈I0 min(mi0,j , vi0,j − u i,j = mi,j except that if mi,j ≤ r0 We also set v0 i,j = −1 . It is not hard to show that if v , m , r is in general we set m0 position , then so is ( v0 , m0 , r0 ) , using the fact that each utility u∗ i was at some point set to be equal to the length of some alternating walk in the auction graph . Now consider the matchings µ and µ∗ restricted to the sets I + , J + . If the restricted µ is not feasible for ( v0 , m0 , r0 ) , it must be because pj < ri,j for some position j = µ(i ) . This can only happen if r0 i0 ) for some bidder i0 ∈ I \ I + . On the other hand , it is easy to check that the restricted matching µ∗ is feasible , stable and bidder optimal for the auction ( v0 , m0 , r0 ) . If the restricted µ is feasible for this auction , by Lemma 16 , there is a bidder i ∈ I∗ such that ui ≤ u∗ i . This however contradicts the definition of the set I + . i,j = max(mi0,j , vi0,j − u∗ i,j > ri,j and hence r0
C . LATTICE PROPERTY
The set of feasible and stable outcomes in both the stable marriage and the assignment model has the algebraic structure of a lattice ( see eg Chapter 3 in [ 24] ) . This result can be carried over to our assignment model with minimum and maximum prices as well . The following lemma can be proved using ideas and techniques from Section A . The proof is relatively long and tedious and is omitted .
LEMMA 22
( LATTICE PROPERTY ) . Let ( v , m , r ) be an auction in general position . If ( uA , pA , µA ) and ( uB , pB , µB ) are two feasible stable matchings for ( v , m , r ) , then there exists a feasible stable matching ( uC , pC , µC ) for ( v , m , r ) such that i = max{uA uC j = min{pA pC i } i , uB j } j , pB for each i ∈ I , for each j ∈ J , and there exists a feasible stable matching ( uD , pD , µD ) for ( v , m , r ) such that i = min{uA uD j = max{pA pD i } i , uB j } j , pB for each i ∈ I , for each j ∈ J .
The set M of feasible and stable matchings for an auction ( v , m , r ) is non empty by 10 . If the auction instance is in general position we know that M is also a lattice by Lemma 22 . It is not hard to see that M is closed and bounded , and hence must have a minimum and maximum element . This gives us an alternate way of proving that a bidder optimal stable matching exists . the bidder optimal matching ( u∗ , p∗ , µ∗ ) , it must be that p∗ j > pj . In particular , the existence of µ implies that there must be n slots with positive prices in the bidder optimal matching µ∗ , and that these slots are matched in µ as well .
If a slot ever becomes matched to a bidder in the STABLEMATCH algorithm , it will never become unmatched . Thus before the last iteration , at most n − 1 slots have positive prices . Suppose the last iteration , iteration T − 1 , increases the size of the matching to n , and let j be the last slot to be matched . Let i0 = µ(j ) be the bidder matched to j in the hypothetical matching µ .
Let P be the shortest alternating path found in Step 1 of the last iteration of STABLEMATCH . Recall that the first vertex of the path is denoted by i0 and w(T−1)(P ) denotes its length . If P ends with the reserve price edge ( i , j ) , it must be that i and j are matched in both µ and µ∗ at the same reserve price , contradicting our assumption that ui > u∗ i . On the other hand , if P does not end with the reserve price edge ( i , j ) , we show that there is a shorter alternating path P 0 that does include this edge , which again leads to a contradiction . From Step i = w(T−1)(P ) − 3 of the last iteration we have u(T−1 ) d(T−1)(i0 , i ) . Let s be the length of the reserve price edge ( i , j ) ; + ri,j − vi,j . Now conrecall from Definition 8 that s = u(T−1 ) sider the alternating path P 0 that consists of the shortest path from i0 to i followed by the reserve price ( i , j ) edge . We have w(T−1)(P )− w(T−1)(P Since u∗ P 0 must be a shorter alternating path than P .
∗ i . i < ui ≤ vi,j − ri,j , this difference is positive and hence i − s = vi,j − ri,j − u ∗
) = u(T−1 )
− u∗
− u
0 i i i
PROOF OF LEMMA 17 . Without loss of generality assume that ( u , p , µ ) is such that there does not exist a pair ( i , j ) 6∈ µ such that ui + ri,j = vi,j . If there was such a pair , then we can decrease prices of some of the items and increase utilities of some of the bidders such that ui + ri,j > vi,j . ( This is possible because of the general position assumption . See full version of the paper . ) The set I + would only grow by such operation . Let us denote by µ(I + ) , µ∗(I + ) the set of slots matched to bidders in I + in matching respectively µ , µ∗ . We consider two cases : Case 1 : µ(I + ) 6= µ∗(I + ) . For any i ∈ I + we have ui > u∗ i ≥ 0 and hence each bidder in I + is matched in µ to some slot . There exists a slot j ∈ µ(I + ) , j 6∈ µ∗(I + ) . Let i = µ(j ) . Since i ∈ I + , ui > u∗ i . We argue that pj < p∗ j : By the general position assumption j 6= mi,j , and hence by feasibility of ( u , p , µ ) , pj ∈ [ ri,j , mi,j ) p∗ j ≥ and ui + pj = vi,j . Hence u∗ i > vi,j − ui = pj . vi,j − u∗ In particular , j is matched in µ∗ to some i0 , and by the choice of j ∈ j , i0 6∈ I + . Thus ui0 ≤ u∗ i0 . By feasibility of ( u∗ , p∗ , µ∗ ) , p∗ i0 + p∗ [ ri0,j , mi0,j ] and u∗ j = vi0,j . By the assumption on ( u , p , µ ) that we made at the beginning of the proof , ui0 6= vi0,j − ri0,j . Now , it is not hard to see that ( i0 , j ) is blocking pair for µ . This j ≥ vi,j . Therefore p∗ i + p∗ is because j ≤ mi,j , ∗ pj < p i0 = vi0,j − p ui0 ≤ u j ≤ vi0,j − ri,j and ∗ ∗ ui0 6= vi0,j − ri0,j , ui0 + pj < u
∗ ∗ j = vi0,j . i0 + p stability of ( u∗ , p∗ , µ∗ ) it follows that pj < p∗ i for i ∈ I + , by Case 2 : µ(I + ) = µ∗(I + ) = J + . Since ui > u∗ Consider a reduced auction ( v0 , m0 , r0 ) on the set of bidders I + and set of slots J + . We set the reserve prices to reflect the influence of bidders in I \ I + . More specifically , let I0 = {i ∈ I \ I + | u∗ i0 ≥ j for j ∈ J + .
WWW 2009 MADRID!Track : Internet Monetization / Session : Sponsored Search250
