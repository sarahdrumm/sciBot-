PVA : A Self Adaptive Personal View Agent System Chien Chin Chen
Meng Chang Chen
Yeali Sun
Institute of Information Science
Institute of Information Science
Department of Information
Management , National Taiwan
University , Taipei , Taiwan +886 2 23630231 ext.2870 sunny@imntuedutw
Academia Sinica
Nankang Taipei , Taiwan
+886 2 27883799 ext.1614 paton@iissinicaedutw
Academia Sinica
Nankang Taipei , Taiwan
+886 2 27883799 ext.1802 mcc@iissinicaedutw
ABSTRACT In this paper , we present PVA , an adaptive personal view information agent system to track , learn and manage , user ’s interests in Internet documents . When user ’s interests change , PVA , in not only the contents , but also in the structure of user profile , is modified to adapt to the changes . Experimental results show that modulating the structure of user profile does increase the accuracy of personalization systems .
Categories and Subject Descriptors Information Systems – Information Storage and Retrieval – Systems and Software ( H34 ) : User profiles and alert services ; Information Systems – Information Interfaces and Presentation – User Interfaces ( H52 ) ;
General Terms Algorithms , Management , Design , Experimentation , Theory .
Keywords WWW , Personalization , Personal view , Machine learning .
1 . INTRODUCTION Nowadays , the explosive growth of Web documents makes an information search a time consuming job . Even though the current keyword based search technologies could alleviate this pain , the ambiguous queries debase their performances . To tackle this problem , much research is involved on the personalization of WWW access . The personalization systems learn user profiles[5 ] and assist people when they are surfing the web . In this paper , we present a system , Personal View Agent that can automatically organize a personal view by learning the user ’s interests , and adapt the personal view to the user ’s changing interests . There are three important features in PVA : ( 1 ) PVA learns user profile without intervening in the user ’s browsing , such as relevance feedback[13 ] . Although relevance feedback , which asks users to manually rate pages may make sense , it is troublesome to users and seldom done . In PVA , we use a proxy to collect the training data without user intervention . ( 2 ) A user may have interests in multiple domains . PVA , like the previous works[2][14 ] , models each domain in vector space model[13 ] .
( PVA ) ,
1
Furthermore , these vectors are organized into a hierarchical structure ( called personal view ) . Each node in personal view represents a realistic topic . ( 3 ) PVA can adapt to changes in the user ’s interests over time . Since user ’s interests often change , personalization systems need to have a mechanism to adapt to the changes . While many previous works[2][4][14 ] are only concerned with the contents of user profile , PVA also modulates the structure of personal view to adapt to changes in user ’s interests . a domain of user preferences . Alipes[14 ]
2 . RELATED WORK Most personalization systems need training data to build the initial user profile . Two critical issues should be considered in designing personalization systems . One is modeling user ’s interests in multiple domains , and the other is incrementally updating user profiles . In general , a user has interests in multiple domains ( eg baseball , politics ) . In order to closely track user ’s interests , personalization systems have to maintain multiple domains of user ’s interests . WebACE[3 ] uses the clustering algorithm to partition a user ’s access log so that each cluster indicates and WebMate[2 ] exploit the vector space model for each domain of user ’s interests represented , as a keyword vector . Naïve Bayes[9 ] is used in News Dude[1 ] to calculate the probability of a document belonging to a domain of the user ’s interests . Although the multiple domains of user ’s these systems can represent interests , the user profile are orthogonal . Pretschner et al[12 ] proposes a novel model of user profile in which the user profile is organized as a hierarchical structure , rather than a set of independent domains . Thus , there is a general to specific relationship in the user profile . Although the representation of this user profile is innovative , Pretschner ’s work does not make use of the characteristics of hierarchical structure ( eg to split or to merge nodes in the user profile ) to capture the dynamics of user ’s changing interests . the domains of
Since user ’s interests often change , it is important to be able to incrementally adjust user profile . The previous work[1 ] , [ 2 ] , [ 4 ] , and [ 14 ] utilize relevance feedback to update the user profile . Although relevance feedback is effective , users are overloaded . [ 10 ] and [ 3 ] utilize a proxy to obtain users’ feedbacks implicitly . Techniques , such as page browsing time and page view frequency , are used to measure preference for pages . In the discussion of changes in user ’s interests , [ 1 ] and [ 14 ] present two types of the user ’s interests . One is the short term interest and the other is the long term interest . The short term interest is usually caused by a hot news event and quickly disappears . Generally , the long term interest often reflects a user ’s real interest .
Although each system has its own way to update user profile , they are only concerned with the contents of user profile . The experience from user ’s short term interest indicates that not only the contents of the user profile , but also the life cycle of each concepts , should be considered . In PVA , we organize user ’s interests in a hierarchical structure and apply the theory of artificial life to adjust the structure of user profile . For more information about personalization system , [ 11 ] provides a detailed survey of existing systems and approaches in recent years . the content of user ’s
3 . USER PROFILE REPRESENTATION The user profile of PVA , called personal view , is a category hierarchy whereby each category represents a knowledge domain of user ’s interests . The general to specific property of the personal view enhances the semantics of user profile and is much closer to a human conception . Each category in personal view is described through a keyword vector Vi and an energy value Ei . While Vi , containing of keywords and their corresponding weights , describes the favorableness of a category . Ei , like the endogenous fitness of artificial life agent[8 ] , controls the life span of a category in personal view . The energy increases when a user is interested in the web pages of a category , and it decreases for a constant value over a period of time . Like feeding in the natural world , categories that have high energy value would generate sub categories to describe user ’s interests at a certain detailed level . Relatively , categories of less interest will become abstracted gradually and finally die out . Based on the energy values of the categories , the structure of personal view can be modulated as user ’s interests change . interests , Ei indicates
To build a personal view , user ’s interests have to be tracked and categorized . We adopt the classification method based on a predefined category hierarchy , called world view , as the superset of the category hierarchy of personal view . PVA consults world view as the reference and extracts interesting categories to build its personal view . In this study , our previous studies , ACIRD[6][7 ] , are selected as the world view .
4 . SYSTEM ARCHITECTURE PVA is constituted of three major components : proxy , personal view constructor ( PVC ) , and personal view maintainer ( PVM ) . The following sub sections provide details of each component . interest
4.1 Proxy Besides relaying user ’s browsing requests , a major function of the proxy is to track user preferences . Periodically ( eg every day ) , the proxy analyzes the activities of the previous period and sends pages of to PVC . Pretschner ’s article[12 ] describes visiting time duration of a page as a good measurement of preference . In his experiments , a group of 16 users were monitored for 26 days . During that period , the users jointly surfed 7664 documents . The results indicate that visits to 20 % of the pages are less than 5 seconds and the mean time of browsing a page is 54.49 seconds . Hence , in our study , the pages , whose visiting time is longer than a preset threshold ( eg , 2 minutes ) , are sent to PVC to generate and update user profile .
4.2 Personal View Constructor Personal view constructor organizes pages of interest to user in a top down manner . At first , pages are placed in abstract categories .
If a user continues to visit these categories , they will be split into detailed sub categories . On the contrary , categories not of interest will be merged into abstract categories . As personal view employs the vector space model , the Web page is parsed in a keyword vector . For each term ti in a page p , we use the following formula to calculate its weight , Wi,p , : piW =
, freq
, pi freq
{
MAX j
} , pj
Where freqi,p is the term frequency of a term i in a page p , and Wi,p is normalized to [ 0,1 ] .
From [ 7 ] , it is reported that the pure term frequency keyword weighting function , as used in this study , performs better than the traditional TF*IDF weighting function in a hierarchical category learning system . Since IDF ( Inverted Document Frequency ) is designed to enhance the discriminating capability of high frequency terms among categories , the TF*IDF scheme is not effective in this hierarchical learning model . of
“ NBA ”
Then the parsed keyword vector is sent to an automatic classifier to find the categories that the page belongs to . Each obtained category represents a classification path that is a path from the root to the assigned category in the world view . For example , a Web page of professional basketball team is classified to the of category the “ /Sport/Basketball/NBA/ ” . To insert in personal view , first we check if the category exists in personal view . If the category exists , we insert the page in the category directly . If the category does not exist , the page is inserted in the non root closest ancestor in personal view . If no non root ancestor exists , the top category of the classification path is created in personal view and subsequently the page is inserted in that category . classification the page of interest path and
After pages are inserted in personal view , the keyword vectors and the energy values of each node of personal view are updated . The keyword vector of category ci in personal view is updated as follows :
= iV pV
∑ ∈ new iPp new iP
*α+ iV
Where Pnew i is the set of the newly inserted pages assigned to category ci , the absolute value |Pnew i| is the number of documents in Pnew i , and Vp is the keyword vector of Web page p . The parameter , called aging factor , the contribution of previously inserted documents to categories . The value of is set from 0 to 1 ; hence , older documents have less effect on the representation of category . The following method is used to calculate new energy value of each category : is used to adjust iE
= iE
+
∑ ∈ new iPp cos(
, pViV
)
Where Ei is the energy value of category ci , Vi is the keyword vector of category ci , Vp is the keyword vector of the page p that belongs to the category ci , cos(Vi,Vp ) which is the cosine similarity between the two vectors . In other words , the energy value of a category is the sum of similarities between its documents . Defining energy value as the sum of similarities between the
2 newly inserted documents and knowledge of categories is intuitive . A category is essential to a user who is interested in documents of that category , and its energy value also increases as more documents are inserted .
Like many previous studies , the aging mechanism of PVC could update the contents of personal view incrementally . However , adjustment of the contents of categories is not enough . Users may change their interests frequently . For instance , after the final game of MLB , sport fans may shift attention to NBA . To adapt to the change in user ’s interests , we need a mechanism to periodically adjust the structure of personal view .
4.3 Personal View Maintainer Two maintenance operators , split and merge , are used to synchronize personal view with user ’s interests . The following sub sections provide details of these two operators .
431 Split Since PVC organizes personal view from a top down manner , a category in the personal view generally comprises the concepts of multiple sub categories . This situation becomes apparent for the category with high energy value . For instance , the knowledge of category “ Sport ” in personal view for a sport fan user might consist of concepts of its sub categories “ Basketball ” , “ Baseball ” , and “ Tennis ” . When a user has strong interest in one concept , that concept will dominate the knowledge contained in the category , and knowledge of other concepts may fade . To solve this problem , PVM splits a high energy category to generate a more specific category . The following figure shows the algorithm of split . First , each category ’s energy value is checked against a pre defined threshold . If the category ’s energy value is greater than the threshold , is generated in the personal view . Subsequently , the keyword vectors and the energy values of both categories are updated . the sub category with most gain after the split
For each category C in the Personal View
While ( EC > threshold ) cchild = ARGMAXCchild in C{ SplitGain(c,cchild ) } ; Create the category cchild in Personal View ; Update the energy value of c ; Calculate the energy value of cchild ; Calculate the keyword vector of cchild ; Update the keyword vector of c ;
End While ;
End For ;
Figure 1 . The split algorithm of PVM .
We define a function , called split gain , to measure the gain derived from splitting a sub category Cchild from its parent Cparent , in the following manner :
( SplitGain
C parent
,
C child
=
)
CEnt
(
−
) parent
C parent
− child
C parent
CEnt
( parent
− child
) where Cparent child is Cparent excluding Cchild , the function Ent(C ) defined below is the entropy value[9 ] of category C :
CEnt
(
)
−=
∑∈ Cc sub cP ln)(
)( cP
Where Csub is a set of C ’s sub categories , P(c ) is the proportion of documents of category c to all documents in C . When PVC inserts new pages in personal view , its classification information , based on the employed auto classifier , is also stored in two tables . One table keeps the number of documents per category ; and the other records the document frequency[13 ] of each term . Hence the value P(c ) is easily obtained by looking up the tables . Entropy is frequently used to measure the purity of a collection of data . The split gain shows the reduction in entropy after a sub category is split from its parent category . The sub category with the maximal split gain is created and it splits from its parent in the personal view .
After the candidate child category is determined in the high energy parent category , the keyword vectors and energy values of both categories have to be adjusted . The energy values are updated as follows :
E parent
− child
=
E parent
*
C parent
−
C parent
− child child +
C child
E child
=
E parent
*
C child
C parent
− child
+
C child
For the child category , we use the following formula to create its keyword vector :
~ iW , child
= iW
, parent
* idf
, idf −
, child + parent child idf
, child iW
, child
=
~ iW , child ~ { jW MAX , child j
}
The dfi,child and dfi,parent child are document frequencies of term i in the child category and split parent category , respectively . The dfi,child / ( dfi,parent child + dfi,child ) in the above formula promotes terms that are specific to the child category having high weights in the child category .
Since there is information loss in parent category , we have to adjust the weights of terms in parent category . The following formula is used to revise the weights in parent category :
~ iW , parent
= iW
, parent
* idf
, idf
, parent
− parent − child child + idf
, child iW
, parent
=
~ iW , parent ~ { jW MAX , j parent
}
The dfi,parent child / dfi,parent child + dfi.child in the above formula measures the surplus value of a term in parent category after the split . Terms that mainly reside in the child category will lose representation in the parent category .
432 Merge In contrast to the split operation that highlights categories of interest in personal view , the merge operator is the mechanism that removes out of favor categories . Following the idea of A Life agent[8 ] , categories in personal view are charged the energy cost of living . The cost is spent on grabbing food ( ie documents inserted in the personal view ) and generating offspring ( ie splitting new categories ) . Categories with an unfailing support of documents can continuously live ; otherwise , they will become weak and finally die out . In PVA , every category ’s energy value will reduce in a certain value for every period of time . When only
3 a few or no interesting documents are added to a category , its energy value will decline gradually . To keep a personal view on par with user ’s interests and trends , categories with low energy values are removed . Before deleting a low energy category , its knowledge is returned to its parent node . The following figure shows the algorithm that merges the information of low energy categories with their parent .
For each category c in personal view
Ec = Ec ; If Ec <= th then
Update the keyword vector of c ’s parent ; Remove the category c from personal view ;
End If ; End For ;
Figure 2 . Algorithm of decaying and merging categories in personal view .
The algorithm reduces the energy value of each category periodically . The parameter , called decay factor , is used to control the reduction rate . If a category ’s energy value is less than ( or equal to ) a pre defined threshold ( ie th in the algorithm ) , we remove the category from personal view and merge its knowledge with its parent , by using the following formula :
~ , parent iW
= iW
, parent
+
1(* idf idf
,
, child parent
) iW
, parent
=
~ iW , parent { jW MAX
, j parent
}
5 . EXPERIMENTS Two experiments are designed to verify the design concept and to evaluate the performance of PVA . The world view and automatic classifier of PVC are borrowed from an application ( automatic news classification ) of ACIRD . So far , the world view is a 3 level hierarchy that consists of 55 categories and is trained daily with news from three news agencies . 5.1 An example of personal view ’s life cycle This experiment is an observation of personal view over a 21 day period ( from October 1 , 2000 to October 21 , 2000 ) . An expert was requested to use PVA to read news from several news agencies . An average of 14 pages out of 60 pages per day were added to the personal view . Parameters of and were set as 0.95 and 0.5 , respectively . The following figure shows the final structure of personal view , with the expert showing interest in MLB , NBA and politics news . User preferences are shown in different shades , with more interest in darker shades .
Figure 3 . The personal view after 21 days .
Energy
ıĳ
ĭ
ıĳ Į į
ĵ ı
Į Į
Ĳ
Ĳ
į Ĭ 
ĳ
Ĳ
Category
Day
Ĳ
ĳ
Į
Ĳ Ĵ
ĵ Į
ĭ
ĭ
Ĳ 
ĳĮ
ĳ ĭ
Ĭ ĭ ıĳ ĳ ĭ
Ĳ 
Į
Ĳ 
ı ĳ ı
Ĳ 
ĵ
Į ĳ Ĳ
ĵ Ĳ
ı ĳ ı Ĳ
Į Ĳ
ĭ ĭ
ĳĮ Ĳ
ĭĳ ıĳ ĭĬ ĭĳ
Įĵ
Ĭį Ĳ
ĴĲ
ĮĮ
įĮıĳ
ı ĵ
Ĳ ĳ
ĭ
ıĳ
Ĳ
Figure 4 . The life cycle of a personal view .

ı
ĭ
įĮıĳ
Ĳ ĳ
Ĳ
Ĭį Ĳ

Figure 5 . Life cycles of sport related categories .

ı
ĭ

ĭ ĭ
ĳĮ Ĳ
Į ĳ Ĳ
ĵ Ĳ
ı ĳ ı Ĳ
Į Ĳ
ĭĳ ıĳ ĭĬ ĭĳ
Įĵ
ĴĲ
Figure 6 . Life cycles of long term interests .
Figure 4 shows personal view ’s life cycle and Figures 5 to 7 provide a detailed look of each category . Some interesting phenomena can be observed from these figures . In Figure 5 , the category “ Olympics ” had high energy values in the beginning . This is due to the extensive coverage of the Olympic Games by most sport news . However , after the Olympic Games ended on Oct . 2 , energy value of “ Olympics ” gradually went down from Oct . 4 . It is interesting to see that personal view can catch the rise and fall of news events . Another interesting phenomenon appears in
4 the category “ MLB ” on Oct . 8 . Its energy keeps on increasing to finally become the hottest category in the personal view . Oct . 8 was the playoff day of Major League Baseball where this baseball enthusiast ( ie the expert ) would not miss any baseball news . The growth of category “ NBA ” is to that of “ MLB ” . Coincidentally , the creation of the category “ NBA ” in the personal view was tied to the warm up period of NBA . From this diagram , we can see that the split operator can catch the short term events . similar
Figure 6 reveals another kind of user ’s interest . The life cycle of these interests , unlike those of “ MLB ” and “ NBA ” , are very steady . These categories can be considered as user ’s long term interests , and interesting news from these categories are not restricted from a specific time period .
Figure 7 shows some transient categories . Two causes of the situation are : ( 1 ) the misclassification of ACIRD . According to [ 6 ] , Top 1 precision of ACIRD is about 60 % . The misclassification of pages results in the creation of categories irrelevant to user ’s interests . For example , news about traffic accidents are sometimes classified under “ Travel ” category since they usually contain names of tourist spots and terms of transportation . Fortunately , this misclassification does not happen frequently . The energy decay mechanism and merge operator of PVA can quickly remedy this problem by eliminating these categories . ( 2 ) Another cause is called flash event . One of the hottest events on Oct . 13 was that Kao XingJian won the Nobel Prize in Literature . The category “ Reading ” was generated because this topic became interesting news reported by many newspapers . Observations of the personal view ’s life cycle reveal that “ Reading ” is not an important part of user ’s interests . Under the operation of the merge operator , the popularity of “ Reading ” lasted only for a few days .

ı
ĭ
ĮĮ
ı ĵ
ĭ
ıĳ

Figure 7 . Growth of Noise categories .
This experiment shows the effects of split and merge operators . The split operator makes personal view more detailed and specific to user current interests , while the merge operator eliminates noise , which is unavoidable in machine learning , especially in the absence of training data . The merge operator also reduces the interference in user profile .
5.2 Precision and recall of personal view . In this experiment , the traditional IR measurement precision and recall are used to evaluate PVA ’s performance . This experiment was based on the previous example . After a daily training , we randomly selected 100 documents of the same training day , from a testing corpus of 6630 documents with every document in the testing corpus classified manually , and marked as interesting or not interesting . Testing data are classified by calculating the cosine similarity between documents and categories in personal view . If the cosine similarity values are greater than a threshold , we classify the testing data under categories and define the passing data as filtering data . The precision and recall functions are defined below :
Precision
=
D filtered_i nteresting
D filted_int eresting
Recall
=
D filted
D g interestin
Where Dfiltered is a set of documents that passes through filtering , Dfiltered_interesting is a subset of Dfiltered that is of interest to the user , and Dinteresting is a subset of a day ’s testing documents that are of interest to the user .
To examine the benefit of split and merge operators , PVA is compared with two personalization systems , WebMate[2 ] and Pretschner ’s system[12 ] , in which only the contents of user profile adjusts when user ’s interest changes . The two systems are at two extremes because Pretschner ’s system builds a more specific user profile , while WebMate formats a more general one . In contrast to these two systems , PVA constructs a user profile midway in between . All these three systems are trained and tested in the same manner . The following figures show the results of the comparison .
ĮĬį ı ĲĮĭ Į įı Ĳ Įĭ
ĭ Į
Ĳ
ı

ĳ
ı ĳĲ ĭ ı
Figure 8 . The precision of three systems .
ĮĬį ı ĲĮĭ Į ı
5

ĳ
ı ĳĲ ĭ ı
Figure 9 . The recall of three systems . the second international conference on Autonomous Agents , 1998 .
[ 4 ] Keiichiro Hoashi , Kazunori Matsumoto , Naomi
Inoue , Kazuo Hashimoto , “ Document Filtering Method Using NonRelevant Information Profile ” , SIGIR , 2000 .
[ 5 ] Robert R . Korfhage , “ Information Storage and Retrieval ” ,
Wiley Computer Publishing , 1997 .
[ 6 ] Shian Hua Lin , Chi Sheng Shih , Meng Chang Chen , JanMing Ho , Ming Tat Ko , and Yueh Ming Huang , “ Extracting Classification Knowledge of Internet Documents with Mining Term Associations : A semantic Approach ” , Proceedings of the 21st annual international ACM SIGIR conference on Research and development in information retrieval , 1998 .
[ 7 ] Shian Hua Lin , Chi Sheng Shih , Meng Chang Chen , JanMing Ho , Ming Tat Ko , and Yueh Ming Huang , “ ACIRD : Intelligent Internet Documents Organization and Retrieval ” , Technical Report , IIS , Academia Sinica . To appear on IEEE Transactions on Knowledge and Data Engineering .
[ 8 ] Filippo Menczer , Richard K . Belew , Wolfram Willuhn , “ Artificial Life Applied to Adaptive Information Agents ” , AAAI Spring Symposium Series : Information gathering from heterogeneous , distributed environment , AAAI , 1995 .
[ 9 ] Tom M . Mitchell , “ Machine Learning ” , WCB McGraw Hill ,
1997 .
[ 10 ] Dunja Mladenic , “ Machine Learning Used by Personal WebWatcher ” , Proc . Of ACAI 99 Workshop on Machine Learning and Intelligent Agents , 1999 .
[ 11 ] Alexander Pretschner , Susan Gauch , “ Personalization on the Web ” , Technical Report ITTC FY2000 TR 13591 01 , Information and Telecommunication Technology Center ( ITTC ) , The University of Kansas , Lawrence , KS , December , 1999 .
[ 12 ] Alexander Pretschner , Susan Gauch , “ Ontology Based Personalized Search ” , Proc . 11th IEEE Intl . Conf . On Tools with Artificial Intelligence , 1999 .
[ 13 ] Gerard
Salton ,
The Transformation , Analysis , and Retrieval of Information by Computer ” , Addison Wesley , 1989 .
“ Automatic
Processing :
Text
[ 14 ] Dwi H . Widyantoro , Thomas R . Ioerger , John Yen , “ An Adaptive Algorithm for Learning Changes in User Interests ” , Eighth and Knowledge Management ( CIKM’99 ) , 1999 .
International Conference
Information on
It can be observed from Figures 8 and 9 that PVA performed better than the others . We decipher the reason of its success in the following sub sections .
521 In comparison with WebMate : From Figure 8 we can see that the precision of WebMate is as expected while its recall was quite low . The fine precision is due to the size of the user profile . As we mentioned above , WebMate strives to build a more general profile of a user . The small size of the user profile ’s categories probably allows the training data to be correctly classified . Hence , it can maintain accurate precision . However , the lack of a split operator causes the following drawbacks to WebMate ; ( 1 ) A topic in WebMate may comprise a lot of concepts ; eg , the “ Sports ” category may comprise the concepts of MLB , NBA , NFL , etc . This situation may result in a diversified keyword vector where the classification correction rate is reduced . ( 2 ) The contents of a category are dominated by one topic , eg , NBA outshines the other sport sub categories in “ Sport ” category during the basketball season . This situation may result in low recall rate since other sports are excluded from user profile . In PVA , topics of user ’s interests can be specified by using the split operator .
522 In comparison with Pretschner ’s system : Even though the recall of Pretschner ’s system was quite high , its precision was low ( and tended to move downward as time went on ) . The fine recall is due to the large size of its profile . Since Pretshner tries to pinpoint the user ’s interests , it usually constructs a huge profile . The larger the user profile , the more topics of user ’s interests are covered . However , the relatively small number of documents in the training data makes the knowledge of categories inaccurate , which drives the precision rate downward as time goes on . In PVA , this problem can be eliminated by using the merge operator .
By using the split and merge operators , we can take advantages of these two extreme systems , without inheriting their drawbacks .
6 . CONCLUSION In this study , we present a system , PVA , to learn user ’s interests without intervening in the user ’s browsing . Issues of modeling multiple domains of user ’s interests and adapting to changes in user ’s interests can be solved in PVA . Furthermore , we can organize the user profile in a hierarchical category structure , to provide rich semantics to applications like query extension , information filtering and web pages recommendation . The experiments show that two personal view maintainer functions , ( split and merge ) , which adjust to the structure of user profile , improve the performance of personalization system .
7 . REFERENCES [ 1 ] Daniel Billsus , Michael J . Pazzani , “ A Personal News Agent that Talks , Learns and Explains ” , Third International Conference on Autonomous Agents , 1999 .
[ 2 ] Liren Chen , Katia Sycara , “ WebMate : A Personal Agent for the second
Browsing and Searching ” , proceedings of international conference on Autonomous Agents , 1998 .
[ 3 ] Eui Hong Han , Daniel Boley , Maria Gini , Robert Gross , Kyle Hastings , George Karypis , Vipin Kumar , Bamshad Mobasher , Jerome Moore , “ WebACE : A Web Agent for Document Categorization and Exploration ” , proceedings of
6
