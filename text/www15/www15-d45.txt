A Graph Based Recommendation Framework for
Price Comparison Services
Sang Chul Lee Computer Science
Department
Carnegie Mellon University
Pittsburgh , PA , USA sclee12@cscmuedu
Sang Wook Kim∗ Dept . of Electronics and Computer Engineering
Hanyang University
Seoul , Korea wook@hanyangackr
Sunju Park
School of Business Yonsei University
Seoul , Korea boxenju@yonseiackr
ABSTRACT In this paper , we propose a set of recommendation strategies and develop a graph based framework for recommendation in online price comparison services . We verify the superiority of the proposed framework by comparing it with existing methods using real world data .
1 .
INTRODUCTION
Price comparison services are widely used in online shopping . Personalized recommendation would aid the user to find items of his interest in price comparison shopping [ 1 ] . Existing recommendation methods , however , cannot be directly applicable to price comparison services because of the unique characteristics of the services . To solve these problems , we propose three recommendation strategies and develop a recommendation framework based on them . We evaluate the performance of the proposed framework by comparing it to those of existing methods through various experiments . 2 . OUR APPROACH
Existing recommendation systems cannot be directly applicable to price comparison services because of the following three distinct characteristics of price comparison services . First , most price comparison services keep no record of user feedbacks ( such as item ratings ) . Second , different titles are often used for the same or quite similar items in online shopping malls , which makes it difficult to differentiate whether two users have clicked or searched for the same item or different items . Third , since most users use a price comparison service without log in , a price comparison service provider cannot collect enough data about users’ history on clicked or searched items .
To address these problems , we propose three recommen dation strategies in the following . ∗The corresponding author
( 1 ) Utilizing click log data : Since no explicit feedback is available , we use click log as a surrogate of users’ implicit preferences . This is justifiable because a user tends to click on items of his interest .
( 2 ) Grouping similar items as a unit of a user ’s preference : Instead of individual items , we group similar items , which we call an interest field , and use it as a unit of a user ’s preference . Because of the sheer number of distinct items sold online , it is often difficult to find a set of users who have clicked the same item . By using a group of similar items as a unit of a user ’s preference , we have more chance to identify a set of users with similar preferences .
( 3 ) Expanding the unit of a user ’s preference using similar groups : Items in online shopping malls are generally classified into a multi level category hierarchy , and they are searched by keywords . We use these two features , keywords used in search and a category hierarchy , of an interest field to expand the user ’s preference . That is , an interest field is considered to be related to another if they share common keywords or they belong to the same higher level category . Based on the three strategies , we propose a graph based recommendation framework . The graph consists of three types of nodes : users , interest fields , and features . It captures two types of relationships : ( 1 ) between user u and interest field i ( denoted by Li(u ) ) and ( 2 ) between interest field i and its feature f ( denoted by Li(f ) ) .
Figure 1 shows an example graph generated by our framework . In our framework , the lowest level categories are used as interest fields . Higher level categories and search keywords are used as the features of interest fields .
Copyright is held by the author/owner(s ) . WWW 2015 Companion , May 18–22 , 2015 , Florence , Italy . ACM 978 1 4503 3473 0/15/05 . http://dxdoiorg/101145/27409082742768
Figure 1 : An example graph built by our framework .
We experimentally set the weights of links by trial and error1 . We use the number of clicks on an interest field to adjust the weight of links between the interest field node and the user node . That is , Σ∀uLik ( u ) = 1 . We set the weight of 1Due to the page limit , we omit details of how to set the weights of links .
59 Lik ( f ) to be the same normalized value if the link belongs to the same type . We set the weight ratio between two feature nodes ( ie , links from interest fields to category nodes and those to keyword nodes ) to be 2:1 .
We use Random Walk with Restart ( RWR ) to compute a personalized rank of interest fields for the target user [ 2 ] . An element in the restart vector is set as 1 for the node corresponding to the target user ; it is set as 0 otherwise . We select top k ranked interest fields , and recommend the most popular item in each interest field to the user .
3 . EXPERIMENTS
To evaluate the proposed framework , we used anonymized log data crawled from Naver Shopping , one of the biggest price comparison service sites in Korea . The log data consists of 9,997 users and 310,841 items . The proposed framework was compared to user based collaborative filtering ( userCF ) , item based collaborative filtering ( item CF ) , and RWRbased collaborative filtering ( rwr CF ) methods [ 1 , 2 , 3 ] . For evaluation , we measured recall , precision , and coverage of each method .
From the entire log data , we randomly chose 100 users among those who had clicked on items from more than 10 interest fields . We made each method recommend top 10 or 20 interest fields to a user . Table 1 shows the result of accuracy comparison . It is observed that the proposed framework improves over the existing methods up to 129 % of recall and up to 87 % of precision when 10 interest fields are recommended . When 20 interest fields are recommended , our framework improves up to 87 % of recall and up to 48 % of precision .
Table 1 : Accuracy comparisons
Methods our approach user CF item CF rwr CF
Recall , % at 10 23.83 16.16 12.00 10.43 at 20 27.67 21.87 19.06 14.83
Precision , % at 20 at 10 3.70 2.15 2.19 3.15 1.68 2.25 1.98 1.45
The cold start user is a user who has clicked on only a few items . It is difficult to evaluate the accuracy if we use real cold start users because they do not have enough interest fields for training and test sets . Thus , for accuracy comparison with cold start users , we generated cold start users from normal users as follows . We chose 700 users among those who had clicked items from more than 30 interest fields . Then , we randomly pulled interest fields out of the entire set until 5 interest fields were remained . The pulled out interest fields were used as a test set and remaining ones were used as a training set .
Table 2 shows the result of accuracy comparison for coldstart users . It is observed that the proposed framework improves over the existing methods up to 72 % of recall and up to 79 % of precision when 10 interest fields are recommended . When 20 interest fields are recommended , it is observed that ours improves up to 40 % of recall and up to 43 % of precision . Figure 2 shows the result of coverage comparison for coldstart users while increasing the number of interest fields from which the target user had clicked on items . The proposed framework provided all users with recommendation , while the compared existing methods were not able to produce recommendation for up to 35 % of cold start users . All existing methods achieved close to 100 % of the coverage with the
Table 2 : Accuracy comparisons for cold start users
Methods our approach item CF user CF rwr CF
Recall , % at 10 2.74 1.61 1.60 1.59 at 20 4.12 3.05 3.06 2.95
Precision , % at 20 at 10 4.61 6.09 3.23 3.40 3.29 3.52 3.53 3.30
Figure 2 : Coverage comparison for cold start users . increase in the number of lowest level categories the target user had clicked . It is important to produce the recommendation for cold start users , and thus the proposed method is more suitable for price comparison services . 4 . CONCLUSIONS
In this paper , we proposed three recommendation strategies and a framework for recommendation in price comparison services . We showed that the proposed framework improves 87 % and 129 % in precision and recall for normal users , and 79 % and 72 % for cold start users , compared to existing methods . We also verified that our framework provides high coverage even for cold start users . 5 . ACKNOWLEDGMENTS
This research was supported by ( 1 ) the National Research Foundation of Korea ( NRF ) grant funded by the Korea government ( MSIP ) ( No . NRF 2014R1A2A1A10054151 ) , ( 2 ) Business ( Grants No . C0191469 ) for Cooperative R&D between Industry , Academy , and Research Institute funded Korea Small and Medium Business Administration in 2014 , ( 3 ) the Ministry of Science , ICT and Future Planning ( MSIP ) , Korea , under the Information Technology Research Center ( ITRC ) support program ( NIPA 2014 H0301 14 1022 ) supervised by the National IT Industry Promotion Agency ( NIPA ) , ( 4 ) the National Research Foundation of Korea ( NRF ) grant funded by the Korea government ( MSIP ) ( No . NRF2013R1A1A2065349 ) , and ( 5 ) the National Research Foundation of Korea ( NRF ) grant funded by the Korea government ( NRF 2014S1A3A2044046 ) 6 . REFERENCES [ 1 ] G . Adomavicius et al . Toward the next generation of recommender systems : A survey of the state of the art and possible extensions . IEEE TKDE , 17(6):734–749 , 2005 .
[ 2 ] S . Lee et al . Random walk based entity ranking on graph for multidimensional recommendation . In Proc . of ACM RecSys , pages 93–100 , 2011 .
[ 3 ] Y . Hu et al . Collaborative filtering for implicit feedback datasets . In Proc . of IEEE ICDM , pages 263–272 , 2008 .
60
